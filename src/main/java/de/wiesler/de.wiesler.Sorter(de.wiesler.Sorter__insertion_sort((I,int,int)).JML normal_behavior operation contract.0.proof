\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Oct 24 17:46:35 CEST 2023
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=7000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Tue Oct 24 17:46:35 CEST 2023
contract=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:insertion_sort([I,int,int)].JML normal_behavior operation contract.0
name=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:insertion_sort([I,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "e1a85b31e7"))

(autoModeTime "98267")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre_0,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "2,2,0,0,0,0,1,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "4"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "8") (term "2,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "8") (term "1,2,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "2,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "elementOfArrayRange" (formula "8") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_insertion_sort,savedHeapBefore_insertion_sort,_beginBefore_insertion_sort,_endBefore_insertion_sort,_valuesBefore_insertion_sort"))
 (builtin "One Step Simplification" (formula "8"))
(rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x"))
(rule "compound_less_than_comparison_1" (formula "8") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
(rule "assignmentSubtractionInt" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "translateJavaSubInt" (formula "8") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "8") (term "0,1,0"))
(rule "polySimp_addComm0" (formula "8") (term "0,1,0"))
(rule "less_than_comparison_simple" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "ifSplit" (formula "8"))
(branch "if x true"
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "methodCallEmptyReturn" (formula "9") (term "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "tryEmpty" (formula "9") (term "1"))
   (rule "emptyModality" (formula "9") (term "1"))
   (rule "andRight" (formula "9"))
   (branch "Case 1"
      (rule "andRight" (formula "9"))
      (branch "Case 1"
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_ltToLeq" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "9") (term "0") (inst "i=i"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "translateJavaAddInt" (formula "9") (term "0,2,1,1,0"))
         (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0"))
         (rule "allRight" (formula "9") (inst "sk=i_0"))
         (rule "impRight" (formula "9"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_elimSub" (formula "2") (term "1"))
         (rule "mul_literals" (formula "2") (term "1,1"))
         (rule "polySimp_addComm0" (formula "11") (term "0,2,1"))
         (rule "polySimp_addComm0" (formula "2") (term "1"))
         (rule "inEqSimp_leqRight" (formula "11"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
         (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "2"))
         (rule "andLeft" (formula "5"))
         (rule "inEqSimp_homoInEq1" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
         (rule "mul_literals" (formula "5") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0"))
         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
         (rule "add_literals" (formula "5") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
         (rule "add_literals" (formula "5") (term "1,1,0"))
         (rule "times_zero_1" (formula "5") (term "1,0"))
         (rule "add_zero_right" (formula "5") (term "0"))
         (rule "leq_literals" (formula "5"))
         (rule "closeFalse" (formula "5"))
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "9"))
         (rule "closeTrue" (formula "9"))
      )
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "9"))
      (rule "closeTrue" (formula "9"))
   )
)
(branch "if x false"
    (builtin "One Step Simplification" (formula "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "notLeft" (formula "1"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "k"))
   (rule "assignmentAdditionInt" (formula "9") (term "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "translateJavaAddInt" (formula "9") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
   (rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
   (rule "elim_double_block_3" (formula "9") (term "1"))
    (builtin "Loop Invariant" (formula "9") (newnames "variant,b,heapBefore_LOOP,kBefore_LOOP,k_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
   (branch "Invariant Initially Valid"
      (rule "andRight" (formula "9"))
      (branch "Case 1"
         (rule "andRight" (formula "9"))
         (branch "Case 1"
            (rule "andRight" (formula "9"))
            (branch "Case 1"
                (builtin "One Step Simplification" (formula "9"))
                (builtin "SMTRule")
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "9"))
                (builtin "SMTRule")
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_ltRight" (formula "7"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "qeq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "8") (term "0"))
            (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
            (rule "true_left" (formula "1"))
            (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "8") (term "0") (inst "i=i"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "translateJavaAddInt" (formula "8") (term "0,2,1,1,0"))
            (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0"))
            (rule "allRight" (formula "8") (inst "sk=i_0"))
            (rule "impRight" (formula "8"))
            (rule "andLeft" (formula "1"))
            (rule "polySimp_elimSub" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "1,1"))
            (rule "polySimp_addComm0" (formula "10") (term "0,2,1"))
            (rule "polySimp_addComm1" (formula "2") (term "1"))
            (rule "add_literals" (formula "2") (term "0,1"))
            (rule "add_zero_left" (formula "2") (term "1"))
            (rule "inEqSimp_leqRight" (formula "10"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
            (rule "andLeft" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "9"))
      )
   )
   (branch "Body Preserves Invariant"
       (builtin "One Step Simplification" (formula "8"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "translateJavaSubInt" (formula "8") (term "2,1,0,0,1"))
      (rule "translateJavaSubInt" (formula "11") (term "2,2,0,0,0,0,1,0,1,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "11") (term "2,1,0,1,1,0,0"))
      (rule "translateJavaSubInt" (formula "11") (term "0,1,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "11") (term "2,1,0,1,0,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "11") (term "0,1,1,1,0,1,1"))
      (rule "andLeft" (formula "8"))
      (rule "impRight" (formula "12"))
      (rule "andLeft" (formula "9"))
      (rule "eqSymm" (formula "14") (term "1,0,0,1,0,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "11") (term "2,1,0,0"))
      (rule "mul_literals" (formula "11") (term "1,2,1,0,0"))
      (rule "polySimp_elimSub" (formula "14") (term "2,1,0,1,0,1,1,0"))
      (rule "mul_literals" (formula "14") (term "1,2,1,0,1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "14") (term "0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "1") (term "2,1,0,1,1,0"))
      (rule "mul_literals" (formula "1") (term "1,2,1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "14") (term "0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "14") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "14") (term "1,2,2,0,0,0,0,1,0,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "11") (term "2,1,0,0"))
      (rule "polySimp_addComm0" (formula "14") (term "2,1,0,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "2,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "14") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "exc_25"))
      (rule "assignment" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "thrownExc"))
      (rule "blockThrow" (formula "14") (term "1,0,0,1"))
      (rule "elementOfArrayRange" (formula "14") (term "0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1,0,0,0,0,1,0,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "less_than_comparison_simple" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallEmpty" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "emptyModality" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "notRight" (formula "11"))
      (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_2"))
      (rule "less_than_comparison_simple" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "replace_known_left" (formula "14") (term "0,0,1,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "arrayLengthNotNegative" (formula "7") (term "0"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "ifSplit" (formula "15"))
      (branch "if x_2 true"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "value"))
         (rule "assignment_array2" (formula "15"))
         (branch "Normal Execution (_values != null)"
             (builtin "One Step Simplification" (formula "15"))
            (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "4")))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "hole"))
            (rule "assignment" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "i"))
            (rule "assignmentSubtractionInt" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "translateJavaSubInt" (formula "16") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "16") (term "0,1,0"))
            (rule "mul_literals" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
             (builtin "Loop Invariant" (formula "16") (newnames "variant_0,b_0,heapBefore_LOOP_0,iBefore_LOOP,holeBefore_LOOP,i_0,hole_0,heap_After_LOOP_0,anon_heap_LOOP_0,o,f"))
            (branch "Invariant Initially Valid"
               (rule "andRight" (formula "16"))
               (branch "Case 1"
                  (rule "andRight" (formula "16"))
                  (branch "Case 1"
                     (rule "andRight" (formula "16"))
                     (branch "Case 1"
                        (rule "andRight" (formula "16"))
                        (branch "Case 1"
                           (rule "andRight" (formula "16"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "16"))
                               (builtin "SMTRule")
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "16"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "translateJavaSubInt" (formula "16") (term "0"))
                                 (rule "polySimp_elimSub" (formula "16") (term "0"))
                                 (rule "mul_literals" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "14"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "16"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0"))
                                 (rule "qeq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0"))
                                 (rule "add_zero_right" (formula "11") (term "0"))
                                 (rule "leq_literals" (formula "11"))
                                 (rule "closeFalse" (formula "11"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "16"))
                                  (builtin "SMTRule")
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "16"))
                            (builtin "One Step Simplification" (formula "17"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "translateJavaAddInt" (formula "17") (term "3,0"))
                           (rule "translateJavaSubInt" (formula "16") (term "1"))
                           (rule "eqSymm" (formula "16"))
                           (rule "polySimp_elimSub" (formula "16") (term "0"))
                           (rule "mul_literals" (formula "16") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "17") (term "3,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,0"))
                           (rule "times_zero_1" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "closeTrue" (formula "16"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfAnon" (formula "16") (term "1"))
                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")) (ifInst ""  (formula "4")))
                     (rule "elementOfArrayRange" (formula "16") (term "0,1") (inst "iv=iv"))
                      (builtin "One Step Simplification" (formula "16"))
                      (builtin "SMTRule")
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "wellFormedAnon" (formula "16"))
                   (builtin "SMTRule")
               )
            )
            (branch "Body Preserves Invariant"
                (builtin "One Step Simplification" (formula "15"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "translateJavaSubInt" (formula "15") (term "1,0,1,0,0"))
               (rule "translateJavaAddInt" (formula "15") (term "3,0,1,1,0,0"))
               (rule "translateJavaSubInt" (formula "15") (term "0,0,1,0,0,0"))
               (rule "translateJavaAddInt" (formula "15") (term "1,0,0,0,0"))
               (rule "translateJavaAddInt" (formula "18") (term "1,0,0,0,0,0,0,1,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "18") (term "0,1,1,1,0,1"))
               (rule "translateJavaSubInt" (formula "18") (term "1,0,1,0,0,0,0,1,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "18") (term "3,0,1,1,0,0,0,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "18") (term "0,0,1,0,0,0,0,0,1,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "18") (term "0,1,1,1,0,1,1"))
               (rule "andLeft" (formula "15"))
               (rule "impRight" (formula "19"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "17"))
               (rule "eqSymm" (formula "24") (term "0,1,0,0,0,0,1,1,0,1"))
               (rule "eqSymm" (formula "24") (term "1,0,0,1,0,1,1,0,1"))
               (rule "eqSymm" (formula "19") (term "0"))
               (rule "polySimp_elimSub" (formula "24") (term "0,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "17") (term "0"))
               (rule "mul_literals" (formula "17") (term "1,0"))
               (rule "polySimp_elimSub" (formula "24") (term "0,0,1,0,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "19") (term "0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "3,0,1,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "24") (term "0,1,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "19") (term "3,0,1"))
               (rule "polySimp_addComm0" (formula "16") (term "1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "17") (term "0"))
               (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "19") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "21"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,1,0,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "17"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclarationAssign" (formula "24") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_1"))
               (rule "variableDeclaration" (formula "24") (term "1") (newnames "exc_26"))
               (rule "assignment" (formula "24") (term "1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "variableDeclaration" (formula "24") (term "1") (newnames "thrownExc_1"))
               (rule "blockThrow" (formula "24") (term "1,0,0,1"))
               (rule "blockThrow" (formula "24") (term "1,0,0,1"))
               (rule "elementOfArrayRange" (formula "24") (term "0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1,0,0,0,0,1,0,1,1,0,1"))
               (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnon" (formula "21"))
                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
               (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
               (rule "pullOutSelect" (formula "21") (term "2,0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnon" (formula "21"))
                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")) (ifInst ""  (formula "5")))
               (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
               (rule "boxToDiamond" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "commute_or" (formula "18"))
               (rule "compound_assignment_3_nonsimple" (formula "23") (term "1"))
               (rule "ifUnfold" (formula "26") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_3"))
               (rule "compound_assignment_3_nonsimple" (formula "26") (term "1"))
               (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_4"))
               (rule "compound_assignment_2" (formula "23") (term "1") (inst "#v=x_5"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_5"))
               (rule "greater_equal_than_comparison_simple" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "compound_assignment_1_new" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "ifElseUnfold" (formula "26") (term "1") (inst "#boolv=x_4"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_6"))
               (rule "compound_assignment_2" (formula "26") (term "1") (inst "#v=x_7"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_7"))
               (rule "greater_equal_than_comparison_simple" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "compound_assignment_1_new" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "ifElseSplit" (formula "23"))
               (branch "if x_4 true"
                   (builtin "One Step Simplification" (formula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "replace_known_right" (formula "27") (term "0,0,1,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "assignment" (formula "24") (term "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "emptyModality" (formula "24") (term "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "closeTrue" (formula "24"))
               )
               (branch "if x_4 false"
                   (builtin "One Step Simplification" (formula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replace_known_left" (formula "27") (term "0,0,1,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "compound_less_than_comparison_2" (formula "24") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_8"))
                  (rule "assignment" (formula "24") (term "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_9"))
                  (rule "assignment_array2" (formula "24"))
                  (branch "Normal Execution (_values != null)"
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "6")))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "7")))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "less_than_comparison_simple" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "methodCallEmpty" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "emptyModality" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "notRight" (formula "26"))
                     (rule "ifElseSplit" (formula "29"))
                     (branch "if x_6 true"
                         (builtin "One Step Simplification" (formula "30"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_6 false"
                         (builtin "One Step Simplification" (formula "30"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "compound_less_than_comparison_2" (formula "29") (term "1") (inst "#v1=x_5") (inst "#v0=x_4"))
                        (rule "variableDeclarationAssign" (formula "29") (term "1"))
                        (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_10"))
                        (rule "assignment" (formula "29") (term "1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "variableDeclarationAssign" (formula "29") (term "1"))
                        (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_11"))
                        (rule "assignment_array2" (formula "29"))
                        (branch "Normal Execution (_values != null)"
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "replaceKnownSelect_taclet0110011_3" (formula "29") (term "0,1,0"))
                           (rule "less_than_comparison_simple" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "replace_known_left" (formula "29") (term "0,0,1,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "ifSplit" (formula "29"))
                           (branch "if x_3 true"
                               (builtin "One Step Simplification" (formula "30"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "eval_order_array_access3" (formula "29") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                              (rule "variableDeclarationAssign" (formula "29") (term "1"))
                              (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_arr"))
                              (rule "assignment" (formula "29") (term "1"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "variableDeclarationAssign" (formula "29") (term "1"))
                              (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_12"))
                              (rule "assignment" (formula "29") (term "1"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "variableDeclarationAssign" (formula "29") (term "1"))
                              (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_13"))
                              (rule "assignment_array2" (formula "29"))
                              (branch "Normal Execution (_values != null)"
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "replaceKnownSelect_taclet0110011_3" (formula "29") (term "0,1,0"))
                                 (rule "assignment_to_primitive_array_component" (formula "29"))
                                 (branch "Normal Execution (x_arr != null)"
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "assignment" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "postdecrement" (formula "29") (term "1"))
                                    (rule "compound_subtraction_1" (formula "29") (term "1") (inst "#v=x"))
                                    (rule "variableDeclarationAssign" (formula "29") (term "1"))
                                    (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_14"))
                                    (rule "widening_identity_cast_5" (formula "29") (term "1"))
                                    (rule "assignment" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "assignmentSubtractionInt" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "translateJavaSubInt" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "29") (term "0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,1,0"))
                                    (rule "tryEmpty" (formula "29") (term "1"))
                                    (rule "methodCallEmpty" (formula "29") (term "1"))
                                    (rule "emptyModality" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "andRight" (formula "29"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "29"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "29"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "29"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "29"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "29"))
                                                   (branch "Case 1"
                                                       (builtin "SMTRule")
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "29"))
                                                      (branch "Case 1"
                                                          (builtin "SMTRule")
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "SMTRule")
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "orRight" (formula "29"))
                                                   (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "30") (term "0") (inst "i=i_1") (userinteraction))
                                                    (builtin "One Step Simplification" (formula "30") (userinteraction))
                                                   (rule "allRight" (formula "30") (inst "sk=i_1_0") (userinteraction))
                                                   (rule "eqTermCut" (formula "30") (term "1,0,1,1,0") (inst "s=i_0") (userinteraction))
                                                   (branch "Assume k_0 = i_0"
                                                      (rule "translateJavaSubInt" (formula "31") (term "1,1,0") (userinteraction))
                                                      (rule "orLeft" (formula "23") (userinteraction))
                                                      (branch " de.wiesler.Functions.isSortedSlice(values, begin, 1 + k_0) @heap[anon(arrayRange(values, begin, -1 + end), anon_heap_LOOP<<anonHeapFunction>>)] [anon(arrayRange(values, begin, k_0), anon_heap_LOOP_0<<anonHeapFunction>>)] = TRUE"
                                                          (builtin "SMTRule")
                                                      )
                                                      (branch "-1 + k_0 = i_0"
                                                          (builtin "SMTRule")
                                                      )
                                                   )
                                                   (branch "Assume k_0 != i_0"
                                                      (rule "translateJavaSubInt" (formula "31") (term "1,1,0"))
                                                      (rule "translateJavaAddInt" (formula "31") (term "0,2,1,1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "impRight" (formula "31"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "polySimp_homoEq" (formula "32"))
                                                      (rule "polySimp_homoEq" (formula "21"))
                                                      (rule "polySimp_homoEq" (formula "24") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0,2,1"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "1"))
                                                      (rule "add_literals" (formula "2") (term "0,1"))
                                                      (rule "add_zero_left" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "30"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3"))
                                                      (rule "polySimp_sepPosMonomial" (formula "23"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,2,1,0") (ifseqformula "23"))
                                                      (rule "applyEq" (formula "7") (term "1,0,0") (ifseqformula "23"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                      (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "23"))
                                                      (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "23"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,2,2,0") (ifseqformula "23"))
                                                      (rule "applyEqRigid" (formula "31") (term "1") (ifseqformula "23"))
                                                      (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "23"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0"))
                                                      (rule "applyEqRigid" (formula "26") (term "1,0,0,1") (ifseqformula "23"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "26") (term "0,0,1"))
                                                      (rule "applyEqRigid" (formula "33") (term "0,0") (ifseqformula "23"))
                                                      (rule "polySimp_sepNegMonomial" (formula "26") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                      (rule "mul_literals" (formula "10") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                      (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "24"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "24"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                      (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                      (rule "hideAuxiliaryEq" (formula "29"))
                                                      (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "25"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "false_right" (formula "30"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (term "0,0") (ifseqformula "25"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "1") (term "3,0,1,1") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "1") (term "3,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0"))
                                                      (rule "qeq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0"))
                                                      (rule "qeq_literals" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (term "0,0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "8"))
                                                      (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_6"))
                                                      (rule "simplifySelectOfStore" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "castDel" (formula "2") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "10"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "22") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "hideAuxiliaryEq" (formula "26"))
                                                      (rule "inEqSimp_subsumption0" (formula "8") (term "0,0") (ifseqformula "22"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "10"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "13")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_8"))
                                                      (rule "simplifySelectOfAnon" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")) (ifInst ""  (formula "13")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "22"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "19") (term "0"))
                                                      (rule "wellFormedAnon" (formula "19") (term "1,0"))
                                                      (rule "replace_known_left" (formula "19") (term "1,1,0") (ifseqformula "17"))
                                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")) (ifInst ""  (formula "11")) (ifInst ""  (formula "20")))
                                                      (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "26") (term "0"))
                                                      (rule "wellFormedAnon" (formula "26") (term "1,0"))
                                                      (rule "wellFormedAnon" (formula "26") (term "0,1,0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")) (ifInst ""  (formula "11")) (ifInst ""  (formula "17")) (ifInst ""  (formula "21")))
                                                      (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "27") (term "0") (inst "i=i_1"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "translateJavaSubInt" (formula "27") (term "1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "20") (term "0") (inst "i=i_1"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "translateJavaSubInt" (formula "20") (term "1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "20") (term "0,2,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "20") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,2,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "25") (term "0,0") (inst "i=i_1"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0,2,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,1,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                                                      (rule "nnf_imp2or" (formula "27") (term "0"))
                                                      (rule "nnf_imp2or" (formula "20") (term "0"))
                                                      (rule "nnf_imp2or" (formula "25") (term "0,0"))
                                                      (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "19") (term "0") (inst "i=i_1") (inst "j=j"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "19") (term "0"))
                                                      (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "nnf_imp2or" (formula "19") (term "0,1,0"))
                                                      (rule "nnf_notAnd" (formula "19") (term "0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0"))
                                                      (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "26") (term "0"))
                                                      (rule "wellFormedAnon" (formula "26") (term "1,0"))
                                                      (rule "wellFormedAnon" (formula "26") (term "0,1,0"))
                                                      (rule "replace_known_left" (formula "26") (term "1,1,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "30")) (ifInst ""  (formula "11")) (ifInst ""  (formula "17")) (ifInst ""  (formula "27")))
                                                      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "27") (term "0") (inst "i=i_1") (inst "j=j"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                                                      (rule "nnf_imp2or" (formula "27") (term "0"))
                                                      (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
                                                      (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                                                      (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "26") (term "0"))
                                                      (rule "wellFormedAnon" (formula "26") (term "1,0"))
                                                      (rule "wellFormedAnon" (formula "26") (term "0,1,0"))
                                                      (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "11")) (ifInst ""  (formula "17")) (ifInst ""  (formula "21")) (ifInst ""  (formula "27")))
                                                      (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "27") (term "0") (inst "i=i_1"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "translateJavaSubInt" (formula "27") (term "1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "27") (term "0"))
                                                      (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "i_1_0 = hole_0 TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0,2,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "24") (term "1") (ifseqformula "6"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "24") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "24") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0"))
                                                         (rule "qeq_literals" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "8"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "22") (term "0") (inst "i=i_1") (inst "j=j"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "22") (term "0"))
                                                         (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "nnf_imp2or" (formula "22") (term "0,1,0"))
                                                         (rule "nnf_notAnd" (formula "22") (term "0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                                                         (rule "commute_or" (formula "17") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "22") (term "0,0,1,0"))
                                                         (rule "all_pull_out3" (formula "17") (term "0"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                         (rule "all_pull_out3" (formula "22") (term "0"))
                                                         (rule "shift_paren_or" (formula "22") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                         (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,2,0,1"))
                                                         (rule "add_literals" (formula "23") (term "0,0,2,0,1"))
                                                         (rule "add_zero_left" (formula "23") (term "0,2,0,1"))
                                                         (rule "replaceKnownSelect_taclet10011_1" (formula "23") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000000010110011_5" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "23") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "23") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_9"))
                                                         (rule "simplifySelectOfAnon" (formula "23"))
                                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "10")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                                                         (rule "hideAuxiliaryEq" (formula "23"))
                                                         (rule "inEqSimp_commuteGeq" (formula "23"))
                                                         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "23"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0"))
                                                         (rule "qeq_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "24"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,2,0,1"))
                                                         (rule "add_literals" (formula "20") (term "0,0,2,0,1"))
                                                         (rule "add_zero_left" (formula "20") (term "0,2,0,1"))
                                                         (rule "replaceKnownSelect_taclet10011_2" (formula "20") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000000010110011_10" (formula "20") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "20") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "20") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_10"))
                                                         (rule "simplifySelectOfAnon" (formula "20"))
                                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "29")) (ifInst ""  (formula "12")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_commuteLeq" (formula "21"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_subsumption0" (formula "20") (term "0,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "20"))
                                                         (rule "hideAuxiliaryEq" (formula "20"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20"))
                                                         (rule "allLeft" (formula "24") (inst "t=begin"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "24") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_11"))
                                                         (rule "simplifySelectOfAnon" (formula "24"))
                                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "12")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteGeq" (formula "25"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                                         (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "24") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                                                         (rule "hideAuxiliaryEq" (formula "24"))
                                                         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_12"))
                                                         (rule "simplifySelectOfAnon" (formula "24"))
                                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "12")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_subsumption1" (formula "24") (term "0,0") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                                                         (rule "hideAuxiliaryEq" (formula "24"))
                                                         (rule "allLeft" (formula "25") (inst "t=begin<<origin(\"decreases @ file Sorter.java @ line 603\",\"[]\")>>"))
                                                         (rule "replaceKnownSelect_taclet0110000000010110011_24" (formula "25") (term "1,1"))
                                                         (rule "replaceKnownSelect_taclet0110000000010110011_22" (formula "25") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0110000000010110011_25" (formula "25") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0110000000010110011_23" (formula "25") (term "0,1"))
                                                         (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "allLeft" (formula "25") (inst "t=hole_0"))
                                                         (rule "replaceKnownSelect_taclet10011_1" (formula "25") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000000010110011_5" (formula "25") (term "1,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_13"))
                                                         (rule "simplifySelectOfAnon" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "31")) (ifInst ""  (formula "12")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                         (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "25") (term "0,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                                                         (rule "hideAuxiliaryEq" (formula "25"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25"))
                                                         (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0"))
                                                         (rule "add_literals" (formula "25") (term "0"))
                                                         (rule "leq_literals" (formula "25"))
                                                         (rule "closeFalse" (formula "25"))
                                                      )
                                                      (branch "i_1_0 = hole_0 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "i_1_0 = -1 + hole_0 TRUE"
                                                            (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                            (rule "add_literals" (formula "6") (term "0,1"))
                                                            (rule "add_zero_left" (formula "6") (term "1"))
                                                            (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0"))
                                                            (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                                            (rule "polySimp_homoEq" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0"))
                                                            (rule "add_literals" (formula "28") (term "0"))
                                                            (rule "equal_literals" (formula "28"))
                                                            (rule "false_right" (formula "28"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_literals" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "i_1_0 = -1 + hole_0 FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "24") (term "0") (inst "i=i_1") (inst "j=j"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                            (rule "nnf_imp2or" (formula "24") (term "0"))
                                                            (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                                            (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
                                                            (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
                                                            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
                                                            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                                                            (rule "commute_or" (formula "17") (term "0,0,1,0"))
                                                            (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                                            (rule "cut_direct" (formula "23") (term "1"))
                                                            (branch "CUT: k_0 = hole_0 TRUE"
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                                                               (rule "applyEqRigid" (formula "23") (term "1,1,0,0") (ifseqformula "22"))
                                                               (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "22"))
                                                               (rule "inEqSimp_homoInEq1" (formula "21"))
                                                               (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                               (rule "add_literals" (formula "21") (term "1,0"))
                                                               (rule "times_zero_1" (formula "21") (term "0"))
                                                               (rule "leq_literals" (formula "21"))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "applyEqRigid" (formula "6") (term "0,2,1,1") (ifseqformula "21"))
                                                               (rule "applyEq" (formula "16") (term "1,0,0,0,1,0") (ifseqformula "21"))
                                                               (rule "applyEq" (formula "22") (term "2,1,0,1,1,0,1,0") (ifseqformula "21"))
                                                               (rule "applyEqRigid" (formula "23") (term "1,1,1,0,0") (ifseqformula "21"))
                                                               (rule "applyEq" (formula "23") (term "2,1,0,0,1,0") (ifseqformula "21"))
                                                               (rule "applyEqRigid" (formula "22") (term "2,1,0,0,1,0,1,0") (ifseqformula "21"))
                                                               (rule "applyEqRigid" (formula "17") (term "1,1,1,0,0") (ifseqformula "21"))
                                                               (rule "applyEqRigid" (formula "16") (term "1,1,0,0") (ifseqformula "21"))
                                                               (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "21"))
                                                               (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                                                               (rule "inEqSimp_homoInEq1" (formula "5"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                               (rule "applyEqRigid" (formula "21") (term "1,0,0,0,1,0") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "23") (term "0,2,1") (ifseqformula "20"))
                                                               (rule "applyEqRigid" (formula "22") (term "2,1,0,1,1,0") (ifseqformula "20"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "mul_literals" (formula "5") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "5"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0"))
                                                               (rule "qeq_literals" (formula "25") (term "0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "false_right" (formula "25"))
                                                               (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "24"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                               (rule "add_literals" (formula "5") (term "0,1"))
                                                               (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "5"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0"))
                                                               (rule "qeq_literals" (formula "24") (term "0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "false_right" (formula "24"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0"))
                                                               (rule "qeq_literals" (formula "8") (term "0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "all_pull_out3" (formula "15") (term "0"))
                                                               (rule "shift_paren_or" (formula "15") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                               (rule "all_pull_out3" (formula "21") (term "0"))
                                                               (rule "shift_paren_or" (formula "21") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                               (rule "allLeft" (formula "16") (inst "t=i_1_0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "16") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "16") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_9"))
                                                               (rule "simplifySelectOfAnon" (formula "16"))
                                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "26")) (ifInst ""  (formula "9")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_commuteGeq" (formula "17"))
                                                               (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
                                                               (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "16"))
                                                               (rule "hideAuxiliaryEq" (formula "16"))
                                                               (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_10"))
                                                               (rule "simplifySelectOfAnon" (formula "16"))
                                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "26")) (ifInst ""  (formula "9")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_commuteLeq" (formula "17"))
                                                               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                               (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_subsumption0" (formula "16") (term "0,0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "16"))
                                                               (rule "hideAuxiliaryEq" (formula "16"))
                                                               (rule "allLeft" (formula "23") (inst "t=i_1_0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "pullOutSelect" (formula "23") (term "1") (inst "selectSK=arr_11"))
                                                               (rule "simplifySelectOfAnon" (formula "23"))
                                                                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                                                               (rule "replaceKnownSelect_taclet011110000000010110011_20" (formula "23") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet011110000000010110011_21" (formula "23") (term "2,0"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                               (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_subsumption0" (formula "23") (term "0,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                                                               (rule "hideAuxiliaryEq" (formula "23"))
                                                               (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_12"))
                                                               (rule "simplifySelectOfAnon" (formula "23"))
                                                                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                                                               (rule "replaceKnownSelect_taclet011110000000010110011_18" (formula "23") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet011110000000010110011_19" (formula "23") (term "2,0"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_commuteGeq" (formula "24"))
                                                               (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_subsumption0" (formula "23") (term "1,0,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                                               (rule "qeq_literals" (formula "23") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                                                               (rule "hideAuxiliaryEq" (formula "23"))
                                                               (rule "inEqSimp_commuteLeq" (formula "23"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "23"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_literals" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "CUT: k_0 = hole_0 FALSE"
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_strengthen1" (formula "22") (ifseqformula "27"))
                                                               (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "22"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "27") (term "0,0"))
                                                               (rule "leq_literals" (formula "27") (term "0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "false_right" (formula "27"))
                                                               (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "8"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                               (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "22"))
                                                               (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                               (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0"))
                                                               (rule "qeq_literals" (formula "21") (term "0"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "21"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "mul_literals" (formula "7") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "all_pull_out3" (formula "17") (term "0"))
                                                               (rule "shift_paren_or" (formula "17") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                               (rule "all_pull_out3" (formula "24") (term "0"))
                                                               (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                                               (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,1,1,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "22"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0"))
                                                               (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                                               (rule "leq_literals" (formula "24") (term "0,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "pullOutSelect" (formula "24") (term "1,1,0") (inst "selectSK=arr_9"))
                                                               (rule "simplifySelectOfAnon" (formula "24"))
                                                                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                                               (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "inEqSimp_subsumption1" (formula "24") (term "0,0") (ifseqformula "22"))
                                                               (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "24"))
                                                               (rule "hideAuxiliaryEq" (formula "24"))
                                                               (rule "commute_or" (formula "24") (term "0,0"))
                                                               (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,1,1,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                                                               (rule "leq_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0") (ifseqformula "23"))
                                                               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "leq_literals" (formula "17") (term "0,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "pullOutSelect" (formula "17") (term "1,1,0") (inst "selectSK=arr_10"))
                                                               (rule "simplifySelectOfAnon" (formula "17"))
                                                                (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "32")) (ifInst ""  (formula "10")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "17") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_subsumption0" (formula "17") (term "0,0") (ifseqformula "23"))
                                                               (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "17"))
                                                               (rule "hideAuxiliaryEq" (formula "17"))
                                                               (rule "commute_or" (formula "17") (term "0,0"))
                                                               (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                                               (rule "replaceKnownSelect_taclet111110000000010110011_20" (formula "19") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111110000000010110011_21" (formula "19") (term "1,1"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,2,0,1"))
                                                               (rule "add_literals" (formula "19") (term "0,0,2,0,1"))
                                                               (rule "add_zero_left" (formula "19") (term "0,2,0,1"))
                                                               (rule "replaceKnownSelect_taclet10011_2" (formula "19") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000000010110011_10" (formula "19") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,1,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "24"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "19") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "allLeft" (formula "25") (inst "t=begin<<origin(\"decreases @ file Sorter.java @ line 603\",\"[]\")>>"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "25") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "16"))
                                                               (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "25") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "pullOutSelect" (formula "25") (term "1") (inst "selectSK=arr_11"))
                                                               (rule "simplifySelectOfAnon" (formula "25"))
                                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "34")) (ifInst ""  (formula "10")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_subsumption1" (formula "25") (term "0,0") (ifseqformula "16"))
                                                               (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                                                               (rule "hideAuxiliaryEq" (formula "25"))
                                                               (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_12"))
                                                               (rule "simplifySelectOfAnon" (formula "25"))
                                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "34")) (ifInst ""  (formula "10")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_commuteGeq" (formula "26"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                               (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "16"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "25") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                                                               (rule "hideAuxiliaryEq" (formula "25"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25"))
                                                               (rule "allLeft" (formula "26") (inst "t=hole_0"))
                                                               (rule "replaceKnownSelect_taclet10011_1" (formula "26") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000000010110011_5" (formula "26") (term "1,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "24"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "26") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_13"))
                                                               (rule "simplifySelectOfAnon" (formula "26"))
                                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")) (ifInst ""  (formula "10")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "26") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "inEqSimp_commuteGeq" (formula "27"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0"))
                                                               (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "24"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "26") (term "0,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
                                                               (rule "hideAuxiliaryEq" (formula "26"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26"))
                                                               (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                                               (rule "replaceKnownSelect_taclet111110000000010110011_18" (formula "27") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111110000000010110011_19" (formula "27") (term "1,1"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,2,0,1"))
                                                               (rule "add_literals" (formula "27") (term "0,0,2,0,1"))
                                                               (rule "add_zero_left" (formula "27") (term "0,2,0,1"))
                                                               (rule "replaceKnownSelect_taclet10011_1" (formula "27") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000000010110011_5" (formula "27") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "27") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "24"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "27") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "27") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "27"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "mul_literals" (formula "5") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                               (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                               (rule "add_literals" (formula "33") (term "0,0"))
                                                               (rule "qeq_literals" (formula "33") (term "0"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                                               (rule "replaceKnownSelect_taclet111110000000010110011_18" (formula "32") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111110000000010110011_19" (formula "32") (term "1,1"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,2,0,1"))
                                                               (rule "add_literals" (formula "32") (term "0,0,2,0,1"))
                                                               (rule "add_zero_left" (formula "32") (term "0,2,0,1"))
                                                               (rule "replaceKnownSelect_taclet10011_1" (formula "32") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000000010110011_5" (formula "32") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "allLeft" (formula "29") (inst "t=begin"))
                                                               (rule "replaceKnownSelect_taclet111110000000010110011_24" (formula "29") (term "0,1"))
                                                               (rule "replaceKnownSelect_taclet111110000000010110011_22" (formula "29") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111110000000010110011_25" (formula "29") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111110000000010110011_23" (formula "29") (term "1,1"))
                                                               (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "26"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "allLeft" (formula "29") (inst "t=i_1_0"))
                                                               (rule "replaceKnownSelect_taclet110000000010110011_12" (formula "29") (term "1,1"))
                                                               (rule "replaceKnownSelect_taclet110000000010110011_14" (formula "29") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000000010110011_13" (formula "29") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000000010110011_15" (formula "29") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                               (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "29") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "29") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                               (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "29") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "29") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "add_literals" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "polySimp_homoEq" (formula "22") (term "1"))
                                                (rule "polySimp_homoEq" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,0,1"))
                                                (rule "inEqSimp_ltRight" (formula "27"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "20"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                (rule "applyEqRigid" (formula "4") (term "0,2,1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "3") (term "0,2,2,0") (ifseqformula "20"))
                                                (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "20"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0,0"))
                                                (rule "applyEqRigid" (formula "3") (term "0,2,1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "20"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "20"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0,0"))
                                                (rule "applyEq" (formula "23") (term "1,0,0,1") (ifseqformula "20"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                                (rule "add_zero_left" (formula "23") (term "0,0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "23") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                (rule "mul_literals" (formula "7") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                (rule "hideAuxiliaryEq" (formula "26"))
                                                (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0"))
                                                (rule "qeq_literals" (formula "21") (term "0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (term "0,0") (ifseqformula "21"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "27") (term "3,0,0") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (term "0,0") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "5"))
                                                (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0"))
                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0"))
                                                (rule "qeq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "5"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "hideAuxiliaryEq" (formula "21"))
                                                (rule "inEqSimp_subsumption0" (formula "3") (term "0,0") (ifseqformula "17"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "19") (term "0"))
                                                (rule "wellFormedAnon" (formula "19") (term "1,0"))
                                                (rule "wellFormedAnon" (formula "19") (term "0,1,0"))
                                                (rule "replace_known_left" (formula "19") (term "1,1,0") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "22")) (ifInst ""  (formula "5")) (ifInst ""  (formula "11")) (ifInst ""  (formula "20")))
                                                (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "18") (term "0,0"))
                                                (rule "wellFormedAnon" (formula "18") (term "1,0"))
                                                (rule "wellFormedAnon" (formula "18") (term "0,1,0"))
                                                (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "5")) (ifInst ""  (formula "11")) (ifInst ""  (formula "14")))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "21") (term "0") (inst "i=i_1"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "translateJavaAddInt" (formula "21") (term "0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "13") (term "0") (inst "i=i_1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "translateJavaAddInt" (formula "13") (term "0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,2,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "19") (term "0,0") (inst "i=i_1"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0,2,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "21") (term "0"))
                                                (rule "nnf_imp2or" (formula "13") (term "0"))
                                                (rule "nnf_imp2or" (formula "19") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "24") (term "0") (inst "i=i_1"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0"))
                                                (rule "allRight" (formula "24") (inst "sk=i_1_0"))
                                                (rule "impRight" (formula "24"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,2,1"))
                                                (rule "polySimp_addComm0" (formula "2") (term "1"))
                                                (rule "inEqSimp_leqRight" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_6"))
                                                (rule "simplifySelectOfStore" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "12")))
                                                (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_8"))
                                                (rule "simplifySelectOfAnon" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")) (ifInst ""  (formula "12")))
                                                (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "9"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0"))
                                                (rule "qeq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "26") (term "0") (inst "i=i_1") (inst "j=j"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                                                (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "24") (term "0,0"))
                                                (rule "wellFormedAnon" (formula "24") (term "1,0"))
                                                (rule "wellFormedAnon" (formula "24") (term "0,1,0"))
                                                (rule "replace_known_left" (formula "24") (term "0,0,1,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "17")) (ifInst ""  (formula "20")) (ifInst ""  (formula "25")))
                                                (rule "true_left" (formula "24"))
                                                (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "24") (term "0,1"))
                                                (rule "wellFormedAnon" (formula "24") (term "1,0"))
                                                (rule "wellFormedAnon" (formula "24") (term "0,1,0"))
                                                (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "11")) (ifInst ""  (formula "17")) (ifInst ""  (formula "20")))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "25") (term "0,0") (inst "i=i_1"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "25") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,2,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "1,1,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,1,1,0,0,0"))
                                                (rule "add_zero_left" (formula "25") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "27") (term "0"))
                                                (rule "nnf_imp2or" (formula "25") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0"))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "24") (term "0,0") (inst "i=i_1") (inst "j=j"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "24") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "24") (term "0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0"))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "25") (term "0,1") (inst "i=i_1") (inst "j=j"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,1"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,1"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1"))
                                                (rule "nnf_imp2or" (formula "25") (term "0,1"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1"))
                                                (rule "nnf_imp2or" (formula "25") (term "0,1,0,1"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0,1"))
                                                (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "24") (term "0,1") (inst "i=i_1"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0,1"))
                                                (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "24") (term "0,2,1,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "24") (term "1,1,0,0,1"))
                                                (rule "add_literals" (formula "24") (term "0,1,1,0,0,1"))
                                                (rule "add_zero_left" (formula "24") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                                (rule "nnf_imp2or" (formula "24") (term "0,1"))
                                                (rule "nnf_notAnd" (formula "24") (term "0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1"))
                                                (rule "cut_direct" (formula "26") (term "1"))
                                                (branch "CUT: k_0 = hole_0 TRUE"
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "applyEq" (formula "25") (term "1,1,1,0,0,1,0,1") (ifseqformula "26"))
                                                   (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "26") (term "2,1,0,0,1,0,1,0") (ifseqformula "25"))
                                                   (rule "applyEqRigid" (formula "23") (term "1,1,1,0,0,1,0,0") (ifseqformula "25"))
                                                   (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "25"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22"))
                                                   (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                                   (rule "add_literals" (formula "22") (term "1,0"))
                                                   (rule "times_zero_1" (formula "22") (term "0"))
                                                   (rule "leq_literals" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "applyEqRigid" (formula "22") (term "2,1,0,1,1,0,1,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "24"))
                                                   (rule "applyEqRigid" (formula "27") (term "0,2,1") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "24"))
                                                   (rule "applyEqRigid" (formula "25") (term "2,1,0,0,1,0") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "24") (term "2,1,0,1,1,0,1,0") (ifseqformula "23"))
                                                   (rule "applyEqRigid" (formula "24") (term "1,1,0,0,1,0") (ifseqformula "23"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,2,1,1") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "22") (term "2,1,0,1,1,0,0") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "21") (term "1,1,0,0,1") (ifseqformula "23"))
                                                   (rule "applyEqRigid" (formula "21") (term "2,1,0,0,1,0,1") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "22") (term "2,1,0,0,1,0,0") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "25") (term "2,1,0,1,1,0") (ifseqformula "23"))
                                                   (rule "applyEqRigid" (formula "22") (term "1,1,0,0,0") (ifseqformula "23"))
                                                   (rule "applyEqRigid" (formula "22") (term "2,1,0,0,1,0,1,0,1") (ifseqformula "23"))
                                                   (rule "applyEqRigid" (formula "24") (term "1,1,0,0") (ifseqformula "23"))
                                                   (rule "applyEqRigid" (formula "21") (term "2,1,0,1,1,0,1") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "21") (term "1,1,1,0,0,0") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "22") (term "1,1,1,0,0,1") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "23"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "applyEqRigid" (formula "22") (term "2,1,0,1,1,0,1,0,1") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "23"))
                                                   (rule "applyEqRigid" (formula "21") (term "2,1,0,0,1,0,1,0,0") (ifseqformula "23"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                   (rule "mul_literals" (formula "7") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "7"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "6"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0"))
                                                   (rule "qeq_literals" (formula "8") (term "0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "commute_or" (formula "22") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "20") (term "0,0,1,0,1"))
                                                   (rule "commute_or" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "impLeft" (formula "20"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "24") (inst "sk=i_1_1"))
                                                      (rule "orRight" (formula "24"))
                                                      (rule "orRight" (formula "24"))
                                                      (rule "inEqSimp_geqRight" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "25"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_9"))
                                                      (rule "simplifySelectOfAnon" (formula "3"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "13")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                                      (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_10"))
                                                      (rule "simplifySelectOfAnon" (formula "3"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "13")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "impLeft" (formula "22"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "26") (inst "sk=i_1_2"))
                                                         (rule "orRight" (formula "26"))
                                                         (rule "orRight" (formula "26"))
                                                         (rule "allRight" (formula "28") (inst "sk=j_0"))
                                                         (rule "orRight" (formula "28"))
                                                         (rule "orRight" (formula "28"))
                                                         (rule "inEqSimp_geqRight" (formula "27"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "27"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "30"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "29"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "30"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_11"))
                                                         (rule "simplifySelectOfAnon" (formula "3"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "18")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                         (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "13"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0"))
                                                         (rule "qeq_literals" (formula "5") (term "0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_12"))
                                                         (rule "simplifySelectOfAnon" (formula "3"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "19")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                                         (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_13"))
                                                         (rule "simplifySelectOfAnon" (formula "5"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "34")) (ifInst ""  (formula "20")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "8")))
                                                         (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "all_pull_out3" (formula "30") (term "0"))
                                                         (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                         (rule "allLeft" (formula "31") (inst "t=i_1_0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "16"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "31") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "14"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "31") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "pullOutSelect" (formula "31") (term "1") (inst "selectSK=arr_14"))
                                                         (rule "simplifySelectOfAnon" (formula "31"))
                                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "35")) (ifInst ""  (formula "19")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "31") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "14"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_subsumption0" (formula "31") (term "0,0") (ifseqformula "16"))
                                                         (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "31"))
                                                         (rule "hideAuxiliaryEq" (formula "31"))
                                                         (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_15"))
                                                         (rule "simplifySelectOfAnon" (formula "31"))
                                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "35")) (ifInst ""  (formula "19")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "31") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_commuteGeq" (formula "32"))
                                                         (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_subsumption0" (formula "31") (term "1,0,0") (ifseqformula "16"))
                                                         (rule "inEqSimp_homoInEq0" (formula "31") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "qeq_literals" (formula "31") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_subsumption1" (formula "31") (term "0,0") (ifseqformula "14"))
                                                         (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "31"))
                                                         (rule "hideAuxiliaryEq" (formula "31"))
                                                         (rule "inEqSimp_commuteLeq" (formula "31"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "31"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0"))
                                                         (rule "add_literals" (formula "11") (term "0"))
                                                         (rule "leq_literals" (formula "11"))
                                                         (rule "closeFalse" (formula "11"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "all_pull_out3" (formula "24") (term "0"))
                                                         (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                                         (rule "allLeft" (formula "25") (inst "t=i_1_0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_11"))
                                                         (rule "simplifySelectOfAnon" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")) (ifInst ""  (formula "12")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_subsumption0" (formula "25") (term "1,0,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "qeq_literals" (formula "25") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_subsumption1" (formula "25") (term "0,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                                                         (rule "hideAuxiliaryEq" (formula "25"))
                                                         (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_12"))
                                                         (rule "simplifySelectOfAnon" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")) (ifInst ""  (formula "12")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_subsumption0" (formula "25") (term "0,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                                                         (rule "hideAuxiliaryEq" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "25"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0"))
                                                         (rule "add_literals" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "all_pull_out3" (formula "22") (term "0"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                      (rule "all_pull_out3" (formula "20") (term "0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                      (rule "allLeft" (formula "15") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "pullOutSelect" (formula "15") (term "1") (inst "selectSK=arr_9"))
                                                      (rule "simplifySelectOfAnon" (formula "15"))
                                                       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "15") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_subsumption0" (formula "15") (term "0,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "15"))
                                                      (rule "hideAuxiliaryEq" (formula "15"))
                                                      (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_10"))
                                                      (rule "simplifySelectOfAnon" (formula "15"))
                                                       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "15") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_commuteGeq" (formula "16"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_subsumption0" (formula "15") (term "1,0,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "qeq_literals" (formula "15") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_subsumption1" (formula "15") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "15"))
                                                      (rule "hideAuxiliaryEq" (formula "15"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=arr_11"))
                                                      (rule "simplifySelectOfAnon" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")) (ifInst ""  (formula "9")))
                                                      (rule "replaceKnownSelect_taclet101000000010110011_18" (formula "24") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101000000010110011_19" (formula "24") (term "2,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_subsumption0" (formula "24") (term "0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                                                      (rule "hideAuxiliaryEq" (formula "24"))
                                                      (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_12"))
                                                      (rule "simplifySelectOfAnon" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")) (ifInst ""  (formula "9")))
                                                      (rule "replaceKnownSelect_taclet101000000010110011_20" (formula "24") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101000000010110011_21" (formula "24") (term "2,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0"))
                                                      (rule "inEqSimp_subsumption0" (formula "24") (term "1,0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "qeq_literals" (formula "24") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_subsumption1" (formula "24") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                                                      (rule "hideAuxiliaryEq" (formula "24"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_literals" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "CUT: k_0 = hole_0 FALSE"
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_strengthen1" (formula "23") (ifseqformula "29"))
                                                   (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "23"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0"))
                                                   (rule "leq_literals" (formula "29") (term "0"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "false_right" (formula "29"))
                                                   (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "10"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "23"))
                                                   (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0"))
                                                   (rule "qeq_literals" (formula "22") (term "0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "22"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                   (rule "commute_or" (formula "26") (term "0,0,1,0"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "i_1_0 = hole_0 TRUE"
                                                      (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "equal_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "applyEqRigid" (formula "2") (term "1,0,2,0,1,0") (ifseqformula "1"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0"))
                                                      (rule "qeq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                      (rule "mul_literals" (formula "7") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "8"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "commute_or" (formula "20") (term "0,0,1,0"))
                                                      (rule "all_pull_out3" (formula "22") (term "0"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                      (rule "all_pull_out3" (formula "20") (term "0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                      (rule "allLeft" (formula "23") (inst "t=hole_0"))
                                                      (rule "replaceKnownSelect_taclet10011_1" (formula "23") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1000000010110011_5" (formula "23") (term "1,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "23") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_9"))
                                                      (rule "simplifySelectOfAnon" (formula "23"))
                                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "10")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24"))
                                                      (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                                                      (rule "hideAuxiliaryEq" (formula "23"))
                                                      (rule "inEqSimp_commuteLeq" (formula "23"))
                                                      (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,2,0,1"))
                                                      (rule "add_literals" (formula "24") (term "0,0,2,0,1"))
                                                      (rule "add_zero_left" (formula "24") (term "0,2,0,1"))
                                                      (rule "replaceKnownSelect_taclet10011_1" (formula "24") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1000000010110011_5" (formula "24") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_10"))
                                                      (rule "simplifySelectOfAnon" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")) (ifInst ""  (formula "10")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_subsumption1" (formula "24") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                                                      (rule "hideAuxiliaryEq" (formula "24"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "24"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0"))
                                                      (rule "qeq_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "25"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "25"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "i_1_0 = hole_0 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "i_1_0 = -1 + hole_0 TRUE"
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                         (rule "add_literals" (formula "6") (term "0,1"))
                                                         (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_literals" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "i_1_0 = -1 + hole_0 FALSE"
                                                         (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "commute_or" (formula "22") (term "0,0,1,0"))
                                                         (rule "allLeft" (formula "25") (inst "t=i_1_0"))
                                                         (rule "replaceKnownSelect_taclet1000000010110011_14" (formula "25") (term "0,1"))
                                                         (rule "replaceKnownSelect_taclet1000000010110011_12" (formula "25") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000000010110011_15" (formula "25") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000000010110011_13" (formula "25") (term "1,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "25"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_literals" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "selectOfStore" (formula "29") (term "0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "castDel" (formula "29") (term "1,0"))
                                             (rule "selectOfAnon" (formula "29") (term "2,0"))
                                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")) (ifInst ""  (formula "8")))
                                             (rule "elementOfArrayRange" (formula "29") (term "0,2,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "selectOfAnon" (formula "29") (term "2,2,0"))
                                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")) (ifInst ""  (formula "8")))
                                             (rule "elementOfArrayRange" (formula "29") (term "0,2,2,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "29"))
                                              (builtin "SMTRule")
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "29") (inst "sk=f_0"))
                                          (rule "allRight" (formula "29") (inst "sk=o_0"))
                                          (rule "orRight" (formula "29"))
                                          (rule "orRight" (formula "29"))
                                          (rule "selectOfAnon" (formula "31") (term "0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "elementOfArrayRange" (formula "31") (term "0,0,0,0") (inst "iv=iv"))
                                          (rule "selectOfStore" (formula "31") (term "1"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "castDel" (formula "31") (term "1,1"))
                                          (rule "selectOfAnon" (formula "31") (term "2,1"))
                                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                                          (rule "elementOfArrayRange" (formula "31") (term "0,0,2,1") (inst "iv=iv"))
                                          (rule "selectOfAnon" (formula "31") (term "2,2,1"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "elementOfArrayRange" (formula "31") (term "0,0,0,2,2,1") (inst "iv=iv"))
                                           (builtin "SMTRule")
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "SMTRule")
                                    )
                                 )
                                 (branch "Null Reference (x_arr = null)"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr != null, but x_12 Out of Bounds!)"
                                     (builtin "One Step Simplification" (formula "30"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                     (builtin "SMTRule")
                                 )
                              )
                              (branch "Null Reference (_values = null)"
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (_values != null, but i Out of Bounds!)"
                                  (builtin "One Step Simplification" (formula "30"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                  (builtin "SMTRule")
                              )
                           )
                           (branch "if x_3 false"
                               (builtin "One Step Simplification" (formula "30"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Null Reference (_values = null)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (_values != null, but i Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "30"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                            (builtin "SMTRule")
                        )
                     )
                  )
                  (branch "Null Reference (_values = null)"
                      (builtin "One Step Simplification" (formula "25"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_values != null, but i Out of Bounds!)"
                     (rule "false_right" (formula "25"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "commute_or" (formula "1"))
                     (rule "ifElseSplit" (formula "27"))
                     (branch "if x_6 true"
                         (builtin "One Step Simplification" (formula "28"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_6 false"
                         (builtin "One Step Simplification" (formula "28"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "compound_less_than_comparison_2" (formula "27") (term "1") (inst "#v1=x_5") (inst "#v0=x_4"))
                        (rule "variableDeclarationAssign" (formula "27") (term "1"))
                        (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_10"))
                        (rule "assignment" (formula "27") (term "1"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "variableDeclarationAssign" (formula "27") (term "1"))
                        (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_11"))
                        (rule "assignment_array2" (formula "27"))
                        (branch "Normal Execution (_values != null)"
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "pullOutSelect" (formula "27") (term "0,1,0") (inst "selectSK=arr_3"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "7")))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "8")))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "less_than_comparison_simple" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "ifSplit" (formula "29"))
                           (branch "if x_3 true"
                               (builtin "One Step Simplification" (formula "30"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "eval_order_array_access3" (formula "30") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                              (rule "variableDeclarationAssign" (formula "30") (term "1"))
                              (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_arr"))
                              (rule "assignment" (formula "30") (term "1"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "variableDeclarationAssign" (formula "30") (term "1"))
                              (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_12"))
                              (rule "assignment" (formula "30") (term "1"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "variableDeclarationAssign" (formula "30") (term "1"))
                              (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_13"))
                              (rule "assignment_array2" (formula "30"))
                              (branch "Normal Execution (_values != null)"
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "replaceKnownSelect_taclet012110011_3" (formula "30") (term "0,1,0"))
                                 (rule "assignment_to_primitive_array_component" (formula "30"))
                                 (branch "Normal Execution (x_arr != null)"
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "assignment" (formula "30") (term "1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "postdecrement" (formula "30") (term "1"))
                                    (rule "compound_subtraction_1" (formula "30") (term "1") (inst "#v=x"))
                                    (rule "variableDeclarationAssign" (formula "30") (term "1"))
                                    (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_14"))
                                    (rule "widening_identity_cast_5" (formula "30") (term "1"))
                                    (rule "assignment" (formula "30") (term "1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "assignmentSubtractionInt" (formula "30") (term "1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "translateJavaSubInt" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "30") (term "0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,1,0"))
                                    (rule "tryEmpty" (formula "30") (term "1"))
                                    (rule "methodCallEmpty" (formula "30") (term "1"))
                                    (rule "emptyModality" (formula "30") (term "1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "andRight" (formula "30"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "30"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "30"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "30"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "30"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "30"))
                                                   (branch "Case 1"
                                                       (builtin "SMTRule")
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "30"))
                                                      (branch "Case 1"
                                                          (builtin "SMTRule")
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "SMTRule")
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "orRight" (formula "30"))
                                                    (builtin "SMTRule")
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "SMTRule")
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "selectOfStore" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "castDel" (formula "30") (term "1,0"))
                                             (rule "selectOfAnon" (formula "30") (term "2,0"))
                                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")) (ifInst ""  (formula "9")))
                                             (rule "elementOfArrayRange" (formula "30") (term "0,2,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "selectOfAnon" (formula "30") (term "2,2,0"))
                                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")) (ifInst ""  (formula "9")))
                                             (rule "elementOfArrayRange" (formula "30") (term "0,2,2,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "30"))
                                              (builtin "SMTRule")
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "30") (inst "sk=f_0"))
                                          (rule "allRight" (formula "30") (inst "sk=o_0"))
                                          (rule "orRight" (formula "30"))
                                          (rule "orRight" (formula "30"))
                                          (rule "selectOfAnon" (formula "32") (term "0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "elementOfArrayRange" (formula "32") (term "0,0,0,0") (inst "iv=iv"))
                                          (rule "selectOfStore" (formula "32") (term "1"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "castDel" (formula "32") (term "1,1"))
                                          (rule "selectOfAnon" (formula "32") (term "2,1"))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                                          (rule "elementOfArrayRange" (formula "32") (term "0,0,2,1") (inst "iv=iv"))
                                          (rule "selectOfAnon" (formula "32") (term "2,2,1"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "elementOfArrayRange" (formula "32") (term "0,0,0,2,2,1") (inst "iv=iv"))
                                           (builtin "SMTRule")
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "SMTRule")
                                    )
                                 )
                                 (branch "Null Reference (x_arr = null)"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr != null, but x_12 Out of Bounds!)"
                                     (builtin "One Step Simplification" (formula "31"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                     (builtin "SMTRule")
                                 )
                              )
                              (branch "Null Reference (_values = null)"
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (_values != null, but i Out of Bounds!)"
                                  (builtin "One Step Simplification" (formula "31"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                  (builtin "SMTRule")
                              )
                           )
                           (branch "if x_3 false"
                               (builtin "One Step Simplification" (formula "30"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "tryEmpty" (formula "30") (term "1"))
                              (rule "methodCallEmpty" (formula "30") (term "1"))
                              (rule "emptyModality" (formula "30") (term "1"))
                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")))
                              (rule "andRight" (formula "30"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "30"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "30"))
                                    (branch "Case 1"
                                       (rule "orRight" (formula "30"))
                                        (builtin "SMTRule")
                                    )
                                    (branch "Case 2"
                                       (rule "selectOfAnon" (formula "30") (term "0"))
                                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")) (ifInst ""  (formula "8")))
                                       (rule "elementOfArrayRange" (formula "30") (term "0,0") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "selectOfAnon" (formula "30") (term "2,0"))
                                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")) (ifInst ""  (formula "8")))
                                       (rule "elementOfArrayRange" (formula "30") (term "0,2,0") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "30"))
                                        (builtin "SMTRule")
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "30") (inst "sk=f_0"))
                                    (rule "allRight" (formula "30") (inst "sk=o_0"))
                                    (rule "orRight" (formula "30"))
                                    (rule "orRight" (formula "30"))
                                    (rule "selectOfAnon" (formula "32") (term "1"))
                                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                                    (rule "elementOfArrayRange" (formula "32") (term "0,0,1") (inst "iv=iv"))
                                    (rule "selectOfAnon" (formula "32") (term "0"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "elementOfArrayRange" (formula "32") (term "0,0,0,0") (inst "iv=iv"))
                                    (rule "selectOfAnon" (formula "32") (term "2,1"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "elementOfArrayRange" (formula "32") (term "0,0,0,2,1") (inst "iv=iv"))
                                     (builtin "SMTRule")
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "SMTRule")
                              )
                           )
                        )
                        (branch "Null Reference (_values = null)"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (_values != null, but i Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                            (builtin "SMTRule")
                        )
                     )
                  )
               )
            )
            (branch "Use Case"
                (builtin "One Step Simplification" (formula "15"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "translateJavaSubInt" (formula "15") (term "1,0,1,0,0"))
               (rule "translateJavaSubInt" (formula "15") (term "0,0,1,0,0,0"))
               (rule "translateJavaAddInt" (formula "15") (term "3,0,1,1,0,0"))
               (rule "translateJavaAddInt" (formula "15") (term "1,0,0,0,0"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "16"))
               (rule "eqSymm" (formula "18") (term "0"))
               (rule "polySimp_elimSub" (formula "16") (term "0"))
               (rule "mul_literals" (formula "16") (term "1,0"))
               (rule "polySimp_elimSub" (formula "18") (term "0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "18") (term "3,0,1"))
               (rule "polySimp_addComm0" (formula "15") (term "1"))
               (rule "polySimp_addComm0" (formula "16") (term "0"))
               (rule "polySimp_addComm0" (formula "18") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "20"))
               (rule "inEqSimp_commuteLeq" (formula "16"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "b_0_1"))
               (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnon" (formula "20"))
                (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
               (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
               (rule "pullOutSelect" (formula "20") (term "2,0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnon" (formula "20"))
                (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
               (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
               (rule "commute_or" (formula "18"))
               (rule "compound_assignment_3_nonsimple" (formula "25") (term "1"))
               (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_3"))
               (rule "compound_assignment_2" (formula "25") (term "1") (inst "#v=x_4"))
               (rule "variableDeclarationAssign" (formula "25") (term "1"))
               (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_4"))
               (rule "greater_equal_than_comparison_simple" (formula "25") (term "1"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "compound_assignment_1_new" (formula "25") (term "1"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "ifElseSplit" (formula "25"))
               (branch "if x_3 true"
                   (builtin "One Step Simplification" (formula "26"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "assignment" (formula "26") (term "1"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "methodCallEmpty" (formula "26") (term "1"))
                  (rule "emptyModality" (formula "26") (term "1"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "assignment_to_primitive_array_component" (formula "26"))
                  (branch "Normal Execution (_values != null)"
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "blockEmpty" (formula "26") (term "1"))
                     (rule "preincrement" (formula "26") (term "1"))
                     (rule "compound_int_cast_expression" (formula "26") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "26") (term "1"))
                     (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_5"))
                     (rule "remove_parentheses_right" (formula "26") (term "1"))
                     (rule "assignmentAdditionInt" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "26") (term "1"))
                     (rule "assignment" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "tryEmpty" (formula "26") (term "1"))
                     (rule "methodCallEmpty" (formula "26") (term "1"))
                     (rule "emptyModality" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "andRight" (formula "26"))
                     (branch "Case 1"
                        (rule "andRight" (formula "26"))
                        (branch "Case 1"
                           (rule "andRight" (formula "26"))
                           (branch "Case 1"
                              (rule "andRight" (formula "26"))
                              (branch "Case 1"
                                  (builtin "SMTRule")
                              )
                              (branch "Case 2"
                                  (builtin "SMTRule")
                              )
                           )
                           (branch "Case 2"
                              (rule "polySimp_homoEq" (formula "15"))
                              (rule "polySimp_homoEq" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                              (rule "inEqSimp_geqRight" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltRight" (formula "24"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1"))
                              (rule "mul_literals" (formula "17") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0"))
                              (rule "applyEqRigid" (formula "20") (term "1,0,0,1") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                              (rule "add_literals" (formula "20") (term "0,0,0,1"))
                              (rule "add_zero_left" (formula "20") (term "0,0,1"))
                              (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "20") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0"))
                              (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "3") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "25") (term "3,0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "2"))
                              (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                              (rule "applyEq" (formula "21") (term "0,2,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "20") (term "0,2,1,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "19") (term "0,2,2,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "14"))
                              (rule "applyEq" (formula "22") (term "0,2,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,0"))
                              (rule "times_zero_1" (formula "15") (term "0"))
                              (rule "leq_literals" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "14"))
                              (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "14"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "16") (term "1") (ifseqformula "10"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1"))
                              (rule "leq_literals" (formula "16") (term "0,1"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_subsumption1" (formula "17") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "17") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "hideAuxiliaryEq" (formula "17"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "mul_literals" (formula "10") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "11") (term "0") (inst "i=i_1"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "translateJavaAddInt" (formula "11") (term "0,2,1,1,0"))
                              (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "11") (term "0"))
                              (rule "nnf_notAnd" (formula "11") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "16") (term "0") (inst "i=i_1"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "translateJavaAddInt" (formula "16") (term "0,2,1,1,0"))
                              (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,2,1,1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "19") (term "0") (inst "i=i_1"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,0"))
                              (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
                              (rule "allRight" (formula "19") (inst "sk=i_1_0"))
                              (rule "impRight" (formula "19"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_elimSub" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,2,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "1"))
                              (rule "add_literals" (formula "2") (term "0,1"))
                              (rule "add_zero_left" (formula "2") (term "1"))
                              (rule "inEqSimp_leqRight" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_4"))
                              (rule "simplifySelectOfStore" (formula "2"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "2") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfAnon" (formula "2"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")) (ifInst ""  (formula "9")))
                              (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0"))
                              (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "2") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "9")))
                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "20") (term "0"))
                              (rule "wellFormedAnon" (formula "20") (term "1,0"))
                              (rule "wellFormedAnon" (formula "20") (term "0,1,0"))
                              (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "8")) (ifInst ""  (formula "14")) (ifInst ""  (formula "17")) (ifInst ""  (formula "21")))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "21") (term "0") (inst "i=i_1"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0"))
                              (rule "translateJavaAddInt" (formula "21") (term "0,2,1,1,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                              (rule "add_zero_left" (formula "21") (term "1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "21") (term "0"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                              (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "20") (term "0") (inst "i=i_1") (inst "j=j"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                              (rule "nnf_imp2or" (formula "20") (term "0"))
                              (rule "nnf_notAnd" (formula "20") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "i_1_0 = begin TRUE"
                                 (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "4"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,0"))
                                 (rule "times_zero_1" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "2") (term "1,0,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "all_pull_out3" (formula "17") (term "0"))
                                 (rule "shift_paren_or" (formula "17") (term "0,0"))
                                 (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                 (rule "allLeft" (formula "18") (inst "t=begin<<origin(\"loop_invariant @ file Sorter.java @ line 598\",\"[]\")>>"))
                                 (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "pullOutSelect" (formula "18") (term "1") (inst "selectSK=arr_6"))
                                 (rule "simplifySelectOfAnon" (formula "18"))
                                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")) (ifInst ""  (formula "6")))
                                 (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "18") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "18"))
                                 (rule "hideAuxiliaryEq" (formula "18"))
                                 (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_7"))
                                 (rule "simplifySelectOfAnon" (formula "18"))
                                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")) (ifInst ""  (formula "6")))
                                 (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_commuteGeq" (formula "19"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "18"))
                                 (rule "hideAuxiliaryEq" (formula "18"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "22"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "inEqSimp_homoInEq1" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0"))
                                 (rule "add_literals" (formula "18") (term "0"))
                                 (rule "leq_literals" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                              (branch "i_1_0 = begin FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "23"))
                                 (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0"))
                                 (rule "leq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "false_right" (formula "23"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "all_pull_out3" (formula "19") (term "0"))
                                 (rule "shift_paren_or" (formula "19") (term "0,0"))
                                 (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                 (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                                 (rule "replaceKnownSelect_taclet1000020011_10" (formula "20") (term "1,1"))
                                 (rule "replaceKnownSelect_taclet1000020011_8" (formula "20") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1000020011_11" (formula "20") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1000020011_9" (formula "20") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "3"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "26") (inst "sk=f_0"))
                           (rule "allRight" (formula "26") (inst "sk=o_0"))
                           (rule "orRight" (formula "26"))
                           (rule "orRight" (formula "26"))
                           (rule "selectOfStore" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "castDel" (formula "28") (term "1,1"))
                           (rule "selectOfAnon" (formula "28") (term "2,1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "elementOfArrayRange" (formula "28") (term "0,0,0,2,1") (inst "iv=iv"))
                           (rule "selectOfAnon" (formula "28") (term "2,2,1"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                           (rule "elementOfArrayRange" (formula "28") (term "0,0,2,2,1") (inst "iv=iv"))
                            (builtin "SMTRule")
                        )
                     )
                     (branch "Case 2"
                         (builtin "SMTRule")
                     )
                  )
                  (branch "Null Reference (_values = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_values != null, but hole Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                      (builtin "One Step Simplification" (formula "27"))
                      (builtin "SMTRule")
                  )
               )
               (branch "if x_3 false"
                   (builtin "One Step Simplification" (formula "26"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                  (rule "variableDeclarationAssign" (formula "26") (term "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_5"))
                  (rule "assignment" (formula "26") (term "1"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "variableDeclarationAssign" (formula "26") (term "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_6"))
                  (rule "assignment_array2" (formula "26"))
                  (branch "Normal Execution (_values != null)"
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "6")))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "7")))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "less_than_comparison_simple" (formula "28") (term "1"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "methodCallEmpty" (formula "28") (term "1"))
                     (rule "emptyModality" (formula "28") (term "1"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "impRight" (formula "28"))
                     (rule "notLeft" (formula "1"))
                     (rule "assignment_to_primitive_array_component" (formula "29"))
                     (branch "Normal Execution (_values != null)"
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "blockEmpty" (formula "29") (term "1"))
                        (rule "preincrement" (formula "29") (term "1"))
                        (rule "compound_int_cast_expression" (formula "29") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "29") (term "1"))
                        (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_7"))
                        (rule "remove_parentheses_right" (formula "29") (term "1"))
                        (rule "assignmentAdditionInt" (formula "29") (term "1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "translateJavaAddInt" (formula "29") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "29") (term "1"))
                        (rule "assignment" (formula "29") (term "1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "tryEmpty" (formula "29") (term "1"))
                        (rule "methodCallEmpty" (formula "29") (term "1"))
                        (rule "emptyModality" (formula "29") (term "1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "andRight" (formula "29"))
                        (branch "Case 1"
                           (rule "andRight" (formula "29"))
                           (branch "Case 1"
                              (rule "andRight" (formula "29"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "29"))
                                 (branch "Case 1"
                                     (builtin "SMTRule")
                                 )
                                 (branch "Case 2"
                                     (builtin "SMTRule")
                                 )
                              )
                              (branch "Case 2"
                                 (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "29") (term "0") (inst "i=i_1") (userinteraction))
                                  (builtin "One Step Simplification" (formula "29") (userinteraction))
                                 (rule "allRight" (formula "29") (inst "sk=i_1_0") (userinteraction))
                                 (rule "orLeft" (formula "21") (userinteraction))
                                 (branch " de.wiesler.Functions.isSortedSlice(values, begin, 1 + k_0) @heap[anon(arrayRange(values, begin, -1 + end), anon_heap_LOOP<<anonHeapFunction>>)] [anon(arrayRange(values, begin, k_0), anon_heap_LOOP_0<<anonHeapFunction>>)] = TRUE"
                                    (rule "translateJavaAddInt" (formula "29") (term "0,2,1,1"))
                                    (rule "translateJavaSubInt" (formula "29") (term "1,1,0"))
                                    (rule "impRight" (formula "29"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_homoEq" (formula "20"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,2,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_ltRight" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "29"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "polySimp_sepPosMonomial" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1"))
                                    (rule "mul_literals" (formula "23") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                    (rule "applyEqRigid" (formula "6") (term "0,2,1,0") (ifseqformula "23"))
                                    (rule "applyEqRigid" (formula "7") (term "1,0,0") (ifseqformula "23"))
                                    (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                                    (rule "inEqSimp_homoInEq1" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0"))
                                    (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "23"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "23"))
                                    (rule "applyEqRigid" (formula "6") (term "0,2,2,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "23"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
                                    (rule "applyEqRigid" (formula "25") (term "1,0,0") (ifseqformula "23"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                    (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0"))
                                    (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                    (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (term "0,0") (ifseqformula "25"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (term "0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "1") (term "3,0,1,1") (ifseqformula "8"))
                                    (rule "applyEqReverse" (formula "1") (term "3,0,0") (ifseqformula "8"))
                                    (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "8"))
                                    (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_5"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_6"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "hideAuxiliaryEq" (formula "26"))
                                    (rule "inEqSimp_subsumption0" (formula "8") (term "0,0") (ifseqformula "22"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "10"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "13")))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_8"))
                                    (rule "simplifySelectOfAnon" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")) (ifInst ""  (formula "13")))
                                    (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "22"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                    (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "25") (term "0"))
                                    (rule "wellFormedAnon" (formula "25") (term "1,0"))
                                    (rule "wellFormedAnon" (formula "25") (term "0,1,0"))
                                    (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "11")) (ifInst ""  (formula "17")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")))
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "19") (term "0") (inst "i=i_1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "24") (term "0") (inst "i=i_1"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "24") (term "0,2,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,2,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "26") (term "0") (inst "i=i_1"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "translateJavaSubInt" (formula "26") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "26") (term "0,2,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "24") (term "0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                    (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "25") (term "0"))
                                    (rule "wellFormedAnon" (formula "25") (term "1,0"))
                                    (rule "wellFormedAnon" (formula "25") (term "0,1,0"))
                                    (rule "replace_known_left" (formula "25") (term "1,1,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")) (ifInst ""  (formula "11")) (ifInst ""  (formula "17")) (ifInst ""  (formula "26")))
                                    (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "26") (term "0") (inst "i=i_1") (inst "j=j"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "25") (term "0") (inst "i=i_1"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "translateJavaSubInt" (formula "25") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "i_1_0 = hole_0 TRUE"
                                       (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,2,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "equal_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "commute_or" (formula "21") (term "0,0,1,0"))
                                       (rule "all_pull_out3" (formula "21") (term "0"))
                                       (rule "shift_paren_or" (formula "21") (term "0,0"))
                                       (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,2,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,2,0,1"))
                                       (rule "add_zero_left" (formula "17") (term "0,2,0,1"))
                                       (rule "replaceKnownSelect_taclet20011_2" (formula "17") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010000120011_10" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_9"))
                                       (rule "simplifySelectOfAnon" (formula "17"))
                                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "26")) (ifInst ""  (formula "10")))
                                       (rule "elementOfArrayRangeConcrete" (formula "17") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                       (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_subsumption0" (formula "17") (term "0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "17"))
                                       (rule "hideAuxiliaryEq" (formula "17"))
                                       (rule "inEqSimp_commuteGeq" (formula "17"))
                                       (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))), hole_0)"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,2,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,2,0,1"))
                                       (rule "add_zero_left" (formula "23") (term "0,2,0,1"))
                                       (rule "replaceKnownSelect_taclet20011_1" (formula "23") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010000120011_5" (formula "23") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_10"))
                                       (rule "simplifySelectOfAnon" (formula "23"))
                                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "10")))
                                       (rule "replaceKnownSelect_taclet0010000120011_18" (formula "23") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010000120011_19" (formula "23") (term "2,0"))
                                       (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_commuteLeq" (formula "24"))
                                       (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                       (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                                       (rule "hideAuxiliaryEq" (formula "23"))
                                       (rule "inEqSimp_commuteGeq" (formula "23"))
                                       (rule "allLeft" (formula "21") (inst "t=begin"))
                                       (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0"))
                                       (rule "leq_literals" (formula "21") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "pullOutSelect" (formula "21") (term "1") (inst "selectSK=arr_11"))
                                       (rule "simplifySelectOfAnon" (formula "21"))
                                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")) (ifInst ""  (formula "10")))
                                       (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (term "0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                                       (rule "hideAuxiliaryEq" (formula "21"))
                                       (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_12"))
                                       (rule "simplifySelectOfAnon" (formula "21"))
                                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")) (ifInst ""  (formula "10")))
                                       (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_commuteGeq" (formula "22"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
                                       (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                                       (rule "hideAuxiliaryEq" (formula "21"))
                                       (rule "inEqSimp_commuteLeq" (formula "21"))
                                       (rule "allLeft" (formula "22") (inst "t=hole_0"))
                                       (rule "replaceKnownSelect_taclet20011_1" (formula "22") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010000120011_5" (formula "22") (term "1,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_13"))
                                       (rule "simplifySelectOfAnon" (formula "22"))
                                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "29")) (ifInst ""  (formula "10")))
                                       (rule "elementOfArrayRangeConcrete" (formula "22") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_commuteGeq" (formula "23"))
                                       (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                                       (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (term "0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                                       (rule "hideAuxiliaryEq" (formula "22"))
                                       (rule "inEqSimp_commuteLeq" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "28"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0"))
                                       (rule "add_literals" (formula "22") (term "0"))
                                       (rule "leq_literals" (formula "22"))
                                       (rule "closeFalse" (formula "22"))
                                    )
                                    (branch "i_1_0 = hole_0 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "i_1_0 = -1 + hole_0 TRUE"
                                          (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                          (rule "add_literals" (formula "7") (term "0,1"))
                                          (rule "add_zero_left" (formula "7") (term "1"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                          (rule "polySimp_homoEq" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_literals" (formula "26") (term "0"))
                                          (rule "equal_literals" (formula "26"))
                                          (rule "false_right" (formula "26"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch "i_1_0 = -1 + hole_0 FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                          (rule "all_pull_out3" (formula "23") (term "0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                          (rule "allLeft" (formula "22") (inst "t=i_1_0"))
                                          (rule "replaceKnownSelect_taclet010000120011_12" (formula "22") (term "1,1"))
                                          (rule "replaceKnownSelect_taclet010000120011_14" (formula "22") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000120011_13" (formula "22") (term "1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000120011_15" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "leq_literals" (formula "22") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "6"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_literals" (formula "22") (term "0"))
                                          (rule "leq_literals" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                    )
                                 )
                                 (branch "-1 + k_0 = i_0"
                                    (rule "translateJavaAddInt" (formula "29") (term "0,2,1,1"))
                                    (rule "translateJavaSubInt" (formula "29") (term "1,1,0"))
                                    (rule "impRight" (formula "29"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_homoEq" (formula "20"))
                                    (rule "polySimp_homoEq" (formula "23"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,2,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_ltRight" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "29"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "polySimp_sepPosMonomial" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                    (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "23"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
                                    (rule "applyEqRigid" (formula "7") (term "1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "23"))
                                    (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                                    (rule "inEqSimp_homoInEq1" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0"))
                                    (rule "applyEq" (formula "6") (term "0,2,2,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "23"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0"))
                                    (rule "applyEqRigid" (formula "26") (term "1,0,0") (ifseqformula "23"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0"))
                                    (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "26"))
                                    (rule "applyEqRigid" (formula "21") (term "3,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "26"))
                                    (rule "applyEqRigid" (formula "9") (term "0,2,1,0") (ifseqformula "26"))
                                    (rule "applyEqRigid" (formula "19") (term "0,1,0") (ifseqformula "26"))
                                    (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "25"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                    (rule "leq_literals" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "3") (term "0,1,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "applyEqRigid" (formula "27") (term "0,1,0,0") (ifseqformula "24"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "27") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEqRigid" (formula "25") (term "2,1,0,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "8") (term "0,2,2,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "1") (term "2,1,0,0,0,1,0") (ifseqformula "24"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "applyEqRigid" (formula "25") (term "3,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "24"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEqRigid" (formula "8") (term "0,0,0,0") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "23") (term "0,1,0") (ifseqformula "24"))
                                    (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0"))
                                    (rule "leq_literals" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "1") (term "3,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "applyEqReverse" (formula "1") (term "3,0,1,0") (ifseqformula "8"))
                                    (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "8"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "inEqSimp_commuteGeq" (formula "26"))
                                    (rule "applyEq" (formula "1") (term "2,1,0,0,1,0") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteLeq" (formula "24"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEqReverse" (formula "1") (term "3,0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "1") (term "3,0,0,1,0") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "qeq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_5"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "10")))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_6"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_sepPosMonomial" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "11")))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "16") (term "0"))
                                    (rule "wellFormedAnon" (formula "16") (term "1,0"))
                                    (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "23")) (ifInst ""  (formula "15")) (ifInst ""  (formula "17")))
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "17") (term "0") (inst "i=i_1"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "translateJavaSubInt" (formula "17") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "17") (term "0,2,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "21") (term "0") (inst "i=i_1"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "translateJavaAddInt" (formula "21") (term "0,2,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "21") (term "0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "16") (term "0"))
                                    (rule "wellFormedAnon" (formula "16") (term "1,0"))
                                    (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "24")) (ifInst ""  (formula "9")) (ifInst ""  (formula "15")))
                                    (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "17") (term "0") (inst "i=i_1") (inst "j=j"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "16") (term "0") (inst "i=i_1"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "16") (term "0,2,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "commute_or" (formula "16") (term "0,0,1,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "i_1_0 = -1 + hole_0 TRUE"
                                       (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                       (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "6"))
                                       (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "1,0"))
                                       (rule "times_zero_1" (formula "6") (term "0"))
                                       (rule "qeq_literals" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "4"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_literals" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "i_1_0 = -1 + hole_0 FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "22"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                       (rule "add_literals" (formula "5") (term "0,1"))
                                       (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "false_right" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "all_pull_out3" (formula "15") (term "0"))
                                       (rule "shift_paren_or" (formula "15") (term "0,0"))
                                       (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                       (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                                       (rule "replaceKnownSelect_taclet110000120011_11" (formula "20") (term "1,1"))
                                       (rule "replaceKnownSelect_taclet110000120011_14" (formula "20") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet110000120011_12" (formula "20") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet110000120011_15" (formula "20") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "leq_literals" (formula "20") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_literals" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "29") (inst "sk=f_0"))
                              (rule "allRight" (formula "29") (inst "sk=o_0"))
                              (rule "orRight" (formula "29"))
                              (rule "orRight" (formula "29"))
                              (rule "selectOfStore" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "castDel" (formula "31") (term "1,1"))
                              (rule "selectOfAnon" (formula "31") (term "2,1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "elementOfArrayRange" (formula "31") (term "0,0,0,2,1") (inst "iv=iv"))
                              (rule "selectOfAnon" (formula "31") (term "2,2,1"))
                               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                              (rule "elementOfArrayRange" (formula "31") (term "0,0,2,2,1") (inst "iv=iv"))
                               (builtin "SMTRule")
                           )
                        )
                        (branch "Case 2"
                            (builtin "SMTRule")
                        )
                     )
                     (branch "Null Reference (_values = null)"
                         (builtin "One Step Simplification" (formula "30"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (_values != null, but hole Out of Bounds!)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                         (builtin "One Step Simplification" (formula "30"))
                         (builtin "SMTRule")
                     )
                  )
                  (branch "Null Reference (_values = null)"
                      (builtin "One Step Simplification" (formula "27"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_values != null, but i Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "27"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                      (builtin "SMTRule")
                  )
               )
            )
         )
         (branch "Null Reference (_values = null)"
             (builtin "One Step Simplification" (formula "16"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (_values != null, but k Out of Bounds!)"
             (builtin "One Step Simplification" (formula "16"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
             (builtin "SMTRule")
         )
      )
      (branch "if x_2 false"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Use Case"
       (builtin "One Step Simplification" (formula "11"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "translateJavaSubInt" (formula "11") (term "2,1,0,1,1,0"))
      (rule "translateJavaSubInt" (formula "8") (term "2,1,0,0,1"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "polySimp_elimSub" (formula "13") (term "2,1,0,1,1,0"))
      (rule "mul_literals" (formula "13") (term "1,2,1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "2,1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,2,1,0,0"))
      (rule "polySimp_addComm0" (formula "13") (term "2,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "2,1,0,0"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "b_1"))
      (rule "less_than_comparison_simple" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallEmpty" (formula "13") (term "1"))
      (rule "emptyModality" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "impRight" (formula "13"))
      (rule "notLeft" (formula "1"))
      (rule "methodCallEmpty" (formula "14") (term "1"))
      (rule "tryEmpty" (formula "14") (term "1"))
      (rule "emptyModality" (formula "14") (term "1"))
      (rule "andRight" (formula "14"))
      (branch "Case 1"
         (rule "andRight" (formula "14"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "14"))
             (builtin "SMTRule")
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "14"))
            (rule "closeTrue" (formula "14"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "14"))
         (rule "allRight" (formula "14") (inst "sk=f_0"))
         (rule "allRight" (formula "14") (inst "sk=o_0"))
         (rule "orRight" (formula "14"))
         (rule "orRight" (formula "14"))
         (rule "selectOfAnon" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
         (rule "elementOfArrayRange" (formula "16") (term "0,0,1") (inst "iv=iv"))
          (builtin "SMTRule")
      )
   )
)
)
}
