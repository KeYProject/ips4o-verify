\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jan 10 17:55:09 CET 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../../main/java";

\proofObligation "#Proof Obligation Settings
#Mon Jan 10 17:55:09 CET 2022
contract=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:isValidSampleResultForLen(de.wiesler.Sorter.SampleResult,int)].JML accessible clause.0
name=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:isValidSampleResultForLen(de.wiesler.Sorter.SampleResult,int)].JML accessible clause.0
class=de.uka.ilkd.key.proof.init.DependencyContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "a684beee49"))

(autoModeTime "79")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "r,n,anon_heap"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "7"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "6"))
 (builtin "One Step Simplification" (formula "3"))
(rule "Definition_axiom_for_isValidSampleResultForLen_in_de_wiesler_Sorter" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "translateJavaSubInt" (formula "7") (term "0,1,0,1"))
(rule "translateJavaDivInt" (formula "7") (term "3,0,0,0,0,0,1"))
(rule "translateJavaMulInt" (formula "7") (term "0,0,1,0,1"))
(rule "eqSymm" (formula "7"))
(rule "polySimp_elimSub" (formula "7") (term "0,1,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,1,0,0"))
(rule "polySimp_addComm0" (formula "7") (term "0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0,0,0"))
(rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
(rule "polySimp_addComm0" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
(rule "Definition_axiom_for_isValidSampleResultForLen_in_de_wiesler_Sorter" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "translateJavaSubInt" (formula "7") (term "0,1,0,1"))
(rule "translateJavaDivInt" (formula "7") (term "3,0,0,0,0,0,1"))
(rule "translateJavaMulInt" (formula "7") (term "0,0,1,0,1"))
(rule "eqSymm" (formula "7"))
(rule "polySimp_elimSub" (formula "7") (term "0,1,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,1,0,0"))
(rule "polySimp_addComm0" (formula "7") (term "0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0,0,0"))
(rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
(rule "eqSymm" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,1,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,1,0,1"))
(rule "polySimp_addComm0" (formula "7") (term "0,0,1,0,1"))
(rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1"))
(rule "eqSymm" (formula "7"))
(rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
(rule "pullOutSelect" (formula "7") (term "0,1,0,0,0,0") (inst "selectSK=de_wiesler_Sorter_SampleResult_step_0"))
(rule "applyEq" (formula "8") (term "0,0,1,0,0") (ifseqformula "1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")) (ifInst ""  (formula "4")))
(rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
(rule "elementOfSetMinus" (formula "1") (term "0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "8") (term "0,1,0,0,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "8") (term "1,0,1,0,0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "pullOutSelect" (formula "7") (term "1,1,1,0,0") (inst "selectSK=de_wiesler_Sorter_SampleResult_num_samples_0"))
(rule "applyEq" (formula "8") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")) (ifInst ""  (formula "4")))
(rule "elementOfSetMinus" (formula "1") (term "0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "8") (term "1,1,1,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "8") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "pullOutSelect" (formula "7") (term "1,0,1,0,0,0") (inst "selectSK=de_wiesler_Sorter_SampleResult_num_buckets_0"))
(rule "applyEq" (formula "8") (term "0,0,1,0,0") (ifseqformula "1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")) (ifInst ""  (formula "4")))
(rule "eqSymm" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
(rule "elementOfSetMinus" (formula "1") (term "0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "8") (term "1,0,1,0,1") (ifseqformula "1"))
(rule "applyEqReverse" (formula "8") (term "1,0,1,0,0,1") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "eqSymm" (formula "7"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0,1,0,0,0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,1,0,0,0"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0,0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0,0,0,0,0,1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "eqSymm" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0"))
(rule "eqSymm" (formula "7"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0,1,0,0,1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "eqSymm" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,1,0,0,0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "closeTrue" (formula "7"))
)
}
