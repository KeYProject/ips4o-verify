\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Oct 28 00:45:21 CEST 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../java-overflow";

\proofObligation "#Proof Obligation Settings
#Sat Oct 28 00:45:21 CEST 2023
contract=de.wiesler.Permute[de.wiesler.Permute\\:\\:permute([I,int,int,de.wiesler.Classifier,de.wiesler.BucketPointers,[I,[I,[I)].JML normal_behavior operation contract.0
name=de.wiesler.Permute[de.wiesler.Permute\\:\\:permute([I,int,int,de.wiesler.Classifier,de.wiesler.BucketPointers,[I,[I,[I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "3" (keyUser "mattias" ) (keyVersion "e1a85b31e7"))

(autoModeTime "861078")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,1,1,1,1,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "24"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "27"))
(rule "andLeft" (formula "24"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "21"))
(rule "translateJavaSubInt" (formula "45") (term "0"))
(rule "translateJavaCastInt" (formula "46") (term "0"))
(rule "translateJavaSubInt" (formula "46") (term "1"))
(rule "translateJavaSubInt" (formula "47") (term "1"))
(rule "replace_known_right" (formula "10") (term "0") (ifseqformula "49"))
 (builtin "One Step Simplification" (formula "10"))
(rule "replace_known_right" (formula "11") (term "0") (ifseqformula "50"))
 (builtin "One Step Simplification" (formula "11"))
(rule "replace_known_right" (formula "9") (term "0") (ifseqformula "51"))
 (builtin "One Step Simplification" (formula "9"))
(rule "replace_known_right" (formula "8") (term "0") (ifseqformula "52"))
 (builtin "One Step Simplification" (formula "8"))
(rule "replace_known_right" (formula "7") (term "0") (ifseqformula "53"))
 (builtin "One Step Simplification" (formula "7"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "54"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "45") (term "0"))
(rule "polySimp_elimSub" (formula "46") (term "1"))
(rule "polySimp_elimSub" (formula "47") (term "1"))
(rule "polySimp_addComm0" (formula "45") (term "0"))
(rule "polySimp_addComm0" (formula "46") (term "1"))
(rule "polySimp_addComm0" (formula "47") (term "1"))
(rule "disjointDefinition" (formula "41"))
 (builtin "One Step Simplification" (formula "41"))
(rule "notLeft" (formula "41"))
(rule "disjointDefinition" (formula "40"))
 (builtin "One Step Simplification" (formula "40"))
(rule "notLeft" (formula "40"))
(rule "disjointDefinition" (formula "39"))
 (builtin "One Step Simplification" (formula "39"))
(rule "notLeft" (formula "39"))
(rule "eqSymm" (formula "46"))
(rule "disjointDefinition" (formula "38"))
 (builtin "One Step Simplification" (formula "38"))
(rule "notLeft" (formula "38"))
(rule "eqSymm" (formula "45"))
(rule "disjointDefinition" (formula "37"))
 (builtin "One Step Simplification" (formula "37"))
(rule "notLeft" (formula "37"))
(rule "eqSymm" (formula "44"))
(rule "disjointDefinition" (formula "36"))
 (builtin "One Step Simplification" (formula "36"))
(rule "notLeft" (formula "36"))
(rule "eqSymm" (formula "43"))
(rule "disjointDefinition" (formula "35"))
 (builtin "One Step Simplification" (formula "35"))
(rule "notLeft" (formula "35"))
(rule "eqSymm" (formula "42"))
(rule "disjointDefinition" (formula "34"))
 (builtin "One Step Simplification" (formula "34"))
(rule "notLeft" (formula "34"))
(rule "eqSymm" (formula "41"))
(rule "disjointDefinition" (formula "33"))
 (builtin "One Step Simplification" (formula "33"))
(rule "notLeft" (formula "33"))
(rule "eqSymm" (formula "40"))
(rule "disjointDefinition" (formula "32"))
 (builtin "One Step Simplification" (formula "32"))
(rule "notLeft" (formula "32"))
(rule "disjointDefinition" (formula "31"))
 (builtin "One Step Simplification" (formula "31"))
(rule "notLeft" (formula "31"))
(rule "eqSymm" (formula "38"))
(rule "disjointDefinition" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "notLeft" (formula "30"))
(rule "eqSymm" (formula "37"))
(rule "disjointDefinition" (formula "29"))
 (builtin "One Step Simplification" (formula "29"))
(rule "notLeft" (formula "29"))
(rule "eqSymm" (formula "36"))
(rule "disjointDefinition" (formula "28"))
 (builtin "One Step Simplification" (formula "28"))
(rule "notLeft" (formula "28"))
(rule "disjointDefinition" (formula "27"))
 (builtin "One Step Simplification" (formula "27"))
(rule "notLeft" (formula "27"))
(rule "eqSymm" (formula "34"))
(rule "disjointDefinition" (formula "26"))
 (builtin "One Step Simplification" (formula "26"))
(rule "notLeft" (formula "26"))
(rule "eqSymm" (formula "33"))
(rule "disjointDefinition" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "notLeft" (formula "25"))
(rule "eqSymm" (formula "32"))
(rule "disjointDefinition" (formula "24"))
 (builtin "One Step Simplification" (formula "24"))
(rule "notLeft" (formula "24"))
(rule "eqSymm" (formula "31"))
(rule "disjointDefinition" (formula "23"))
 (builtin "One Step Simplification" (formula "23"))
(rule "notLeft" (formula "23"))
(rule "disjointDefinition" (formula "21"))
 (builtin "One Step Simplification" (formula "21"))
(rule "notLeft" (formula "21"))
(rule "disjointDefinition" (formula "21"))
 (builtin "One Step Simplification" (formula "21"))
(rule "notLeft" (formula "21"))
(rule "castedGetAny" (formula "25") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "23"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "21"))
(rule "inEqSimp_commuteLeq" (formula "22"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0"))
(rule "assignment" (formula "55") (term "1"))
 (builtin "One Step Simplification" (formula "55"))
(rule "applyEq" (formula "25") (term "1,0") (ifseqformula "17"))
(rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "17"))
(rule "commute_and" (formula "27") (term "0,1,0"))
(rule "commute_and_2" (formula "27") (term "1,0"))
(rule "commute_and" (formula "27") (term "1,0,0"))
(rule "commute_and" (formula "27") (term "0,0,0"))
(rule "shift_paren_and" (formula "27") (term "0,0"))
(rule "commute_and_2" (formula "27") (term "0,0,0"))
(rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_permute,savedHeapBefore_permute,_beginBefore_permute,_bucket_pointersBefore_permute,_classifierBefore_permute,_endBefore_permute,_overflowBefore_permute,_swap_1Before_permute,_swap_2Before_permute,_valuesBefore_permute"))
 (builtin "One Step Simplification" (formula "55"))
 (builtin "Block Contract (Internal)" (formula "55") (newnames "exc_311,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "56"))
    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "12")) (ifInst ""  (formula "1")))
   (rule "true_left" (formula "28"))
   (rule "eqSymm" (formula "55") (term "0,0,1,0,1"))
   (rule "variableDeclarationAssign" (formula "55") (term "1"))
   (rule "variableDeclaration" (formula "55") (term "1") (newnames "exc_311_1"))
   (rule "assignment" (formula "55") (term "1"))
    (builtin "One Step Simplification" (formula "55"))
   (rule "emptyStatement" (formula "55") (term "1"))
    (builtin "One Step Simplification" (formula "55"))
   (rule "emptyStatement" (formula "55") (term "1"))
   (rule "tryEmpty" (formula "55") (term "1"))
   (rule "blockEmptyLabel" (formula "55") (term "1"))
   (rule "blockEmpty" (formula "55") (term "1"))
   (rule "methodCallEmpty" (formula "55") (term "1"))
   (rule "emptyModality" (formula "55") (term "1"))
   (rule "andRight" (formula "55"))
   (branch "Case 1"
       (builtin "One Step Simplification" (formula "55"))
      (rule "closeTrue" (formula "55"))
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "55"))
      (rule "closeTrue" (formula "55"))
   )
)
(branch "Precondition"
   (rule "andRight" (formula "55"))
   (branch "Case 1"
       (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "12")))
      (rule "closeTrue" (formula "55"))
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "55"))
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "28"))
    (builtin "One Step Simplification" (formula "56"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "28"))
   (rule "translateJavaSubInt" (formula "30") (term "0,1"))
   (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "true_left" (formula "29"))
   (rule "polySimp_elimSub" (formula "29") (term "0,1"))
   (rule "polySimp_addComm0" (formula "29") (term "0,1"))
   (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "17"))
   (rule "elim_double_block_2" (formula "57") (term "1"))
   (rule "ifUnfold" (formula "57") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "57") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "57") (term "1"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "replace_known_left" (formula "57") (term "0,0,1,0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "ifSplit" (formula "57"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "58"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "58"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "57") (term "1"))
      (rule "variableDeclarationFinalAssign" (formula "57") (term "1"))
      (rule "variableDeclarationFinal" (formula "57") (term "1") (newnames "num_buckets"))
       (builtin "Use Operation Contract" (formula "57") (newnames "heapBefore_num_buckets,result,exc_0") (contract "de.wiesler.Classifier[de.wiesler.Classifier::num_buckets()].JML normal_behavior operation contract.0"))
      (branch "Post (num_buckets)"
          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "16")) (ifInst ""  (formula "14")))
         (rule "expand_inInt" (formula "30") (term "0,1,0"))
         (rule "replace_int_MIN" (formula "30") (term "0,1,0,1,0"))
         (rule "replace_int_MAX" (formula "30") (term "1,0,0,1,0"))
         (rule "andLeft" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "eqSymm" (formula "32"))
         (rule "inEqSimp_commuteLeq" (formula "31"))
         (rule "assignment" (formula "61") (term "1"))
          (builtin "One Step Simplification" (formula "61"))
         (rule "applyEq" (formula "17") (term "0") (ifseqformula "32"))
         (rule "eqSymm" (formula "17"))
         (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "17"))
         (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "17"))
         (rule "for_to_while" (formula "61") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
         (rule "variableDeclarationAssign" (formula "61") (term "1"))
         (rule "variableDeclaration" (formula "61") (term "1") (newnames "bucket"))
         (rule "assignment" (formula "61") (term "1"))
          (builtin "One Step Simplification" (formula "61"))
         (rule "loopScopeInvDia" (formula "61") (term "1") (newnames "bucket_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
         (branch "Invariant Initially Valid"
            (rule "closeTrue" (formula "61"))
         )
         (branch "Invariant Preserved and Used"
             (builtin "One Step Simplification" (formula "62"))
            (rule "expand_inInt" (formula "62") (term "0,0,1,0"))
            (rule "expand_inInt" (formula "62") (term "1,0,0,1,0,0"))
            (rule "expand_inInt" (formula "62") (term "1,0,0,1,0,0,0"))
            (rule "replace_int_MIN" (formula "62") (term "0,1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "62") (term "1,0,0,0,1,0"))
            (rule "replace_int_MIN" (formula "62") (term "0,1,1,0,0,1,0,0"))
            (rule "replace_int_MAX" (formula "62") (term "1,0,1,0,0,1,0,0"))
            (rule "replace_int_MIN" (formula "62") (term "0,1,1,0,0,1,0,0,0"))
            (rule "replace_int_MAX" (formula "62") (term "1,0,1,0,0,1,0,0,0"))
            (rule "impRight" (formula "62"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "3"))
            (rule "translateJavaSubInt" (formula "69") (term "0,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "69") (term "2,0,0,1,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "69") (term "0,1,1,0"))
            (rule "translateJavaSubInt" (formula "7") (term "2,0,0,1,0,0,1,0"))
            (rule "translateJavaSubInt" (formula "6") (term "2,0,0,1,0,0,0,0,1,0"))
            (rule "translateJavaSubInt" (formula "6") (term "2,0,0,1,0,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "6") (term "2,0,0,1,0,0,1,1,0"))
            (rule "translateJavaSubInt" (formula "5") (term "2,0,0,1,0,0,1,0"))
            (rule "translateJavaSubInt" (formula "3") (term "2,0,0,1,0"))
            (rule "translateJavaSubInt" (formula "4") (term "2,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "69") (term "0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "69") (term "2,0,0,1,0,1,0,1,0"))
            (rule "mul_literals" (formula "69") (term "1,2,0,0,1,0,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "69") (term "0,1,1,0"))
            (rule "polySimp_elimSub" (formula "7") (term "2,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "7") (term "1,2,0,0,1,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "6") (term "2,0,0,1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "6") (term "1,2,0,0,1,0,0,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "6") (term "2,0,0,1,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "6") (term "1,2,0,0,1,0,0,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "6") (term "2,0,0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "6") (term "1,2,0,0,1,0,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "5") (term "2,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "5") (term "1,2,0,0,1,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "3") (term "2,0,0,1,0"))
            (rule "mul_literals" (formula "3") (term "1,2,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "4") (term "2,0,0,1,0"))
            (rule "mul_literals" (formula "4") (term "1,2,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "69") (term "0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "69") (term "2,0,0,1,0,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "69") (term "0,1,1,0"))
            (rule "polySimp_addComm0" (formula "7") (term "2,0,0,1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "6") (term "2,0,0,1,0,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "6") (term "2,0,0,1,0,0,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "6") (term "2,0,0,1,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "5") (term "2,0,0,1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "3") (term "2,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "4") (term "2,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "variableDeclaration" (formula "69") (term "1") (newnames "x_1"))
            (rule "applyEq" (formula "6") (term "1,1,0,0,0") (ifseqformula "40"))
            (rule "commuteUnion_2" (formula "69") (term "1,1,0,1,0,1,0"))
            (rule "commuteUnion" (formula "7") (term "1,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "6") (term "1,1,0,0,0,0,1,0"))
            (rule "commuteUnion" (formula "6") (term "1,1,0,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "6") (term "1,1,0,0,1,1,0"))
            (rule "commuteUnion_2" (formula "5") (term "1,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "4") (term "1,1,0"))
            (rule "commuteUnion_2" (formula "3") (term "1,1,0"))
            (rule "commuteUnion" (formula "69") (term "0,1,0,1,0,1,0"))
            (rule "commuteUnion" (formula "7") (term "0,1,0,0,1,0"))
            (rule "commuteUnion" (formula "6") (term "0,1,0,0,0,0,1,0"))
            (rule "commuteUnion" (formula "6") (term "0,1,0,0,1,0,1,0"))
            (rule "commuteUnion" (formula "6") (term "0,1,0,0,1,1,0"))
            (rule "commuteUnion" (formula "5") (term "0,1,0,0,1,0"))
            (rule "commuteUnion" (formula "3") (term "0,1,0"))
            (rule "commuteUnion" (formula "4") (term "0,1,0"))
            (rule "commuteUnion" (formula "69") (term "0,1,1,0,1,0,1,0"))
            (rule "commuteUnion" (formula "6") (term "0,1,1,0,0,0,0,1,0"))
            (rule "commuteUnion" (formula "6") (term "0,1,1,0,0,1,1,0"))
            (rule "commuteUnion" (formula "5") (term "0,1,1,0,0,1,0"))
            (rule "commuteUnion" (formula "4") (term "0,1,1,0"))
            (rule "commuteUnion" (formula "3") (term "0,1,1,0"))
            (rule "commuteUnion" (formula "7") (term "1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "6") (term "1,0,0,1,0,1,0"))
            (rule "commuteUnion" (formula "69") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "6") (term "1,0,0,0,0,1,0"))
            (rule "commuteUnion_2" (formula "6") (term "1,0,0,1,1,0"))
            (rule "commuteUnion_2" (formula "5") (term "1,0,0,1,0"))
            (rule "commuteUnion" (formula "4") (term "1,0"))
            (rule "commuteUnion" (formula "3") (term "1,0"))
            (rule "commuteUnion" (formula "6") (term "0,1,0,0,1,0,1,0"))
            (rule "commuteUnion" (formula "6") (term "0,1,0,0,0,0,1,0"))
            (rule "commuteUnion" (formula "6") (term "0,1,0,0,1,1,0"))
            (rule "commuteUnion" (formula "5") (term "0,1,0,0,1,0"))
            (rule "commute_and" (formula "7") (term "0,0"))
            (rule "commute_and" (formula "6") (term "1,0,0"))
            (rule "commute_and" (formula "5") (term "1,0,0"))
            (rule "commute_and" (formula "5") (term "0,0,0"))
            (rule "commute_and" (formula "6") (term "0,0,0"))
            (rule "commute_and" (formula "6") (term "0,1,0"))
            (rule "commute_and_2" (formula "6") (term "1,0"))
            (rule "shift_paren_and" (formula "5") (term "0,0"))
            (rule "commute_and_2" (formula "5") (term "0,0,0"))
            (rule "associativeLawUnion" (formula "4") (term "1,0"))
            (rule "shift_paren_and" (formula "6") (term "0,0"))
            (rule "commute_and_2" (formula "6") (term "0,0,0"))
            (rule "associativeLawUnion" (formula "3") (term "1,0"))
            (rule "associativeLawUnion" (formula "7") (term "1,0,0,1,0"))
            (rule "associativeLawUnion" (formula "69") (term "1,0,1,0,1,0"))
            (rule "arrayLengthNotNegative" (formula "28") (term "0"))
            (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
            (rule "qeq_literals" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "arrayLengthIsAShort" (formula "26") (term "0"))
            (rule "expand_inShort" (formula "26"))
            (rule "replace_short_MIN" (formula "26") (term "0,1"))
            (rule "replace_short_MAX" (formula "26") (term "1,0"))
            (rule "andLeft" (formula "26"))
            (rule "inEqSimp_commuteLeq" (formula "27"))
            (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
            (rule "qeq_literals" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
            (rule "leq_literals" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "arrayLengthIsAShort" (formula "27") (term "0"))
            (rule "expand_inShort" (formula "27"))
            (rule "replace_short_MIN" (formula "27") (term "0,1"))
            (rule "replace_short_MAX" (formula "27") (term "1,0"))
            (rule "andLeft" (formula "27"))
            (rule "inEqSimp_commuteLeq" (formula "28"))
            (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
            (rule "qeq_literals" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
            (rule "leq_literals" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "arrayLengthIsAShort" (formula "28") (term "0"))
            (rule "expand_inShort" (formula "28"))
            (rule "replace_short_MIN" (formula "28") (term "0,1"))
            (rule "replace_short_MAX" (formula "28") (term "1,0"))
            (rule "andLeft" (formula "28"))
            (rule "inEqSimp_commuteLeq" (formula "29"))
            (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
            (rule "qeq_literals" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
            (rule "leq_literals" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "arrayLengthNotNegative" (formula "26") (term "0"))
            (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
            (rule "qeq_literals" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "arrayLengthIsAShort" (formula "31") (term "0"))
            (rule "expand_inShort" (formula "31"))
            (rule "replace_short_MIN" (formula "31") (term "0,1"))
            (rule "replace_short_MAX" (formula "31") (term "1,0"))
            (rule "andLeft" (formula "31"))
            (rule "inEqSimp_commuteLeq" (formula "32"))
            (rule "arrayLengthNotNegative" (formula "33") (term "0"))
            (rule "arrayLengthNotNegative" (formula "27") (term "0"))
            (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
            (rule "qeq_literals" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "ifElseUnfold" (formula "72") (term "1") (inst "#boolv=x_2"))
            (rule "variableDeclaration" (formula "72") (term "1") (newnames "x_2"))
            (rule "less_than_comparison_simple" (formula "72") (term "1"))
             (builtin "One Step Simplification" (formula "72"))
            (rule "seqGetAlphaCast" (formula "36") (term "0"))
            (rule "castedGetAny" (formula "36") (term "0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "true_left" (formula "36"))
            (rule "associativeLawUnion" (formula "7") (term "0,0,1,0,0,1,0"))
            (rule "associativeLawUnion" (formula "6") (term "0,0,1,0,0,0,0,1,0"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "65") (term "1") (ifseqformula "9") (ifseqformula "16"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "61") (term "0") (ifseqformula "10") (ifseqformula "16"))
            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "60") (term "0,0") (ifseqformula "11") (ifseqformula "17"))
            (rule "ifElseSplit" (formula "75"))
            (branch "if x_2 true"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "76"))
               (rule "elim_double_block_3" (formula "76") (term "1"))
               (rule "loopScopeInvDia" (formula "76") (term "1") (newnames "o,f") (inst "#x=x_3") (inst "#variant=x_2") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_1") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_1") (inst "anon_heap_LOOP=anon_heap_LOOP_1"))
               (branch "Invariant Initially Valid"
                  (rule "closeTrue" (formula "76"))
               )
               (branch "Invariant Preserved and Used"
                   (builtin "One Step Simplification" (formula "77"))
                  (rule "expand_inInt" (formula "77") (term "0,0,1,0"))
                  (rule "expand_inInt" (formula "77") (term "1,0,0,1,0,0"))
                  (rule "expand_inInt" (formula "77") (term "1,0,0,1,0,0,0"))
                  (rule "replace_int_MAX" (formula "77") (term "1,0,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "77") (term "0,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "77") (term "1,0,1,0,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "77") (term "0,1,1,0,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "77") (term "0,1,1,0,0,1,0,0,0"))
                  (rule "replace_int_MAX" (formula "77") (term "1,0,1,0,0,1,0,0,0"))
                  (rule "impRight" (formula "77"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "translateJavaSubInt" (formula "82") (term "2,0,0,1,0,0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "82") (term "2,0,0,1,0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "5") (term "2,0,0,1,0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "4") (term "2,0,0,1,0,0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "4") (term "2,0,0,1,0,0,0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "4") (term "2,0,0,1,0,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "3") (term "2,0,0,1,0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "2") (term "2,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "82") (term "2,0,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "82") (term "1,2,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "82") (term "2,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "82") (term "1,2,0,0,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "5") (term "2,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "5") (term "1,2,0,0,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "4") (term "2,0,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "4") (term "1,2,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "4") (term "2,0,0,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "4") (term "1,2,0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "4") (term "2,0,0,1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "4") (term "1,2,0,0,1,0,0,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "3") (term "2,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "3") (term "1,2,0,0,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "2,0,0,1,0"))
                  (rule "mul_literals" (formula "1") (term "1,2,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "2") (term "2,0,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,2,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "82") (term "2,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "82") (term "2,0,0,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "2,0,0,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "2,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "2,0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "2,0,0,1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "2,0,0,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "2,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "2,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                  (rule "variableDeclaration" (formula "82") (term "1") (newnames "x_3"))
                  (rule "applyEq" (formula "4") (term "1,1,0,0,0") (ifseqformula "53"))
                  (rule "commuteUnion" (formula "82") (term "1,1,0,0,1,0"))
                  (rule "commuteUnion" (formula "82") (term "1,1,0,0,1,1,0"))
                  (rule "commuteUnion" (formula "5") (term "1,1,0,0,1,0"))
                  (rule "commuteUnion_2" (formula "4") (term "1,1,0,0,1,1,0"))
                  (rule "commuteUnion_2" (formula "4") (term "1,1,0,0,0,0,1,0"))
                  (rule "commuteUnion_2" (formula "4") (term "1,1,0,0,1,0,1,0"))
                  (rule "commuteUnion_2" (formula "3") (term "1,1,0,0,1,0"))
                  (rule "commuteUnion_2" (formula "2") (term "1,1,0"))
                  (rule "commuteUnion" (formula "1") (term "1,1,0"))
                  (rule "commuteUnion" (formula "82") (term "0,1,0,0,1,1,0"))
                  (rule "commuteUnion" (formula "82") (term "0,1,0,0,1,0"))
                  (rule "commuteUnion" (formula "5") (term "0,1,0,0,1,0"))
                  (rule "commuteUnion" (formula "4") (term "0,1,0,0,1,1,0"))
                  (rule "commuteUnion" (formula "4") (term "0,1,0,0,0,0,1,0"))
                  (rule "commuteUnion" (formula "4") (term "0,1,0,0,1,0,1,0"))
                  (rule "commuteUnion" (formula "3") (term "0,1,0,0,1,0"))
                  (rule "commuteUnion" (formula "1") (term "0,1,0"))
                  (rule "commuteUnion" (formula "2") (term "0,1,0"))
                  (rule "commuteUnion" (formula "4") (term "0,1,1,0,0,1,1,0"))
                  (rule "commuteUnion" (formula "4") (term "0,1,1,0,0,0,0,1,0"))
                  (rule "commuteUnion" (formula "4") (term "0,1,1,0,0,1,0,1,0"))
                  (rule "commuteUnion" (formula "3") (term "0,1,1,0,0,1,0"))
                  (rule "commuteUnion" (formula "2") (term "0,1,1,0"))
                  (rule "commuteUnion_2" (formula "82") (term "1,0,0,1,1,0"))
                  (rule "commuteUnion_2" (formula "82") (term "1,0,0,1,0"))
                  (rule "commuteUnion_2" (formula "5") (term "1,0,0,1,0"))
                  (rule "commuteUnion_2" (formula "1") (term "1,0"))
                  (rule "commuteUnion_2" (formula "4") (term "1,0,0,1,1,0"))
                  (rule "commuteUnion" (formula "4") (term "1,0,0,0,0,1,0"))
                  (rule "commuteUnion" (formula "4") (term "1,0,0,1,0,1,0"))
                  (rule "commuteUnion_2" (formula "3") (term "1,0,0,1,0"))
                  (rule "commuteUnion_2" (formula "2") (term "1,0"))
                  (rule "commuteUnion" (formula "82") (term "0,1,0,0,1,1,0"))
                  (rule "commuteUnion" (formula "82") (term "0,1,0,0,1,0"))
                  (rule "commuteUnion" (formula "5") (term "0,1,0,0,1,0"))
                  (rule "commuteUnion" (formula "1") (term "0,1,0"))
                  (rule "commuteUnion" (formula "4") (term "0,1,0,0,1,1,0"))
                  (rule "commuteUnion" (formula "3") (term "0,1,0,0,1,0"))
                  (rule "commuteUnion" (formula "2") (term "0,1,0"))
                  (rule "commute_and" (formula "5") (term "0,0"))
                  (rule "commute_and" (formula "4") (term "1,0,0"))
                  (rule "commute_and" (formula "3") (term "0,0,0"))
                  (rule "commute_and" (formula "3") (term "1,0,0"))
                  (rule "commute_and" (formula "4") (term "0,0,0"))
                  (rule "commute_and" (formula "4") (term "0,1,0"))
                  (rule "commute_and_2" (formula "4") (term "1,0"))
                  (rule "shift_paren_and" (formula "3") (term "0,0"))
                  (rule "commute_and_2" (formula "3") (term "0,0,0"))
                  (rule "shift_paren_and" (formula "4") (term "0,0"))
                  (rule "commute_and_2" (formula "4") (term "0,0,0"))
                  (rule "associativeLawUnion" (formula "1") (term "0,0,1,0"))
                  (rule "ifElseUnfold" (formula "82") (term "1") (inst "#boolv=x_4"))
                  (rule "variableDeclaration" (formula "82") (term "1") (newnames "x_4"))
                  (rule "associativeLawUnion" (formula "4") (term "1,0,0,1,1,0"))
                  (rule "associativeLawUnion" (formula "82") (term "0,0,1,0,0,1,0"))
                  (rule "associativeLawUnion" (formula "5") (term "0,0,1,0,0,1,0"))
                   (builtin "Use Operation Contract" (formula "82") (newnames "heapBefore_hasRemainingRead,result_0,exc_1") (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::hasRemainingRead(int)].JML normal_behavior operation contract.0"))
                  (branch "Post (hasRemainingRead)"
                      (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "1")))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "55"))
                     (rule "eqSymm" (formula "55"))
                     (rule "assignment" (formula "85") (term "1"))
                      (builtin "One Step Simplification" (formula "85"))
                     (rule "associativeLawUnion" (formula "4") (term "1,0,0,0,0,1,0"))
                     (rule "associativeLawUnion" (formula "85") (term "0,0,1,0,0,1,1,0,0"))
                      (builtin "Use Dependency Contract" (formula "14") (ifInst ""  (formula "85") (term "1,0,1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                     (rule "wellFormedAnon" (formula "58") (term "1,1,0,0,0"))
                     (rule "replace_known_left" (formula "58") (term "0,1,0,0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "84")) (ifInst ""  (formula "25")) (ifInst ""  (formula "19")) (ifInst ""  (formula "18")) (ifInst ""  (formula "32")) (ifInst ""  (formula "14")) (ifInst ""  (formula "32")))
                     (rule "true_left" (formula "58"))
                     (rule "ifElseSplit" (formula "85"))
                     (branch "if x_4 true"
                         (builtin "One Step Simplification" (formula "86"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "variableDeclarationGhostAssign" (formula "86") (term "1"))
                        (rule "variableDeclarationGhost" (formula "86") (term "1") (newnames "heapAtLoopBegin"))
                        (rule "assignment" (formula "86") (term "1"))
                         (builtin "One Step Simplification" (formula "86"))
                         (builtin "Block Contract (Internal)" (formula "86") (newnames "exc_2,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
                        (branch "Validity"
                            (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "31")))
                            (builtin "One Step Simplification" (formula "87"))
                           (rule "eqSymm" (formula "87") (term "0,0,1,0,1"))
                           (rule "variableDeclarationAssign" (formula "87") (term "1"))
                           (rule "variableDeclaration" (formula "87") (term "1") (newnames "exc_2_1"))
                           (rule "assignment" (formula "87") (term "1"))
                            (builtin "One Step Simplification" (formula "87"))
                           (rule "emptyStatement" (formula "87") (term "1"))
                            (builtin "One Step Simplification" (formula "87"))
                           (rule "emptyStatement" (formula "87") (term "1"))
                           (rule "applyEq" (formula "56") (term "1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "tryEmpty" (formula "87") (term "1"))
                           (rule "blockEmptyLabel" (formula "87") (term "1"))
                           (rule "blockEmpty" (formula "87") (term "1"))
                           (rule "methodCallEmpty" (formula "87") (term "1"))
                           (rule "emptyModality" (formula "87") (term "1"))
                           (rule "andRight" (formula "87"))
                           (branch
                               (builtin "One Step Simplification" (formula "87"))
                              (rule "closeTrue" (formula "87"))
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "87"))
                              (rule "closeTrue" (formula "87"))
                           )
                        )
                        (branch "Precondition"
                           (rule "andRight" (formula "86"))
                           (branch
                               (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "31")))
                              (rule "closeTrue" (formula "86"))
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "86"))
                              (rule "wellFormedAnon" (formula "86"))
                              (rule "wellFormedAnon" (formula "86") (term "0"))
                              (rule "replace_known_left" (formula "86") (term "1") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")))
                              (rule "closeTrue" (formula "86"))
                           )
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "87"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "andLeft" (formula "59"))
                           (rule "andLeft" (formula "60"))
                           (rule "andLeft" (formula "59"))
                           (rule "translateJavaSubInt" (formula "61") (term "5,0"))
                           (rule "translateJavaAddInt" (formula "62") (term "0,4,0"))
                           (rule "translateJavaAddInt" (formula "61") (term "0,5,0"))
                           (rule "translateJavaSubInt" (formula "62") (term "4,0"))
                           (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "true_left" (formula "60"))
                           (rule "polySimp_elimSub" (formula "60") (term "5,0"))
                           (rule "mul_literals" (formula "60") (term "1,5,0"))
                           (rule "polySimp_elimSub" (formula "61") (term "4,0"))
                           (rule "mul_literals" (formula "61") (term "1,4,0"))
                           (rule "polySimp_addComm1" (formula "60") (term "5,0"))
                           (rule "polySimp_addComm1" (formula "61") (term "4,0"))
                           (rule "polySimp_addComm0" (formula "60") (term "0,5,0"))
                           (rule "polySimp_addComm0" (formula "61") (term "0,4,0"))
                           (rule "applyEq" (formula "56") (term "1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "elim_double_block_2" (formula "89") (term "1"))
                           (rule "ifUnfold" (formula "89") (term "1") (inst "#boolv=x_4"))
                           (rule "variableDeclaration" (formula "89") (term "1") (newnames "x_5"))
                           (rule "inequality_comparison_simple" (formula "89") (term "1"))
                            (builtin "One Step Simplification" (formula "89"))
                           (rule "replace_known_left" (formula "89") (term "0,0,1,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "89"))
                            (builtin "Use Dependency Contract" (formula "14") (ifInst ""  (formula "89") (term "0,0,1,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                           (rule "ifSplit" (formula "89"))
                           (branch "if x_5 true"
                               (builtin "One Step Simplification" (formula "90"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_5 false"
                               (builtin "One Step Simplification" (formula "90"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "blockEmpty" (formula "89") (term "1"))
                              (rule "variableDeclarationAssign" (formula "89") (term "1"))
                              (rule "variableDeclaration" (formula "89") (term "1") (newnames "read"))
                               (builtin "Use Operation Contract" (formula "89") (newnames "heapBefore_decrement_read,result_1,exc_3,heapAfter_decrement_read,anon_heap_decrement_read") (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::decrement_read(int)].JML normal_behavior operation contract.0"))
                              (branch "Post (decrement_read)"
                                  (builtin "One Step Simplification" (formula "63"))
                                  (builtin "One Step Simplification" (formula "91"))
                                 (rule "expand_inInt" (formula "63") (term "0,1,0,1"))
                                 (rule "replace_int_MIN" (formula "63") (term "0,1,0,1,0,1"))
                                 (rule "replace_int_MAX" (formula "63") (term "1,0,0,1,0,1"))
                                 (rule "andLeft" (formula "63"))
                                 (rule "andLeft" (formula "64"))
                                 (rule "andLeft" (formula "64"))
                                 (rule "andLeft" (formula "66"))
                                 (rule "andLeft" (formula "65"))
                                 (rule "andLeft" (formula "66"))
                                 (rule "andLeft" (formula "65"))
                                 (rule "andLeft" (formula "68"))
                                 (rule "andLeft" (formula "69"))
                                 (rule "translateJavaMulInt" (formula "63") (term "0,1,1,0"))
                                 (rule "eqSymm" (formula "67"))
                                 (rule "translateJavaAddInt" (formula "68") (term "0"))
                                 (rule "translateJavaAddInt" (formula "69") (term "1"))
                                 (rule "eqSymm" (formula "68"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "69") (term "1"))
                                 (rule "polySimp_addComm0" (formula "68") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "66"))
                                 (rule "assignment" (formula "99") (term "1"))
                                  (builtin "One Step Simplification" (formula "99"))
                                  (builtin "Block Contract (Internal)" (formula "99") (newnames "exc_4,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                                 (branch "Validity"
                                     (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "31")))
                                     (builtin "One Step Simplification" (formula "100"))
                                    (rule "eqSymm" (formula "100") (term "0,0,1,0,1"))
                                    (rule "variableDeclarationAssign" (formula "100") (term "1"))
                                    (rule "variableDeclaration" (formula "100") (term "1") (newnames "exc_4_1"))
                                    (rule "assignment" (formula "100") (term "1"))
                                     (builtin "One Step Simplification" (formula "100"))
                                    (rule "emptyStatement" (formula "100") (term "1"))
                                     (builtin "One Step Simplification" (formula "100"))
                                    (rule "emptyStatement" (formula "100") (term "1"))
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "68"))
                                    (rule "applyEq" (formula "60") (term "1,5,0") (ifseqformula "69"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "5,0"))
                                    (rule "polySimp_addComm1" (formula "60") (term "0,5,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,5,0"))
                                    (rule "add_zero_left" (formula "60") (term "0,5,0"))
                                    (rule "applyEq" (formula "61") (term "1,4,0") (ifseqformula "69"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "4,0"))
                                    (rule "polySimp_addComm1" (formula "61") (term "0,4,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,4,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,4,0"))
                                    (rule "applyEq" (formula "69") (term "1,1") (ifseqformula "67"))
                                    (rule "applyEq" (formula "60") (term "1,5,0") (ifseqformula "67"))
                                    (rule "applyEq" (formula "61") (term "1,4,0") (ifseqformula "67"))
                                    (rule "tryEmpty" (formula "100") (term "1"))
                                    (rule "blockEmptyLabel" (formula "100") (term "1"))
                                    (rule "blockEmpty" (formula "100") (term "1"))
                                    (rule "methodCallEmpty" (formula "100") (term "1"))
                                    (rule "emptyModality" (formula "100") (term "1"))
                                    (rule "andRight" (formula "100"))
                                    (branch
                                        (builtin "One Step Simplification" (formula "100"))
                                       (rule "closeTrue" (formula "100"))
                                    )
                                    (branch
                                        (builtin "One Step Simplification" (formula "100"))
                                       (rule "closeTrue" (formula "100"))
                                    )
                                 )
                                 (branch "Precondition"
                                    (rule "andRight" (formula "99"))
                                    (branch
                                        (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "31")))
                                       (rule "closeTrue" (formula "99"))
                                    )
                                    (branch
                                        (builtin "One Step Simplification" (formula "99"))
                                       (rule "wellFormedAnonEQ" (formula "99") (ifseqformula "63"))
                                       (rule "wellFormedAnon" (formula "99") (term "0"))
                                       (rule "wellFormedAnon" (formula "99") (term "0,0"))
                                       (rule "replace_known_left" (formula "99") (term "1") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")))
                                       (rule "closeTrue" (formula "99"))
                                    )
                                 )
                                 (branch "Usage"
                                     (builtin "One Step Simplification" (formula "72"))
                                     (builtin "One Step Simplification" (formula "100"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "1,1,0") (ifseqformula "63"))
                                     (builtin "One Step Simplification" (formula "72"))
                                    (rule "andLeft" (formula "72"))
                                    (rule "andLeft" (formula "72"))
                                    (rule "translateJavaAddInt" (formula "74") (term "0"))
                                    (rule "translateJavaAddInt" (formula "74") (term "0,0"))
                                    (rule "replace_known_left" (formula "73") (term "0") (ifseqformula "72"))
                                     (builtin "One Step Simplification" (formula "73"))
                                    (rule "true_left" (formula "73"))
                                    (rule "polySimp_addComm1" (formula "73") (term "0"))
                                    (rule "polySimp_addComm0" (formula "73") (term "0,0"))
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "68"))
                                    (rule "applyEq" (formula "101") (term "0,1,0,0,0,0") (ifseqformula "68"))
                                    (rule "applyEq" (formula "60") (term "1,5,0") (ifseqformula "69"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "5,0"))
                                    (rule "polySimp_addComm1" (formula "60") (term "0,5,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,5,0"))
                                    (rule "add_zero_left" (formula "60") (term "0,5,0"))
                                    (rule "applyEq" (formula "61") (term "1,4,0") (ifseqformula "69"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "4,0"))
                                    (rule "polySimp_addComm1" (formula "61") (term "0,4,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,4,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,4,0"))
                                    (rule "applyEq" (formula "69") (term "1,1") (ifseqformula "67"))
                                    (rule "applyEq" (formula "60") (term "1,5,0") (ifseqformula "67"))
                                    (rule "applyEq" (formula "61") (term "1,4,0") (ifseqformula "67"))
                                    (rule "elim_double_block_2" (formula "101") (term "1"))
                                    (rule "ifUnfold" (formula "101") (term "1") (inst "#boolv=x_4"))
                                    (rule "variableDeclaration" (formula "101") (term "1") (newnames "x_6"))
                                    (rule "inequality_comparison_simple" (formula "101") (term "1"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "replace_known_left" (formula "101") (term "0,0,1,0") (ifseqformula "72"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "ifSplit" (formula "101"))
                                    (branch "if x_6 true"
                                        (builtin "One Step Simplification" (formula "102"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "if x_6 false"
                                        (builtin "One Step Simplification" (formula "102"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "blockEmpty" (formula "101") (term "1"))
                                       (rule "methodCallUnfoldArguments" (formula "101") (term "1"))
                                       (rule "variableDeclarationAssign" (formula "101") (term "1"))
                                       (rule "variableDeclaration" (formula "101") (term "1") (newnames "var"))
                                       (rule "assignment" (formula "101") (term "1"))
                                        (builtin "One Step Simplification" (formula "101"))
                                       (rule "variableDeclarationAssign" (formula "101") (term "1"))
                                       (rule "variableDeclaration" (formula "101") (term "1") (newnames "var_1"))
                                       (rule "assignmentAdditionInt" (formula "101") (term "1"))
                                       (branch "Overflow check"
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "expand_inInt" (formula "101"))
                                          (rule "replace_int_MAX" (formula "101") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "101") (term "0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "56"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                          (rule "mul_literals" (formula "56") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                          (rule "add_literals" (formula "56") (term "0,0"))
                                          (rule "add_zero_left" (formula "56") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "73") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "73") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "73") (term "0,1,0"))
                                          (rule "mul_literals" (formula "73") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "73") (term "0"))
                                          (rule "polySimp_addComm0" (formula "73") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "101") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "101") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "101") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "101") (term "1"))
                                          (rule "mul_literals" (formula "101") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "101") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "101") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_invertInEq0" (formula "56"))
                                          (rule "times_zero_2" (formula "56") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                          (rule "polySimp_elimOne" (formula "56") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                          (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                          (rule "polySimp_elimOne" (formula "73") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "101") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "101") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,1"))
                                          (rule "mul_literals" (formula "101") (term "0,1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0"))
                                          (rule "qeq_literals" (formula "13") (term "0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                          (rule "leq_literals" (formula "42") (term "0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "43"))
                                          (rule "mul_literals" (formula "23") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "39") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "40"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "42") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "42"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "70"))
                                          (rule "mul_literals" (formula "63") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,1"))
                                          (rule "mul_literals" (formula "63") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "63") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "63") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                          (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0"))
                                          (rule "qeq_literals" (formula "63") (term "0"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "true_left" (formula "63"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "49"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "42"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "39") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                                          (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_and_subsumption3" (formula "4") (term "0,0,0"))
                                          (rule "leq_literals" (formula "4") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                                          (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_and_subsumption3" (formula "47") (term "0,0,0"))
                                          (rule "leq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "nnf_imp2or" (formula "6") (term "0"))
                                          (rule "nnf_imp2or" (formula "18") (term "0"))
                                          (rule "nnf_imp2or" (formula "5") (term "0"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "4") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "47") (term "0"))
                                          (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                          (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "66") (term "1,1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "1,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "97")) (ifInst ""  (formula "70")) (ifInst ""  (formula "54")) (ifInst ""  (formula "69")) (ifInst ""  (formula "24")))
                                          (rule "wellFormedAnonEQ" (formula "66") (term "1,0") (ifseqformula "61"))
                                          (rule "wellFormedAnon" (formula "66") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "66") (term "0,0,1,0"))
                                          (rule "replace_known_left" (formula "66") (term "0,0,0,1,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "60")))
                                          (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "66") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0"))
                                          (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "applyEq" (formula "66") (term "0,1,0,0") (ifseqformula "33"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "66") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "66") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "66") (term "0,0"))
                                          (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "72"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "Contract_axiom_for_elementsToReadCountElementSplitBucket_in_BucketPointers" (formula "58") (term "0"))
                                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "100")) (ifInst ""  (formula "98")) (ifInst ""  (formula "59")) (ifInst ""  (formula "54")) (ifInst ""  (formula "23")))
                                          (rule "wellFormedAnon" (formula "58") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "58") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "58") (term "0,0,0,1,0,0"))
                                          (rule "translateJavaAddInt" (formula "58") (term "1,1,0,1,0,0"))
                                          (rule "replace_known_left" (formula "58") (term "1,1,0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "19")) (ifInst ""  (formula "18")))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "58") (term "0,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "58") (term "1,0,0,0,1,0,1,0"))
                                          (rule "times_zero_1" (formula "58") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "58") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "58") (term "0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "58") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "58") (term "0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "58") (term "1,0,1,0,1,0") (ifseqformula "68"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "58") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "58") (term "0,1,0,1,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,1,0,1,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "58") (term "0,1,0,1,0"))
                                          (rule "qeq_literals" (formula "58") (term "1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "applyEq" (formula "58") (term "0,1,0,0,0") (ifseqformula "32"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "Contract_axiom_for_elementsToReadCountClassEqSplitBucket_in_BucketPointers" (formula "57") (term "0"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "99")) (ifInst ""  (formula "58")) (ifInst ""  (formula "54")) (ifInst ""  (formula "23")))
                                          (rule "wellFormedAnon" (formula "57") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "57") (term "0,1,0"))
                                          (rule "eqSymm" (formula "57") (term "0,1,0,0"))
                                          (rule "translateJavaAddInt" (formula "57") (term "1,1,0,1,1,0,0"))
                                          (rule "translateJavaAddInt" (formula "57") (term "0,0,0,1,1,0,0"))
                                          (rule "replace_known_left" (formula "57") (term "0,0,1,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "57") (term "0,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "57") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "57") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "57") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "57") (term "0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,1,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "57") (term "0,0,0,1,0,1,1,0"))
                                          (rule "add_literals" (formula "57") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "times_zero_1" (formula "57") (term "0,0,0,1,0,1,1,0"))
                                          (rule "add_zero_left" (formula "57") (term "0,0,1,0,1,1,0"))
                                          (rule "applyEq" (formula "57") (term "0,0,1,0") (ifseqformula "51"))
                                          (rule "eqSymm" (formula "57") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEq" (formula "57") (term "1,0,1,0,1,0") (ifseqformula "69"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "57") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "57") (term "0,1,0,1,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,1,0,1,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "57") (term "0,1,0,1,0"))
                                          (rule "qeq_literals" (formula "57") (term "1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEq" (formula "57") (term "0,1,0,0,0") (ifseqformula "32"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "59")))
                                          (rule "true_left" (formula "57"))
                                          (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "68") (term "0"))
                                           (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "99")) (ifInst ""  (formula "54")) (ifInst ""  (formula "23")))
                                          (rule "wellFormedAnon" (formula "68") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "68") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "68") (term "2,0,1,0,1,1"))
                                          (rule "translateJavaAddInt" (formula "68") (term "2,1,1,0,0,1,1"))
                                          (rule "replace_known_left" (formula "68") (term "1,0,1,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "19")) (ifInst ""  (formula "6")))
                                          (rule "polySimp_addComm0" (formula "68") (term "2,0,1,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "68") (term "2,1,1,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "68") (term "0,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "68"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "0,1,1,1,1"))
                                          (rule "applyEq" (formula "68") (term "0,0,0,1,1,1") (ifseqformula "69"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,1,1,1"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,0,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "68") (term "2,0,0,1,1,1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,1,1,1") (ifseqformula "69"))
                                          (rule "eqSymm" (formula "68") (term "1,0,1,1,1"))
                                          (rule "applyEq" (formula "68") (term "0,0,1,1,1,1,1") (ifseqformula "69"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,0,0,1,1") (ifseqformula "69"))
                                          (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0,0,0,1,1"))
                                          (rule "applyEq" (formula "68") (term "2,0,1,0,1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,0,1,1") (ifseqformula "69"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,0,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "68") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "68"))
                                          (rule "Definition_axiom_for_elementsToReadCountClassEqSplitBucket_in_de_wiesler_BucketPointers" (formula "57") (term "0") (inst "bucket=bucket_1") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "expand_inInt" (formula "57") (term "1,0,0"))
                                          (rule "replace_int_MAX" (formula "57") (term "1,0,1,0,0"))
                                          (rule "replace_int_MIN" (formula "57") (term "0,1,1,0,0"))
                                          (rule "eqSymm" (formula "57") (term "1,0"))
                                          (rule "translateJavaAddInt" (formula "57") (term "0,1,0"))
                                          (rule "translateJavaCastInt" (formula "57") (term "0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "57") (term "4,1,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "57") (term "3,1,2,0,0,1,0"))
                                          (rule "polySimp_homoEq" (formula "57") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "57") (term "1,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "57") (term "0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "57") (term "1,0,1,0,1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "57") (term "0,1,0,0,1,0,0,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "57") (term "1,4,0,0,0,0,1,0") (ifseqformula "69"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "4,0,0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "57") (term "0,4,0,0,0,0,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "57") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0"))
                                          (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "70") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "expand_inInt" (formula "70") (term "1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "70") (term "1,0,1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "70") (term "0,1,1,0,0,1"))
                                          (rule "andLeft" (formula "70"))
                                          (rule "andLeft" (formula "70"))
                                          (rule "andLeft" (formula "70"))
                                          (rule "andLeft" (formula "72"))
                                          (rule "andLeft" (formula "70"))
                                          (rule "andLeft" (formula "70"))
                                          (rule "andLeft" (formula "72"))
                                          (rule "andLeft" (formula "72"))
                                          (rule "andLeft" (formula "72"))
                                          (rule "translateJavaAddInt" (formula "76") (term "1"))
                                          (rule "translateJavaCastInt" (formula "77") (term "0"))
                                          (rule "translateJavaMulInt" (formula "71") (term "0"))
                                          (rule "translateJavaMulInt" (formula "70") (term "1"))
                                          (rule "translateJavaCastInt" (formula "74") (term "0"))
                                          (rule "translateJavaCastInt" (formula "73") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                          (rule "polySimp_addComm0" (formula "76") (term "1"))
                                          (rule "castedGetAny" (formula "77") (term "0"))
                                          (rule "castedGetAny" (formula "74") (term "0"))
                                          (rule "castedGetAny" (formula "73") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "79") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "72"))
                                          (rule "inEqSimp_commuteLeq" (formula "70"))
                                          (rule "inEqSimp_commuteLeq" (formula "73"))
                                          (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "74") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "32"))
                                          (rule "inEqSimp_commuteLeq" (formula "71"))
                                          (rule "applyEq" (formula "73") (term "0") (ifseqformula "44"))
                                          (rule "inEqSimp_commuteGeq" (formula "73"))
                                          (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "78") (term "0,1,0,0,1,0,0,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "73") (term "0") (ifseqformula "44"))
                                          (rule "inEqSimp_homoInEq0" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "73") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "73") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "73") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "73") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "73") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "73") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "73") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "78") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                          (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                          (rule "polySimp_elimOne" (formula "73") (term "0"))
                                          (rule "elimGcdGeq_antec" (formula "70") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "70") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "add_zero_right" (formula "70") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "70") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "70") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                          (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "70") (term "0,0"))
                                          (rule "leq_literals" (formula "70") (term "0"))
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "70"))
                                          (rule "leq_literals" (formula "50") (term "0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "45"))
                                          (rule "times_zero_1" (formula "71") (term "0,0"))
                                          (rule "add_zero_left" (formula "71") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1"))
                                          (rule "polySimp_elimOne" (formula "71") (term "1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "29"))
                                          (rule "andLeft" (formula "29"))
                                          (rule "notLeft" (formula "30"))
                                          (rule "notLeft" (formula "29"))
                                          (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "80"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "30"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "eqSymm" (formula "32"))
                                          (rule "translateJavaSubInt" (formula "35") (term "0,2,1"))
                                          (rule "translateJavaSubInt" (formula "35") (term "0,2,0"))
                                          (rule "translateJavaMulInt" (formula "32") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "35") (term "0,2,1"))
                                          (rule "mul_literals" (formula "35") (term "1,0,2,1"))
                                          (rule "polySimp_elimSub" (formula "35") (term "0,2,0"))
                                          (rule "mul_literals" (formula "35") (term "1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,2,1"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,2,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "30"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "32") (term "1") (ifseqformula "55"))
                                          (rule "inEqSimp_subsumption1" (formula "74") (ifseqformula "30"))
                                          (rule "leq_literals" (formula "74") (term "0"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "true_left" (formula "74"))
                                          (rule "inEqSimp_subsumption0" (formula "54") (ifseqformula "31"))
                                          (rule "leq_literals" (formula "54") (term "0"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "31"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "72") (term "0"))
                                          (rule "translateJavaMulInt" (formula "72") (term "0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "0,2,0"))
                                          (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=arr_0"))
                                          (rule "simplifySelectOfAnon" (formula "72"))
                                           (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "86")) (ifInst ""  (formula "11")))
                                          (rule "polySimp_homoEq" (formula "73"))
                                          (rule "polySimp_addComm1" (formula "73") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                          (rule "polySimp_rightDist" (formula "73") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                          (rule "mul_literals" (formula "73") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "73") (term "1,1"))
                                          (rule "applyEq" (formula "66") (term "0") (ifseqformula "73"))
                                          (rule "inEqSimp_homoInEq0" (formula "66"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                                          (rule "mul_literals" (formula "66") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "66") (term "0"))
                                          (rule "add_literals" (formula "66") (term "0,0"))
                                          (rule "applyEq" (formula "114") (term "0,1") (ifseqformula "73"))
                                          (rule "inEqSimp_homoInEq1" (formula "114") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "114") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "114") (term "1,0,1"))
                                          (rule "mul_literals" (formula "114") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "114") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "114") (term "0,0,1"))
                                          (rule "add_literals" (formula "114") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "114") (term "0,0") (ifseqformula "73"))
                                          (rule "inEqSimp_homoInEq0" (formula "114") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "114") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "114") (term "1,0,0"))
                                          (rule "mul_literals" (formula "114") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "114") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "114") (term "0,0,0"))
                                          (rule "add_literals" (formula "114") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "60") (term "1,4,1,2,0,1,0") (ifseqformula "73"))
                                          (rule "polySimp_addComm0" (formula "60") (term "4,1,2,0,1,0"))
                                          (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "73"))
                                          (rule "applyEq" (formula "71") (term "1,1,1,0,0,1,1") (ifseqformula "73"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "71") (term "0,1,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "71") (term "1,1,0,0,1,1"))
                                          (rule "applyEq" (formula "62") (term "1,4,0") (ifseqformula "73"))
                                          (rule "polySimp_addComm0" (formula "62") (term "4,0"))
                                          (rule "applyEq" (formula "83") (term "0") (ifseqformula "73"))
                                          (rule "inEqSimp_homoInEq0" (formula "83"))
                                          (rule "polySimp_mulComm0" (formula "83") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "83") (term "1,0"))
                                          (rule "mul_literals" (formula "83") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "83") (term "0"))
                                          (rule "polySimp_addComm1" (formula "83") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "83") (term "0,0,0"))
                                          (rule "add_literals" (formula "83") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "83") (term "0,0,0"))
                                          (rule "applyEq" (formula "67") (term "0") (ifseqformula "73"))
                                          (rule "inEqSimp_homoInEq1" (formula "67"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1,0"))
                                          (rule "mul_literals" (formula "67") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "67") (term "0"))
                                          (rule "add_literals" (formula "67") (term "0,0"))
                                          (rule "applyEq" (formula "71") (term "1,1,0,0,1,1,1") (ifseqformula "73"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "1,0,0,1,1,1"))
                                          (rule "add_literals" (formula "71") (term "0,1,0,0,1,1,1"))
                                          (rule "add_zero_left" (formula "71") (term "1,0,0,1,1,1"))
                                          (rule "applyEq" (formula "71") (term "1,1,1,0,0,0,1,1") (ifseqformula "73"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "1,1,0,0,0,1,1"))
                                          (rule "add_literals" (formula "71") (term "0,1,1,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "71") (term "1,1,0,0,0,1,1"))
                                          (rule "applyEq" (formula "71") (term "1,0,0,1,1,1,1,1") (ifseqformula "73"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "71") (term "0,0,0,1,1,1,1,1"))
                                          (rule "add_zero_left" (formula "71") (term "0,0,1,1,1,1,1"))
                                          (rule "applyEq" (formula "68") (term "1") (ifseqformula "73"))
                                          (rule "applyEq" (formula "71") (term "1,1,1,0,1,1,1") (ifseqformula "73"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "1,1,0,1,1,1"))
                                          (rule "add_literals" (formula "71") (term "0,1,1,0,1,1,1"))
                                          (rule "add_zero_left" (formula "71") (term "1,1,0,1,1,1"))
                                          (rule "applyEq" (formula "60") (term "1,4,0,0,1,1,0") (ifseqformula "73"))
                                          (rule "polySimp_addComm1" (formula "60") (term "4,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0,4,0,0,1,1,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,4,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "60") (term "0,4,0,0,1,1,0"))
                                          (rule "applyEq" (formula "60") (term "1,3,0,0,1,1,0") (ifseqformula "73"))
                                          (rule "polySimp_addComm0" (formula "60") (term "3,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                                          (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                          (rule "polySimp_elimOne" (formula "66") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "114") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "114") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "114") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "114") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "114") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "114") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "83"))
                                          (rule "polySimp_mulComm0" (formula "83") (term "1"))
                                          (rule "polySimp_rightDist" (formula "83") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "83") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "83") (term "1,1"))
                                          (rule "polySimp_mulAssoc" (formula "83") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "83") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "83") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "83") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                          (rule "polySimp_elimOne" (formula "67") (term "0"))
                                          (rule "elementOfUnion" (formula "72") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "72") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "72") (term "0,0,1,0,0") (ifseqformula "92"))
                                           (builtin "One Step Simplification" (formula "72"))
                                          (rule "elementOfUnion" (formula "72") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "72"))
                                          (rule "applyEqReverse" (formula "73") (term "1,1") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "71") (term "1,0,0,1,1,1") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "68") (term "1,1") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "60") (term "1,0,4,1,2,0,1,0") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "71") (term "0,0,1,1,1,1,1") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "83") (term "0,1") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "60") (term "1,0,3,0,0,1,1,0") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "60") (term "0,4,0,0,1,1,0") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "114") (term "0,1,1,1") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "71") (term "1,1,0,0,1,1") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "114") (term "0,1,1,0") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "71") (term "1,1,0,0,0,1,1") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "62") (term "1,0,4,0") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "61") (term "1,1,0,0") (ifseqformula "72"))
                                          (rule "applyEqReverse" (formula "71") (term "1,1,0,1,1,1") (ifseqformula "72"))
                                          (rule "hideAuxiliaryEq" (formula "72"))
                                          (rule "polySimp_homoEq" (formula "72"))
                                          (rule "polySimp_addComm1" (formula "60") (term "4,1,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "82") (term "1"))
                                          (rule "polySimp_addComm1" (formula "60") (term "3,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "60") (term "4,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "62") (term "4,0"))
                                          (rule "polySimp_addComm1" (formula "72") (term "0"))
                                          (rule "inEqSimp_commuteGeq" (formula "71") (term "0,0,1,1,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "113") (term "1"))
                                          (rule "polySimp_addComm1" (formula "113") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "113") (term "0"))
                                          (rule "polySimp_addComm1" (formula "113") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "82"))
                                          (rule "polySimp_addComm1" (formula "82") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "72"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "1"))
                                          (rule "polySimp_rightDist" (formula "72") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                                          (rule "mul_literals" (formula "72") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "72") (term "1,1"))
                                          (rule "applyEq" (formula "71") (term "0,0,0,1,1,1") (ifseqformula "72"))
                                          (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,1,1,1"))
                                          (rule "applyEq" (formula "67") (term "0") (ifseqformula "72"))
                                          (rule "inEqSimp_homoInEq1" (formula "67"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1,0"))
                                          (rule "mul_literals" (formula "67") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "67") (term "0"))
                                          (rule "add_literals" (formula "67") (term "0,0"))
                                          (rule "applyEq" (formula "71") (term "1,1,0,0,1,1") (ifseqformula "72"))
                                          (rule "applyEq" (formula "113") (term "0,1,0,1") (ifseqformula "72"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,0,1"))
                                          (rule "mul_literals" (formula "113") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "113") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "113") (term "0,0,1"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "113") (term "0,1,0,0") (ifseqformula "72"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,0,0"))
                                          (rule "mul_literals" (formula "113") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "113") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "113") (term "0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "71") (term "0,0,1,1,1,1,1") (ifseqformula "72"))
                                          (rule "applyEq" (formula "82") (term "1,0") (ifseqformula "72"))
                                          (rule "polySimp_addAssoc" (formula "82") (term "0"))
                                          (rule "polySimp_addComm1" (formula "82") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "82") (term "0,0,0"))
                                          (rule "applyEq" (formula "66") (term "0") (ifseqformula "72"))
                                          (rule "inEqSimp_homoInEq0" (formula "66"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                                          (rule "mul_literals" (formula "66") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "66") (term "0"))
                                          (rule "add_literals" (formula "66") (term "0,0"))
                                          (rule "applyEq" (formula "71") (term "1,1,0,0,0,1,1") (ifseqformula "72"))
                                          (rule "applyEq" (formula "62") (term "1,4,0") (ifseqformula "72"))
                                          (rule "polySimp_addAssoc" (formula "62") (term "4,0"))
                                          (rule "polySimp_addComm1" (formula "62") (term "0,4,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,4,0"))
                                          (rule "add_zero_left" (formula "62") (term "0,4,0"))
                                          (rule "applyEq" (formula "61") (term "1,1,0,0") (ifseqformula "72"))
                                          (rule "polySimp_addAssoc" (formula "61") (term "1,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,1,0,0"))
                                          (rule "add_zero_left" (formula "61") (term "1,0,0"))
                                          (rule "applyEq" (formula "60") (term "1,4,1,2,0,1,0") (ifseqformula "72"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "4,1,2,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "60") (term "0,4,1,2,0,1,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,4,1,2,0,1,0"))
                                          (rule "add_zero_left" (formula "60") (term "0,4,1,2,0,1,0"))
                                          (rule "applyEq" (formula "71") (term "1,1,0,1,1,1") (ifseqformula "72"))
                                          (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "72"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "1"))
                                          (rule "add_literals" (formula "68") (term "0,1"))
                                          (rule "add_zero_left" (formula "68") (term "1"))
                                          (rule "applyEq" (formula "60") (term "1,3,0,0,1,1,0") (ifseqformula "72"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "3,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "60") (term "0,3,0,0,1,1,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,3,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "60") (term "0,3,0,0,1,1,0"))
                                          (rule "applyEq" (formula "60") (term "1,4,0,0,1,1,0") (ifseqformula "72"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "4,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "60") (term "0,4,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                          (rule "polySimp_elimOne" (formula "67") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "113") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "113") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "113") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "113") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "82"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "1"))
                                          (rule "polySimp_rightDist" (formula "82") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "82") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "82") (term "0,1"))
                                          (rule "mul_literals" (formula "82") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                                          (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                          (rule "polySimp_elimOne" (formula "66") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "67") (ifseqformula "82"))
                                          (rule "mul_literals" (formula "67") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "67") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                          (rule "mul_literals" (formula "67") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "43"))
                                          (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                          (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "67") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                          (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "67") (term "0,0"))
                                          (rule "qeq_literals" (formula "67") (term "0"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "true_left" (formula "67"))
                                          (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "68") (term "0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "81")) (ifInst ""  (formula "111")) (ifInst ""  (formula "81")) (ifInst ""  (formula "23")))
                                          (rule "wellFormedAnonEQ" (formula "68") (term "1,0") (ifseqformula "64"))
                                          (rule "wellFormedAnon" (formula "68") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "68") (term "0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "68") (term "2,0,1,0,1"))
                                          (rule "translateJavaAddInt" (formula "68") (term "2,1,1,0,0,1"))
                                          (rule "replace_known_left" (formula "68") (term "1,1,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "19")) (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                                          (rule "polySimp_addComm0" (formula "68") (term "2,1,1,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "68") (term "2,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0"))
                                          (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "68"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,0,1") (ifseqformula "69"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,0,1"))
                                          (rule "applyEq" (formula "68") (term "0,0,0,1,1,1,1") (ifseqformula "69"))
                                          (rule "applyEq" (formula "68") (term "2,0,0,1,1,1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,0,0,1") (ifseqformula "69"))
                                          (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0,0,0,1"))
                                          (rule "applyEq" (formula "68") (term "2,0,1,0,1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,1,1") (ifseqformula "69"))
                                          (rule "eqSymm" (formula "68") (term "1,0,1,1"))
                                          (rule "applyEq" (formula "68") (term "0,0,0,1,1") (ifseqformula "69"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "68") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "0,0"))
                                          (rule "replace_known_left" (formula "68") (term "0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "68"))
                                          (rule "andLeft" (formula "68"))
                                          (rule "andLeft" (formula "68"))
                                          (rule "andLeft" (formula "70"))
                                          (rule "andLeft" (formula "68"))
                                          (rule "andLeft" (formula "72"))
                                          (rule "andLeft" (formula "68"))
                                          (rule "andLeft" (formula "74"))
                                          (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "69"))
                                          (rule "mul_literals" (formula "68") (term "0,0"))
                                          (rule "add_zero_left" (formula "68") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "68"))
                                          (rule "leq_literals" (formula "67") (term "0"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "true_left" (formula "67"))
                                          (rule "inEqSimp_exactShadow3" (formula "67") (ifseqformula "90"))
                                          (rule "times_zero_1" (formula "67") (term "0,0"))
                                          (rule "add_zero_left" (formula "67") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1"))
                                          (rule "mul_literals" (formula "67") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "67"))
                                          (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0"))
                                          (rule "qeq_literals" (formula "43") (term "0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "inEqSimp_exactShadow3" (formula "66") (ifseqformula "45"))
                                          (rule "polySimp_rightDist" (formula "66") (term "0,0"))
                                          (rule "mul_literals" (formula "66") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "66") (term "0"))
                                          (rule "add_literals" (formula "66") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                                          (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                          (rule "polySimp_elimOne" (formula "66") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "42") (ifseqformula "66"))
                                          (rule "leq_literals" (formula "42") (term "0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "76") (term "0"))
                                          (rule "translateJavaMulInt" (formula "76") (term "0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "76") (term "0,2,0"))
                                          (rule "pullOutSelect" (formula "76") (term "0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "94")) (ifInst ""  (formula "11")))
                                          (rule "replaceKnownSelect_taclet01201200101012_0" (formula "76") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01201200101012_1" (formula "76") (term "2,0"))
                                          (rule "eqSymm" (formula "77"))
                                          (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "77"))
                                          (rule "hideAuxiliaryEq" (formula "77"))
                                          (rule "elementOfSingleton" (formula "76") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "76"))
                                          (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "51") (term "1"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "translateJavaUnaryMinusInt" (formula "51") (term "1,1"))
                                          (rule "neg_literal" (formula "51") (term "1,1"))
                                          (rule "translateJavaSubInt" (formula "51") (term "0,1"))
                                          (rule "translateJavaAddInt" (formula "51") (term "0,0,1"))
                                          (rule "polySimp_elimSub" (formula "51") (term "0,1"))
                                          (rule "mul_literals" (formula "51") (term "1,0,1"))
                                          (rule "polySimp_addLiterals" (formula "51") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "51") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "51") (term "0,0,1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "14"))
                                          (rule "andLeft" (formula "14"))
                                          (rule "notLeft" (formula "14"))
                                          (rule "notLeft" (formula "14"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "13"))
                                          (rule "notLeft" (formula "13"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "75") (term "0"))
                                           (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "116")) (ifInst ""  (formula "52")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnon" (formula "75") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "75") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "75") (term "1,0,1,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
                                          (rule "inEqSimp_ltToLeq" (formula "75") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "75") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "75") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "applyEq" (formula "75") (term "0,0,1,1") (ifseqformula "76"))
                                          (rule "applyEq" (formula "75") (term "0,0,1,1,1") (ifseqformula "76"))
                                          (rule "applyEq" (formula "75") (term "0,1,0,0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,1,1"))
                                          (rule "mul_literals" (formula "75") (term "1,0,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "75") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "75") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "75") (term "0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "inEqSimp_subsumption1" (formula "75") (term "0,1,1") (ifseqformula "51"))
                                          (rule "leq_literals" (formula "75") (term "0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "76") (term "0"))
                                          (rule "translateJavaSubInt" (formula "76") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "76") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0"))
                                          (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "76") (term "1,1"))
                                          (rule "translateJavaSubInt" (formula "76") (term "1,1,1"))
                                          (rule "polySimp_homoEq" (formula "76"))
                                          (rule "polySimp_elimSub" (formula "76") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "76") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "76") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "76") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "76"))
                                          (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                          (rule "polySimp_elimOne" (formula "76") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "76") (term "1,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "76") (term "1,0,1,1"))
                                          (rule "mul_literals" (formula "76") (term "0,1,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "76") (term "1,1,0,1,1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "25"))
                                          (rule "notLeft" (formula "25"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "85"))
                                          (rule "notLeft" (formula "85"))
                                          (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "51") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "80")) (ifInst ""  (formula "83")))
                                          (rule "expand_inInt" (formula "51") (term "1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "51") (term "1,0,1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "51") (term "0,1,1,0,0,1"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "andLeft" (formula "52"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "andLeft" (formula "53"))
                                          (rule "translateJavaCastInt" (formula "57") (term "0"))
                                          (rule "translateJavaAddInt" (formula "56") (term "1"))
                                          (rule "translateJavaCastInt" (formula "55") (term "0"))
                                          (rule "translateJavaMulInt" (formula "52") (term "0"))
                                          (rule "translateJavaMulInt" (formula "51") (term "1"))
                                          (rule "translateJavaCastInt" (formula "54") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                          (rule "polySimp_addComm0" (formula "56") (term "1"))
                                          (rule "castedGetAny" (formula "57") (term "0"))
                                          (rule "castedGetAny" (formula "55") (term "0"))
                                          (rule "castedGetAny" (formula "54") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "53"))
                                          (rule "inEqSimp_commuteLeq" (formula "51"))
                                          (rule "inEqSimp_commuteLeq" (formula "53"))
                                          (rule "applyEq" (formula "86") (term "0") (ifseqformula "55"))
                                          (rule "polySimp_homoEq" (formula "86"))
                                          (rule "polySimp_mulComm0" (formula "86") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "86") (term "1,0"))
                                          (rule "mul_literals" (formula "86") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "86") (term "0"))
                                          (rule "polySimp_addComm1" (formula "86") (term "0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "86") (term "0,0"))
                                          (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "33"))
                                          (rule "inEqSimp_commuteLeq" (formula "52"))
                                          (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "55") (term "0,1,0,0,1,0,0,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "85") (term "0,1,0") (ifseqformula "33"))
                                          (rule "polySimp_pullOutFactor1" (formula "85") (term "0"))
                                          (rule "add_literals" (formula "85") (term "1,0"))
                                          (rule "times_zero_1" (formula "85") (term "0"))
                                           (builtin "One Step Simplification" (formula "85"))
                                          (rule "true_left" (formula "85"))
                                          (rule "applyEq" (formula "52") (term "0") (ifseqformula "43"))
                                          (rule "inEqSimp_commuteGeq" (formula "52"))
                                          (rule "applyEq" (formula "52") (term "0") (ifseqformula "43"))
                                          (rule "inEqSimp_homoInEq0" (formula "52"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "52") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "51") (ifseqformula "26"))
                                          (rule "greater_literals" (formula "51") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "mul_literals" (formula "51") (term "1,0"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "25") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "81")) (ifInst ""  (formula "83")))
                                          (rule "expand_inInt" (formula "25") (term "1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,1"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "translateJavaCastInt" (formula "31") (term "0"))
                                          (rule "translateJavaAddInt" (formula "30") (term "1"))
                                          (rule "translateJavaMulInt" (formula "25") (term "1"))
                                          (rule "translateJavaMulInt" (formula "26") (term "0"))
                                          (rule "translateJavaCastInt" (formula "29") (term "0"))
                                          (rule "translateJavaCastInt" (formula "28") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "0"))
                                          (rule "polySimp_addComm0" (formula "30") (term "1"))
                                          (rule "castedGetAny" (formula "31") (term "0"))
                                          (rule "castedGetAny" (formula "29") (term "0"))
                                          (rule "castedGetAny" (formula "28") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27"))
                                          (rule "inEqSimp_commuteLeq" (formula "25"))
                                          (rule "inEqSimp_commuteLeq" (formula "27"))
                                          (rule "applyEq" (formula "29") (term "0") (ifseqformula "56"))
                                          (rule "polySimp_homoEq" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0"))
                                          (rule "apply_eq_monomials" (formula "25") (term "0") (ifseqformula "38"))
                                          (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "0"))
                                          (rule "apply_eq_monomials" (formula "26") (term "0") (ifseqformula "38"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26"))
                                          (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "37"))
                                          (rule "polySimp_pullOutFactor2" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,0"))
                                          (rule "times_zero_1" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "36"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "29"))
                                          (rule "greater_literals" (formula "25") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "mul_literals" (formula "25") (term "1,0"))
                                          (rule "leq_literals" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "45"))
                                          (rule "inEqSimp_commuteGeq" (formula "25"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "44"))
                                          (rule "inEqSimp_homoInEq0" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "nnf_notAnd" (formula "3") (term "0,0,0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                          (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                                          (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "50") (term "0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "1,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "115")) (ifInst ""  (formula "51")) (ifInst ""  (formula "75")) (ifInst ""  (formula "73")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "50") (term "1,0") (ifseqformula "60"))
                                          (rule "wellFormedAnon" (formula "50") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "50") (term "0,0,1,0"))
                                          (rule "replace_known_left" (formula "50") (term "1,0,1,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "59")))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,0,0") (ifseqformula "33"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "50") (term "0"))
                                          (rule "translateJavaSubInt" (formula "50") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "50") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                          (rule "Definition_axiom_for_elementsToReadCountElement_in_de_wiesler_BucketPointers" (formula "4") (term "1,1,0") (inst "b=b"))
                                          (rule "eqSymm" (formula "4") (term "1,0"))
                                          (rule "translateJavaCastInt" (formula "4") (term "0,1,0"))
                                          (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "33"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_BucketPointers" (formula "14") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_homoEq" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                          (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "3") (term "0,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "3") (term "0,1,1,0"))
                                          (rule "polySimp_homoEq" (formula "3") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,0,1,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "3") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,1,1,0"))
                                          (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "3") (term "0,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "translateJavaAddInt" (formula "3") (term "4,0,1,0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "3") (term "3,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,1,0"))
                                          (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "12") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "translateJavaSubInt" (formula "12") (term "0,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
                                          (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "2") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "translateJavaSubInt" (formula "2") (term "0,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "2") (term "0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "2") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0"))
                                          (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "13") (term "1,1,1,0") (inst "b=b_1"))
                                          (rule "eqSymm" (formula "13") (term "1,1,0"))
                                          (rule "translateJavaCastInt" (formula "13") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,1,0") (ifseqformula "33"))
                                          (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "13") (term "0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "translateJavaAddInt" (formula "13") (term "3,0,2,1,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "13") (term "0,0,0,1,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "13") (term "4,0,2,1,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "13") (term "4,0,0,1,1,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "13") (term "3,0,0,1,1,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "13") (term "0,4,0,0,1,1,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "4,0,0,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "13") (term "1,4,0,0,1,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "4,0,0,1,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,4,0,0,1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0,1,0"))
                                          (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "45") (term "0,1,1,0") (inst "b=b_1"))
                                          (rule "translateJavaCastInt" (formula "45") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "45") (term "1,0,1,1,0") (ifseqformula "33"))
                                          (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "45") (term "0,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "translateJavaAddInt" (formula "45") (term "4,0,1,0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "45") (term "3,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,0"))
                                          (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "74") (term "0,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "115")) (ifInst ""  (formula "75")) (ifInst ""  (formula "72")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "74") (term "1,0") (ifseqformula "59"))
                                          (rule "wellFormedAnon" (formula "74") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "74") (term "0,0,1,0"))
                                          (rule "replace_known_left" (formula "74") (term "1,1,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "5")))
                                          (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "74") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "74") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "applyEq" (formula "74") (term "0,1,0,0,0") (ifseqformula "33"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "74") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "74") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "74") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "74") (term "0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "75") (term "0"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "translateJavaMod" (formula "75") (term "0"))
                                          (rule "jmod_axiom" (formula "75") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "75"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                          (rule "newSym_eq" (formula "75") (inst "l=l_0") (inst "newSymDef=mul(de.wiesler.BucketPointers::toReadCountOfBucket(heapAfter_decrement_read,
                                                   bucket_pointers,
                                                   bucket_0),
    Z(0(#)))"))
                                          (rule "times_zero_1" (formula "75") (term "1,1"))
                                          (rule "add_zero_right" (formula "75") (term "1"))
                                          (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "75"))
                                          (rule "eqSymm" (formula "76"))
                                          (rule "applyEq" (formula "74") (term "0,1,1") (ifseqformula "76"))
                                          (rule "applyEq" (formula "77") (term "1,0,0,1,1") (ifseqformula "76"))
                                          (rule "applyEq" (formula "75") (term "0,0") (ifseqformula "76"))
                                          (rule "elimGcdGeq" (formula "74") (term "1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "74") (term "0,0,0,1,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0,1,1"))
                                          (rule "sub_literals" (formula "74") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "74") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "74") (term "0,0,0,0,1,0,1,1"))
                                          (rule "polySimp_addLiterals" (formula "74") (term "0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "74") (term "0,0,0,1,0,1,1"))
                                          (rule "add_zero_right" (formula "74") (term "0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "74") (term "0,0,1,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0,0,1,1"))
                                          (rule "add_literals" (formula "74") (term "1,1,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "74") (term "1,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "74") (term "0,0,0,1,1"))
                                          (rule "qeq_literals" (formula "74") (term "0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "polySimp_pullOutFactor0" (formula "74") (term "0,0,1,1"))
                                          (rule "add_literals" (formula "74") (term "1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "74") (term "0,0,1,1"))
                                          (rule "leq_literals" (formula "74") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "nnf_imp2or" (formula "86") (term "0"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "56") (term "1,0"))
                                          (rule "replace_known_right" (formula "56") (term "0,1,0") (ifseqformula "91"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,0"))
                                          (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "79") (term "0,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "117")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnon" (formula "79") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "79") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "79") (term "2,1,1,0,1,1,1,1"))
                                          (rule "translateJavaSubInt" (formula "79") (term "2,0,1,0,1,1,1,1,1"))
                                          (rule "replace_known_left" (formula "79") (term "1,0,1,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
                                          (rule "polySimp_elimSub" (formula "79") (term "2,0,1,0,1,1,1,1,1"))
                                          (rule "mul_literals" (formula "79") (term "1,2,0,1,0,1,1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "79") (term "2,1,1,0,1,1,1,1"))
                                          (rule "add_literals" (formula "79") (term "0,2,1,1,0,1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "79") (term "2,0,1,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "79") (term "0,2,0,1,0,1,1,1,1,1"))
                                          (rule "add_zero_left" (formula "79") (term "2,0,1,0,1,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "79") (term "0,0,0,1,1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,1,1,1,1"))
                                          (rule "add_literals" (formula "79") (term "0,0,0,0,0,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,1,1,1,1,1"))
                                          (rule "add_zero_right" (formula "79") (term "0,0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,1,1,1,1,1"))
                                          (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "79") (term "0,0,0,0,0,1,1,1,1,1"))
                                          (rule "add_zero_left" (formula "79") (term "0,0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "79") (term "1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "79") (term "1,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "79") (term "1,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "79") (term "1,0,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "79") (term "1,0,1,1,1,1,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "79") (term "0,0,0"))
                                          (rule "times_zero_2" (formula "79") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "79") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "79") (term "0,1,0,0") (ifseqformula "33"))
                                          (rule "replace_known_left" (formula "79") (term "1,0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "79"))
                                          (rule "applyEq" (formula "79") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "79") (term "2,0,1,0,1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "79") (term "2,0,1,0,0,1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "79") (term "0,1,0,0,1,1,1,1,1") (ifseqformula "33"))
                                          (rule "replace_known_left" (formula "79") (term "1,0,0,1,1,1,1,1") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "79"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "79") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "79") (term "0,0,0,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "79") (term "0,0,0,1,1,1,1"))
                                          (rule "inEqSimp_invertInEq0" (formula "79") (term "0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "79") (term "0,0,0,1,1,1,1,1"))
                                          (rule "times_zero_2" (formula "79") (term "1,0,0,1,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "79") (term "0,0,0,1,1,1,1,1"))
                                          (rule "replace_known_left" (formula "79") (term "0,0,1,1,1,1,1") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "79"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0"))
                                          (rule "mul_literals" (formula "79") (term "1,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "79") (term "0,0") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "79") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "79"))
                                          (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "80") (term "0,1,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "118")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnon" (formula "80") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "80") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "80") (term "2,1,1,0,1,1,1,1"))
                                          (rule "translateJavaSubInt" (formula "80") (term "2,0,1,0,1,1,1,1,1"))
                                          (rule "replace_known_left" (formula "80") (term "1,1,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
                                          (rule "polySimp_elimSub" (formula "80") (term "2,0,1,0,1,1,1,1,1"))
                                          (rule "mul_literals" (formula "80") (term "1,2,0,1,0,1,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "80") (term "2,1,1,0,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "80") (term "2,0,1,0,1,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,1,1,1,1,1"))
                                          (rule "add_zero_right" (formula "80") (term "0,0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "80") (term "0,0,0,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "80") (term "1,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "80") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "80"))
                                          (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "80") (term "1,0,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "80") (term "1,0,0,1,1,1,1,1"))
                                          (rule "applyEq" (formula "80") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "80") (term "2,0,1,0,1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "80") (term "0,0,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "80") (term "0,1,0,0,1,1,1,1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "80") (term "2,0,1,0,0,1,1") (ifseqformula "33"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "80") (term "0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "80") (term "0,0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "80") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "80") (term "0,0,0,1,1,1,1"))
                                          (rule "replace_known_left" (formula "80") (term "0,0,1,1,1,1") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "80"))
                                          (rule "inEqSimp_subsumption1" (formula "80") (term "1,0,0,1,1,1,1,1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "80") (term "0,1,0,0,1,1,1,1,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,1,0,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "80") (term "1,1,0,0,1,0,0,1,1,1,1,1"))
                                          (rule "times_zero_1" (formula "80") (term "1,0,0,1,0,0,1,1,1,1,1"))
                                          (rule "add_zero_right" (formula "80") (term "0,0,1,0,0,1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "80") (term "0,1,0,0,1,1,1,1,1"))
                                           (builtin "One Step Simplification" (formula "80"))
                                          (rule "inEqSimp_subsumption1" (formula "80") (term "0,0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "80") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "80") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "80") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "80") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "80") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "80"))
                                          (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "81") (term "0,1,0,0,0,1,1"))
                                          (rule "translateJavaCastInt" (formula "81") (term "0,0,1,0,0,0,1,1"))
                                          (rule "castedGetAny" (formula "81") (term "0,0,1,0,0,0,1,1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "81") (term "0,1"))
                                          (rule "replace_known_right" (formula "81") (term "0,0,1") (ifseqformula "93"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,0"))
                                          (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "55") (term "1,1,1,0") (inst "b=b"))
                                          (rule "translateJavaCastInt" (formula "55") (term "1,1,1,0"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,1,0") (ifseqformula "33"))
                                          (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "55") (term "1,3,1,2,0,1,0"))
                                          (rule "translateJavaMulInt" (formula "55") (term "0,0,2,1,3,1,2,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "55") (term "0,2,1,3,1,2,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "0,0,2,1,3,1,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "55") (term "0,2,1,3,1,2,0,1,0"))
                                          (rule "Definition_axiom_for_elementsToReadOfBucketCountClassEq_in_de_wiesler_BucketPointers" (formula "55") (term "2,2,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "55") (term "4,2,2,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "55") (term "3,2,2,0,1,0"))
                                          (rule "polySimp_homoEq" (formula "55") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "55") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "55") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                                          (rule "Definition_axiom_for_isSortedSeqTransitive_in_de_wiesler_Functions" (formula "87") (term "0") (inst "i=i") (inst "j=j"))
                                           (builtin "One Step Simplification" (formula "87"))
                                          (rule "expand_inInt" (formula "87") (term "1,0,0"))
                                          (rule "expand_inInt" (formula "87") (term "1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0"))
                                          (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0"))
                                          (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0,1,0"))
                                          (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0,1,0"))
                                          (rule "translateJavaCastInt" (formula "87") (term "0,1,0,1,0"))
                                          (rule "translateJavaCastInt" (formula "87") (term "1,1,0,1,0"))
                                          (rule "castedGetAny" (formula "87") (term "0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "87") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "87") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "87") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,1,0"))
                                          (rule "applyEq" (formula "87") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "51"))
                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "87") (term "0,1,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,1,0,0,0,1,0"))
                                          (rule "add_literals" (formula "87") (term "0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "87") (term "0,0,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "87") (term "0,1,0,0,1,0,0,0") (ifseqformula "51"))
                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "87") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "87") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "87") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                                          (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "85") (term "0"))
                                           (builtin "One Step Simplification" (formula "85"))
                                          (rule "translateJavaMod" (formula "85") (term "0"))
                                          (rule "jmod_axiom" (formula "85") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "85"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                          (rule "newSym_eq" (formula "85") (inst "l=l_1") (inst "newSymDef=mul(int::final(bucket_pointers,
               de.wiesler.BucketPointers::$first_empty_position),
    Z(0(#)))"))
                                          (rule "times_zero_1" (formula "85") (term "1,1"))
                                          (rule "add_zero_right" (formula "85") (term "1"))
                                          (rule "applyEq" (formula "86") (term "0,0") (ifseqformula "85"))
                                          (rule "eqSymm" (formula "86"))
                                          (rule "applyEq" (formula "85") (term "0,0") (ifseqformula "86"))
                                          (rule "applyEq" (formula "70") (term "1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "86"))
                                          (rule "inEqSimp_commuteGeq" (formula "69") (term "0"))
                                          (rule "applyEq" (formula "81") (term "1,0,1,1,1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "81") (term "0,0,0,1,1") (ifseqformula "86"))
                                          (rule "inEqSimp_homoInEq1" (formula "81") (term "0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "81") (term "0,0,0,1,1"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "86"))
                                          (rule "inEqSimp_homoInEq0" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                          (rule "applyEq" (formula "84") (term "0") (ifseqformula "86"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "81") (term "0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0,1"))
                                          (rule "elimGcdGeq_antec" (formula "84") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "84") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "84") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "84"))
                                          (rule "add_zero_right" (formula "84") (term "0,0,0,0"))
                                          (rule "times_zero_1" (formula "84") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "84") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "84") (term "0,0"))
                                          (rule "add_literals" (formula "84") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "84") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "84") (term "0,0"))
                                          (rule "leq_literals" (formula "84") (term "0"))
                                           (builtin "One Step Simplification" (formula "84"))
                                          (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "40"))
                                          (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                          (rule "polySimp_mulAssoc" (formula "44") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "42"))
                                          (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                                          (rule "polySimp_mulAssoc" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "45") (term "0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0"))
                                          (rule "add_zero_right" (formula "45") (term "0"))
                                          (rule "polySimp_addComm0" (formula "45") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "leq_literals" (formula "45") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "neg_literal" (formula "45") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0"))
                                          (rule "qeq_literals" (formula "45") (term "0"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "44"))
                                          (rule "times_zero_1" (formula "37") (term "0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "neg_literal" (formula "37") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "37") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0"))
                                          (rule "qeq_literals" (formula "37") (term "0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "37"))
                                          (rule "leq_literals" (formula "46") (term "0"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "true_left" (formula "46"))
                                          (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,1,0,0,0"))
                                          (rule "commute_and_2" (formula "57") (term "0,0"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "32") (inst "i=i") (inst "i_0=i_0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "expand_inInt" (formula "32") (term "1,0,0,1,0"))
                                          (rule "expand_inInt" (formula "32") (term "1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,0,1,0"))
                                          (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,0,1"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "33"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "33"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "translateJavaSubInt" (formula "40") (term "0,2,1,1,0"))
                                          (rule "translateJavaSubInt" (formula "38") (term "3,0"))
                                          (rule "translateJavaShiftLeftInt" (formula "34") (term "1"))
                                          (rule "eqSymm" (formula "40") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "38") (term "3,0"))
                                          (rule "mul_literals" (formula "38") (term "1,3,0"))
                                          (rule "polySimp_elimSub" (formula "40") (term "0,2,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "1,0,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "38") (term "3,0"))
                                          (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "39") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "37"))
                                          (rule "inEqSimp_commuteLeq" (formula "36"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "inEqSimp_commuteLeq" (formula "32"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "38") (term "1,3,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "103") (term "0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "29"))
                                          (rule "inEqSimp_commuteGeq" (formula "37"))
                                          (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "30") (term "3,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "31") (term "1,0,2,0") (ifseqformula "34"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "39") (term "0,1,0,0,1,1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "31") (term "1,0,2,0") (ifseqformula "34"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                                          (rule "javaShiftLeftIntDef" (formula "34") (term "1"))
                                          (rule "mod_axiom" (formula "34") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1"))
                                          (rule "javaShiftLeftIntDef" (formula "35") (term "0"))
                                          (rule "mod_axiom" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                          (rule "javaShiftLeftIntDef" (formula "36") (term "1"))
                                          (rule "mod_axiom" (formula "36") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1"))
                                          (rule "javaShiftLeftIntDef" (formula "38") (term "1,3,0"))
                                          (rule "mod_axiom" (formula "38") (term "1,0,1,3,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,3,0"))
                                          (rule "javaShiftLeftIntDef" (formula "37") (term "0"))
                                          (rule "mod_axiom" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                          (rule "javaShiftLeftIntDef" (formula "28") (term "0,1,0"))
                                          (rule "mod_axiom" (formula "28") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
                                          (rule "javaShiftLeftIntDef" (formula "28") (term "2,0"))
                                          (rule "mod_axiom" (formula "28") (term "1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,2,0"))
                                          (rule "javaShiftLeftIntDef" (formula "30") (term "3,0"))
                                          (rule "mod_axiom" (formula "30") (term "1,0,3,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,3,0"))
                                          (rule "javaShiftLeftIntDef" (formula "31") (term "1,0,2,0"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "mod_axiom" (formula "31") (term "1,0,1,0,2,1"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0,2,1"))
                                          (rule "javaShiftLeftIntDef" (formula "39") (term "1,1,1,0,0,0"))
                                          (rule "mod_axiom" (formula "39") (term "1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,1,1,0,0,0"))
                                          (rule "javaShiftLeftIntDef" (formula "39") (term "1,1,1,1,0"))
                                          (rule "mod_axiom" (formula "39") (term "1,0,1,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,1,1,1,0"))
                                          (rule "javaShiftLeftIntDef" (formula "40") (term "1,1,1,0,0,0"))
                                          (rule "mod_axiom" (formula "40") (term "1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                                          (rule "shiftLeftDef" (formula "34") (term "0,1"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "polySimp_elimNeg" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "34") (term "2,0,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "34") (term "2,0,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "34") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                                          (rule "shiftLeftDef" (formula "35") (term "0,0"))
                                          (rule "polySimp_elimNeg" (formula "35") (term "1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "0,1,1,0,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "35") (term "2,0,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "35") (term "2,0,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "35") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                                          (rule "shiftLeftDef" (formula "36") (term "0,1"))
                                          (rule "polySimp_elimNeg" (formula "36") (term "1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0,1"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "36") (term "2,0,1"))
                                          (rule "polySimp_elimOneLeft0" (formula "36") (term "2,0,1"))
                                          (rule "shiftRightPositiveShiftDef" (formula "36") (term "1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "36"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "34"))
                                          (rule "inEqSimp_commuteLeq" (formula "36"))
                                          (rule "shiftLeftDef" (formula "38") (term "0,1,3,0"))
                                          (rule "polySimp_elimNeg" (formula "38") (term "1,1,0,1,3,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,3,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,3,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,3,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,1,3,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "38") (term "2,0,1,3,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "38") (term "2,0,1,3,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "38") (term "1,0,1,3,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,3,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,3,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,0,1,3,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,3,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,3,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,3,0"))
                                          (rule "applyEq" (formula "38") (term "1,3,0") (ifseqformula "34"))
                                          (rule "shiftLeftDef" (formula "37") (term "0,0"))
                                          (rule "polySimp_elimNeg" (formula "37") (term "1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "0,1,1,0,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "37") (term "2,0,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "37") (term "2,0,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "37") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "34"))
                                          (rule "shiftLeftDef" (formula "28") (term "0,0,1,0"))
                                          (rule "polySimp_elimNeg" (formula "28") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0,0,1,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "28") (term "2,0,0,1,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "28") (term "2,0,0,1,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "28") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "34"))
                                          (rule "shiftLeftDef" (formula "28") (term "0,2,0"))
                                          (rule "polySimp_elimNeg" (formula "28") (term "1,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0,2,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "28") (term "2,0,2,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "28") (term "2,0,2,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "28") (term "1,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,2,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0,0,2,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,2,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,2,0"))
                                          (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "34"))
                                          (rule "shiftLeftDef" (formula "30") (term "0,3,0"))
                                          (rule "polySimp_elimNeg" (formula "30") (term "1,1,0,3,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,3,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,0,3,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,3,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,0,3,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "30") (term "2,0,3,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "30") (term "2,0,3,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "30") (term "1,0,3,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,3,0"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,0,0,3,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,0,0,3,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,3,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,3,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,3,0"))
                                          (rule "applyEq" (formula "30") (term "3,0") (ifseqformula "34"))
                                          (rule "javaShiftLeftIntDef" (formula "31") (term "1,0,2,0"))
                                          (rule "mod_axiom" (formula "31") (term "1,0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0,2,0"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "shiftLeftDef" (formula "39") (term "0,1,1,1,0,0,0"))
                                          (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,1,1,1,0,0,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,1,1,1,0,0,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,1,1,1,0,0,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,1,1,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,1,1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,1,1,0,0,0"))
                                          (rule "applyEq" (formula "39") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                          (rule "shiftLeftDef" (formula "39") (term "0,1,1,1,1,0"))
                                          (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,1,1,1,1,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,1,1,1,1,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,1,1,1,1,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,1,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0,0,1,1,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,1,1,1,0"))
                                          (rule "applyEq" (formula "39") (term "1,1,1,1,0") (ifseqformula "34"))
                                          (rule "shiftLeftDef" (formula "40") (term "0,1,1,1,0,0,0"))
                                          (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,1,1,1,0,0,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,1,1,1,0,0,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,1,1,1,0,0,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,1,1,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,0,0,1,1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,1,1,0,0,0"))
                                          (rule "applyEq" (formula "40") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                          (rule "shiftLeftDef" (formula "31") (term "0,1,0,2,1"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "polySimp_elimNeg" (formula "31") (term "1,1,0,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0,1,0,2,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "31") (term "1,0,1,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0,2,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,1,0,2,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,2,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,2,0"))
                                          (rule "applyEq" (formula "31") (term "1,0,2,0") (ifseqformula "34"))
                                          (rule "shiftLeftDef" (formula "31") (term "0,1,0,2,1"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "polySimp_elimNeg" (formula "31") (term "1,1,0,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0,1,0,2,0"))
                                          (rule "shiftLeftPositiveShiftDef" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "polySimp_elimOneLeft0" (formula "31") (term "2,0,1,0,2,0"))
                                          (rule "shiftRightPositiveShiftDef" (formula "31") (term "1,0,1,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0,2,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,1,0,2,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,2,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,2,0"))
                                          (rule "applyEq" (formula "31") (term "1,0,2,0") (ifseqformula "34"))
                                          (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                          (rule "mul_literals" (formula "35") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                          (rule "mul_literals" (formula "35") (term "1"))
                                          (rule "inEqSimp_or_subsumption6" (formula "12") (term "1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "12") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "12") (term "0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_or_subsumption6" (formula "2") (term "1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "2") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "2") (term "0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "Contract_axiom_for_elementsToReadCountElementSplitBucket_in_BucketPointers" (formula "68") (term "0"))
                                           (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "134")) (ifInst ""  (formula "132")) (ifInst ""  (formula "69")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnon" (formula "68") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "68") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "68") (term "1,1,0,1,0,0"))
                                          (rule "translateJavaAddInt" (formula "68") (term "0,0,0,1,0,0"))
                                          (rule "replace_known_left" (formula "68") (term "1,0,1,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
                                          (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "68") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "68"))
                                          (rule "inEqSimp_homoInEq0" (formula "68") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "68") (term "0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "68") (term "1,0,0,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "68") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "68") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "68") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "0,1,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "68") (term "0,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "68") (term "1,0,0,0,1,0,1,0"))
                                          (rule "times_zero_1" (formula "68") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "68") (term "0,0,1,0,1,0"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,0,0") (ifseqformula "42"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "68") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "68") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "68"))
                                          (rule "Definition_axiom_for_elementsToReadCountElementSplitBucket_in_de_wiesler_BucketPointers" (formula "69") (term "0") (inst "element=element") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "expand_inInt" (formula "69") (term "0,0"))
                                          (rule "replace_int_MIN" (formula "69") (term "0,1,0,0"))
                                          (rule "replace_int_MAX" (formula "69") (term "1,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "69") (term "2,1,2,0,0,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "69") (term "3,1,1,1,0"))
                                          (rule "translateJavaCastInt" (formula "69") (term "0,1,1,0"))
                                          (rule "eqSymm" (formula "69") (term "1,0"))
                                          (rule "translateJavaAddInt" (formula "69") (term "0,1,0"))
                                          (rule "polySimp_homoEq" (formula "69") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "69") (term "1,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "69") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "69") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "69") (term "0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "69") (term "1,0,0"))
                                          (rule "applyEq" (formula "69") (term "1,0,1,0,1,0") (ifseqformula "42"))
                                          (rule "polySimp_sepNegMonomial" (formula "69") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "69") (term "0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "99") (term "0"))
                                          (rule "castedGetAny" (formula "99") (term "0"))
                                           (builtin "One Step Simplification" (formula "99"))
                                          (rule "true_left" (formula "99"))
                                          (rule "arrayLengthIsAShort" (formula "95") (term "0"))
                                          (rule "expand_inShort" (formula "95"))
                                          (rule "replace_short_MIN" (formula "95") (term "0,1"))
                                          (rule "replace_short_MAX" (formula "95") (term "1,0"))
                                          (rule "andLeft" (formula "95"))
                                          (rule "inEqSimp_commuteLeq" (formula "96"))
                                          (rule "inEqSimp_exactShadow3" (formula "97") (ifseqformula "95"))
                                          (rule "polySimp_mulAssoc" (formula "97") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "97") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "97") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "97") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "97"))
                                          (rule "polySimp_mulLiterals" (formula "97") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "97") (ifseqformula "27"))
                                          (rule "mul_literals" (formula "97") (term "0,1,0"))
                                          (rule "greater_literals" (formula "97") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "97"))
                                          (rule "leq_literals" (formula "97") (term "0"))
                                           (builtin "One Step Simplification" (formula "97"))
                                          (rule "true_left" (formula "97"))
                                          (rule "arrayLengthNotNegative" (formula "97") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "96") (ifseqformula "97"))
                                          (rule "leq_literals" (formula "96") (term "0"))
                                           (builtin "One Step Simplification" (formula "96"))
                                          (rule "true_left" (formula "96"))
                                          (rule "nnf_imp2or" (formula "63") (term "0"))
                                          (rule "commute_and" (formula "137"))
                                          (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "80") (term "1"))
                                          (rule "translateJavaCastInt" (formula "80") (term "0,1"))
                                          (rule "castedGetAny" (formula "80") (term "0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "80"))
                                          (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "81") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "135")) (ifInst ""  (formula "85")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,0") (ifseqformula "71"))
                                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "81") (term "1,0") (ifseqformula "71"))
                                          (rule "wellFormedAnon" (formula "81") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "81") (term "0,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "81") (term "2,0,1,1,1,1,1,1"))
                                          (rule "translateJavaAddInt" (formula "81") (term "2,1,1,0,1,1,1,1"))
                                          (rule "replace_known_left" (formula "81") (term "1,1,0") (ifseqformula "70"))
                                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "5")))
                                          (rule "polySimp_elimSub" (formula "81") (term "2,0,1,1,1,1,1,1"))
                                          (rule "mul_literals" (formula "81") (term "1,2,0,1,1,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "81") (term "2,1,1,0,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "81") (term "2,0,1,1,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,1,1,1,1,1"))
                                          (rule "add_zero_right" (formula "81") (term "0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "81") (term "0,0,0,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,1"))
                                          (rule "replace_known_left" (formula "81") (term "0,0,0,1,1") (ifseqformula "77"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,1,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "applyEq" (formula "81") (term "2,0,1,0,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "81") (term "2,0,0,0,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "81") (term "0,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "81") (term "0,1,0,1,1,1,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "81") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "42"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "81") (term "0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "81") (term "0,0,0,1,1,1,1"))
                                          (rule "replace_known_left" (formula "81") (term "0,0,1,1,1,1") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "inEqSimp_subsumption1" (formula "81") (term "0,0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "81") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "81") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "81") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "81") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "81") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "inEqSimp_subsumption1" (formula "81") (term "1,0,1,1,1,1,1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "81") (term "0,1,0,1,1,1,1,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "81") (term "1,1,0,0,1,0,1,1,1,1,1"))
                                          (rule "times_zero_1" (formula "81") (term "1,0,0,1,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "81") (term "0,0,1,0,1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "81") (term "0,1,0,1,1,1,1,1"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "82") (term "0,1"))
                                          (rule "translateJavaCastInt" (formula "82") (term "0,0,1"))
                                          (rule "castedGetAny" (formula "82") (term "0,0,1"))
                                          (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "79") (term "0"))
                                          (rule "translateJavaCastInt" (formula "79") (term "0,0"))
                                          (rule "castedGetAny" (formula "79") (term "0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "79") (ifseqformula "80"))
                                          (rule "polySimp_mulComm0" (formula "79") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "79"))
                                          (rule "polySimp_mulLiterals" (formula "79") (term "1"))
                                          (rule "polySimp_elimOne" (formula "79") (term "1"))
                                          (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "84") (term "0"))
                                           (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "137")) (ifInst ""  (formula "87")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1,0") (ifseqformula "71"))
                                           (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "84") (term "1,0") (ifseqformula "71"))
                                          (rule "wellFormedAnon" (formula "84") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "84") (term "0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "84") (term "2,1,1,0,1,1,1,1"))
                                          (rule "translateJavaSubInt" (formula "84") (term "2,0,1,1,1,1,1,1"))
                                          (rule "replace_known_left" (formula "84") (term "0,0,0,1,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "15")) (ifInst ""  (formula "5")) (ifInst ""  (formula "70")))
                                          (rule "polySimp_elimSub" (formula "84") (term "2,0,1,1,1,1,1,1"))
                                          (rule "mul_literals" (formula "84") (term "1,2,0,1,1,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "84") (term "2,1,1,0,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "84") (term "2,0,1,1,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,1,1,1,1,1"))
                                          (rule "add_zero_right" (formula "84") (term "0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "84") (term "0,0,0,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,1,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,1,1,1,1"))
                                          (rule "applyEq" (formula "84") (term "0,1,0,0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq1" (formula "84") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "84") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "84") (term "1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "84") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "84") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "84"))
                                          (rule "applyEq" (formula "84") (term "2,0,1,0,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "84") (term "0,1,0,1,1,1,1,1") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq1" (formula "84") (term "1,0,1,1,1,1,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "84") (term "0,1,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "84") (term "1,0,1,0,1,1,1,1,1"))
                                          (rule "times_zero_1" (formula "84") (term "0,1,0,1,1,1,1,1"))
                                          (rule "leq_literals" (formula "84") (term "1,0,1,1,1,1,1"))
                                           (builtin "One Step Simplification" (formula "84"))
                                          (rule "applyEq" (formula "84") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "42"))
                                          (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,0,1,1,1,1"))
                                          (rule "add_literals" (formula "84") (term "1,1,0,0,0,1,1,1,1"))
                                          (rule "times_zero_1" (formula "84") (term "1,0,0,0,1,1,1,1"))
                                          (rule "add_literals" (formula "84") (term "0,0,0,1,1,1,1"))
                                          (rule "leq_literals" (formula "84") (term "0,0,1,1,1,1"))
                                           (builtin "One Step Simplification" (formula "84"))
                                          (rule "applyEq" (formula "84") (term "2,0,1,0,0,1,1") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq1" (formula "84") (term "1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "84") (term "0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "84") (term "1,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "84") (term "0,1,0,0,1,1"))
                                          (rule "leq_literals" (formula "84") (term "1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "84"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "84") (term "0,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "84") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "84") (term "0,0,1,1,1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "84") (term "0,1,1,1,1") (ifseqformula "26"))
                                          (rule "leq_literals" (formula "84") (term "0,0,1,1,1,1"))
                                           (builtin "One Step Simplification" (formula "84"))
                                          (rule "inEqSimp_subsumption1" (formula "84") (term "0,0") (ifseqformula "26"))
                                          (rule "leq_literals" (formula "84") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "84"))
                                          (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "85") (term "0"))
                                          (rule "translateJavaCastInt" (formula "85") (term "0,0"))
                                          (rule "castedGetAny" (formula "85") (term "0,0"))
                                          (rule "applyEq" (formula "85") (term "0,0") (ifseqformula "53"))
                                          (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "77") (term "0"))
                                           (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "138")) (ifInst ""  (formula "88")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "1,0") (ifseqformula "71"))
                                           (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "77") (term "1,0") (ifseqformula "71"))
                                          (rule "wellFormedAnon" (formula "77") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "77") (term "0,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "77") (term "2,0,1,1,1,1,1,1"))
                                          (rule "translateJavaAddInt" (formula "77") (term "2,1,1,0,1,1,1,1"))
                                          (rule "replace_known_left" (formula "77") (term "0,0,0,1,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "15")) (ifInst ""  (formula "5")) (ifInst ""  (formula "70")))
                                          (rule "polySimp_elimSub" (formula "77") (term "2,0,1,1,1,1,1,1"))
                                          (rule "mul_literals" (formula "77") (term "1,2,0,1,1,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "77") (term "2,1,1,0,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "77") (term "2,0,1,1,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "77") (term "0,0,0,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,1,1,1,1,1"))
                                          (rule "add_zero_right" (formula "77") (term "0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "77") (term "1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,1"))
                                          (rule "replace_known_left" (formula "77") (term "0,0,0,1,1") (ifseqformula "78"))
                                           (builtin "One Step Simplification" (formula "77"))
                                          (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "77") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "77"))
                                          (rule "inEqSimp_commuteLeq" (formula "77") (term "1,0,1,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "77") (term "1,0,1,1,1,1"))
                                          (rule "applyEq" (formula "77") (term "0,1,0,1,1,1,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "77") (term "2,0,1,0,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "77") (term "2,0,0,0,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "77") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "77") (term "0,0,0") (ifseqformula "42"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "77") (term "0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "77") (term "0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "77") (term "0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "77") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "77") (term "0,0,0,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "77") (term "0,0,0,1,1,1,1"))
                                          (rule "replace_known_left" (formula "77") (term "0,0,1,1,1,1") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "77"))
                                          (rule "inEqSimp_subsumption1" (formula "77") (term "1,0,1,1,1,1,1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "77") (term "0,1,0,1,1,1,1,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,1,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "77") (term "1,1,0,0,1,0,1,1,1,1,1"))
                                          (rule "times_zero_1" (formula "77") (term "1,0,0,1,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "77") (term "0,0,1,0,1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "77") (term "0,1,0,1,1,1,1,1"))
                                           (builtin "One Step Simplification" (formula "77"))
                                          (rule "inEqSimp_subsumption1" (formula "77") (term "0,0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "77") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "77") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "77") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "77") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "77") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "83")))
                                          (rule "true_left" (formula "77"))
                                          (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "78") (term "0"))
                                           (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "138")) (ifInst ""  (formula "88")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "1,0") (ifseqformula "71"))
                                           (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "78") (term "1,0") (ifseqformula "71"))
                                          (rule "wellFormedAnon" (formula "78") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "78") (term "0,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "78") (term "2,0,1,1,1,1,1,1"))
                                          (rule "translateJavaAddInt" (formula "78") (term "2,1,1,0,1,1,1,1"))
                                          (rule "replace_known_left" (formula "78") (term "0,0,0,1,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "15")) (ifInst ""  (formula "5")) (ifInst ""  (formula "70")))
                                          (rule "polySimp_elimSub" (formula "78") (term "2,0,1,1,1,1,1,1"))
                                          (rule "mul_literals" (formula "78") (term "1,2,0,1,1,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "78") (term "2,1,1,0,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "78") (term "2,0,1,1,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "78") (term "0,0,0,1,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,1,1,1,1,1"))
                                          (rule "add_zero_right" (formula "78") (term "0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "78") (term "1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,1,1"))
                                          (rule "replace_known_left" (formula "78") (term "0,0,0,1,1") (ifseqformula "77"))
                                           (builtin "One Step Simplification" (formula "78"))
                                          (rule "inEqSimp_commuteLeq" (formula "78") (term "1,0,1,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "78") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "78"))
                                          (rule "inEqSimp_commuteLeq" (formula "78") (term "1,0,1,1,1,1"))
                                          (rule "applyEq" (formula "78") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "78") (term "2,0,0,0,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "78") (term "0,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "78") (term "0,1,0,1,1,1,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "78") (term "2,0,1,0,1,1") (ifseqformula "42"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "78") (term "0,0,1,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "78") (term "0,0,0,1,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "78") (term "0,0,0,1,1,1,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "78") (term "0,0,1,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "78") (term "0,0,0,1,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "78") (term "0,0,0,1,1,1,1"))
                                          (rule "replace_known_left" (formula "78") (term "0,0,1,1,1,1") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "78"))
                                          (rule "inEqSimp_subsumption1" (formula "78") (term "0,0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "78") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "78") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "78") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "78") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "78"))
                                          (rule "inEqSimp_subsumption1" (formula "78") (term "1,0,1,1,1,1,1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "78") (term "0,1,0,1,1,1,1,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "78") (term "1,1,0,0,1,0,1,1,1,1,1"))
                                          (rule "times_zero_1" (formula "78") (term "1,0,0,1,0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "78") (term "0,0,1,0,1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "78") (term "0,1,0,1,1,1,1,1"))
                                           (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "83")))
                                          (rule "true_left" (formula "78"))
                                          (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "78") (term "0"))
                                          (rule "translateJavaCastInt" (formula "78") (term "0,0"))
                                          (rule "castedGetAny" (formula "78") (term "0,0"))
                                          (rule "inEqSimp_subsumption0" (formula "96") (term "1,0,0,0,1") (ifseqformula "78"))
                                          (rule "inEqSimp_homoInEq0" (formula "96") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "96") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "96") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "96") (term "1,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "96") (term "0,0,1,0,0,0,1"))
                                          (rule "qeq_literals" (formula "96") (term "0,1,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "96"))
                                          (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "77") (term "0"))
                                          (rule "translateJavaCastInt" (formula "77") (term "0,0"))
                                          (rule "castedGetAny" (formula "77") (term "0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "78"))
                                          (rule "times_zero_1" (formula "77") (term "0,0"))
                                          (rule "add_zero_left" (formula "77") (term "0"))
                                          (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "87") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "87"))
                                          (rule "expand_inInt" (formula "87") (term "1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0,1"))
                                          (rule "andLeft" (formula "87"))
                                          (rule "andLeft" (formula "87"))
                                          (rule "andLeft" (formula "87"))
                                          (rule "andLeft" (formula "89"))
                                          (rule "andLeft" (formula "87"))
                                          (rule "andLeft" (formula "87"))
                                          (rule "andLeft" (formula "89"))
                                          (rule "andLeft" (formula "89"))
                                          (rule "andLeft" (formula "89"))
                                          (rule "translateJavaAddInt" (formula "93") (term "1"))
                                          (rule "translateJavaCastInt" (formula "94") (term "0"))
                                          (rule "translateJavaMulInt" (formula "88") (term "0"))
                                          (rule "translateJavaMulInt" (formula "87") (term "1"))
                                          (rule "translateJavaCastInt" (formula "91") (term "0"))
                                          (rule "translateJavaCastInt" (formula "90") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "88") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "87") (term "1"))
                                          (rule "polySimp_addComm0" (formula "93") (term "1"))
                                          (rule "castedGetAny" (formula "94") (term "0"))
                                          (rule "castedGetAny" (formula "91") (term "0"))
                                          (rule "castedGetAny" (formula "90") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "95") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "95") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "95") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "89"))
                                          (rule "inEqSimp_commuteLeq" (formula "87"))
                                          (rule "inEqSimp_commuteLeq" (formula "90"))
                                          (rule "applyEq" (formula "62") (term "0") (ifseqformula "93"))
                                          (rule "polySimp_homoEq" (formula "62"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                          (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "62") (term "0,0"))
                                          (rule "applyEq" (formula "89") (term "0") (ifseqformula "111"))
                                          (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "92") (term "0,0") (ifseqformula "111"))
                                          (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "42"))
                                          (rule "inEqSimp_commuteLeq" (formula "88"))
                                          (rule "applyEq" (formula "89") (term "1") (ifseqformula "110"))
                                          (rule "applyEq" (formula "89") (term "1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "94") (term "0,1,0,0,1,0,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "92") (term "1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "42"))
                                          (rule "polySimp_pullOutFactor1" (formula "62") (term "0"))
                                          (rule "add_literals" (formula "62") (term "1,0"))
                                          (rule "times_zero_1" (formula "62") (term "0"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "true_left" (formula "62"))
                                          (rule "applyEq" (formula "89") (term "0") (ifseqformula "53"))
                                          (rule "inEqSimp_homoInEq0" (formula "89"))
                                          (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "89") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "89") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "89") (term "0"))
                                          (rule "applyEq" (formula "88") (term "0") (ifseqformula "53"))
                                          (rule "inEqSimp_homoInEq1" (formula "88"))
                                          (rule "polySimp_mulComm0" (formula "88") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "88") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "88") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "88") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "88") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "88") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "88") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "93") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "93") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "93") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "93") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "89"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "88"))
                                          (rule "polySimp_mulLiterals" (formula "88") (term "0"))
                                          (rule "polySimp_elimOne" (formula "88") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "87") (ifseqformula "105"))
                                          (rule "times_zero_1" (formula "87") (term "1,1,0"))
                                          (rule "greater_literals" (formula "87") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "87"))
                                          (rule "leq_literals" (formula "87") (term "0"))
                                           (builtin "One Step Simplification" (formula "87"))
                                          (rule "true_left" (formula "87"))
                                          (rule "inEqSimp_subsumption6" (formula "86") (ifseqformula "26"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0"))
                                          (rule "greater_literals" (formula "86") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "86"))
                                          (rule "leq_literals" (formula "86") (term "0"))
                                           (builtin "One Step Simplification" (formula "86"))
                                          (rule "true_left" (formula "86"))
                                          (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "85") (term "0"))
                                           (builtin "One Step Simplification" (formula "85"))
                                          (rule "translateJavaMod" (formula "85") (term "0"))
                                          (rule "jmod_axiom" (formula "85") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "85"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                          (rule "newSym_eq" (formula "85") (inst "l=l_2") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "85") (term "1,1"))
                                          (rule "add_zero_right" (formula "85") (term "1"))
                                          (rule "applyEq" (formula "86") (term "0,0") (ifseqformula "85"))
                                          (rule "eqSymm" (formula "86"))
                                          (rule "applyEq" (formula "77") (term "1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "111") (term "0") (ifseqformula "86"))
                                          (rule "inEqSimp_homoInEq0" (formula "111"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "111") (term "0"))
                                          (rule "polySimp_addComm1" (formula "111") (term "0,0"))
                                          (rule "applyEq" (formula "99") (term "1,0,0,1,1,1,1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "143") (term "0,1") (ifseqformula "86"))
                                          (rule "inEqSimp_homoInEq0" (formula "143") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "143") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "143") (term "0,1"))
                                          (rule "applyEq" (formula "99") (term "0,0,0,1,1") (ifseqformula "86"))
                                          (rule "inEqSimp_homoInEq0" (formula "99") (term "0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "99") (term "0,0,0,1,1"))
                                          (rule "applyEq" (formula "85") (term "0,0") (ifseqformula "86"))
                                          (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "86"))
                                          (rule "inEqSimp_commuteLeq" (formula "82") (term "0"))
                                          (rule "applyEq" (formula "67") (term "1,1,0,0") (ifseqformula "86"))
                                          (rule "applyEq" (formula "143") (term "0,0") (ifseqformula "86"))
                                          (rule "inEqSimp_homoInEq1" (formula "143") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "143") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "143") (term "0,0"))
                                          (rule "applyEq" (formula "78") (term "1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "72") (term "0") (ifseqformula "86"))
                                          (rule "applyEq" (formula "67") (term "1,0,0,0") (ifseqformula "86"))
                                          (rule "applyEq" (formula "99") (term "1,1,1,0,0,1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "68") (term "1,3,1,2,0,1,0") (ifseqformula "86"))
                                          (rule "polySimp_addComm0" (formula "68") (term "3,1,2,0,1,0"))
                                          (rule "applyEq" (formula "79") (term "1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "86"))
                                          (rule "applyEq" (formula "75") (term "0") (ifseqformula "86"))
                                          (rule "applyEq" (formula "65") (term "1,4,1,2,1,1,1,0") (ifseqformula "86"))
                                          (rule "polySimp_addComm0" (formula "65") (term "4,1,2,1,1,1,0"))
                                          (rule "applyEq" (formula "100") (term "1,1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "99") (term "1,1,1,0,1,1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "91") (term "1") (ifseqformula "86"))
                                          (rule "applyEq" (formula "65") (term "1,3,0,1,1,0") (ifseqformula "86"))
                                          (rule "polySimp_addComm0" (formula "65") (term "3,0,1,1,0"))
                                          (rule "applyEq" (formula "68") (term "1,2,0,0,1,1,0") (ifseqformula "86"))
                                          (rule "polySimp_addComm0" (formula "68") (term "2,0,0,1,1,0"))
                                          (rule "applyEq" (formula "65") (term "1,4,0,1,1,0") (ifseqformula "86"))
                                          (rule "polySimp_addComm1" (formula "65") (term "4,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "111"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "1"))
                                          (rule "polySimp_rightDist" (formula "111") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "111") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "111") (term "0,1"))
                                          (rule "mul_literals" (formula "111") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "143") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "143") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "143") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "99") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "99") (term "0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "143") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "143") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "143") (term "0,0"))
                                          (rule "elimGcdGeq_antec" (formula "75") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "75") (term "0,0,0,1,0"))
                                          (rule "leq_literals" (formula "75") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "times_zero_1" (formula "75") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "75") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                          (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "75") (term "0,0"))
                                          (rule "leq_literals" (formula "75") (term "0"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "elimGcdLeq_antec" (formula "72") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "72") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "72"))
                                          (rule "neg_literal" (formula "72") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "72") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "72") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "72") (term "0,0"))
                                          (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "72") (term "0,0"))
                                          (rule "qeq_literals" (formula "72") (term "0"))
                                           (builtin "One Step Simplification" (formula "72"))
                                          (rule "elimGcdGeq" (formula "82") (term "0") (inst "elimGcdRightDiv=l_2") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0,0"))
                                          (rule "sub_literals" (formula "82") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "82") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "82") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "82") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "82") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "82") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "82") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "82") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "82") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "82") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "82") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "82") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "82") (term "0,0,0"))
                                          (rule "add_literals" (formula "82") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "82") (term "0,0,0"))
                                          (rule "leq_literals" (formula "82") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "elimGcdGeq" (formula "99") (term "0,0,1,1") (inst "elimGcdRightDiv=add(Z(1(#)), l_2)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "99") (term "0,1,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,0,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "99") (term "0,0,0,0,0,1,0,0,0,1,1"))
                                          (rule "sub_literals" (formula "99") (term "0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "99") (term "0,1,0,0,0,1,1"))
                                          (rule "add_literals" (formula "99") (term "1,1,0,1,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "99") (term "1,0,1,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "99") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "99") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "99") (term "1,1,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "99") (term "1,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "99") (term "0,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "99") (term "0,0,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "99") (term "0,0,0,1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "99") (term "0,1,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "99") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "99") (term "0,0,1,0,0,0,1,1"))
                                          (rule "add_literals" (formula "99") (term "0,0,0,1,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "99") (term "0,0,1,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "99") (term "0,1,0,0,0,1,1"))
                                          (rule "add_literals" (formula "99") (term "1,0,1,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "99") (term "0,1,0,0,0,1,1"))
                                          (rule "leq_literals" (formula "99") (term "1,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "99"))
                                          (rule "polySimp_addAssoc" (formula "99") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "99") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "99") (term "0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "99") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "99") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "99") (term "0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "99") (term "1,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "99") (term "1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "99") (term "0,0,0,0,1,1"))
                                          (rule "qeq_literals" (formula "99") (term "0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "99"))
                                          (rule "nnf_imp2or" (formula "25") (term "0"))
                                          (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "58") (term "0"))
                                          (rule "translateJavaCastInt" (formula "58") (term "0,0"))
                                          (rule "castedGetAny" (formula "58") (term "0,0"))
                                          (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "53"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "95") (term "0"))
                                          (rule "replace_known_right" (formula "95") (term "0,0") (ifseqformula "115"))
                                           (builtin "One Step Simplification" (formula "95"))
                                          (rule "andLeft" (formula "95"))
                                          (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "95"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "true_left" (formula "66"))
                                          (rule "replace_known_left" (formula "97") (term "0") (ifseqformula "94"))
                                           (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "94")))
                                          (rule "andLeft" (formula "97"))
                                          (rule "andLeft" (formula "97"))
                                          (rule "andLeft" (formula "99"))
                                          (rule "andLeft" (formula "97"))
                                          (rule "andLeft" (formula "101"))
                                          (rule "andLeft" (formula "102"))
                                          (rule "replace_known_left" (formula "105") (term "0") (ifseqformula "94"))
                                           (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "98")))
                                          (rule "andLeft" (formula "105"))
                                          (rule "andLeft" (formula "105"))
                                          (rule "andLeft" (formula "107"))
                                          (rule "andLeft" (formula "108"))
                                          (rule "replace_known_left" (formula "104") (term "0,1") (ifseqformula "94"))
                                           (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "94")) (ifInst ""  (formula "105")) (ifInst ""  (formula "99")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")))
                                          (rule "andLeft" (formula "104"))
                                          (rule "andLeft" (formula "105"))
                                          (rule "replace_known_left" (formula "66") (term "1,0") (ifseqformula "94"))
                                           (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "94")) (ifInst ""  (formula "103")))
                                          (rule "true_left" (formula "66"))
                                          (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "95") (term "0,1,1,1,1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "1,0,0") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "152")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "95") (term "1,0") (ifseqformula "68"))
                                          (rule "wellFormedAnon" (formula "95") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "95") (term "0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "95") (term "2,1,1,0,0,1,1"))
                                          (rule "translateJavaAddInt" (formula "95") (term "2,0,1,0,1,1"))
                                          (rule "replace_known_left" (formula "95") (term "1,1,0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "5")))
                                          (rule "polySimp_addComm0" (formula "95") (term "2,0,1,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "95") (term "2,1,1,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "95") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "95") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "95") (term "0,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "95") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "95") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "95"))
                                          (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,1,1"))
                                          (rule "applyEq" (formula "95") (term "2,0,1,0,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "95") (term "0,1,0,0,0") (ifseqformula "42"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "95") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "95") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "95") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "95") (term "0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "95"))
                                          (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "96") (term "0,1,1,1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1,0,0") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "153")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "96") (term "1,0") (ifseqformula "68"))
                                          (rule "wellFormedAnon" (formula "96") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "96") (term "0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "96") (term "2,1,1,0,0,1,1"))
                                          (rule "translateJavaAddInt" (formula "96") (term "2,0,1,0,1,1"))
                                          (rule "replace_known_left" (formula "96") (term "1,1,0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "5")))
                                          (rule "polySimp_addComm0" (formula "96") (term "2,0,1,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "96") (term "2,1,1,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "96") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "96") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "96") (term "0,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "96") (term "0,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "96") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "96") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "96"))
                                          (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,1,1"))
                                          (rule "applyEq" (formula "96") (term "1,0,0,1,1,1") (ifseqformula "119"))
                                          (rule "applyEq" (formula "96") (term "2,0,0,1,1,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "96") (term "0,1,0,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "96") (term "2,0,1,0,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "96") (term "1,0,1,1,1,1") (ifseqformula "119"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "96") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "96") (term "0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "96"))
                                          (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "97") (term "0,1,1,1"))
                                          (rule "translateJavaMulInt" (formula "97") (term "0,2,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "97") (term "0,2,0,1,1,1"))
                                          (rule "replaceKnownSelect_taclet01201200101012_2" (formula "97") (term "0,1,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01201200101012_3" (formula "97") (term "0,1,1,1"))
                                          (rule "applyEq" (formula "97") (term "0,1,1,1") (ifseqformula "84"))
                                          (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "97") (term "0,1,1,1,1"))
                                          (rule "translateJavaAddInt" (formula "97") (term "0,2,0,1,1,1,1"))
                                          (rule "translateJavaMulInt" (formula "97") (term "0,0,2,0,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "97") (term "0,0,2,0,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "97") (term "0,2,0,1,1,1,1"))
                                          (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "97") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "93")) (ifInst ""  (formula "154")) (ifInst ""  (formula "93")) (ifInst ""  (formula "105")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnon" (formula "97") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "97") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "97") (term "2,1,1,0,0,1"))
                                          (rule "translateJavaAddInt" (formula "97") (term "2,0,1,0,1"))
                                          (rule "replace_known_left" (formula "97") (term "1,1,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
                                          (rule "polySimp_addComm0" (formula "97") (term "2,0,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "97") (term "2,1,1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "97") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "97") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0,0,1"))
                                          (rule "replace_known_left" (formula "97") (term "0,0,0,0,1") (ifseqformula "109"))
                                           (builtin "One Step Simplification" (formula "97"))
                                          (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0"))
                                          (rule "replace_known_left" (formula "97") (term "0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "97"))
                                          (rule "inEqSimp_commuteLeq" (formula "97") (term "0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,1"))
                                          (rule "applyEq" (formula "97") (term "2,0,1,0,1") (ifseqformula "42"))
                                          (rule "replace_known_left" (formula "97") (term "1,0,1") (ifseqformula "100"))
                                           (builtin "One Step Simplification" (formula "97"))
                                          (rule "applyEq" (formula "97") (term "2,0,0,1,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "97") (term "1,0,1,1,1") (ifseqformula "120"))
                                          (rule "replace_known_left" (formula "97") (term "0,1,1,1") (ifseqformula "112"))
                                           (builtin "One Step Simplification" (formula "97"))
                                          (rule "applyEq" (formula "97") (term "0,1,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "97") (term "1,0,0,1,1") (ifseqformula "120"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "97") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "97") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "97") (term "0,0"))
                                          (rule "replace_known_left" (formula "97") (term "0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "97"))
                                          (rule "andLeft" (formula "97"))
                                          (rule "andLeft" (formula "97"))
                                          (rule "andLeft" (formula "99"))
                                          (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "101") (term "1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "93")) (ifInst ""  (formula "158")) (ifInst ""  (formula "93")) (ifInst ""  (formula "100")) (ifInst ""  (formula "109")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnon" (formula "101") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "101") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "101") (term "2,0,1,0,1"))
                                          (rule "translateJavaAddInt" (formula "101") (term "2,1,1,0,0,1"))
                                          (rule "replace_known_left" (formula "101") (term "1,0,1,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
                                          (rule "polySimp_addComm0" (formula "101") (term "2,1,1,0,0,1"))
                                          (rule "replace_known_left" (formula "101") (term "1,0,0,1") (ifseqformula "98"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "polySimp_addComm0" (formula "101") (term "2,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "101") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "101") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,1"))
                                          (rule "replace_known_left" (formula "101") (term "0,0,0,1") (ifseqformula "113"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0"))
                                          (rule "replace_known_left" (formula "101") (term "0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "inEqSimp_commuteLeq" (formula "101") (term "1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,1"))
                                          (rule "replace_known_left" (formula "101") (term "0,0,1") (ifseqformula "97"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "inEqSimp_commuteLeq" (formula "101") (term "0,1"))
                                          (rule "applyEq" (formula "101") (term "2,0,1,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "101") (term "2,0,0,1") (ifseqformula "42"))
                                          (rule "replace_known_left" (formula "101") (term "0,1") (ifseqformula "104"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "applyEq" (formula "101") (term "0,1,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "101") (term "1,1,1") (ifseqformula "124"))
                                          (rule "replace_known_left" (formula "101") (term "1,1") (ifseqformula "116"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "applyEq" (formula "101") (term "1,0,1") (ifseqformula "124"))
                                          (rule "replace_known_left" (formula "101") (term "1") (ifseqformula "99"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "true_left" (formula "101"))
                                          (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "101") (term "0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "93")) (ifInst ""  (formula "158")) (ifInst ""  (formula "93")) (ifInst ""  (formula "109")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnon" (formula "101") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "101") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "101") (term "2,1,1,0,0,1"))
                                          (rule "translateJavaAddInt" (formula "101") (term "2,0,1,0,1"))
                                          (rule "replace_known_left" (formula "101") (term "1,1,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
                                          (rule "polySimp_addComm0" (formula "101") (term "2,0,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "101") (term "2,1,1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "101") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "101") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0"))
                                          (rule "replace_known_left" (formula "101") (term "0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "inEqSimp_commuteLeq" (formula "101") (term "1,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "101") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,0,1"))
                                          (rule "replace_known_left" (formula "101") (term "0,0,0,0,1") (ifseqformula "113"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "applyEq" (formula "101") (term "0,1,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "101") (term "2,0,1,0,1") (ifseqformula "42"))
                                          (rule "replace_known_left" (formula "101") (term "1,0,1") (ifseqformula "104"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "101") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "0,0"))
                                          (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "andLeft" (formula "101"))
                                          (rule "andLeft" (formula "101"))
                                          (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "104") (term "0,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "104") (term "0,2,0,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "104") (term "0,0,2,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "104") (term "0,0,2,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "104") (term "0,2,0,1,1,0"))
                                          (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "104") (term "1,1,0,0"))
                                          (rule "translateJavaMulInt" (formula "104") (term "0,2,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "104") (term "0,2,1,1,0,0"))
                                          (rule "replaceKnownSelect_taclet01201200101012_0" (formula "104") (term "1,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01201200101012_1" (formula "104") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "104") (term "1,1,0,0") (ifseqformula "120"))
                                          (rule "polySimp_addAssoc" (formula "104") (term "1,0,0"))
                                          (rule "add_literals" (formula "104") (term "0,1,0,0"))
                                          (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "104") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "93")) (ifInst ""  (formula "161")) (ifInst ""  (formula "93")) (ifInst ""  (formula "103")) (ifInst ""  (formula "112")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnon" (formula "104") (term "1,0"))
                                          (rule "wellFormedAnon" (formula "104") (term "0,1,0"))
                                          (rule "translateJavaAddInt" (formula "104") (term "2,0,1,1"))
                                          (rule "translateJavaAddInt" (formula "104") (term "2,1,1,0,1"))
                                          (rule "replace_known_left" (formula "104") (term "0,0,1,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "15")) (ifInst ""  (formula "5")))
                                          (rule "polySimp_addComm0" (formula "104") (term "2,1,1,0,1"))
                                          (rule "replace_known_left" (formula "104") (term "1,0,1") (ifseqformula "102"))
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "polySimp_addComm0" (formula "104") (term "2,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "104") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "104") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "104") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "104") (term "1,0,1") (ifseqformula "101"))
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "inEqSimp_commuteLeq" (formula "104") (term "1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "104") (term "0,1"))
                                          (rule "replace_known_left" (formula "104") (term "0,1") (ifseqformula "116"))
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "inEqSimp_commuteLeq" (formula "104") (term "0,0"))
                                          (rule "replace_known_left" (formula "104") (term "0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "applyEq" (formula "104") (term "0,1,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "104") (term "2,0,1") (ifseqformula "42"))
                                          (rule "replace_known_left" (formula "104") (term "1") (ifseqformula "107"))
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "true_left" (formula "104"))
                                          (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "104") (term "0,0,0"))
                                          (rule "translateJavaAddInt" (formula "104") (term "0,2,0,0,0"))
                                          (rule "translateJavaMulInt" (formula "104") (term "0,0,2,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "104") (term "0,0,2,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "104") (term "0,2,0,0,0"))
                                          (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "104") (term "0,1,0"))
                                          (rule "translateJavaMulInt" (formula "104") (term "0,2,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "104") (term "0,2,0,1,0"))
                                          (rule "replaceKnownSelect_taclet01201200101012_0" (formula "104") (term "0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01201200101012_1" (formula "104") (term "0,1,0"))
                                          (rule "applyEq" (formula "104") (term "0,1,0") (ifseqformula "120"))
                                          (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "104") (term "0,0,1,1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "104") (term "1,0,0") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "161")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "104") (term "1,0") (ifseqformula "68"))
                                          (rule "wellFormedAnon" (formula "104") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "104") (term "0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "104") (term "2,1,1,0,0,1,1"))
                                          (rule "translateJavaAddInt" (formula "104") (term "2,0,1,0,1,1"))
                                          (rule "replace_known_left" (formula "104") (term "1,0,1,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "67")))
                                          (rule "polySimp_addComm0" (formula "104") (term "2,0,1,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "104") (term "2,1,1,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "104") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "104") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "104") (term "0,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "104") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "104") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "inEqSimp_commuteLeq" (formula "104") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "104") (term "1,0,1,1"))
                                          (rule "applyEq" (formula "104") (term "0,1,0,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "104") (term "2,0,1,0,1,1") (ifseqformula "42"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "104") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "104") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "104") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "104") (term "0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "95")))
                                          (rule "true_left" (formula "104"))
                                          (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "104") (term "0,0,1,1"))
                                          (rule "translateJavaMulInt" (formula "104") (term "0,0,2,0,0,1,1"))
                                          (rule "translateJavaAddInt" (formula "104") (term "0,2,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "104") (term "0,0,2,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "104") (term "0,2,0,0,1,1"))
                                          (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "104") (term "1,1,0,1,1"))
                                          (rule "translateJavaMulInt" (formula "104") (term "0,2,1,1,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "104") (term "0,2,1,1,0,1,1"))
                                          (rule "replaceKnownSelect_taclet01201200101012_2" (formula "104") (term "1,1,0,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01201200101012_3" (formula "104") (term "1,1,0,1,1"))
                                          (rule "applyEq" (formula "104") (term "1,1,0,1,1") (ifseqformula "84"))
                                          (rule "nnf_imp2or" (formula "3") (term "0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "56") (term "0,0,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "75"))
                                          (rule "times_zero_1" (formula "74") (term "0,0"))
                                          (rule "add_zero_left" (formula "74") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "74") (ifseqformula "73"))
                                          (rule "times_zero_1" (formula "74") (term "1,1,0"))
                                          (rule "greater_literals" (formula "74") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "leq_literals" (formula "74") (term "0"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "true_left" (formula "74"))
                                          (rule "nnf_notAnd" (formula "129") (term "0,0"))
                                          (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "61") (term "0,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "61") (term "0,0,2,0,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "61") (term "0,2,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "0,0,2,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "61") (term "0,2,0,1,1,0"))
                                          (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "61") (term "0,1,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1,0,0") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "161")) (ifInst ""  (formula "20")))
                                          (rule "wellFormedAnonEQ" (formula "61") (term "1,0") (ifseqformula "69"))
                                          (rule "wellFormedAnon" (formula "61") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "61") (term "0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "61") (term "2,0,1,0,1,1"))
                                          (rule "translateJavaAddInt" (formula "61") (term "2,1,1,0,0,1,1"))
                                          (rule "replace_known_left" (formula "61") (term "0,0,0,1,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "15")) (ifInst ""  (formula "5")) (ifInst ""  (formula "68")))
                                          (rule "polySimp_addComm0" (formula "61") (term "2,0,1,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "61") (term "2,1,1,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "61") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "61") (term "0,1,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "61") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "inEqSimp_commuteLeq" (formula "61") (term "1,0,1,1"))
                                          (rule "applyEq" (formula "61") (term "1,0,0,1,1,1") (ifseqformula "127"))
                                          (rule "applyEq" (formula "61") (term "2,0,1,0,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "61") (term "0,1,0,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "61") (term "2,0,0,1,1,1,1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "61") (term "1,0,1,1,1,1") (ifseqformula "127"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "97")))
                                          (rule "true_left" (formula "61"))
                                          (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "61") (term "0,1,0"))
                                          (rule "translateJavaMulInt" (formula "61") (term "0,2,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "0,2,0,1,0"))
                                          (rule "replaceKnownSelect_taclet01201200101012_2" (formula "61") (term "0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01201200101012_3" (formula "61") (term "0,1,0"))
                                          (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "84"))
                                          (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "61") (term "0,0,0"))
                                          (rule "translateJavaAddInt" (formula "61") (term "0,2,0,0,0"))
                                          (rule "translateJavaMulInt" (formula "61") (term "0,0,2,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "0,0,2,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "61") (term "0,2,0,0,0"))
                                          (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "61") (term "1,1,0,0"))
                                          (rule "translateJavaMulInt" (formula "61") (term "0,2,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "0,2,1,1,0,0"))
                                          (rule "replaceKnownSelect_taclet01201200101012_2" (formula "61") (term "1,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01201200101012_3" (formula "61") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "61") (term "1,1,0,0") (ifseqformula "84"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_BucketPointers" (formula "4") (term "1,1,0"))
                                          (rule "eqSymm" (formula "4") (term "1,0"))
                                          (rule "translateJavaAddInt" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_homoEq" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                          (rule "Contract_axiom_for_elementsToReadCountElement_in_BucketPointers" (formula "14") (term "0,1,1,0"))
                                          (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "163")) (ifInst ""  (formula "17")) (ifInst ""  (formula "161")))
                                          (rule "Contract_axiom_for_elementsToReadCountElement_in_BucketPointers" (formula "15") (term "0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "164")) (ifInst ""  (formula "162")) (ifInst ""  (formula "22")))
                                          (rule "wellFormedAnon" (formula "15") (term "1,0"))
                                          (rule "replace_known_left" (formula "15") (term "1,1,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "18")))
                                          (rule "Definition_axiom_for_elementsToReadCountElement_in_de_wiesler_BucketPointers" (formula "16") (term "0,1,1,0") (inst "b=b"))
                                          (rule "translateJavaCastInt" (formula "16") (term "0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                          (rule "applyEq" (formula "16") (term "1,1,1,1,0") (ifseqformula "44"))
                                          (rule "Definition_axiom_for_writtenElementsCountElement_in_de_wiesler_BucketPointers" (formula "16") (term "0,1,0") (inst "b=b"))
                                          (rule "translateJavaCastInt" (formula "16") (term "0,1,0"))
                                          (rule "applyEq" (formula "16") (term "1,0,1,0") (ifseqformula "44"))
                                          (rule "pullOutSelect" (formula "106") (term "0,1,1,1,1") (inst "selectSK=arr_2"))
                                          (rule "applyEq" (formula "63") (term "0,0,0") (ifseqformula "106"))
                                          (rule "applyEq" (formula "63") (term "0,1,1,0") (ifseqformula "106"))
                                          (rule "applyEq" (formula "107") (term "0,0,1,1") (ifseqformula "106"))
                                          (rule "simplifySelectOfAnonEQ" (formula "106") (ifseqformula "70"))
                                           (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "138")) (ifInst ""  (formula "10")))
                                          (rule "elementOfSingleton" (formula "106") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "106"))
                                          (rule "polySimp_homoEq" (formula "106") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "106") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "106") (term "0,0,0"))
                                          (rule "add_literals" (formula "106") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "106") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "106") (term "0,0,0"))
                                          (rule "equal_literals" (formula "106") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "106"))
                                          (rule "applyEq" (formula "107") (term "0,1,1,0") (ifseqformula "106"))
                                          (rule "applyEq" (formula "107") (term "0,0,0") (ifseqformula "106"))
                                          (rule "simplifySelectOfAnon" (formula "106"))
                                           (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "138")) (ifInst ""  (formula "10")))
                                          (rule "polySimp_homoEq" (formula "107"))
                                          (rule "polySimp_addComm1" (formula "107") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "107"))
                                          (rule "polySimp_mulComm0" (formula "107") (term "1"))
                                          (rule "polySimp_rightDist" (formula "107") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "107") (term "1,1"))
                                          (rule "mul_literals" (formula "107") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "107") (term "1,1"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "107"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                          (rule "mul_literals" (formula "63") (term "1"))
                                          (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "3") (term "0,1,1,0") (inst "b=b_1"))
                                          (rule "translateJavaCastInt" (formula "3") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "3") (term "1,0,1,1,0") (ifseqformula "44"))
                                          (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "3") (term "0,0,1,1,1,0"))
                                          (rule "translateJavaSubInt" (formula "3") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "3") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,0,1,1,1,0"))
                                          (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "3") (term "0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "translateJavaAddInt" (formula "3") (term "3,0,2,1,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "3") (term "4,0,2,1,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "3") (term "0,4,0,0,1,1,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "3") (term "3,0,0,1,1,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "3") (term "0,0,0,1,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "3") (term "4,0,0,1,1,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "4,0,0,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "3") (term "1,4,0,0,1,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "4,0,0,1,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,4,0,0,1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,0,1,0"))
                                          (rule "Definition_axiom_for_elementsToReadOfBucketCountClassEq_in_de_wiesler_BucketPointers" (formula "13") (term "2,0,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "13") (term "3,2,0,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "13") (term "4,2,0,1,1,0"))
                                          (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "13") (term "1,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "13") (term "1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0"))
                                          (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "13") (term "0,1,1,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "162")) (ifInst ""  (formula "165")) (ifInst ""  (formula "22")))
                                          (rule "wellFormedAnon" (formula "13") (term "1,0"))
                                          (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "18")))
                                          (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "14") (term "0,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "translateJavaAddInt" (formula "14") (term "4,0,1,0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "14") (term "3,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                                          (rule "Definition_axiom_for_elementsToReadOfBucketCountClassEq_in_de_wiesler_BucketPointers" (formula "59") (term "2,0,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "59") (term "4,2,0,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "59") (term "3,2,0,1,1,0"))
                                          (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "59") (term "0,1,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "59") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "59") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "59") (term "0,1,0,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "59") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,1,0,1,0"))
                                          (rule "Definition_axiom_for_bucketSize_in_de_wiesler_BucketPointers" (formula "59") (term "1,1,1,0"))
                                          (rule "translateJavaSubInt" (formula "59") (term "1,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "59") (term "2,0,1,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "59") (term "2,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "59") (term "1,1,1,0"))
                                          (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "95") (term "0"))
                                          (rule "translateJavaSubInt" (formula "95") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "95") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "95") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "95") (term "1,0,0"))
                                          (rule "mul_literals" (formula "95") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "93") (term "0,1"))
                                          (rule "replace_known_right" (formula "93") (term "0,0,1") (ifseqformula "139"))
                                           (builtin "One Step Simplification" (formula "93"))
                                          (rule "Contract_axiom_for_isValidBucketPointer_in_BucketPointers" (formula "133") (term "0,1,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "133") (term "1,0,0") (ifseqformula "71"))
                                           (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "165")) (ifInst ""  (formula "23")))
                                          (rule "wellFormedAnonEQ" (formula "133") (term "1,0") (ifseqformula "71"))
                                          (rule "wellFormedAnon" (formula "133") (term "0,1,0"))
                                          (rule "wellFormedAnon" (formula "133") (term "0,0,1,0"))
                                          (rule "replace_known_left" (formula "133") (term "1,0,0,1,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "19")) (ifInst ""  (formula "5")) (ifInst ""  (formula "70")))
                                          (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "134") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "134"))
                                          (rule "translateJavaMulInt" (formula "134") (term "0,2,1,0,1,0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "134") (term "2,1,1,0,0,0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "134") (term "0,2,1,0,1,0,0,0,1,0"))
                                          (rule "translateJavaMulInt" (formula "134") (term "0,2,0,1,0,0,0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "134") (term "0,2,0,1,1,0,0,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "134") (term "2,1,1,1,0,0,0,1,0"))
                                          (rule "translateJavaMulInt" (formula "134") (term "0,2,1,0,0,0,0,0,1,0"))
                                          (rule "translateJavaMulInt" (formula "134") (term "0,2,0,1,1,0,0,1,0"))
                                          (rule "translateJavaMulInt" (formula "134") (term "0,2,0,0,1,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "134") (term "0,2,0,0,1,1,0"))
                                          (rule "eqSymm" (formula "134") (term "0,1,0,0,1,0"))
                                          (rule "translateJavaMulInt" (formula "134") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                          (rule "translateJavaMulInt" (formula "134") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                          (rule "translateJavaMulInt" (formula "134") (term "0,0,2,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "134") (term "0,2,0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "134") (term "0,2,1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "134") (term "0,2,0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "134") (term "0,2,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "134") (term "0,2,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "134") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "134") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "134") (term "0,0,2,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "134") (term "2,1,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "134") (term "2,1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "134") (term "0,2,1,0,1,0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "134") (term "0,2,0,1,1,0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "134") (term "0,2,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "134") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "134") (term "0,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "134") (term "1,1,1,0,0,1,0") (ifseqformula "130"))
                                          (rule "nnf_imp2or" (formula "132") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "136") (ifseqformula "55"))
                                          (rule "polySimp_rightDist" (formula "136") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "136") (term "0,0,0"))
                                          (rule "mul_literals" (formula "136") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "136") (term "1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "136") (term "0"))
                                          (rule "polySimp_addComm1" (formula "136") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "136") (term "0"))
                                          (rule "add_literals" (formula "136") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "136") (term "1,0"))
                                          (rule "polySimp_addLiterals" (formula "136") (term "0"))
                                          (rule "polySimp_addComm1" (formula "136") (term "0"))
                                          (rule "add_literals" (formula "136") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "136"))
                                          (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "137") (ifseqformula "53"))
                                          (rule "polySimp_rightDist" (formula "137") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "137") (term "0"))
                                          (rule "polySimp_rightDist" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "137") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "137") (term "0,0"))
                                          (rule "add_literals" (formula "137") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "137"))
                                          (rule "polySimp_mulLiterals" (formula "137") (term "0"))
                                          (rule "polySimp_elimOne" (formula "137") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "170") (term "1") (ifseqformula "137"))
                                          (rule "inEqSimp_homoInEq0" (formula "170") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "170") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "170") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "170") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "170") (term "1,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "170") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "170") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "170") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "170") (term "0,0,1"))
                                          (rule "add_literals" (formula "170") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "170") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "170") (term "0,0,1"))
                                          (rule "qeq_literals" (formula "170") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "170"))
                                          (rule "inEqSimp_geqRight" (formula "170"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_subsumption0" (formula "138") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "138") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "138") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "138") (term "1,0,0"))
                                          (rule "mul_literals" (formula "138") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "138") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "138") (term "0,0,0"))
                                          (rule "add_literals" (formula "138") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "138") (term "0,0"))
                                          (rule "add_literals" (formula "138") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "138") (term "1,0,0"))
                                          (rule "add_literals" (formula "138") (term "0,0"))
                                          (rule "qeq_literals" (formula "138") (term "0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "true_left" (formula "138"))
                                          (rule "inEqSimp_exactShadow3" (formula "81") (ifseqformula "82"))
                                          (rule "polySimp_mulAssoc" (formula "81") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "81") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "81") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "81"))
                                          (rule "polySimp_mulLiterals" (formula "81") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "111") (ifseqformula "112"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "111") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "111"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "0"))
                                          (rule "polySimp_elimOne" (formula "111") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "118") (ifseqformula "113"))
                                          (rule "polySimp_mulComm0" (formula "118") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "118") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "118"))
                                          (rule "polySimp_mulLiterals" (formula "118") (term "0"))
                                          (rule "polySimp_elimOne" (formula "118") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "125") (ifseqformula "113"))
                                          (rule "polySimp_mulAssoc" (formula "125") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "125") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "125") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "125") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "125"))
                                          (rule "polySimp_mulLiterals" (formula "125") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "125") (ifseqformula "50"))
                                          (rule "greater_literals" (formula "125") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "125"))
                                          (rule "mul_literals" (formula "125") (term "0,0"))
                                          (rule "leq_literals" (formula "125") (term "0"))
                                           (builtin "One Step Simplification" (formula "125"))
                                          (rule "true_left" (formula "125"))
                                          (rule "elementOfUnion" (formula "108") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "108") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "108") (term "0,0,1,0,0") (ifseqformula "150"))
                                           (builtin "One Step Simplification" (formula "108"))
                                          (rule "elimGcdLeq_antec" (formula "139") (inst "elimGcdRightDiv=Z(6(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "139") (term "1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "139") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "139") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "139") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "139"))
                                          (rule "mul_literals" (formula "139") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "139") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "139") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "139") (term "0,0"))
                                          (rule "add_literals" (formula "139") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "139") (term "1,0,0"))
                                          (rule "add_literals" (formula "139") (term "0,0"))
                                          (rule "qeq_literals" (formula "139") (term "0"))
                                           (builtin "One Step Simplification" (formula "139"))
                                          (rule "inEqSimp_subsumption0" (formula "74") (ifseqformula "139"))
                                          (rule "leq_literals" (formula "74") (term "0"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "true_left" (formula "74"))
                                          (rule "Definition_axiom_for_elementsToReadOfBucketCountClassEq_in_de_wiesler_BucketPointers" (formula "69") (term "2,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "69") (term "4,2,0,1,0"))
                                          (rule "translateJavaAddInt" (formula "69") (term "3,2,0,1,0"))
                                          (rule "polySimp_homoEq" (formula "69") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "69") (term "0,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "69") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "69") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "0,1,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "100") (ifseqformula "101"))
                                          (rule "polySimp_mulComm0" (formula "100") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "100"))
                                          (rule "polySimp_mulLiterals" (formula "100") (term "1"))
                                          (rule "polySimp_elimOne" (formula "100") (term "1"))
                                          (rule "jdiv_axiom" (formula "94") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "94"))
                                          (rule "applyEq" (formula "94") (term "1") (ifseqformula "95"))
                                          (rule "polyDiv_pullOut" (formula "94") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,2,0,2,0"))
                                          (rule "equal_literals" (formula "94") (term "0,0,2,0"))
                                           (builtin "One Step Simplification" (formula "94"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,2,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "94") (term "0,0,0,2,0"))
                                          (rule "add_literals" (formula "94") (term "1,0,0,0,2,0"))
                                          (rule "times_zero_1" (formula "94") (term "0,0,0,2,0"))
                                          (rule "div_literals" (formula "94") (term "0,0,2,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "2,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "2,0"))
                                           (builtin "One Step Simplification" (formula "94"))
                                          (rule "polyDiv_pullOut" (formula "94") (term "0,1") (inst "polyDivCoeff=l_0"))
                                          (rule "equal_literals" (formula "94") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "94"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,1"))
                                          (rule "polySimp_homoEq" (formula "94") (term "1"))
                                          (rule "polySimp_pullOutFactor0" (formula "94") (term "0,0,0,1,0,1"))
                                          (rule "add_literals" (formula "94") (term "1,0,0,0,1,0,1"))
                                          (rule "times_zero_1" (formula "94") (term "0,0,0,1,0,1"))
                                          (rule "div_literals" (formula "94") (term "0,0,1,0,1"))
                                          (rule "add_zero_left" (formula "94") (term "0,1,0,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "94") (term "0,1"))
                                          (rule "add_literals" (formula "94") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "94") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "94"))
                                          (rule "true_left" (formula "94"))
                                          (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "105"))
                                          (rule "polySimp_mulComm0" (formula "104") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "104"))
                                          (rule "polySimp_mulLiterals" (formula "104") (term "1"))
                                          (rule "polySimp_elimOne" (formula "104") (term "1"))
                                          (rule "expand_moduloInteger" (formula "38") (term "0"))
                                          (rule "replace_int_RANGE" (formula "38") (term "1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "38") (term "0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "38") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "38"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "38"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0"))
                                          (rule "elementOfUnion" (formula "107") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "107"))
                                          (rule "applyEqReverse" (formula "108") (term "0,0,1,1") (ifseqformula "107"))
                                          (rule "applyEqReverse" (formula "65") (term "0,0,0") (ifseqformula "107"))
                                          (rule "applyEqReverse" (formula "108") (term "0,1,1,1,1") (ifseqformula "107"))
                                          (rule "applyEqReverse" (formula "108") (term "0,1,1,0") (ifseqformula "107"))
                                          (rule "applyEqReverse" (formula "65") (term "0,1,1,0") (ifseqformula "107"))
                                          (rule "applyEqReverse" (formula "108") (term "0,0,0") (ifseqformula "107"))
                                          (rule "hideAuxiliaryEq" (formula "107"))
                                          (rule "onlyCreatedObjectsAreReferencedFinal" (formula "156") (term "0") (ifseqformula "20") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "140"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "52") (term "0,0"))
                                          (rule "add_zero_left" (formula "52") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "52") (ifseqformula "78"))
                                          (rule "greater_literals" (formula "52") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "mul_literals" (formula "52") (term "1,0"))
                                          (rule "qeq_literals" (formula "52") (term "0"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "closeFalse" (formula "52"))
                                       )
                                       (branch "Usage"
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "translateJavaAddInt" (formula "101") (term "0,1,0"))
                                          (rule "variableDeclarationAssign" (formula "101") (term "1"))
                                          (rule "variableDeclaration" (formula "101") (term "1") (newnames "var_2"))
                                          (rule "assignment" (formula "101") (term "1"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "variableDeclarationAssign" (formula "101") (term "1"))
                                          (rule "variableDeclaration" (formula "101") (term "1") (newnames "var_3"))
                                          (rule "assignment" (formula "101") (term "1"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "variableDeclarationAssign" (formula "101") (term "1"))
                                          (rule "variableDeclaration" (formula "101") (term "1") (newnames "var_4"))
                                          (rule "assignment" (formula "101") (term "1"))
                                           (builtin "One Step Simplification" (formula "101"))
                                           (builtin "Use Operation Contract" (formula "101") (newnames "heapBefore_copy_nonoverlapping,exc_5,heapAfter_copy_nonoverlapping,anon_heap_copy_nonoverlapping") (contract "de.wiesler.Functions[de.wiesler.Functions::copy_nonoverlapping([I,int,[I,int,int)].JML normal_behavior operation contract.0"))
                                          (branch "Post (copy_nonoverlapping)"
                                              (builtin "One Step Simplification" (formula "103"))
                                              (builtin "One Step Simplification" (formula "75"))
                                             (rule "expand_inInt" (formula "75") (term "0,0,1,1,0,1"))
                                             (rule "expand_inInt" (formula "75") (term "1,0,0,0,1,0,1"))
                                             (rule "replace_int_MIN" (formula "75") (term "0,1,0,0,1,1,0,1"))
                                             (rule "replace_int_MAX" (formula "75") (term "1,0,0,0,1,1,0,1"))
                                             (rule "replace_int_MAX" (formula "75") (term "1,0,1,0,0,0,1,0,1"))
                                             (rule "replace_int_MIN" (formula "75") (term "0,1,1,0,0,0,1,0,1"))
                                             (rule "andLeft" (formula "75"))
                                             (rule "andLeft" (formula "76"))
                                             (rule "andLeft" (formula "76"))
                                             (rule "andLeft" (formula "76"))
                                             (rule "translateJavaSubInt" (formula "75") (term "2,1,0"))
                                             (rule "translateJavaAddInt" (formula "76") (term "0,2,1,1,0"))
                                             (rule "translateJavaAddInt" (formula "77") (term "3,1,1,0"))
                                             (rule "translateJavaAddInt" (formula "76") (term "0,2,0,1,0"))
                                             (rule "add_zero_left" (formula "76") (term "0,2,0,1,0"))
                                             (rule "translateJavaAddInt" (formula "77") (term "3,0,1,0"))
                                             (rule "add_zero_left" (formula "77") (term "3,0,1,0"))
                                             (rule "translateJavaAddInt" (formula "75") (term "0,2,1,0"))
                                             (rule "add_zero_left" (formula "75") (term "0,2,1,0"))
                                             (rule "sub_literals" (formula "75") (term "2,1,0"))
                                             (rule "eqSymm" (formula "76") (term "1,0"))
                                             (rule "eqSymm" (formula "77") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "77") (term "3,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "77") (term "0,3,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "76") (term "1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "77") (term "1,0,0"))
                                             (rule "blockEmpty" (formula "106") (term "1"))
                                              (builtin "Block Contract (Internal)" (formula "106") (newnames "exc_6,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,o,f"))
                                             (branch "Validity"
                                                 (builtin "One Step Simplification" (formula "107"))
                                                 (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "31")))
                                                (rule "eqSymm" (formula "107") (term "0,0,1,0,1"))
                                                (rule "variableDeclarationAssign" (formula "107") (term "1"))
                                                (rule "variableDeclaration" (formula "107") (term "1") (newnames "exc_6_1"))
                                                (rule "assignment" (formula "107") (term "1"))
                                                 (builtin "One Step Simplification" (formula "107"))
                                                (rule "emptyStatement" (formula "107") (term "1"))
                                                 (builtin "One Step Simplification" (formula "107"))
                                                (rule "emptyStatement" (formula "107") (term "1"))
                                                (rule "commute_and" (formula "77") (term "0,0"))
                                                (rule "commute_and" (formula "76") (term "1,0,0"))
                                                (rule "commute_and" (formula "76") (term "0,0,0"))
                                                (rule "shift_paren_and" (formula "76") (term "0,0"))
                                                (rule "commute_and_2" (formula "76") (term "0,0,0"))
                                                (rule "tryEmpty" (formula "107") (term "1"))
                                                (rule "blockEmptyLabel" (formula "107") (term "1"))
                                                (rule "blockEmpty" (formula "107") (term "1"))
                                                (rule "methodCallEmpty" (formula "107") (term "1"))
                                                (rule "emptyModality" (formula "107") (term "1"))
                                                (rule "andRight" (formula "107"))
                                                (branch
                                                    (builtin "One Step Simplification" (formula "107"))
                                                   (rule "closeTrue" (formula "107"))
                                                )
                                                (branch
                                                    (builtin "One Step Simplification" (formula "107"))
                                                   (rule "closeTrue" (formula "107"))
                                                )
                                             )
                                             (branch "Precondition"
                                                (rule "andRight" (formula "106"))
                                                (branch
                                                    (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "31")))
                                                   (rule "closeTrue" (formula "106"))
                                                )
                                                (branch
                                                    (builtin "One Step Simplification" (formula "106"))
                                                   (rule "wellFormedAnonEQ" (formula "106") (ifseqformula "75"))
                                                   (rule "wellFormedAnonEQ" (formula "106") (term "0") (ifseqformula "63"))
                                                   (rule "wellFormedAnon" (formula "106") (term "0,0"))
                                                   (rule "wellFormedAnon" (formula "106") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "106") (term "1") (ifseqformula "74"))
                                                    (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")))
                                                   (rule "closeTrue" (formula "106"))
                                                )
                                             )
                                             (branch "Usage"
                                                 (builtin "One Step Simplification" (formula "107"))
                                                 (builtin "One Step Simplification" (formula "79"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "1,1,0") (ifseqformula "75"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,1,1,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "79"))
                                                (rule "andLeft" (formula "79"))
                                                (rule "andLeft" (formula "79"))
                                                (rule "andLeft" (formula "81"))
                                                (rule "replace_known_left" (formula "80") (term "0") (ifseqformula "79"))
                                                 (builtin "One Step Simplification" (formula "80"))
                                                (rule "true_left" (formula "80"))
                                                (rule "commute_and" (formula "77") (term "0,0"))
                                                (rule "commute_and" (formula "76") (term "1,0,0"))
                                                (rule "commute_and" (formula "76") (term "0,0,0"))
                                                (rule "shift_paren_and" (formula "76") (term "0,0"))
                                                (rule "commute_and_2" (formula "76") (term "0,0,0"))
                                                (rule "elim_double_block_2" (formula "109") (term "1"))
                                                (rule "ifUnfold" (formula "109") (term "1") (inst "#boolv=x_4"))
                                                (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_7"))
                                                (rule "inequality_comparison_simple" (formula "109") (term "1"))
                                                 (builtin "One Step Simplification" (formula "109"))
                                                (rule "replace_known_left" (formula "109") (term "0,0,1,0") (ifseqformula "79"))
                                                 (builtin "One Step Simplification" (formula "109"))
                                                (rule "ifSplit" (formula "109"))
                                                (branch "if x_7 true"
                                                    (builtin "One Step Simplification" (formula "110"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_7 false"
                                                    (builtin "One Step Simplification" (formula "110"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "blockEmpty" (formula "109") (term "1"))
                                                    (builtin "Block Contract (Internal)" (formula "109") (newnames "exc_7,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                                                   (branch "Validity"
                                                       (builtin "One Step Simplification" (formula "110"))
                                                       (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "31")))
                                                      (rule "eqSymm" (formula "110") (term "0,0,1,0,1"))
                                                      (rule "variableDeclarationAssign" (formula "110") (term "1"))
                                                      (rule "variableDeclaration" (formula "110") (term "1") (newnames "exc_7_1"))
                                                      (rule "assignment" (formula "110") (term "1"))
                                                       (builtin "One Step Simplification" (formula "110"))
                                                      (rule "emptyStatement" (formula "110") (term "1"))
                                                       (builtin "One Step Simplification" (formula "110"))
                                                      (rule "emptyStatement" (formula "110") (term "1"))
                                                      (rule "tryEmpty" (formula "110") (term "1"))
                                                      (rule "blockEmptyLabel" (formula "110") (term "1"))
                                                      (rule "blockEmpty" (formula "110") (term "1"))
                                                      (rule "methodCallEmpty" (formula "110") (term "1"))
                                                      (rule "emptyModality" (formula "110") (term "1"))
                                                      (rule "andRight" (formula "110"))
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "110"))
                                                         (rule "closeTrue" (formula "110"))
                                                      )
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "110"))
                                                         (rule "closeTrue" (formula "110"))
                                                      )
                                                   )
                                                   (branch "Precondition"
                                                      (rule "andRight" (formula "109"))
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "31")))
                                                         (rule "closeTrue" (formula "109"))
                                                      )
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "109"))
                                                         (rule "wellFormedAnonEQ" (formula "109") (ifseqformula "75"))
                                                         (rule "wellFormedAnonEQ" (formula "109") (term "0") (ifseqformula "63"))
                                                         (rule "wellFormedAnon" (formula "109") (term "0,0"))
                                                         (rule "wellFormedAnon" (formula "109") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "109") (term "1,0,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                         (rule "closeTrue" (formula "109"))
                                                      )
                                                   )
                                                   (branch "Usage"
                                                       (builtin "One Step Simplification" (formula "110"))
                                                       (builtin "One Step Simplification" (formula "82"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "1,1,0") (ifseqformula "75"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "0,1,1,0") (ifseqformula "63"))
                                                       (builtin "One Step Simplification" (formula "82"))
                                                      (rule "andLeft" (formula "82"))
                                                      (rule "andLeft" (formula "82"))
                                                      (rule "andLeft" (formula "84"))
                                                      (rule "eqSymm" (formula "85"))
                                                      (rule "replace_known_left" (formula "83") (term "0") (ifseqformula "82"))
                                                       (builtin "One Step Simplification" (formula "83"))
                                                      (rule "true_left" (formula "83"))
                                                      (rule "elim_double_block_2" (formula "112") (term "1"))
                                                      (rule "ifUnfold" (formula "112") (term "1") (inst "#boolv=x_4"))
                                                      (rule "variableDeclaration" (formula "112") (term "1") (newnames "x_8"))
                                                      (rule "inequality_comparison_simple" (formula "112") (term "1"))
                                                       (builtin "One Step Simplification" (formula "112"))
                                                      (rule "replace_known_left" (formula "112") (term "0,0,1,0") (ifseqformula "82"))
                                                       (builtin "One Step Simplification" (formula "112"))
                                                       (builtin "Use Dependency Contract" (formula "15") (ifInst ""  (formula "112") (term "1,0,1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                      (rule "wellFormedAnon" (formula "85") (term "1,1,0,0,0"))
                                                      (rule "replace_known_left" (formula "85") (term "1,0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "111")) (ifInst ""  (formula "26")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "15")) (ifInst ""  (formula "33")))
                                                      (rule "true_left" (formula "85"))
                                                      (rule "ifSplit" (formula "112"))
                                                      (branch "if x_8 true"
                                                          (builtin "One Step Simplification" (formula "113"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "if x_8 false"
                                                          (builtin "One Step Simplification" (formula "113"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "blockEmpty" (formula "112") (term "1"))
                                                          (builtin "Block Contract (Internal)" (formula "112") (newnames "exc_8,heap_Before_BLOCK_4,savedHeap_Before_BLOCK_4,o,f"))
                                                         (branch "Validity"
                                                             (builtin "One Step Simplification" (formula "113"))
                                                             (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "31")))
                                                            (rule "eqSymm" (formula "113") (term "0,0,1,0,1"))
                                                            (rule "variableDeclarationAssign" (formula "113") (term "1"))
                                                            (rule "variableDeclaration" (formula "113") (term "1") (newnames "exc_8_1"))
                                                            (rule "assignment" (formula "113") (term "1"))
                                                             (builtin "One Step Simplification" (formula "113"))
                                                            (rule "emptyStatement" (formula "113") (term "1"))
                                                             (builtin "One Step Simplification" (formula "113"))
                                                            (rule "emptyStatement" (formula "113") (term "1"))
                                                            (rule "tryEmpty" (formula "113") (term "1"))
                                                            (rule "blockEmptyLabel" (formula "113") (term "1"))
                                                            (rule "blockEmpty" (formula "113") (term "1"))
                                                            (rule "methodCallEmpty" (formula "113") (term "1"))
                                                            (rule "emptyModality" (formula "113") (term "1"))
                                                            (rule "andRight" (formula "113"))
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "113"))
                                                               (rule "closeTrue" (formula "113"))
                                                            )
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "113"))
                                                               (rule "closeTrue" (formula "113"))
                                                            )
                                                         )
                                                         (branch "Precondition"
                                                            (rule "andRight" (formula "112"))
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "31")))
                                                               (rule "closeTrue" (formula "112"))
                                                            )
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "112"))
                                                               (rule "wellFormedAnonEQ" (formula "112") (ifseqformula "75"))
                                                               (rule "wellFormedAnonEQ" (formula "112") (term "0") (ifseqformula "63"))
                                                               (rule "wellFormedAnon" (formula "112") (term "0,0"))
                                                               (rule "wellFormedAnon" (formula "112") (term "0,0,0"))
                                                               (rule "replace_known_left" (formula "112") (term "1,0,0,0") (ifseqformula "19"))
                                                                (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                               (rule "closeTrue" (formula "112"))
                                                            )
                                                         )
                                                         (branch "Usage"
                                                             (builtin "One Step Simplification" (formula "113"))
                                                             (builtin "One Step Simplification" (formula "85"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,1,0") (ifseqformula "75"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1,1,0") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "85"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "replace_known_left" (formula "86") (term "0") (ifseqformula "85"))
                                                             (builtin "One Step Simplification" (formula "86"))
                                                            (rule "true_left" (formula "86"))
                                                            (rule "applyEq" (formula "87") (term "1") (ifseqformula "68"))
                                                            (rule "elim_double_block_2" (formula "115") (term "1"))
                                                            (rule "ifUnfold" (formula "115") (term "1") (inst "#boolv=x_4"))
                                                            (rule "variableDeclaration" (formula "115") (term "1") (newnames "x_9"))
                                                            (rule "inequality_comparison_simple" (formula "115") (term "1"))
                                                             (builtin "One Step Simplification" (formula "115"))
                                                            (rule "replace_known_left" (formula "115") (term "0,0,1,0") (ifseqformula "85"))
                                                             (builtin "One Step Simplification" (formula "115"))
                                                             (builtin "Use Dependency Contract" (formula "14") (ifInst ""  (formula "115") (term "0,0,1,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                            (rule "ifSplit" (formula "115"))
                                                            (branch "if x_9 true"
                                                                (builtin "One Step Simplification" (formula "116"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "if x_9 false"
                                                                (builtin "One Step Simplification" (formula "116"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "blockEmpty" (formula "115") (term "1"))
                                                                (builtin "Block Contract (Internal)" (formula "115") (newnames "exc_9,heap_Before_BLOCK_5,savedHeap_Before_BLOCK_5,o,f"))
                                                               (branch "Validity"
                                                                   (builtin "One Step Simplification" (formula "116"))
                                                                   (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "31")))
                                                                  (rule "eqSymm" (formula "116") (term "0,0,1,0,1"))
                                                                  (rule "variableDeclarationAssign" (formula "116") (term "1"))
                                                                  (rule "variableDeclaration" (formula "116") (term "1") (newnames "exc_9_1"))
                                                                  (rule "assignment" (formula "116") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "116"))
                                                                  (rule "emptyStatement" (formula "116") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "116"))
                                                                  (rule "emptyStatement" (formula "116") (term "1"))
                                                                  (rule "tryEmpty" (formula "116") (term "1"))
                                                                  (rule "blockEmptyLabel" (formula "116") (term "1"))
                                                                  (rule "blockEmpty" (formula "116") (term "1"))
                                                                  (rule "methodCallEmpty" (formula "116") (term "1"))
                                                                  (rule "emptyModality" (formula "116") (term "1"))
                                                                  (rule "andRight" (formula "116"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "116"))
                                                                     (rule "closeTrue" (formula "116"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "116"))
                                                                     (rule "closeTrue" (formula "116"))
                                                                  )
                                                               )
                                                               (branch "Precondition"
                                                                  (rule "andRight" (formula "115"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "31")))
                                                                     (rule "closeTrue" (formula "115"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "115"))
                                                                     (rule "wellFormedAnonEQ" (formula "115") (ifseqformula "75"))
                                                                     (rule "wellFormedAnonEQ" (formula "115") (term "0") (ifseqformula "63"))
                                                                     (rule "wellFormedAnon" (formula "115") (term "0,0"))
                                                                     (rule "wellFormedAnon" (formula "115") (term "0,0,0"))
                                                                     (rule "replace_known_left" (formula "115") (term "1") (ifseqformula "74"))
                                                                      (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")))
                                                                     (rule "closeTrue" (formula "115"))
                                                                  )
                                                               )
                                                               (branch "Usage"
                                                                   (builtin "One Step Simplification" (formula "116"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "1,1,0") (ifseqformula "75"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,1,1,0") (ifseqformula "63"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "andLeft" (formula "88"))
                                                                  (rule "andLeft" (formula "88"))
                                                                  (rule "replace_known_left" (formula "89") (term "0") (ifseqformula "88"))
                                                                   (builtin "One Step Simplification" (formula "89"))
                                                                  (rule "true_left" (formula "89"))
                                                                  (rule "elim_double_block_2" (formula "117") (term "1"))
                                                                  (rule "ifUnfold" (formula "117") (term "1") (inst "#boolv=x_4"))
                                                                  (rule "variableDeclaration" (formula "117") (term "1") (newnames "x_10"))
                                                                  (rule "inequality_comparison_simple" (formula "117") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "117"))
                                                                  (rule "replace_known_left" (formula "117") (term "0,0,1,0") (ifseqformula "88"))
                                                                   (builtin "One Step Simplification" (formula "117"))
                                                                   (builtin "Use Dependency Contract" (formula "67") (term "0") (ifInst ""  (formula "69") (term "0")) (ifInst ""  (formula "63")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::lastReadOf(int)].JML accessible clause.0"))
                                                                   (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "115")) (ifInst ""  (formula "2")) (ifInst ""  (formula "27")))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,0,0,0,0"))
                                                                  (rule "wellFormedAnonEQ" (formula "90") (term "1,0,0,0,0") (ifseqformula "63"))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,0,0,0,0,0"))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,1,0,0,0,0"))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,0,1,0,0,0,0"))
                                                                  (rule "expand_inInt" (formula "90") (term "1,0,0,0"))
                                                                  (rule "replace_int_MAX" (formula "90") (term "1,0,1,0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "90") (term "0,1,1,0,0,0"))
                                                                  (rule "eqSymm" (formula "90") (term "1"))
                                                                  (rule "translateJavaMulInt" (formula "90") (term "0,1,1,1,0"))
                                                                  (rule "replace_known_left" (formula "90") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")))
                                                                  (rule "polySimp_mulComm0" (formula "90") (term "0,1,1,1,0"))
                                                                  (rule "disjointDefinition" (formula "90") (term "1,0"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "true_left" (formula "90"))
                                                                   (builtin "Use Dependency Contract" (formula "68") (term "1,1") (ifInst ""  (formula "68") (term "0")) (ifInst ""  (formula "63")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                   (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "115")) (ifInst ""  (formula "2")) (ifInst ""  (formula "27")))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,0,0,0,0"))
                                                                  (rule "wellFormedAnonEQ" (formula "90") (term "1,0,0,0,0") (ifseqformula "63"))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,0,0,0,0,0"))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,1,0,0,0,0"))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,0,1,0,0,0,0"))
                                                                  (rule "expand_inInt" (formula "90") (term "1,0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "90") (term "0,1,1,0,0,0"))
                                                                  (rule "replace_int_MAX" (formula "90") (term "1,0,1,0,0,0"))
                                                                  (rule "eqSymm" (formula "90") (term "1"))
                                                                  (rule "translateJavaMulInt" (formula "90") (term "0,1,0,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "90") (term "0,1,1,1,1,0"))
                                                                  (rule "translateJavaMulInt" (formula "90") (term "0,0,1,1,1,1,0"))
                                                                  (rule "replace_known_left" (formula "90") (term "0,0,0,0,0,0,0") (ifseqformula "20"))
                                                                   (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")))
                                                                  (rule "polySimp_mulComm0" (formula "90") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "90") (term "0,0,1,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "90") (term "0,1,1,1,1,0"))
                                                                  (rule "disjointDefinition" (formula "90") (term "1,0"))
                                                                  (rule "disjointWithSingleton2" (formula "90") (term "1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "90") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "90") (term "0,1,0,0"))
                                                                  (rule "replace_known_left" (formula "90") (term "0,1,0,0") (ifseqformula "12"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "applyEq" (formula "90") (term "0,1") (ifseqformula "68"))
                                                                  (rule "applyEq" (formula "90") (term "1,1,0,0") (ifseqformula "36"))
                                                                  (rule "replace_known_left" (formula "90") (term "1,0,0") (ifseqformula "8"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "elementOfUnion" (formula "90") (term "0,1,0"))
                                                                  (rule "elementOfSingleton" (formula "90") (term "0,0,1,0"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "true_left" (formula "90"))
                                                                   (builtin "Use Dependency Contract" (formula "68") (term "0") (ifInst ""  (formula "16") (term "0,1,0")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                   (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "115")) (ifInst ""  (formula "14")) (ifInst ""  (formula "27")))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,0,0,0,0"))
                                                                  (rule "wellFormedAnon" (formula "90") (term "1,0,0,0,0"))
                                                                  (rule "wellFormedAnon" (formula "90") (term "0,1,0,0,0,0"))
                                                                  (rule "expand_inInt" (formula "90") (term "1,0,0,0"))
                                                                  (rule "replace_int_MAX" (formula "90") (term "1,0,1,0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "90") (term "0,1,1,0,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "90") (term "0,1,0,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "90") (term "0,1,1,1,1,0"))
                                                                  (rule "translateJavaMulInt" (formula "90") (term "0,0,1,1,1,1,0"))
                                                                  (rule "replace_known_left" (formula "90") (term "0,0,0,0,0,0") (ifseqformula "20"))
                                                                   (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")))
                                                                  (rule "polySimp_mulComm0" (formula "90") (term "0,0,1,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "90") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "90") (term "0,1,1,1,1,0"))
                                                                  (rule "disjointDefinition" (formula "90") (term "1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "90") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "90") (term "0,1,0,0"))
                                                                  (rule "replace_known_left" (formula "90") (term "0,1,0,0") (ifseqformula "12"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "applyEq" (formula "90") (term "0,1") (ifseqformula "68"))
                                                                  (rule "eqSymm" (formula "90") (term "1"))
                                                                  (rule "applyEq" (formula "90") (term "1,1,0,0") (ifseqformula "36"))
                                                                  (rule "replace_known_left" (formula "90") (term "1,0,0") (ifseqformula "8"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "distributeIntersection_2" (formula "90") (term "0,1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "90") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "90") (term "0,1,1,0"))
                                                                  (rule "distributeIntersection" (formula "90") (term "0,0,1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "90") (term "1,1,0"))
                                                                  (rule "disjointWithSingleton1" (formula "90") (term "1,1,1,0"))
                                                                  (rule "disjointWithSingleton1" (formula "90") (term "0,1,1,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "90") (term "0,1,1,1,0"))
                                                                  (rule "replace_known_right" (formula "90") (term "0,0,0,1,1,1,0") (ifseqformula "96"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "90") (term "0,1,1,0"))
                                                                  (rule "replace_known_right" (formula "90") (term "0,0,0,1,1,0") (ifseqformula "96"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "distributeIntersection_2" (formula "90") (term "0,0,1,0"))
                                                                  (rule "distributeIntersection_2" (formula "90") (term "1,0,1,0"))
                                                                  (rule "distributeIntersection_2" (formula "90") (term "0,0,0,1,0"))
                                                                  (rule "distributeIntersection_2" (formula "90") (term "0,1,0,1,0"))
                                                                  (rule "distributeIntersection_2" (formula "90") (term "0,0,0,0,1,0"))
                                                                  (rule "distributeIntersection_2" (formula "90") (term "0,0,1,0,1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "90") (term "1,0"))
                                                                  (rule "unionEqualsEmpty" (formula "90") (term "0,1,0"))
                                                                  (rule "disjointWithSingleton1" (formula "90") (term "1,0,1,0"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "true_left" (formula "90"))
                                                                  (rule "ifSplit" (formula "117"))
                                                                  (branch "if x_10 true"
                                                                      (builtin "One Step Simplification" (formula "118"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "if x_10 false"
                                                                      (builtin "One Step Simplification" (formula "118"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "blockEmpty" (formula "117") (term "1"))
                                                                      (builtin "Block Contract (Internal)" (formula "117") (newnames "exc_10,heap_Before_BLOCK_6,savedHeap_Before_BLOCK_6,o,f"))
                                                                     (branch "Validity"
                                                                         (builtin "One Step Simplification" (formula "118"))
                                                                         (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "31")))
                                                                        (rule "eqSymm" (formula "118") (term "0,0,1,0,1"))
                                                                        (rule "variableDeclarationAssign" (formula "118") (term "1"))
                                                                        (rule "variableDeclaration" (formula "118") (term "1") (newnames "exc_10_1"))
                                                                        (rule "assignment" (formula "118") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "118"))
                                                                        (rule "emptyStatement" (formula "118") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "118"))
                                                                        (rule "emptyStatement" (formula "118") (term "1"))
                                                                        (rule "tryEmpty" (formula "118") (term "1"))
                                                                        (rule "blockEmptyLabel" (formula "118") (term "1"))
                                                                        (rule "blockEmpty" (formula "118") (term "1"))
                                                                        (rule "methodCallEmpty" (formula "118") (term "1"))
                                                                        (rule "emptyModality" (formula "118") (term "1"))
                                                                        (rule "andRight" (formula "118"))
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "118"))
                                                                           (rule "closeTrue" (formula "118"))
                                                                        )
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "118"))
                                                                           (rule "closeTrue" (formula "118"))
                                                                        )
                                                                     )
                                                                     (branch "Precondition"
                                                                        (rule "andRight" (formula "117"))
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "31")))
                                                                           (rule "closeTrue" (formula "117"))
                                                                        )
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "117"))
                                                                           (rule "wellFormedAnonEQ" (formula "117") (ifseqformula "75"))
                                                                           (rule "wellFormedAnonEQ" (formula "117") (term "0") (ifseqformula "63"))
                                                                           (rule "wellFormedAnon" (formula "117") (term "0,0"))
                                                                           (rule "wellFormedAnon" (formula "117") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "117") (term "1") (ifseqformula "74"))
                                                                            (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")))
                                                                           (rule "closeTrue" (formula "117"))
                                                                        )
                                                                     )
                                                                     (branch "Usage"
                                                                         (builtin "One Step Simplification" (formula "118"))
                                                                         (builtin "One Step Simplification" (formula "90"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "1,1,0") (ifseqformula "75"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,1,1,0") (ifseqformula "63"))
                                                                         (builtin "One Step Simplification" (formula "90"))
                                                                        (rule "andLeft" (formula "90"))
                                                                        (rule "andLeft" (formula "90"))
                                                                        (rule "translateJavaSubInt" (formula "92") (term "0,0"))
                                                                        (rule "replace_known_left" (formula "91") (term "0") (ifseqformula "90"))
                                                                         (builtin "One Step Simplification" (formula "91"))
                                                                        (rule "true_left" (formula "91"))
                                                                        (rule "polySimp_elimSub" (formula "91") (term "0,0"))
                                                                        (rule "elim_double_block_2" (formula "119") (term "1"))
                                                                         (builtin "Use Dependency Contract" (formula "56") (term "1,0") (ifInst ""  (formula "16") (term "0,1,0")) (ifInst ""  (formula "63")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                         (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "117")) (ifInst ""  (formula "14")) (ifInst ""  (formula "27")))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,0,0,0"))
                                                                        (rule "wellFormedAnonEQ" (formula "92") (term "1,0,0,0,0") (ifseqformula "63"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,1,0,0,0,0"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,1,0,0,0,0"))
                                                                        (rule "expand_inInt" (formula "92") (term "1,0,0,0"))
                                                                        (rule "replace_int_MAX" (formula "92") (term "1,0,1,0,0,0"))
                                                                        (rule "replace_int_MIN" (formula "92") (term "0,1,1,0,0,0"))
                                                                        (rule "translateJavaAddInt" (formula "92") (term "0,1,1,1,1,0"))
                                                                        (rule "translateJavaMulInt" (formula "92") (term "0,1,0,1,1,0"))
                                                                        (rule "eqSymm" (formula "92") (term "1"))
                                                                        (rule "translateJavaMulInt" (formula "92") (term "0,0,1,1,1,1,0"))
                                                                        (rule "replace_known_left" (formula "92") (term "1,0,0,0,0,0") (ifseqformula "19"))
                                                                         (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")))
                                                                        (rule "polySimp_mulComm0" (formula "92") (term "0,0,1,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "92") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "92") (term "0,1,1,1,1,0"))
                                                                        (rule "disjointDefinition" (formula "92") (term "1,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "92") (term "0,1,0,0"))
                                                                        (rule "replace_known_left" (formula "92") (term "0,1,0,0") (ifseqformula "12"))
                                                                         (builtin "One Step Simplification" (formula "92"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "92") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "92") (term "1,1,0,0") (ifseqformula "36"))
                                                                        (rule "replace_known_left" (formula "92") (term "1,0,0") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "92"))
                                                                        (rule "distributeIntersection" (formula "92") (term "0,1,0"))
                                                                        (rule "unionEqualsEmpty" (formula "92") (term "1,0"))
                                                                        (rule "disjointWithSingleton1" (formula "92") (term "1,1,0"))
                                                                        (rule "disjointWithSingleton1" (formula "92") (term "0,1,0"))
                                                                        (rule "elementOfUnion" (formula "92") (term "0,1,1,0"))
                                                                        (rule "elementOfSingleton" (formula "92") (term "0,0,1,1,0"))
                                                                         (builtin "One Step Simplification" (formula "92"))
                                                                        (rule "elementOfUnion" (formula "92") (term "1,0,1,1,0"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "92") (term "1,1,0,1,1,0"))
                                                                        (rule "replace_known_right" (formula "92") (term "0,0,1,1,0,1,1,0") (ifseqformula "98"))
                                                                         (builtin "One Step Simplification" (formula "92"))
                                                                        (rule "elementOfUnion" (formula "92") (term "1,0,1,1,0"))
                                                                         (builtin "One Step Simplification" (formula "92"))
                                                                        (rule "true_left" (formula "92"))
                                                                        (rule "ifUnfold" (formula "119") (term "1") (inst "#boolv=x_4"))
                                                                        (rule "variableDeclaration" (formula "119") (term "1") (newnames "x_11"))
                                                                        (rule "inequality_comparison_simple" (formula "119") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "119"))
                                                                        (rule "replace_known_left" (formula "119") (term "0,0,1,0") (ifseqformula "90"))
                                                                         (builtin "One Step Simplification" (formula "119"))
                                                                         (builtin "Use Dependency Contract" (formula "83") (term "0") (ifInst ""  (formula "67") (term "0")) (ifInst ""  (formula "75")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::lastReadOf(int)].JML accessible clause.0"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "1,0,0,0,0,0") (ifseqformula "63"))
                                                                         (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "117")) (ifInst ""  (formula "71")) (ifInst ""  (formula "27")))
                                                                        (rule "wellFormedAnonEQ" (formula "92") (term "0,0,0,0,0") (ifseqformula "63"))
                                                                        (rule "wellFormedAnonEQ" (formula "92") (term "1,0,0,0,0") (ifseqformula "75"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,0,0,0,0"))
                                                                        (rule "wellFormedAnonEQ" (formula "92") (term "0,1,0,0,0,0") (ifseqformula "63"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,0,0,0,0,0"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,1,0,0,0,0"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,0,1,0,0,0,0"))
                                                                        (rule "expand_inInt" (formula "92") (term "1,0,0,0"))
                                                                        (rule "replace_int_MAX" (formula "92") (term "1,0,1,0,0,0"))
                                                                        (rule "replace_int_MIN" (formula "92") (term "0,1,1,0,0,0"))
                                                                        (rule "eqSymm" (formula "92") (term "1"))
                                                                        (rule "translateJavaMulInt" (formula "92") (term "0,1,1,1,0"))
                                                                        (rule "replace_known_left" (formula "92") (term "1,0,0,0,0,0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "62")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                        (rule "polySimp_mulComm0" (formula "92") (term "0,1,1,1,0"))
                                                                        (rule "disjointDefinition" (formula "92") (term "1,0"))
                                                                        (rule "disjointWithSingleton1" (formula "92") (term "1,0"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "92") (term "0,1,0"))
                                                                        (rule "replace_known_right" (formula "92") (term "0,0,0,1,0") (ifseqformula "103"))
                                                                         (builtin "One Step Simplification" (formula "92"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "92") (term "1,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "92") (term "0,1,0"))
                                                                        (rule "replace_known_left" (formula "92") (term "0,1,0") (ifseqformula "12"))
                                                                         (builtin "One Step Simplification" (formula "92"))
                                                                        (rule "applyEq" (formula "92") (term "1,1,0") (ifseqformula "36"))
                                                                        (rule "replace_known_left" (formula "92") (term "1,0") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "92"))
                                                                        (rule "applyEq" (formula "92") (term "0,1") (ifseqformula "67"))
                                                                        (rule "eqSymm" (formula "92") (term "1"))
                                                                        (rule "replace_known_left" (formula "92") (term "1") (ifseqformula "83"))
                                                                         (builtin "One Step Simplification" (formula "92"))
                                                                        (rule "true_left" (formula "92"))
                                                                         (builtin "Use Dependency Contract" (formula "84") (term "1") (ifInst ""  (formula "84") (term "0")) (ifInst ""  (formula "75")) (ifInst ""  (formula "63")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::nextWriteOf(int)].JML accessible clause.0"))
                                                                         (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "117")) (ifInst ""  (formula "2")) (ifInst ""  (formula "27")))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,0,0,0"))
                                                                        (rule "wellFormedAnonEQ" (formula "92") (term "1,0,0,0,0") (ifseqformula "75"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,0,0,0,0"))
                                                                        (rule "wellFormedAnonEQ" (formula "92") (term "0,1,0,0,0,0") (ifseqformula "63"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,1,0,0,0,0"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "0,0,0,1,0,0,0,0"))
                                                                        (rule "expand_inInt" (formula "92") (term "1,0,0,0"))
                                                                        (rule "replace_int_MIN" (formula "92") (term "0,1,1,0,0,0"))
                                                                        (rule "replace_int_MAX" (formula "92") (term "1,0,1,0,0,0"))
                                                                        (rule "eqSymm" (formula "92") (term "1"))
                                                                        (rule "translateJavaAddInt" (formula "92") (term "0,1,1,1,0"))
                                                                        (rule "translateJavaMulInt" (formula "92") (term "0,0,1,1,1,0"))
                                                                        (rule "replace_known_left" (formula "92") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")) (ifInst ""  (formula "84")))
                                                                        (rule "true_left" (formula "92"))
                                                                         (builtin "Use Dependency Contract" (formula "15") (ifInst ""  (formula "119") (term "1,0,1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                        (rule "wellFormedAnon" (formula "92") (term "1,1,0,0,0"))
                                                                        (rule "replace_known_left" (formula "92") (term "0,1") (ifseqformula "15"))
                                                                         (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "118")) (ifInst ""  (formula "26")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
                                                                        (rule "true_left" (formula "92"))
                                                                        (rule "ifSplit" (formula "119"))
                                                                        (branch "if x_11 true"
                                                                            (builtin "One Step Simplification" (formula "120"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "if x_11 false"
                                                                            (builtin "One Step Simplification" (formula "120"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "true_left" (formula "1"))
                                                                           (rule "blockEmpty" (formula "119") (term "1"))
                                                                            (builtin "Block Contract (Internal)" (formula "119") (newnames "exc_11,heap_Before_BLOCK_7,savedHeap_Before_BLOCK_7,o,f"))
                                                                           (branch "Validity"
                                                                               (builtin "One Step Simplification" (formula "120"))
                                                                               (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "31")))
                                                                              (rule "eqSymm" (formula "120") (term "0,0,1,0,1"))
                                                                              (rule "variableDeclarationAssign" (formula "120") (term "1"))
                                                                              (rule "variableDeclaration" (formula "120") (term "1") (newnames "exc_11_1"))
                                                                              (rule "assignment" (formula "120") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "120"))
                                                                              (rule "emptyStatement" (formula "120") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "120"))
                                                                              (rule "emptyStatement" (formula "120") (term "1"))
                                                                              (rule "tryEmpty" (formula "120") (term "1"))
                                                                              (rule "blockEmptyLabel" (formula "120") (term "1"))
                                                                              (rule "blockEmpty" (formula "120") (term "1"))
                                                                              (rule "methodCallEmpty" (formula "120") (term "1"))
                                                                              (rule "emptyModality" (formula "120") (term "1"))
                                                                              (rule "andRight" (formula "120"))
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "120"))
                                                                                 (rule "closeTrue" (formula "120"))
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "120"))
                                                                                 (rule "closeTrue" (formula "120"))
                                                                              )
                                                                           )
                                                                           (branch "Precondition"
                                                                              (rule "andRight" (formula "119"))
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "31")))
                                                                                 (rule "closeTrue" (formula "119"))
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "119"))
                                                                                 (rule "wellFormedAnonEQ" (formula "119") (ifseqformula "75"))
                                                                                 (rule "wellFormedAnonEQ" (formula "119") (term "0") (ifseqformula "63"))
                                                                                 (rule "wellFormedAnon" (formula "119") (term "0,0"))
                                                                                 (rule "wellFormedAnon" (formula "119") (term "0,0,0"))
                                                                                 (rule "replace_known_left" (formula "119") (term "1") (ifseqformula "74"))
                                                                                  (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")))
                                                                                 (rule "closeTrue" (formula "119"))
                                                                              )
                                                                           )
                                                                           (branch "Usage"
                                                                               (builtin "One Step Simplification" (formula "120"))
                                                                               (builtin "One Step Simplification" (formula "92"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "1,1,0") (ifseqformula "75"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,1,1,0") (ifseqformula "63"))
                                                                               (builtin "One Step Simplification" (formula "92"))
                                                                              (rule "andLeft" (formula "92"))
                                                                              (rule "andLeft" (formula "92"))
                                                                              (rule "translateJavaSubInt" (formula "94") (term "1,0"))
                                                                              (rule "replace_known_left" (formula "93") (term "0") (ifseqformula "92"))
                                                                               (builtin "One Step Simplification" (formula "93"))
                                                                              (rule "true_left" (formula "93"))
                                                                              (rule "polySimp_elimSub" (formula "93") (term "1,0"))
                                                                              (rule "elim_double_block_2" (formula "121") (term "1"))
                                                                               (builtin "Use Dependency Contract" (formula "87") (term "0") (ifInst ""  (formula "121") (term "1,0,1,0,0,0,0")) (ifInst ""  (formula "75")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "1,0,0,0,0,0") (ifseqformula "63"))
                                                                               (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "119")) (ifInst ""  (formula "71")) (ifInst ""  (formula "27")))
                                                                              (rule "wellFormedAnonEQ" (formula "94") (term "1,0,0,0,0") (ifseqformula "75"))
                                                                              (rule "wellFormedAnonEQ" (formula "94") (term "0,0,0,0,0") (ifseqformula "63"))
                                                                              (rule "wellFormedAnon" (formula "94") (term "0,0,0,0,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "94") (term "0,1,0,0,0,0") (ifseqformula "63"))
                                                                              (rule "wellFormedAnon" (formula "94") (term "0,0,0,0,0,0,0"))
                                                                              (rule "wellFormedAnon" (formula "94") (term "0,0,1,0,0,0,0"))
                                                                              (rule "wellFormedAnon" (formula "94") (term "0,0,0,1,0,0,0,0"))
                                                                              (rule "expand_inInt" (formula "94") (term "1,0,0,0"))
                                                                              (rule "replace_int_MAX" (formula "94") (term "1,0,1,0,0,0"))
                                                                              (rule "replace_int_MIN" (formula "94") (term "0,1,1,0,0,0"))
                                                                              (rule "translateJavaMulInt" (formula "94") (term "0,1,0,1,1,0"))
                                                                              (rule "eqSymm" (formula "94") (term "1"))
                                                                              (rule "translateJavaAddInt" (formula "94") (term "0,1,1,1,1,0"))
                                                                              (rule "translateJavaMulInt" (formula "94") (term "0,0,1,1,1,1,0"))
                                                                              (rule "replace_known_left" (formula "94") (term "1,1,0,0,0,0") (ifseqformula "74"))
                                                                               (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")))
                                                                              (rule "polySimp_mulComm0" (formula "94") (term "0,0,1,1,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,1,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "94") (term "0,1,1,1,1,0"))
                                                                              (rule "disjointDefinition" (formula "94") (term "1,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "94") (term "0,1,0,0"))
                                                                              (rule "replace_known_left" (formula "94") (term "0,1,0,0") (ifseqformula "12"))
                                                                               (builtin "One Step Simplification" (formula "94"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "94") (term "1,0,0,0"))
                                                                              (rule "applyEq" (formula "94") (term "1,1,0,0") (ifseqformula "36"))
                                                                              (rule "replace_known_left" (formula "94") (term "1,0,0") (ifseqformula "8"))
                                                                               (builtin "One Step Simplification" (formula "94"))
                                                                              (rule "distributeIntersection" (formula "94") (term "0,1,0"))
                                                                              (rule "unionEqualsEmpty" (formula "94") (term "1,0"))
                                                                              (rule "disjointWithSingleton1" (formula "94") (term "0,1,0"))
                                                                              (rule "disjointWithSingleton1" (formula "94") (term "1,1,0"))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "94") (term "0,0,1,0"))
                                                                              (rule "replace_known_right" (formula "94") (term "0,0,0,0,1,0") (ifseqformula "105"))
                                                                               (builtin "One Step Simplification" (formula "94"))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "94") (term "0,1,0"))
                                                                              (rule "replace_known_right" (formula "94") (term "0,0,0,1,0") (ifseqformula "105"))
                                                                               (builtin "One Step Simplification" (formula "94"))
                                                                              (rule "commute_and" (formula "94") (term "0"))
                                                                               (builtin "Use Dependency Contract" (formula "14") (ifInst ""  (formula "122") (term "0,0,1,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                              (rule "ifUnfold" (formula "122") (term "1") (inst "#boolv=x_4"))
                                                                              (rule "variableDeclaration" (formula "122") (term "1") (newnames "x_12"))
                                                                              (rule "inequality_comparison_simple" (formula "122") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "122"))
                                                                              (rule "replace_known_left" (formula "122") (term "0,0,1,0") (ifseqformula "92"))
                                                                               (builtin "One Step Simplification" (formula "122"))
                                                                              (rule "ifSplit" (formula "122"))
                                                                              (branch "if x_12 true"
                                                                                  (builtin "One Step Simplification" (formula "123"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "if x_12 false"
                                                                                  (builtin "One Step Simplification" (formula "123"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "blockEmpty" (formula "122") (term "1"))
                                                                                  (builtin "Block Contract (Internal)" (formula "122") (newnames "exc_12,heap_Before_BLOCK_8,savedHeap_Before_BLOCK_8,o,f"))
                                                                                 (branch "Validity"
                                                                                     (builtin "One Step Simplification" (formula "123"))
                                                                                     (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "31")))
                                                                                    (rule "eqSymm" (formula "123") (term "0,0,1,0,1"))
                                                                                    (rule "variableDeclarationAssign" (formula "123") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "123") (term "1") (newnames "exc_12_1"))
                                                                                    (rule "assignment" (formula "123") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "123"))
                                                                                    (rule "emptyStatement" (formula "123") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "123"))
                                                                                    (rule "emptyStatement" (formula "123") (term "1"))
                                                                                    (rule "tryEmpty" (formula "123") (term "1"))
                                                                                    (rule "blockEmptyLabel" (formula "123") (term "1"))
                                                                                    (rule "blockEmpty" (formula "123") (term "1"))
                                                                                    (rule "methodCallEmpty" (formula "123") (term "1"))
                                                                                    (rule "emptyModality" (formula "123") (term "1"))
                                                                                    (rule "andRight" (formula "123"))
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "123"))
                                                                                       (rule "closeTrue" (formula "123"))
                                                                                    )
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "123"))
                                                                                       (rule "closeTrue" (formula "123"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Precondition"
                                                                                    (rule "andRight" (formula "122"))
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "122") (ifInst ""  (formula "31")))
                                                                                       (rule "closeTrue" (formula "122"))
                                                                                    )
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "122"))
                                                                                       (rule "wellFormedAnonEQ" (formula "122") (ifseqformula "75"))
                                                                                       (rule "wellFormedAnonEQ" (formula "122") (term "0") (ifseqformula "63"))
                                                                                       (rule "wellFormedAnon" (formula "122") (term "0,0"))
                                                                                       (rule "wellFormedAnon" (formula "122") (term "0,0,0"))
                                                                                       (rule "replace_known_left" (formula "122") (term "1,0,0,0") (ifseqformula "19"))
                                                                                        (builtin "One Step Simplification" (formula "122") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                       (rule "closeTrue" (formula "122"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Usage"
                                                                                     (builtin "One Step Simplification" (formula "123"))
                                                                                     (builtin "One Step Simplification" (formula "95"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "1,1,0") (ifseqformula "75"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,1,1,0") (ifseqformula "63"))
                                                                                     (builtin "One Step Simplification" (formula "95"))
                                                                                    (rule "andLeft" (formula "95"))
                                                                                    (rule "andLeft" (formula "95"))
                                                                                    (rule "translateJavaSubInt" (formula "97") (term "0,0"))
                                                                                    (rule "translateJavaAddInt" (formula "97") (term "0,0,0"))
                                                                                    (rule "replace_known_left" (formula "96") (term "0") (ifseqformula "95"))
                                                                                     (builtin "One Step Simplification" (formula "96"))
                                                                                    (rule "true_left" (formula "96"))
                                                                                    (rule "polySimp_elimSub" (formula "96") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "96") (term "0,0,0"))
                                                                                    (rule "elim_double_block_2" (formula "124") (term "1"))
                                                                                    (rule "ifUnfold" (formula "124") (term "1") (inst "#boolv=x_4"))
                                                                                    (rule "variableDeclaration" (formula "124") (term "1") (newnames "x_13"))
                                                                                    (rule "inequality_comparison_simple" (formula "124") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "124"))
                                                                                    (rule "replace_known_left" (formula "124") (term "0,0,1,0") (ifseqformula "95"))
                                                                                     (builtin "One Step Simplification" (formula "124"))
                                                                                    (rule "ifSplit" (formula "124"))
                                                                                    (branch "if x_13 true"
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch "if x_13 false"
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                        (builtin "One Step Simplification" (formula "125"))
                                                                                       (rule "true_left" (formula "1"))
                                                                                       (rule "blockEmpty" (formula "124") (term "1"))
                                                                                        (builtin "Block Contract (Internal)" (formula "124") (newnames "exc_13,heap_Before_BLOCK_9,savedHeap_Before_BLOCK_9,o,f"))
                                                                                       (branch "Validity"
                                                                                           (builtin "One Step Simplification" (formula "125"))
                                                                                           (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "31")))
                                                                                          (rule "eqSymm" (formula "125") (term "0,0,1,0,1"))
                                                                                          (rule "variableDeclarationAssign" (formula "125") (term "1"))
                                                                                          (rule "variableDeclaration" (formula "125") (term "1") (newnames "exc_13_1"))
                                                                                          (rule "assignment" (formula "125") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "125"))
                                                                                          (rule "emptyStatement" (formula "125") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "125"))
                                                                                          (rule "emptyStatement" (formula "125") (term "1"))
                                                                                          (rule "tryEmpty" (formula "125") (term "1"))
                                                                                          (rule "blockEmptyLabel" (formula "125") (term "1"))
                                                                                          (rule "blockEmpty" (formula "125") (term "1"))
                                                                                          (rule "methodCallEmpty" (formula "125") (term "1"))
                                                                                          (rule "emptyModality" (formula "125") (term "1"))
                                                                                          (rule "andRight" (formula "125"))
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "125"))
                                                                                             (rule "closeTrue" (formula "125"))
                                                                                          )
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "125"))
                                                                                             (rule "closeTrue" (formula "125"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Precondition"
                                                                                          (rule "andRight" (formula "124"))
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "31")))
                                                                                             (rule "closeTrue" (formula "124"))
                                                                                          )
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "124"))
                                                                                             (rule "wellFormedAnonEQ" (formula "124") (ifseqformula "75"))
                                                                                             (rule "wellFormedAnonEQ" (formula "124") (term "0") (ifseqformula "63"))
                                                                                             (rule "wellFormedAnon" (formula "124") (term "0,0"))
                                                                                             (rule "wellFormedAnon" (formula "124") (term "0,0,0"))
                                                                                             (rule "replace_known_left" (formula "124") (term "1,0,0,0") (ifseqformula "19"))
                                                                                              (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                             (rule "closeTrue" (formula "124"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Usage"
                                                                                           (builtin "One Step Simplification" (formula "97"))
                                                                                           (builtin "One Step Simplification" (formula "125"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "1,1,0") (ifseqformula "75"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,1,1,0") (ifseqformula "63"))
                                                                                           (builtin "One Step Simplification" (formula "97"))
                                                                                          (rule "andLeft" (formula "97"))
                                                                                          (rule "andLeft" (formula "97"))
                                                                                          (rule "translateJavaAddInt" (formula "99") (term "4,0"))
                                                                                          (rule "translateJavaAddInt" (formula "99") (term "3,0"))
                                                                                          (rule "translateJavaAddInt" (formula "99") (term "0,4,0"))
                                                                                          (rule "replace_known_left" (formula "98") (term "0") (ifseqformula "97"))
                                                                                           (builtin "One Step Simplification" (formula "98"))
                                                                                          (rule "true_left" (formula "98"))
                                                                                          (rule "polySimp_addComm1" (formula "98") (term "4,0"))
                                                                                          (rule "polySimp_addComm0" (formula "98") (term "0,4,0"))
                                                                                          (rule "elim_double_block_2" (formula "126") (term "1"))
                                                                                          (rule "ifUnfold" (formula "126") (term "1") (inst "#boolv=x_4"))
                                                                                          (rule "variableDeclaration" (formula "126") (term "1") (newnames "x_14"))
                                                                                          (rule "inequality_comparison_simple" (formula "126") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "126"))
                                                                                          (rule "replace_known_left" (formula "126") (term "0,0,1,0") (ifseqformula "97"))
                                                                                           (builtin "One Step Simplification" (formula "126"))
                                                                                          (rule "ifSplit" (formula "126"))
                                                                                          (branch "if x_14 true"
                                                                                              (builtin "One Step Simplification" (formula "127"))
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "closeFalse" (formula "1"))
                                                                                          )
                                                                                          (branch "if x_14 false"
                                                                                              (builtin "One Step Simplification" (formula "127"))
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "true_left" (formula "1"))
                                                                                             (rule "blockEmpty" (formula "126") (term "1"))
                                                                                              (builtin "Block Contract (Internal)" (formula "126") (newnames "exc_14,heap_Before_BLOCK_10,savedHeap_Before_BLOCK_10,o,f"))
                                                                                             (branch "Validity"
                                                                                                 (builtin "One Step Simplification" (formula "127"))
                                                                                                 (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "31")))
                                                                                                (rule "eqSymm" (formula "127") (term "0,0,1,0,1"))
                                                                                                (rule "variableDeclarationAssign" (formula "127") (term "1"))
                                                                                                (rule "variableDeclaration" (formula "127") (term "1") (newnames "exc_14_1"))
                                                                                                (rule "assignment" (formula "127") (term "1"))
                                                                                                 (builtin "One Step Simplification" (formula "127"))
                                                                                                (rule "emptyStatement" (formula "127") (term "1"))
                                                                                                 (builtin "One Step Simplification" (formula "127"))
                                                                                                (rule "emptyStatement" (formula "127") (term "1"))
                                                                                                (rule "tryEmpty" (formula "127") (term "1"))
                                                                                                (rule "blockEmptyLabel" (formula "127") (term "1"))
                                                                                                (rule "blockEmpty" (formula "127") (term "1"))
                                                                                                (rule "methodCallEmpty" (formula "127") (term "1"))
                                                                                                (rule "emptyModality" (formula "127") (term "1"))
                                                                                                (rule "andRight" (formula "127"))
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "127"))
                                                                                                   (rule "closeTrue" (formula "127"))
                                                                                                )
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "127"))
                                                                                                   (rule "closeTrue" (formula "127"))
                                                                                                )
                                                                                             )
                                                                                             (branch "Precondition"
                                                                                                (rule "andRight" (formula "126"))
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "31")))
                                                                                                   (rule "closeTrue" (formula "126"))
                                                                                                )
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "126"))
                                                                                                   (rule "wellFormedAnonEQ" (formula "126") (ifseqformula "75"))
                                                                                                   (rule "wellFormedAnonEQ" (formula "126") (term "0") (ifseqformula "63"))
                                                                                                   (rule "wellFormedAnon" (formula "126") (term "0,0"))
                                                                                                   (rule "wellFormedAnon" (formula "126") (term "0,0,0"))
                                                                                                   (rule "replace_known_left" (formula "126") (term "1,0") (ifseqformula "62"))
                                                                                                    (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "74")))
                                                                                                   (rule "closeTrue" (formula "126"))
                                                                                                )
                                                                                             )
                                                                                             (branch "Usage"
                                                                                                 (builtin "One Step Simplification" (formula "99"))
                                                                                                 (builtin "One Step Simplification" (formula "127"))
                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "1,1,0") (ifseqformula "75"))
                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                 (builtin "One Step Simplification" (formula "99"))
                                                                                                (rule "andLeft" (formula "99"))
                                                                                                (rule "andLeft" (formula "99"))
                                                                                                (rule "translateJavaAddInt" (formula "101") (term "3,0"))
                                                                                                (rule "translateJavaAddInt" (formula "101") (term "5,0"))
                                                                                                (rule "translateJavaAddInt" (formula "101") (term "4,0"))
                                                                                                (rule "translateJavaAddInt" (formula "101") (term "0,5,0"))
                                                                                                (rule "replace_known_left" (formula "100") (term "0") (ifseqformula "99"))
                                                                                                 (builtin "One Step Simplification" (formula "100"))
                                                                                                (rule "true_left" (formula "100"))
                                                                                                (rule "polySimp_addComm1" (formula "100") (term "5,0"))
                                                                                                (rule "polySimp_addComm0" (formula "100") (term "0,5,0"))
                                                                                                (rule "elim_double_block_2" (formula "128") (term "1"))
                                                                                                (rule "ifUnfold" (formula "128") (term "1") (inst "#boolv=x_4"))
                                                                                                (rule "variableDeclaration" (formula "128") (term "1") (newnames "x_15"))
                                                                                                (rule "inequality_comparison_simple" (formula "128") (term "1"))
                                                                                                 (builtin "One Step Simplification" (formula "128"))
                                                                                                (rule "replace_known_left" (formula "128") (term "0,0,1,0") (ifseqformula "99"))
                                                                                                 (builtin "One Step Simplification" (formula "128"))
                                                                                                 (builtin "Use Dependency Contract" (formula "83") (term "0") (ifInst ""  (formula "69") (term "0")) (ifInst ""  (formula "75")) (ifInst ""  (formula "63")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::lastReadOf(int)].JML accessible clause.0"))
                                                                                                 (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "126")) (ifInst ""  (formula "2")) (ifInst ""  (formula "27")))
                                                                                                (rule "wellFormedAnon" (formula "101") (term "0,0,0,0,0"))
                                                                                                (rule "wellFormedAnonEQ" (formula "101") (term "1,0,0,0,0") (ifseqformula "75"))
                                                                                                (rule "wellFormedAnon" (formula "101") (term "0,0,0,0,0,0"))
                                                                                                (rule "wellFormedAnonEQ" (formula "101") (term "0,1,0,0,0,0") (ifseqformula "63"))
                                                                                                (rule "wellFormedAnon" (formula "101") (term "0,0,1,0,0,0,0"))
                                                                                                (rule "wellFormedAnon" (formula "101") (term "0,0,0,1,0,0,0,0"))
                                                                                                (rule "expand_inInt" (formula "101") (term "1,0,0,0"))
                                                                                                (rule "replace_int_MIN" (formula "101") (term "0,1,1,0,0,0"))
                                                                                                (rule "replace_int_MAX" (formula "101") (term "1,0,1,0,0,0"))
                                                                                                (rule "translateJavaMulInt" (formula "101") (term "0,1,1,1,0"))
                                                                                                (rule "eqSymm" (formula "101") (term "1"))
                                                                                                (rule "replace_known_left" (formula "101") (term "1,0,0,0,0,0,0") (ifseqformula "19"))
                                                                                                 (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                                (rule "polySimp_mulComm0" (formula "101") (term "0,1,1,1,0"))
                                                                                                (rule "disjointDefinition" (formula "101") (term "1,0"))
                                                                                                (rule "disjointWithSingleton1" (formula "101") (term "1,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "101") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "101") (term "0,1,0,0"))
                                                                                                (rule "replace_known_left" (formula "101") (term "0,1,0,0") (ifseqformula "12"))
                                                                                                 (builtin "One Step Simplification" (formula "101"))
                                                                                                (rule "applyEq" (formula "101") (term "1,1,0,0") (ifseqformula "36"))
                                                                                                (rule "replace_known_left" (formula "101") (term "1,0,0") (ifseqformula "8"))
                                                                                                 (builtin "One Step Simplification" (formula "101"))
                                                                                                (rule "applyEq" (formula "101") (term "0,1") (ifseqformula "69"))
                                                                                                (rule "eqSymm" (formula "101") (term "1"))
                                                                                                (rule "applyEq" (formula "101") (term "0,1") (ifseqformula "83"))
                                                                                                (rule "elementOfUnion" (formula "101") (term "0,1,0"))
                                                                                                (rule "elementOfSingleton" (formula "101") (term "1,0,1,0"))
                                                                                                 (builtin "One Step Simplification" (formula "101"))
                                                                                                (rule "true_left" (formula "101"))
                                                                                                (rule "ifSplit" (formula "128"))
                                                                                                (branch "if x_15 true"
                                                                                                    (builtin "One Step Simplification" (formula "129"))
                                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "closeFalse" (formula "1"))
                                                                                                )
                                                                                                (branch "if x_15 false"
                                                                                                    (builtin "One Step Simplification" (formula "129"))
                                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "true_left" (formula "1"))
                                                                                                   (rule "blockEmpty" (formula "128") (term "1"))
                                                                                                    (builtin "Block Contract (Internal)" (formula "128") (newnames "exc_15,heap_Before_BLOCK_11,savedHeap_Before_BLOCK_11,o,f"))
                                                                                                   (branch "Validity"
                                                                                                       (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "31")))
                                                                                                       (builtin "One Step Simplification" (formula "129"))
                                                                                                      (rule "eqSymm" (formula "129") (term "0,0,1,0,1"))
                                                                                                      (rule "variableDeclarationAssign" (formula "129") (term "1"))
                                                                                                      (rule "variableDeclaration" (formula "129") (term "1") (newnames "exc_15_1"))
                                                                                                      (rule "assignment" (formula "129") (term "1"))
                                                                                                       (builtin "One Step Simplification" (formula "129"))
                                                                                                      (rule "emptyStatement" (formula "129") (term "1"))
                                                                                                       (builtin "One Step Simplification" (formula "129"))
                                                                                                      (rule "emptyStatement" (formula "129") (term "1"))
                                                                                                      (rule "tryEmpty" (formula "129") (term "1"))
                                                                                                      (rule "blockEmptyLabel" (formula "129") (term "1"))
                                                                                                      (rule "blockEmpty" (formula "129") (term "1"))
                                                                                                      (rule "methodCallEmpty" (formula "129") (term "1"))
                                                                                                      (rule "emptyModality" (formula "129") (term "1"))
                                                                                                      (rule "andRight" (formula "129"))
                                                                                                      (branch
                                                                                                          (builtin "One Step Simplification" (formula "129"))
                                                                                                         (rule "closeTrue" (formula "129"))
                                                                                                      )
                                                                                                      (branch
                                                                                                          (builtin "One Step Simplification" (formula "129"))
                                                                                                         (rule "closeTrue" (formula "129"))
                                                                                                      )
                                                                                                   )
                                                                                                   (branch "Precondition"
                                                                                                      (rule "andRight" (formula "128"))
                                                                                                      (branch
                                                                                                          (builtin "One Step Simplification" (formula "128") (ifInst ""  (formula "31")))
                                                                                                         (rule "closeTrue" (formula "128"))
                                                                                                      )
                                                                                                      (branch
                                                                                                          (builtin "One Step Simplification" (formula "128"))
                                                                                                         (rule "wellFormedAnonEQ" (formula "128") (ifseqformula "75"))
                                                                                                         (rule "wellFormedAnonEQ" (formula "128") (term "0") (ifseqformula "63"))
                                                                                                         (rule "wellFormedAnon" (formula "128") (term "0,0"))
                                                                                                         (rule "wellFormedAnon" (formula "128") (term "0,0,0"))
                                                                                                         (rule "replace_known_left" (formula "128") (term "1,0,0,0") (ifseqformula "19"))
                                                                                                          (builtin "One Step Simplification" (formula "128") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                                         (rule "closeTrue" (formula "128"))
                                                                                                      )
                                                                                                   )
                                                                                                   (branch "Usage"
                                                                                                       (builtin "One Step Simplification" (formula "129"))
                                                                                                       (builtin "One Step Simplification" (formula "101"))
                                                                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,1,0") (ifseqformula "75"))
                                                                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                       (builtin "One Step Simplification" (formula "101"))
                                                                                                      (rule "andLeft" (formula "101"))
                                                                                                      (rule "andLeft" (formula "101"))
                                                                                                      (rule "translateJavaAddInt" (formula "103") (term "3,0"))
                                                                                                      (rule "translateJavaAddInt" (formula "103") (term "4,0"))
                                                                                                      (rule "translateJavaAddInt" (formula "103") (term "0,4,0"))
                                                                                                      (rule "replace_known_left" (formula "102") (term "0") (ifseqformula "101"))
                                                                                                       (builtin "One Step Simplification" (formula "102"))
                                                                                                      (rule "true_left" (formula "102"))
                                                                                                      (rule "polySimp_addComm1" (formula "102") (term "4,0"))
                                                                                                      (rule "polySimp_addComm0" (formula "102") (term "0,4,0"))
                                                                                                      (rule "elim_double_block_2" (formula "130") (term "1"))
                                                                                                      (rule "ifUnfold" (formula "130") (term "1") (inst "#boolv=x_4"))
                                                                                                      (rule "variableDeclaration" (formula "130") (term "1") (newnames "x_16"))
                                                                                                      (rule "inequality_comparison_simple" (formula "130") (term "1"))
                                                                                                       (builtin "One Step Simplification" (formula "130"))
                                                                                                      (rule "replace_known_left" (formula "130") (term "0,0,1,0") (ifseqformula "101"))
                                                                                                       (builtin "One Step Simplification" (formula "130"))
                                                                                                       (builtin "Use Dependency Contract" (formula "15") (ifInst ""  (formula "130") (term "1,0,1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                      (rule "wellFormedAnon" (formula "103") (term "1,1,0,0,0"))
                                                                                                      (rule "replace_known_left" (formula "103") (term "0,1,0,0,0") (ifseqformula "20"))
                                                                                                       (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "129")) (ifInst ""  (formula "26")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "33")) (ifInst ""  (formula "15")) (ifInst ""  (formula "33")))
                                                                                                      (rule "true_left" (formula "103"))
                                                                                                      (rule "ifSplit" (formula "130"))
                                                                                                      (branch "if x_16 true"
                                                                                                          (builtin "One Step Simplification" (formula "131"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "closeFalse" (formula "1"))
                                                                                                      )
                                                                                                      (branch "if x_16 false"
                                                                                                          (builtin "One Step Simplification" (formula "131"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "true_left" (formula "1"))
                                                                                                         (rule "blockEmpty" (formula "130") (term "1"))
                                                                                                         (rule "variableDeclarationAssign" (formula "130") (term "1"))
                                                                                                         (rule "variableDeclaration" (formula "130") (term "1") (newnames "first_value"))
                                                                                                         (rule "assignment_array2" (formula "130"))
                                                                                                         (branch "Normal Execution (_swap_1 != null)"
                                                                                                             (builtin "One Step Simplification" (formula "130"))
                                                                                                             (builtin "Block Contract (Internal)" (formula "130") (newnames "exc_16,heap_Before_BLOCK_12,savedHeap_Before_BLOCK_12,o,f"))
                                                                                                            (branch "Validity"
                                                                                                                (builtin "One Step Simplification" (formula "131"))
                                                                                                                (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "31")))
                                                                                                               (rule "eqSymm" (formula "131") (term "0,0,1,0,1"))
                                                                                                               (rule "pullOutSelect" (formula "131") (term "0,1,0,0") (inst "selectSK=arr_0"))
                                                                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "128")))
                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "64"))
                                                                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                               (rule "leq_literals" (formula "1") (term "1,0,0"))
                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                               (rule "leq_literals" (formula "1") (term "0,0"))
                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                               (rule "applyEqReverse" (formula "132") (term "0,1,0,0") (ifseqformula "1"))
                                                                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                                                                               (rule "variableDeclarationAssign" (formula "131") (term "1"))
                                                                                                               (rule "variableDeclaration" (formula "131") (term "1") (newnames "exc_16_1"))
                                                                                                               (rule "assignment" (formula "131") (term "1"))
                                                                                                                (builtin "One Step Simplification" (formula "131"))
                                                                                                               (rule "emptyStatement" (formula "131") (term "1"))
                                                                                                                (builtin "One Step Simplification" (formula "131"))
                                                                                                               (rule "emptyStatement" (formula "131") (term "1"))
                                                                                                               (rule "tryEmpty" (formula "131") (term "1"))
                                                                                                               (rule "blockEmptyLabel" (formula "131") (term "1"))
                                                                                                               (rule "blockEmpty" (formula "131") (term "1"))
                                                                                                               (rule "methodCallEmpty" (formula "131") (term "1"))
                                                                                                               (rule "emptyModality" (formula "131") (term "1"))
                                                                                                               (rule "andRight" (formula "131"))
                                                                                                               (branch
                                                                                                                   (builtin "One Step Simplification" (formula "131"))
                                                                                                                  (rule "closeTrue" (formula "131"))
                                                                                                               )
                                                                                                               (branch
                                                                                                                   (builtin "One Step Simplification" (formula "131"))
                                                                                                                  (rule "closeTrue" (formula "131"))
                                                                                                               )
                                                                                                            )
                                                                                                            (branch "Precondition"
                                                                                                               (rule "andRight" (formula "130"))
                                                                                                               (branch
                                                                                                                   (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "31")))
                                                                                                                  (rule "closeTrue" (formula "130"))
                                                                                                               )
                                                                                                               (branch
                                                                                                                   (builtin "One Step Simplification" (formula "130"))
                                                                                                                  (rule "wellFormedAnonEQ" (formula "130") (ifseqformula "75"))
                                                                                                                  (rule "wellFormedAnonEQ" (formula "130") (term "0") (ifseqformula "63"))
                                                                                                                  (rule "wellFormedAnon" (formula "130") (term "0,0"))
                                                                                                                  (rule "wellFormedAnon" (formula "130") (term "0,0,0"))
                                                                                                                  (rule "replace_known_left" (formula "130") (term "1,0") (ifseqformula "62"))
                                                                                                                   (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "74")))
                                                                                                                  (rule "closeTrue" (formula "130"))
                                                                                                               )
                                                                                                            )
                                                                                                            (branch "Usage"
                                                                                                                (builtin "One Step Simplification" (formula "103"))
                                                                                                                (builtin "One Step Simplification" (formula "131"))
                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "103") (term "1,1,0") (ifseqformula "75"))
                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "103") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                                (builtin "One Step Simplification" (formula "103"))
                                                                                                               (rule "expand_inInt" (formula "103") (term "1"))
                                                                                                               (rule "replace_int_MAX" (formula "103") (term "1,0,1"))
                                                                                                               (rule "replace_int_MIN" (formula "103") (term "0,1,1"))
                                                                                                               (rule "andLeft" (formula "103"))
                                                                                                               (rule "andLeft" (formula "104"))
                                                                                                               (rule "andLeft" (formula "103"))
                                                                                                               (rule "replace_known_left" (formula "104") (term "0") (ifseqformula "103"))
                                                                                                                (builtin "One Step Simplification" (formula "104"))
                                                                                                               (rule "true_left" (formula "104"))
                                                                                                               (rule "inEqSimp_commuteLeq" (formula "105"))
                                                                                                               (rule "pullOutSelect" (formula "133") (term "0,1,0") (inst "selectSK=arr_0"))
                                                                                                               (rule "applyEq" (formula "106") (term "0") (ifseqformula "1"))
                                                                                                               (rule "applyEq" (formula "105") (term "0") (ifseqformula "1"))
                                                                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "130")))
                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "64"))
                                                                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                               (rule "leq_literals" (formula "1") (term "1,0,0"))
                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                               (rule "leq_literals" (formula "1") (term "0,0"))
                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                               (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "1"))
                                                                                                               (rule "applyEqReverse" (formula "134") (term "0,1,0") (ifseqformula "1"))
                                                                                                               (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "1"))
                                                                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                                                                               (rule "elim_double_block_2" (formula "133") (term "1"))
                                                                                                               (rule "ifUnfold" (formula "133") (term "1") (inst "#boolv=x_4"))
                                                                                                               (rule "variableDeclaration" (formula "133") (term "1") (newnames "x_17"))
                                                                                                               (rule "inequality_comparison_simple" (formula "133") (term "1"))
                                                                                                                (builtin "One Step Simplification" (formula "133"))
                                                                                                               (rule "replace_known_left" (formula "133") (term "0,0,1,0") (ifseqformula "103"))
                                                                                                                (builtin "One Step Simplification" (formula "133"))
                                                                                                                (builtin "Use Dependency Contract" (formula "87") (term "0") (ifInst ""  (formula "133") (term "1,0,1,0,0,0,0,0,0")) (ifInst ""  (formula "75")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                                                               (rule "wellFormedAnonEQ" (formula "106") (term "1,1,0,0,0,0") (ifseqformula "75"))
                                                                                                               (rule "wellFormedAnonEQ" (formula "106") (term "0,1,0,0,0,0") (ifseqformula "63"))
                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "1,0,0,0,0,0") (ifseqformula "63"))
                                                                                                                (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "131")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")) (ifInst ""  (formula "71")) (ifInst ""  (formula "27")))
                                                                                                               (rule "wellFormedAnon" (formula "106") (term "0,0,0,0,0"))
                                                                                                               (rule "wellFormedAnonEQ" (formula "106") (term "1,0,0,0,0") (ifseqformula "63"))
                                                                                                               (rule "wellFormedAnon" (formula "106") (term "0,0,0,0,0,0"))
                                                                                                               (rule "wellFormedAnon" (formula "106") (term "0,1,0,0,0,0"))
                                                                                                               (rule "wellFormedAnon" (formula "106") (term "0,0,1,0,0,0,0"))
                                                                                                               (rule "expand_inInt" (formula "106") (term "1,0,0,0"))
                                                                                                               (rule "replace_int_MAX" (formula "106") (term "1,0,1,0,0,0"))
                                                                                                               (rule "replace_int_MIN" (formula "106") (term "0,1,1,0,0,0"))
                                                                                                               (rule "translateJavaMulInt" (formula "106") (term "0,1,0,1,1,0"))
                                                                                                               (rule "translateJavaAddInt" (formula "106") (term "0,1,1,1,1,0"))
                                                                                                               (rule "eqSymm" (formula "106") (term "1"))
                                                                                                               (rule "translateJavaMulInt" (formula "106") (term "0,0,1,1,1,1,0"))
                                                                                                               (rule "replace_known_left" (formula "106") (term "1,1,0,0,0,0") (ifseqformula "62"))
                                                                                                                (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")))
                                                                                                               (rule "polySimp_mulComm0" (formula "106") (term "0,0,1,1,1,1,0"))
                                                                                                               (rule "polySimp_mulComm0" (formula "106") (term "0,1,0,1,1,0"))
                                                                                                               (rule "polySimp_addComm0" (formula "106") (term "0,1,1,1,1,0"))
                                                                                                               (rule "disjointDefinition" (formula "106") (term "1,0"))
                                                                                                               (rule "inEqSimp_commuteLeq" (formula "106") (term "0,1,0,0"))
                                                                                                               (rule "replace_known_left" (formula "106") (term "0,1,0,0") (ifseqformula "12"))
                                                                                                                (builtin "One Step Simplification" (formula "106"))
                                                                                                               (rule "inEqSimp_commuteLeq" (formula "106") (term "1,0,0,0"))
                                                                                                               (rule "applyEq" (formula "106") (term "1,1,0,0") (ifseqformula "36"))
                                                                                                               (rule "replace_known_left" (formula "106") (term "1,0,0") (ifseqformula "8"))
                                                                                                                (builtin "One Step Simplification" (formula "106"))
                                                                                                               (rule "distributeIntersection" (formula "106") (term "0,1,0"))
                                                                                                               (rule "unionEqualsEmpty" (formula "106") (term "1,0"))
                                                                                                               (rule "disjointWithSingleton1" (formula "106") (term "1,1,0"))
                                                                                                               (rule "disjointWithSingleton1" (formula "106") (term "0,1,0"))
                                                                                                               (rule "elementOfArrayRangeConcrete" (formula "106") (term "0,1,1,0"))
                                                                                                               (rule "replace_known_right" (formula "106") (term "0,0,0,1,1,0") (ifseqformula "117"))
                                                                                                                (builtin "One Step Simplification" (formula "106"))
                                                                                                               (rule "elementOfArrayRangeConcrete" (formula "106") (term "0,1,0"))
                                                                                                               (rule "replace_known_right" (formula "106") (term "0,0,0,1,0") (ifseqformula "117"))
                                                                                                                (builtin "One Step Simplification" (formula "106"))
                                                                                                               (rule "commute_and" (formula "106") (term "0"))
                                                                                                                (builtin "Use Dependency Contract" (formula "94") (term "1,1") (ifInst ""  (formula "68") (term "0")) (ifInst ""  (formula "75")) (ifInst ""  (formula "63")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                                                                (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "131")) (ifInst ""  (formula "2")) (ifInst ""  (formula "27")))
                                                                                                               (rule "wellFormedAnon" (formula "106") (term "0,0,0,0,0"))
                                                                                                               (rule "wellFormedAnonEQ" (formula "106") (term "1,0,0,0,0") (ifseqformula "75"))
                                                                                                               (rule "wellFormedAnon" (formula "106") (term "0,0,0,0,0,0"))
                                                                                                               (rule "wellFormedAnonEQ" (formula "106") (term "0,1,0,0,0,0") (ifseqformula "63"))
                                                                                                               (rule "wellFormedAnon" (formula "106") (term "0,0,1,0,0,0,0"))
                                                                                                               (rule "wellFormedAnon" (formula "106") (term "0,0,0,1,0,0,0,0"))
                                                                                                               (rule "expand_inInt" (formula "106") (term "1,0,0,0"))
                                                                                                               (rule "replace_int_MIN" (formula "106") (term "0,1,1,0,0,0"))
                                                                                                               (rule "replace_int_MAX" (formula "106") (term "1,0,1,0,0,0"))
                                                                                                               (rule "eqSymm" (formula "106") (term "1"))
                                                                                                               (rule "translateJavaMulInt" (formula "106") (term "0,1,0,1,1,0"))
                                                                                                               (rule "translateJavaAddInt" (formula "106") (term "0,1,1,1,1,0"))
                                                                                                               (rule "translateJavaMulInt" (formula "106") (term "0,0,1,1,1,1,0"))
                                                                                                               (rule "replace_known_left" (formula "106") (term "0,0,0,0,0,0,0") (ifseqformula "20"))
                                                                                                                (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                                               (rule "polySimp_mulComm0" (formula "106") (term "0,1,0,1,1,0"))
                                                                                                               (rule "polySimp_mulComm0" (formula "106") (term "0,0,1,1,1,1,0"))
                                                                                                               (rule "polySimp_addComm0" (formula "106") (term "0,1,1,1,1,0"))
                                                                                                               (rule "disjointDefinition" (formula "106") (term "1,0"))
                                                                                                               (rule "inEqSimp_commuteLeq" (formula "106") (term "1,0,0,0"))
                                                                                                               (rule "inEqSimp_commuteLeq" (formula "106") (term "0,1,0,0"))
                                                                                                               (rule "replace_known_left" (formula "106") (term "0,1,0,0") (ifseqformula "12"))
                                                                                                                (builtin "One Step Simplification" (formula "106"))
                                                                                                               (rule "applyEq" (formula "106") (term "1,1,0,0") (ifseqformula "36"))
                                                                                                               (rule "replace_known_left" (formula "106") (term "1,0,0") (ifseqformula "8"))
                                                                                                                (builtin "One Step Simplification" (formula "106"))
                                                                                                               (rule "applyEq" (formula "106") (term "0,1") (ifseqformula "68"))
                                                                                                               (rule "distributeIntersection" (formula "106") (term "0,1,0"))
                                                                                                               (rule "distributeIntersection_2" (formula "106") (term "1,0,1,0"))
                                                                                                               (rule "distributeIntersection_2" (formula "106") (term "0,0,1,0"))
                                                                                                                (builtin "One Step Simplification" (formula "106"))
                                                                                                               (rule "unionIntersectItself_2" (formula "106") (term "0,0,1,0"))
                                                                                                               (rule "intersectWithSingleton" (formula "106") (term "1,1,0,1,0"))
                                                                                                               (rule "elementOfSingleton" (formula "106") (term "0,1,1,0,1,0"))
                                                                                                                (builtin "One Step Simplification" (formula "106"))
                                                                                                               (rule "unionEqualsEmpty" (formula "106") (term "1,0"))
                                                                                                                (builtin "One Step Simplification" (formula "106"))
                                                                                                               (rule "true_left" (formula "106"))
                                                                                                                (builtin "Use Dependency Contract" (formula "14") (ifInst ""  (formula "133") (term "0,0,1,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                               (rule "ifSplit" (formula "133"))
                                                                                                               (branch "if x_17 true"
                                                                                                                   (builtin "One Step Simplification" (formula "134"))
                                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                                  (rule "closeFalse" (formula "1"))
                                                                                                               )
                                                                                                               (branch "if x_17 false"
                                                                                                                   (builtin "One Step Simplification" (formula "134"))
                                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                                  (rule "true_left" (formula "1"))
                                                                                                                  (rule "blockEmpty" (formula "133") (term "1"))
                                                                                                                  (rule "variableDeclarationAssign" (formula "133") (term "1"))
                                                                                                                  (rule "variableDeclaration" (formula "133") (term "1") (newnames "target_bucket"))
                                                                                                                   (builtin "Use Operation Contract" (formula "133") (newnames "heapBefore_classify,result_2,exc_17") (contract "de.wiesler.Classifier[de.wiesler.Classifier::classify(int)].JML normal_behavior operation contract.0"))
                                                                                                                  (branch "Post (classify)"
                                                                                                                      (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "80")))
                                                                                                                      (builtin "One Step Simplification" (formula "134"))
                                                                                                                     (rule "expand_inInt" (formula "106") (term "0,1,0"))
                                                                                                                     (rule "replace_int_MIN" (formula "106") (term "0,1,0,1,0"))
                                                                                                                     (rule "replace_int_MAX" (formula "106") (term "1,0,0,1,0"))
                                                                                                                     (rule "andLeft" (formula "106"))
                                                                                                                     (rule "andLeft" (formula "106"))
                                                                                                                     (rule "andLeft" (formula "106"))
                                                                                                                     (rule "andLeft" (formula "107"))
                                                                                                                     (rule "andLeft" (formula "106"))
                                                                                                                     (rule "andLeft" (formula "108"))
                                                                                                                     (rule "andLeft" (formula "110"))
                                                                                                                     (rule "andLeft" (formula "111"))
                                                                                                                     (rule "eqSymm" (formula "111"))
                                                                                                                     (rule "inEqSimp_commuteLeq" (formula "107"))
                                                                                                                     (rule "inEqSimp_commuteLeq" (formula "108"))
                                                                                                                     (rule "assignment" (formula "141") (term "1"))
                                                                                                                      (builtin "One Step Simplification" (formula "141"))
                                                                                                                      (builtin "Block Contract (Internal)" (formula "141") (newnames "exc_18,heap_Before_BLOCK_13,savedHeap_Before_BLOCK_13,o,f"))
                                                                                                                     (branch "Validity"
                                                                                                                         (builtin "One Step Simplification" (formula "142"))
                                                                                                                         (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "31")))
                                                                                                                        (rule "eqSymm" (formula "142") (term "0,0,1,0,1"))
                                                                                                                        (rule "variableDeclarationAssign" (formula "142") (term "1"))
                                                                                                                        (rule "variableDeclaration" (formula "142") (term "1") (newnames "exc_18_1"))
                                                                                                                        (rule "assignment" (formula "142") (term "1"))
                                                                                                                         (builtin "One Step Simplification" (formula "142"))
                                                                                                                        (rule "emptyStatement" (formula "142") (term "1"))
                                                                                                                         (builtin "One Step Simplification" (formula "142"))
                                                                                                                        (rule "emptyStatement" (formula "142") (term "1"))
                                                                                                                        (rule "applyEq" (formula "109") (term "1") (ifseqformula "54"))
                                                                                                                        (rule "tryEmpty" (formula "142") (term "1"))
                                                                                                                        (rule "blockEmptyLabel" (formula "142") (term "1"))
                                                                                                                        (rule "blockEmpty" (formula "142") (term "1"))
                                                                                                                        (rule "methodCallEmpty" (formula "142") (term "1"))
                                                                                                                        (rule "emptyModality" (formula "142") (term "1"))
                                                                                                                        (rule "andRight" (formula "142"))
                                                                                                                        (branch
                                                                                                                            (builtin "One Step Simplification" (formula "142"))
                                                                                                                           (rule "closeTrue" (formula "142"))
                                                                                                                        )
                                                                                                                        (branch
                                                                                                                            (builtin "One Step Simplification" (formula "142"))
                                                                                                                           (rule "closeTrue" (formula "142"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "Precondition"
                                                                                                                        (rule "andRight" (formula "141"))
                                                                                                                        (branch
                                                                                                                            (builtin "One Step Simplification" (formula "141") (ifInst ""  (formula "31")))
                                                                                                                           (rule "closeTrue" (formula "141"))
                                                                                                                        )
                                                                                                                        (branch
                                                                                                                            (builtin "One Step Simplification" (formula "141"))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "141") (ifseqformula "75"))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "141") (term "0") (ifseqformula "63"))
                                                                                                                           (rule "wellFormedAnon" (formula "141") (term "0,0"))
                                                                                                                           (rule "wellFormedAnon" (formula "141") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "141") (term "1,0") (ifseqformula "62"))
                                                                                                                            (builtin "One Step Simplification" (formula "141") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "74")))
                                                                                                                           (rule "closeTrue" (formula "141"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "Usage"
                                                                                                                         (builtin "One Step Simplification" (formula "142"))
                                                                                                                         (builtin "One Step Simplification" (formula "114"))
                                                                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "1,1,0") (ifseqformula "75"))
                                                                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                                         (builtin "One Step Simplification" (formula "114"))
                                                                                                                        (rule "andLeft" (formula "114"))
                                                                                                                        (rule "andLeft" (formula "114"))
                                                                                                                        (rule "translateJavaAddInt" (formula "116") (term "4,0"))
                                                                                                                        (rule "translateJavaAddInt" (formula "116") (term "3,0"))
                                                                                                                        (rule "translateJavaAddInt" (formula "116") (term "0,4,0"))
                                                                                                                        (rule "replace_known_left" (formula "115") (term "0") (ifseqformula "114"))
                                                                                                                         (builtin "One Step Simplification" (formula "115"))
                                                                                                                        (rule "true_left" (formula "115"))
                                                                                                                        (rule "polySimp_addComm1" (formula "115") (term "4,0"))
                                                                                                                        (rule "polySimp_addComm0" (formula "115") (term "0,4,0"))
                                                                                                                        (rule "applyEq" (formula "109") (term "1") (ifseqformula "54"))
                                                                                                                        (rule "elim_double_block_2" (formula "143") (term "1"))
                                                                                                                        (rule "ifUnfold" (formula "143") (term "1") (inst "#boolv=x_4"))
                                                                                                                        (rule "variableDeclaration" (formula "143") (term "1") (newnames "x_18"))
                                                                                                                        (rule "inequality_comparison_simple" (formula "143") (term "1"))
                                                                                                                         (builtin "One Step Simplification" (formula "143"))
                                                                                                                        (rule "replace_known_left" (formula "143") (term "0,0,1,0") (ifseqformula "114"))
                                                                                                                         (builtin "One Step Simplification" (formula "143"))
                                                                                                                        (rule "ifSplit" (formula "143"))
                                                                                                                        (branch "if x_18 true"
                                                                                                                            (builtin "One Step Simplification" (formula "144"))
                                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                                           (rule "closeFalse" (formula "1"))
                                                                                                                        )
                                                                                                                        (branch "if x_18 false"
                                                                                                                            (builtin "One Step Simplification" (formula "144"))
                                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                                           (rule "true_left" (formula "1"))
                                                                                                                           (rule "blockEmpty" (formula "143") (term "1"))
                                                                                                                            (builtin "Block Contract (Internal)" (formula "143") (newnames "exc_19,heap_Before_BLOCK_14,savedHeap_Before_BLOCK_14,o,f"))
                                                                                                                           (branch "Validity"
                                                                                                                               (builtin "One Step Simplification" (formula "144"))
                                                                                                                               (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "31")))
                                                                                                                              (rule "eqSymm" (formula "144") (term "0,0,1,0,1"))
                                                                                                                              (rule "variableDeclarationAssign" (formula "144") (term "1"))
                                                                                                                              (rule "variableDeclaration" (formula "144") (term "1") (newnames "exc_19_1"))
                                                                                                                              (rule "assignment" (formula "144") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "144"))
                                                                                                                              (rule "emptyStatement" (formula "144") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "144"))
                                                                                                                              (rule "emptyStatement" (formula "144") (term "1"))
                                                                                                                              (rule "tryEmpty" (formula "144") (term "1"))
                                                                                                                              (rule "blockEmptyLabel" (formula "144") (term "1"))
                                                                                                                              (rule "blockEmpty" (formula "144") (term "1"))
                                                                                                                              (rule "methodCallEmpty" (formula "144") (term "1"))
                                                                                                                              (rule "emptyModality" (formula "144") (term "1"))
                                                                                                                              (rule "andRight" (formula "144"))
                                                                                                                              (branch
                                                                                                                                  (builtin "One Step Simplification" (formula "144"))
                                                                                                                                 (rule "closeTrue" (formula "144"))
                                                                                                                              )
                                                                                                                              (branch
                                                                                                                                  (builtin "One Step Simplification" (formula "144"))
                                                                                                                                 (rule "closeTrue" (formula "144"))
                                                                                                                              )
                                                                                                                           )
                                                                                                                           (branch "Precondition"
                                                                                                                              (rule "andRight" (formula "143"))
                                                                                                                              (branch
                                                                                                                                  (builtin "One Step Simplification" (formula "143") (ifInst ""  (formula "31")))
                                                                                                                                 (rule "closeTrue" (formula "143"))
                                                                                                                              )
                                                                                                                              (branch
                                                                                                                                  (builtin "One Step Simplification" (formula "143"))
                                                                                                                                 (rule "wellFormedAnonEQ" (formula "143") (ifseqformula "75"))
                                                                                                                                 (rule "wellFormedAnonEQ" (formula "143") (term "0") (ifseqformula "63"))
                                                                                                                                 (rule "wellFormedAnon" (formula "143") (term "0,0"))
                                                                                                                                 (rule "wellFormedAnon" (formula "143") (term "0,0,0"))
                                                                                                                                 (rule "replace_known_left" (formula "143") (term "1,0") (ifseqformula "62"))
                                                                                                                                  (builtin "One Step Simplification" (formula "143") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "74")))
                                                                                                                                 (rule "closeTrue" (formula "143"))
                                                                                                                              )
                                                                                                                           )
                                                                                                                           (branch "Usage"
                                                                                                                               (builtin "One Step Simplification" (formula "116"))
                                                                                                                               (builtin "One Step Simplification" (formula "144"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "1,1,0") (ifseqformula "75"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                                               (builtin "One Step Simplification" (formula "116"))
                                                                                                                              (rule "andLeft" (formula "116"))
                                                                                                                              (rule "andLeft" (formula "116"))
                                                                                                                              (rule "andLeft" (formula "118"))
                                                                                                                              (rule "translateJavaAddInt" (formula "118") (term "3,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "119") (term "3,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "118") (term "4,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "118") (term "0,4,0"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "0") (ifseqformula "116"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "true_left" (formula "117"))
                                                                                                                              (rule "polySimp_addComm1" (formula "117") (term "4,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "117") (term "0,4,0"))
                                                                                                                              (rule "elim_double_block_2" (formula "146") (term "1"))
                                                                                                                              (rule "ifUnfold" (formula "146") (term "1") (inst "#boolv=x_4"))
                                                                                                                              (rule "variableDeclaration" (formula "146") (term "1") (newnames "x_19"))
                                                                                                                              (rule "inequality_comparison_simple" (formula "146") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "146"))
                                                                                                                              (rule "replace_known_left" (formula "146") (term "0,0,1,0") (ifseqformula "116"))
                                                                                                                               (builtin "One Step Simplification" (formula "146"))
                                                                                                                               (builtin "Use Dependency Contract" (formula "15") (ifInst ""  (formula "146") (term "1,0,1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                                              (rule "wellFormedAnon" (formula "119") (term "1,1,0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "119") (term "0,1,0,0,0") (ifseqformula "20"))
                                                                                                                               (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "145")) (ifInst ""  (formula "26")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "33")) (ifInst ""  (formula "15")) (ifInst ""  (formula "33")))
                                                                                                                              (rule "true_left" (formula "119"))
                                                                                                                              (rule "ifSplit" (formula "146"))
                                                                                                                              (branch "if x_19 true"
                                                                                                                                  (builtin "One Step Simplification" (formula "147"))
                                                                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                                                                 (rule "closeFalse" (formula "1"))
                                                                                                                              )
                                                                                                                              (branch "if x_19 false"
                                                                                                                                  (builtin "One Step Simplification" (formula "147"))
                                                                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                                                                 (rule "true_left" (formula "1"))
                                                                                                                                 (rule "blockEmpty" (formula "146") (term "1"))
                                                                                                                                  (builtin "Block Contract (Internal)" (formula "146") (newnames "exc_20,heap_Before_BLOCK_15,savedHeap_Before_BLOCK_15,o,f"))
                                                                                                                                 (branch "Validity"
                                                                                                                                     (builtin "One Step Simplification" (formula "147"))
                                                                                                                                     (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "31")))
                                                                                                                                    (rule "eqSymm" (formula "147") (term "0,0,1,0,1"))
                                                                                                                                    (rule "variableDeclarationAssign" (formula "147") (term "1"))
                                                                                                                                    (rule "variableDeclaration" (formula "147") (term "1") (newnames "exc_20_1"))
                                                                                                                                    (rule "assignment" (formula "147") (term "1"))
                                                                                                                                     (builtin "One Step Simplification" (formula "147"))
                                                                                                                                    (rule "emptyStatement" (formula "147") (term "1"))
                                                                                                                                     (builtin "One Step Simplification" (formula "147"))
                                                                                                                                    (rule "emptyStatement" (formula "147") (term "1"))
                                                                                                                                    (rule "tryEmpty" (formula "147") (term "1"))
                                                                                                                                    (rule "blockEmptyLabel" (formula "147") (term "1"))
                                                                                                                                    (rule "blockEmpty" (formula "147") (term "1"))
                                                                                                                                    (rule "methodCallEmpty" (formula "147") (term "1"))
                                                                                                                                    (rule "emptyModality" (formula "147") (term "1"))
                                                                                                                                    (rule "andRight" (formula "147"))
                                                                                                                                    (branch
                                                                                                                                        (builtin "One Step Simplification" (formula "147"))
                                                                                                                                       (rule "closeTrue" (formula "147"))
                                                                                                                                    )
                                                                                                                                    (branch
                                                                                                                                        (builtin "One Step Simplification" (formula "147"))
                                                                                                                                       (rule "closeTrue" (formula "147"))
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                                 (branch "Precondition"
                                                                                                                                    (rule "andRight" (formula "146"))
                                                                                                                                    (branch
                                                                                                                                        (builtin "One Step Simplification" (formula "146") (ifInst ""  (formula "31")))
                                                                                                                                       (rule "closeTrue" (formula "146"))
                                                                                                                                    )
                                                                                                                                    (branch
                                                                                                                                        (builtin "One Step Simplification" (formula "146"))
                                                                                                                                       (rule "wellFormedAnonEQ" (formula "146") (ifseqformula "75"))
                                                                                                                                       (rule "wellFormedAnonEQ" (formula "146") (term "0") (ifseqformula "63"))
                                                                                                                                       (rule "wellFormedAnon" (formula "146") (term "0,0"))
                                                                                                                                       (rule "wellFormedAnon" (formula "146") (term "0,0,0"))
                                                                                                                                       (rule "replace_known_left" (formula "146") (term "1,0,0,0") (ifseqformula "19"))
                                                                                                                                        (builtin "One Step Simplification" (formula "146") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                                                                       (rule "closeTrue" (formula "146"))
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                                 (branch "Usage"
                                                                                                                                     (builtin "One Step Simplification" (formula "119"))
                                                                                                                                     (builtin "One Step Simplification" (formula "147"))
                                                                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "1,1,0") (ifseqformula "75"))
                                                                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                                                     (builtin "One Step Simplification" (formula "119"))
                                                                                                                                    (rule "andLeft" (formula "119"))
                                                                                                                                    (rule "andLeft" (formula "119"))
                                                                                                                                    (rule "translateJavaAddInt" (formula "121") (term "4,0"))
                                                                                                                                    (rule "translateJavaAddInt" (formula "121") (term "3,0"))
                                                                                                                                    (rule "translateJavaAddInt" (formula "121") (term "0,4,0"))
                                                                                                                                    (rule "replace_known_left" (formula "120") (term "0") (ifseqformula "119"))
                                                                                                                                     (builtin "One Step Simplification" (formula "120"))
                                                                                                                                    (rule "true_left" (formula "120"))
                                                                                                                                    (rule "polySimp_addComm1" (formula "120") (term "4,0"))
                                                                                                                                    (rule "polySimp_addComm0" (formula "120") (term "0,4,0"))
                                                                                                                                    (rule "elim_double_block_2" (formula "148") (term "1"))
                                                                                                                                    (rule "ifUnfold" (formula "148") (term "1") (inst "#boolv=x_4"))
                                                                                                                                    (rule "variableDeclaration" (formula "148") (term "1") (newnames "x_20"))
                                                                                                                                    (rule "inequality_comparison_simple" (formula "148") (term "1"))
                                                                                                                                     (builtin "One Step Simplification" (formula "148"))
                                                                                                                                    (rule "replace_known_left" (formula "148") (term "0,0,1,0") (ifseqformula "119"))
                                                                                                                                     (builtin "One Step Simplification" (formula "148"))
                                                                                                                                    (rule "ifSplit" (formula "148"))
                                                                                                                                    (branch "if x_20 true"
                                                                                                                                        (builtin "One Step Simplification" (formula "149"))
                                                                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                                                                       (rule "closeFalse" (formula "1"))
                                                                                                                                    )
                                                                                                                                    (branch "if x_20 false"
                                                                                                                                        (builtin "One Step Simplification" (formula "149"))
                                                                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                                                                       (rule "true_left" (formula "1"))
                                                                                                                                       (rule "blockEmpty" (formula "148") (term "1"))
                                                                                                                                        (builtin "Block Contract (Internal)" (formula "148") (newnames "exc_21,heap_Before_BLOCK_16,savedHeap_Before_BLOCK_16,o,f"))
                                                                                                                                       (branch "Validity"
                                                                                                                                           (builtin "One Step Simplification" (formula "149"))
                                                                                                                                           (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "31")))
                                                                                                                                          (rule "eqSymm" (formula "149") (term "0,0,1,0,1"))
                                                                                                                                          (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                                                                                                          (rule "variableDeclaration" (formula "149") (term "1") (newnames "exc_21_1"))
                                                                                                                                          (rule "assignment" (formula "149") (term "1"))
                                                                                                                                           (builtin "One Step Simplification" (formula "149"))
                                                                                                                                          (rule "emptyStatement" (formula "149") (term "1"))
                                                                                                                                           (builtin "One Step Simplification" (formula "149"))
                                                                                                                                          (rule "emptyStatement" (formula "149") (term "1"))
                                                                                                                                          (rule "tryEmpty" (formula "149") (term "1"))
                                                                                                                                          (rule "blockEmptyLabel" (formula "149") (term "1"))
                                                                                                                                          (rule "blockEmpty" (formula "149") (term "1"))
                                                                                                                                          (rule "methodCallEmpty" (formula "149") (term "1"))
                                                                                                                                          (rule "emptyModality" (formula "149") (term "1"))
                                                                                                                                          (rule "andRight" (formula "149"))
                                                                                                                                          (branch
                                                                                                                                              (builtin "One Step Simplification" (formula "149"))
                                                                                                                                             (rule "closeTrue" (formula "149"))
                                                                                                                                          )
                                                                                                                                          (branch
                                                                                                                                              (builtin "One Step Simplification" (formula "149"))
                                                                                                                                             (rule "closeTrue" (formula "149"))
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                       (branch "Precondition"
                                                                                                                                          (rule "andRight" (formula "148"))
                                                                                                                                          (branch
                                                                                                                                              (builtin "One Step Simplification" (formula "148") (ifInst ""  (formula "31")))
                                                                                                                                             (rule "closeTrue" (formula "148"))
                                                                                                                                          )
                                                                                                                                          (branch
                                                                                                                                              (builtin "One Step Simplification" (formula "148"))
                                                                                                                                             (rule "wellFormedAnonEQ" (formula "148") (ifseqformula "75"))
                                                                                                                                             (rule "wellFormedAnonEQ" (formula "148") (term "0") (ifseqformula "63"))
                                                                                                                                             (rule "wellFormedAnon" (formula "148") (term "0,0"))
                                                                                                                                             (rule "wellFormedAnon" (formula "148") (term "0,0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "148") (term "1,0") (ifseqformula "62"))
                                                                                                                                              (builtin "One Step Simplification" (formula "148") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "74")))
                                                                                                                                             (rule "closeTrue" (formula "148"))
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                       (branch "Usage"
                                                                                                                                           (builtin "One Step Simplification" (formula "121"))
                                                                                                                                           (builtin "One Step Simplification" (formula "149"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "1,1,0") (ifseqformula "75"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                                                           (builtin "One Step Simplification" (formula "121"))
                                                                                                                                          (rule "expand_inInt" (formula "121") (term "1,0,0,1"))
                                                                                                                                          (rule "replace_int_MIN" (formula "121") (term "0,1,1,0,0,1"))
                                                                                                                                          (rule "replace_int_MAX" (formula "121") (term "1,0,1,0,0,1"))
                                                                                                                                          (rule "andLeft" (formula "121"))
                                                                                                                                          (rule "andLeft" (formula "121"))
                                                                                                                                          (rule "translateJavaAddInt" (formula "123") (term "0,0,1,0"))
                                                                                                                                          (rule "eqSymm" (formula "123") (term "1,1,0"))
                                                                                                                                          (rule "replace_known_left" (formula "122") (term "0") (ifseqformula "121"))
                                                                                                                                           (builtin "One Step Simplification" (formula "122"))
                                                                                                                                          (rule "true_left" (formula "122"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "122") (term "1,1,0,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "122") (term "0,0,0,0"))
                                                                                                                                          (rule "applyEq" (formula "122") (term "1,1,0,0,0") (ifseqformula "54"))
                                                                                                                                          (rule "commute_and" (formula "122") (term "1,0"))
                                                                                                                                          (rule "commute_and" (formula "122") (term "1,0,0"))
                                                                                                                                          (rule "commute_and" (formula "122") (term "0,0,0"))
                                                                                                                                          (rule "shift_paren_and" (formula "122") (term "0,0"))
                                                                                                                                          (rule "commute_and_2" (formula "122") (term "0,0,0"))
                                                                                                                                          (rule "elim_double_block_2" (formula "150") (term "1"))
                                                                                                                                          (rule "ifUnfold" (formula "150") (term "1") (inst "#boolv=x_4"))
                                                                                                                                          (rule "variableDeclaration" (formula "150") (term "1") (newnames "x_21"))
                                                                                                                                          (rule "inequality_comparison_simple" (formula "150") (term "1"))
                                                                                                                                           (builtin "One Step Simplification" (formula "150"))
                                                                                                                                          (rule "replace_known_left" (formula "150") (term "0,0,1,0") (ifseqformula "121"))
                                                                                                                                           (builtin "One Step Simplification" (formula "150"))
                                                                                                                                           (builtin "Use Dependency Contract" (formula "87") (term "0") (ifInst ""  (formula "150") (term "1,0,1,0,0,0,0,0")) (ifInst ""  (formula "75")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "123") (term "1,0,0,0,0,0") (ifseqformula "63"))
                                                                                                                                           (builtin "One Step Simplification" (formula "123") (ifInst ""  (formula "148")) (ifInst ""  (formula "71")) (ifInst ""  (formula "27")))
                                                                                                                                          (rule "wellFormedAnonEQ" (formula "123") (term "1,0,0,0,0") (ifseqformula "75"))
                                                                                                                                          (rule "wellFormedAnonEQ" (formula "123") (term "0,0,0,0,0") (ifseqformula "63"))
                                                                                                                                          (rule "wellFormedAnon" (formula "123") (term "0,0,0,0,0,0"))
                                                                                                                                          (rule "wellFormedAnonEQ" (formula "123") (term "0,1,0,0,0,0") (ifseqformula "63"))
                                                                                                                                          (rule "wellFormedAnon" (formula "123") (term "0,0,0,0,0,0,0"))
                                                                                                                                          (rule "wellFormedAnon" (formula "123") (term "0,0,1,0,0,0,0"))
                                                                                                                                          (rule "wellFormedAnon" (formula "123") (term "0,0,0,1,0,0,0,0"))
                                                                                                                                          (rule "expand_inInt" (formula "123") (term "1,0,0,0"))
                                                                                                                                          (rule "replace_int_MAX" (formula "123") (term "1,0,1,0,0,0"))
                                                                                                                                          (rule "replace_int_MIN" (formula "123") (term "0,1,1,0,0,0"))
                                                                                                                                          (rule "translateJavaMulInt" (formula "123") (term "0,1,0,1,1,0"))
                                                                                                                                          (rule "translateJavaAddInt" (formula "123") (term "0,1,1,1,1,0"))
                                                                                                                                          (rule "eqSymm" (formula "123") (term "1"))
                                                                                                                                          (rule "translateJavaMulInt" (formula "123") (term "0,0,1,1,1,1,0"))
                                                                                                                                          (rule "replace_known_left" (formula "123") (term "0,0,0,0,0,0,0,0") (ifseqformula "20"))
                                                                                                                                           (builtin "One Step Simplification" (formula "123") (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "123") (term "0,0,1,1,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "123") (term "0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "123") (term "0,1,1,1,1,0"))
                                                                                                                                          (rule "disjointDefinition" (formula "123") (term "1,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "123") (term "0,1,0,0"))
                                                                                                                                          (rule "replace_known_left" (formula "123") (term "0,1,0,0") (ifseqformula "12"))
                                                                                                                                           (builtin "One Step Simplification" (formula "123"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "123") (term "1,0,0,0"))
                                                                                                                                          (rule "applyEq" (formula "123") (term "1,1,0,0") (ifseqformula "36"))
                                                                                                                                          (rule "replace_known_left" (formula "123") (term "1,0,0") (ifseqformula "8"))
                                                                                                                                           (builtin "One Step Simplification" (formula "123"))
                                                                                                                                          (rule "distributeIntersection" (formula "123") (term "0,1,0"))
                                                                                                                                          (rule "unionEqualsEmpty" (formula "123") (term "1,0"))
                                                                                                                                          (rule "disjointWithSingleton1" (formula "123") (term "1,1,0"))
                                                                                                                                          (rule "disjointWithSingleton1" (formula "123") (term "0,1,0"))
                                                                                                                                          (rule "elementOfArrayRangeConcrete" (formula "123") (term "0,1,1,0"))
                                                                                                                                          (rule "replace_known_right" (formula "123") (term "0,0,0,1,1,0") (ifseqformula "134"))
                                                                                                                                           (builtin "One Step Simplification" (formula "123"))
                                                                                                                                          (rule "elementOfArrayRangeConcrete" (formula "123") (term "0,1,0"))
                                                                                                                                          (rule "replace_known_right" (formula "123") (term "0,0,0,1,0") (ifseqformula "134"))
                                                                                                                                           (builtin "One Step Simplification" (formula "123"))
                                                                                                                                          (rule "commute_and" (formula "123") (term "0"))
                                                                                                                                          (rule "ifSplit" (formula "150"))
                                                                                                                                          (branch "if x_21 true"
                                                                                                                                              (builtin "One Step Simplification" (formula "151"))
                                                                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                                                                             (rule "closeFalse" (formula "1"))
                                                                                                                                          )
                                                                                                                                          (branch "if x_21 false"
                                                                                                                                              (builtin "One Step Simplification" (formula "151"))
                                                                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                                                                             (rule "true_left" (formula "1"))
                                                                                                                                             (rule "blockEmpty" (formula "150") (term "1"))
                                                                                                                                              (builtin "Block Contract (Internal)" (formula "150") (newnames "exc_22,heap_Before_BLOCK_17,savedHeap_Before_BLOCK_17,o,f"))
                                                                                                                                             (branch "Validity"
                                                                                                                                                 (builtin "One Step Simplification" (formula "151"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "123") (ifInst ""  (formula "31")))
                                                                                                                                                (rule "eqSymm" (formula "151") (term "0,0,1,0,1"))
                                                                                                                                                (rule "variableDeclarationAssign" (formula "151") (term "1"))
                                                                                                                                                (rule "variableDeclaration" (formula "151") (term "1") (newnames "exc_22_1"))
                                                                                                                                                (rule "assignment" (formula "151") (term "1"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "151"))
                                                                                                                                                (rule "emptyStatement" (formula "151") (term "1"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "151"))
                                                                                                                                                (rule "emptyStatement" (formula "151") (term "1"))
                                                                                                                                                (rule "tryEmpty" (formula "151") (term "1"))
                                                                                                                                                (rule "blockEmptyLabel" (formula "151") (term "1"))
                                                                                                                                                (rule "blockEmpty" (formula "151") (term "1"))
                                                                                                                                                (rule "methodCallEmpty" (formula "151") (term "1"))
                                                                                                                                                (rule "emptyModality" (formula "151") (term "1"))
                                                                                                                                                (rule "andRight" (formula "151"))
                                                                                                                                                (branch
                                                                                                                                                    (builtin "One Step Simplification" (formula "151"))
                                                                                                                                                   (rule "closeTrue" (formula "151"))
                                                                                                                                                )
                                                                                                                                                (branch
                                                                                                                                                    (builtin "One Step Simplification" (formula "151"))
                                                                                                                                                   (rule "closeTrue" (formula "151"))
                                                                                                                                                )
                                                                                                                                             )
                                                                                                                                             (branch "Precondition"
                                                                                                                                                (rule "andRight" (formula "150"))
                                                                                                                                                (branch
                                                                                                                                                    (builtin "One Step Simplification" (formula "150") (ifInst ""  (formula "31")))
                                                                                                                                                   (rule "closeTrue" (formula "150"))
                                                                                                                                                )
                                                                                                                                                (branch
                                                                                                                                                    (builtin "One Step Simplification" (formula "150"))
                                                                                                                                                   (rule "wellFormedAnonEQ" (formula "150") (ifseqformula "75"))
                                                                                                                                                   (rule "wellFormedAnonEQ" (formula "150") (term "0") (ifseqformula "63"))
                                                                                                                                                   (rule "wellFormedAnon" (formula "150") (term "0,0"))
                                                                                                                                                   (rule "wellFormedAnon" (formula "150") (term "0,0,0"))
                                                                                                                                                   (rule "replace_known_left" (formula "150") (term "0,0,0,0") (ifseqformula "20"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "150") (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                                                                                   (rule "closeTrue" (formula "150"))
                                                                                                                                                )
                                                                                                                                             )
                                                                                                                                             (branch "Usage"
                                                                                                                                                 (builtin "One Step Simplification" (formula "151"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "123"))
                                                                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "123") (term "1,1,0") (ifseqformula "75"))
                                                                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "123") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "123"))
                                                                                                                                                (rule "expand_inInt" (formula "123") (term "1,0,0,1"))
                                                                                                                                                (rule "replace_int_MIN" (formula "123") (term "0,1,1,0,0,1"))
                                                                                                                                                (rule "replace_int_MAX" (formula "123") (term "1,0,1,0,0,1"))
                                                                                                                                                (rule "andLeft" (formula "123"))
                                                                                                                                                (rule "andLeft" (formula "123"))
                                                                                                                                                (rule "translateJavaAddInt" (formula "125") (term "0,1,0"))
                                                                                                                                                (rule "replace_known_left" (formula "124") (term "0") (ifseqformula "123"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "124"))
                                                                                                                                                (rule "true_left" (formula "124"))
                                                                                                                                                (rule "inEqSimp_commuteLeq" (formula "124") (term "1,1,0,0"))
                                                                                                                                                (rule "inEqSimp_commuteLeq" (formula "124") (term "0,0,0,0"))
                                                                                                                                                (rule "applyEq" (formula "124") (term "1,1,0,0,0") (ifseqformula "54"))
                                                                                                                                                (rule "commute_and" (formula "124") (term "1,0,0"))
                                                                                                                                                (rule "commute_and" (formula "124") (term "0,0,0"))
                                                                                                                                                (rule "shift_paren_and" (formula "124") (term "0,0"))
                                                                                                                                                (rule "commute_and_2" (formula "124") (term "0,0,0"))
                                                                                                                                                (rule "elim_double_block_2" (formula "152") (term "1"))
                                                                                                                                                 (builtin "Use Dependency Contract" (formula "94") (term "1,1") (ifInst ""  (formula "152") (term "1,0,1,0,0,0,0")) (ifInst ""  (formula "75")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "1,0,0,0,0,0") (ifseqformula "63"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "150")) (ifInst ""  (formula "71")) (ifInst ""  (formula "27")))
                                                                                                                                                (rule "wellFormedAnonEQ" (formula "125") (term "1,0,0,0,0") (ifseqformula "75"))
                                                                                                                                                (rule "wellFormedAnonEQ" (formula "125") (term "0,0,0,0,0") (ifseqformula "63"))
                                                                                                                                                (rule "wellFormedAnon" (formula "125") (term "0,0,0,0,0,0"))
                                                                                                                                                (rule "wellFormedAnonEQ" (formula "125") (term "0,1,0,0,0,0") (ifseqformula "63"))
                                                                                                                                                (rule "wellFormedAnon" (formula "125") (term "0,0,0,0,0,0,0"))
                                                                                                                                                (rule "wellFormedAnon" (formula "125") (term "0,0,1,0,0,0,0"))
                                                                                                                                                (rule "wellFormedAnon" (formula "125") (term "0,0,0,1,0,0,0,0"))
                                                                                                                                                (rule "expand_inInt" (formula "125") (term "1,0,0,0"))
                                                                                                                                                (rule "replace_int_MAX" (formula "125") (term "1,0,1,0,0,0"))
                                                                                                                                                (rule "replace_int_MIN" (formula "125") (term "0,1,1,0,0,0"))
                                                                                                                                                (rule "translateJavaMulInt" (formula "125") (term "0,1,0,1,1,0"))
                                                                                                                                                (rule "translateJavaAddInt" (formula "125") (term "0,1,1,1,1,0"))
                                                                                                                                                (rule "eqSymm" (formula "125") (term "1"))
                                                                                                                                                (rule "translateJavaMulInt" (formula "125") (term "0,0,1,1,1,1,0"))
                                                                                                                                                (rule "replace_known_left" (formula "125") (term "1,0,0,0,0,0") (ifseqformula "62"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                                                                                (rule "polySimp_mulComm0" (formula "125") (term "0,1,0,1,1,0"))
                                                                                                                                                (rule "polySimp_mulComm0" (formula "125") (term "0,0,1,1,1,1,0"))
                                                                                                                                                (rule "polySimp_addComm0" (formula "125") (term "0,1,1,1,1,0"))
                                                                                                                                                (rule "disjointDefinition" (formula "125") (term "1,0"))
                                                                                                                                                (rule "inEqSimp_commuteLeq" (formula "125") (term "0,1,0,0"))
                                                                                                                                                (rule "replace_known_left" (formula "125") (term "0,1,0,0") (ifseqformula "12"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "125"))
                                                                                                                                                (rule "inEqSimp_commuteLeq" (formula "125") (term "1,0,0,0"))
                                                                                                                                                (rule "distributeIntersection" (formula "125") (term "0,1,0"))
                                                                                                                                                (rule "applyEq" (formula "125") (term "1,1,0,0") (ifseqformula "36"))
                                                                                                                                                (rule "replace_known_left" (formula "125") (term "1,0,0") (ifseqformula "8"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "125"))
                                                                                                                                                (rule "unionEqualsEmpty" (formula "125") (term "1,0"))
                                                                                                                                                (rule "disjointWithSingleton1" (formula "125") (term "1,1,0"))
                                                                                                                                                (rule "disjointWithSingleton1" (formula "125") (term "0,1,0"))
                                                                                                                                                (rule "elementOfArrayRangeConcrete" (formula "125") (term "0,1,1,0"))
                                                                                                                                                (rule "replace_known_right" (formula "125") (term "0,0,0,1,1,0") (ifseqformula "136"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "125"))
                                                                                                                                                (rule "elementOfArrayRangeConcrete" (formula "125") (term "0,1,0"))
                                                                                                                                                (rule "replace_known_right" (formula "125") (term "0,0,0,1,0") (ifseqformula "136"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "125"))
                                                                                                                                                (rule "commute_and" (formula "125") (term "0"))
                                                                                                                                                (rule "ifUnfold" (formula "152") (term "1") (inst "#boolv=x_4"))
                                                                                                                                                (rule "variableDeclaration" (formula "152") (term "1") (newnames "x_22"))
                                                                                                                                                (rule "inequality_comparison_simple" (formula "152") (term "1"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "152"))
                                                                                                                                                (rule "replace_known_left" (formula "152") (term "0,0,1,0") (ifseqformula "123"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "152"))
                                                                                                                                                 (builtin "Use Dependency Contract" (formula "14") (ifInst ""  (formula "152") (term "0,0,1,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                                                                (rule "ifSplit" (formula "152"))
                                                                                                                                                (branch "if x_22 true"
                                                                                                                                                    (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                   (rule "closeFalse" (formula "1"))
                                                                                                                                                )
                                                                                                                                                (branch "if x_22 false"
                                                                                                                                                    (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                   (rule "true_left" (formula "1"))
                                                                                                                                                   (rule "blockEmpty" (formula "152") (term "1"))
                                                                                                                                                    (builtin "Block Contract (Internal)" (formula "152") (newnames "exc_23,heap_Before_BLOCK_18,savedHeap_Before_BLOCK_18,o,f"))
                                                                                                                                                   (branch "Validity"
                                                                                                                                                       (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "31")))
                                                                                                                                                       (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                      (rule "eqSymm" (formula "153") (term "0,0,1,0,1"))
                                                                                                                                                      (rule "variableDeclarationAssign" (formula "153") (term "1"))
                                                                                                                                                      (rule "variableDeclaration" (formula "153") (term "1") (newnames "exc_23_1"))
                                                                                                                                                      (rule "assignment" (formula "153") (term "1"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                      (rule "emptyStatement" (formula "153") (term "1"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                      (rule "emptyStatement" (formula "153") (term "1"))
                                                                                                                                                      (rule "tryEmpty" (formula "153") (term "1"))
                                                                                                                                                      (rule "blockEmptyLabel" (formula "153") (term "1"))
                                                                                                                                                      (rule "blockEmpty" (formula "153") (term "1"))
                                                                                                                                                      (rule "methodCallEmpty" (formula "153") (term "1"))
                                                                                                                                                      (rule "emptyModality" (formula "153") (term "1"))
                                                                                                                                                      (rule "andRight" (formula "153"))
                                                                                                                                                      (branch
                                                                                                                                                          (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                         (rule "closeTrue" (formula "153"))
                                                                                                                                                      )
                                                                                                                                                      (branch
                                                                                                                                                          (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                         (rule "closeTrue" (formula "153"))
                                                                                                                                                      )
                                                                                                                                                   )
                                                                                                                                                   (branch "Precondition"
                                                                                                                                                      (rule "andRight" (formula "152"))
                                                                                                                                                      (branch
                                                                                                                                                          (builtin "One Step Simplification" (formula "152") (ifInst ""  (formula "31")))
                                                                                                                                                         (rule "closeTrue" (formula "152"))
                                                                                                                                                      )
                                                                                                                                                      (branch
                                                                                                                                                          (builtin "One Step Simplification" (formula "152"))
                                                                                                                                                         (rule "wellFormedAnonEQ" (formula "152") (ifseqformula "75"))
                                                                                                                                                         (rule "wellFormedAnonEQ" (formula "152") (term "0") (ifseqformula "63"))
                                                                                                                                                         (rule "wellFormedAnon" (formula "152") (term "0,0"))
                                                                                                                                                         (rule "wellFormedAnon" (formula "152") (term "0,0,0"))
                                                                                                                                                         (rule "replace_known_left" (formula "152") (term "1,0,0,0") (ifseqformula "19"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "152") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")))
                                                                                                                                                         (rule "closeTrue" (formula "152"))
                                                                                                                                                      )
                                                                                                                                                   )
                                                                                                                                                   (branch "Usage"
                                                                                                                                                       (builtin "One Step Simplification" (formula "125"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "1,1,0") (ifseqformula "75"))
                                                                                                                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "125"))
                                                                                                                                                      (rule "expand_inInt" (formula "125") (term "0,0,1"))
                                                                                                                                                      (rule "replace_int_MIN" (formula "125") (term "0,1,0,0,1"))
                                                                                                                                                      (rule "replace_int_MAX" (formula "125") (term "1,0,0,0,1"))
                                                                                                                                                      (rule "andLeft" (formula "125"))
                                                                                                                                                      (rule "andLeft" (formula "125"))
                                                                                                                                                      (rule "eqSymm" (formula "127") (term "1,1,0"))
                                                                                                                                                      (rule "eqSymm" (formula "127") (term "0,1,0"))
                                                                                                                                                      (rule "translateJavaAddInt" (formula "127") (term "1,0,1,0"))
                                                                                                                                                      (rule "replace_known_left" (formula "126") (term "0") (ifseqformula "125"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "126"))
                                                                                                                                                      (rule "true_left" (formula "126"))
                                                                                                                                                      (rule "polySimp_addComm0" (formula "126") (term "1,0,1,0"))
                                                                                                                                                      (rule "inEqSimp_commuteLeq" (formula "126") (term "1,0,0"))
                                                                                                                                                      (rule "commute_and" (formula "126") (term "0,0"))
                                                                                                                                                      (rule "elim_double_block_2" (formula "154") (term "1"))
                                                                                                                                                      (rule "ifUnfold" (formula "154") (term "1") (inst "#boolv=x_4"))
                                                                                                                                                      (rule "variableDeclaration" (formula "154") (term "1") (newnames "x_23"))
                                                                                                                                                      (rule "inequality_comparison_simple" (formula "154") (term "1"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "154"))
                                                                                                                                                      (rule "replace_known_left" (formula "154") (term "0,0,1,0") (ifseqformula "125"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "154"))
                                                                                                                                                       (builtin "Use Dependency Contract" (formula "15") (ifInst ""  (formula "154") (term "1,0,1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                                                                      (rule "wellFormedAnon" (formula "127") (term "1,1,0,0,0"))
                                                                                                                                                      (rule "replace_known_left" (formula "127") (term "1,0,0,0,0") (ifseqformula "26"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "153")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "33")) (ifInst ""  (formula "15")) (ifInst ""  (formula "33")))
                                                                                                                                                      (rule "true_left" (formula "127"))
                                                                                                                                                      (rule "ifSplit" (formula "154"))
                                                                                                                                                      (branch "if x_23 true"
                                                                                                                                                          (builtin "One Step Simplification" (formula "155"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                         (rule "closeFalse" (formula "1"))
                                                                                                                                                      )
                                                                                                                                                      (branch "if x_23 false"
                                                                                                                                                          (builtin "One Step Simplification" (formula "155"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                         (rule "true_left" (formula "1"))
                                                                                                                                                         (rule "blockEmpty" (formula "154") (term "1"))
                                                                                                                                                          (builtin "Block Contract (Internal)" (formula "154") (newnames "exc_24,heap_Before_BLOCK_19,savedHeap_Before_BLOCK_19,o,f"))
                                                                                                                                                         (branch "Validity"
                                                                                                                                                             (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "31")))
                                                                                                                                                             (builtin "One Step Simplification" (formula "155"))
                                                                                                                                                            (rule "eqSymm" (formula "155") (term "0,0,1,0,1"))
                                                                                                                                                            (rule "variableDeclarationAssign" (formula "155") (term "1"))
                                                                                                                                                            (rule "variableDeclaration" (formula "155") (term "1") (newnames "exc_24_1"))
                                                                                                                                                            (rule "assignment" (formula "155") (term "1"))
                                                                                                                                                             (builtin "One Step Simplification" (formula "155"))
                                                                                                                                                            (rule "emptyStatement" (formula "155") (term "1"))
                                                                                                                                                             (builtin "One Step Simplification" (formula "155"))
                                                                                                                                                            (rule "emptyStatement" (formula "155") (term "1"))
                                                                                                                                                            (rule "tryEmpty" (formula "155") (term "1"))
                                                                                                                                                            (rule "blockEmptyLabel" (formula "155") (term "1"))
                                                                                                                                                            (rule "blockEmpty" (formula "155") (term "1"))
                                                                                                                                                            (rule "methodCallEmpty" (formula "155") (term "1"))
                                                                                                                                                            (rule "emptyModality" (formula "155") (term "1"))
                                                                                                                                                            (rule "andRight" (formula "155"))
                                                                                                                                                            (branch
                                                                                                                                                                (builtin "One Step Simplification" (formula "155"))
                                                                                                                                                               (rule "closeTrue" (formula "155"))
                                                                                                                                                            )
                                                                                                                                                            (branch
                                                                                                                                                                (builtin "One Step Simplification" (formula "155"))
                                                                                                                                                               (rule "closeTrue" (formula "155"))
                                                                                                                                                            )
                                                                                                                                                         )
                                                                                                                                                         (branch "Precondition"
                                                                                                                                                            (rule "andRight" (formula "154"))
                                                                                                                                                            (branch
                                                                                                                                                                (builtin "One Step Simplification" (formula "154") (ifInst ""  (formula "31")))
                                                                                                                                                               (rule "closeTrue" (formula "154"))
                                                                                                                                                            )
                                                                                                                                                            (branch
                                                                                                                                                                (builtin "One Step Simplification" (formula "154"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "154") (ifseqformula "75"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "154") (term "0") (ifseqformula "63"))
                                                                                                                                                               (rule "wellFormedAnon" (formula "154") (term "0,0"))
                                                                                                                                                               (rule "wellFormedAnon" (formula "154") (term "0,0,0"))
                                                                                                                                                               (rule "replace_known_left" (formula "154") (term "1,0") (ifseqformula "62"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "154") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "74")))
                                                                                                                                                               (rule "closeTrue" (formula "154"))
                                                                                                                                                            )
                                                                                                                                                         )
                                                                                                                                                         (branch "Usage"
                                                                                                                                                             (builtin "One Step Simplification" (formula "155"))
                                                                                                                                                             (builtin "One Step Simplification" (formula "127"))
                                                                                                                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "1,1,0") (ifseqformula "75"))
                                                                                                                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,1,1,0") (ifseqformula "63"))
                                                                                                                                                             (builtin "One Step Simplification" (formula "127"))
                                                                                                                                                            (rule "expand_inInt" (formula "127") (term "0,0,1"))
                                                                                                                                                            (rule "replace_int_MIN" (formula "127") (term "0,1,0,0,1"))
                                                                                                                                                            (rule "replace_int_MAX" (formula "127") (term "1,0,0,0,1"))
                                                                                                                                                            (rule "andLeft" (formula "127"))
                                                                                                                                                            (rule "andLeft" (formula "127"))
                                                                                                                                                            (rule "translateJavaAddInt" (formula "129") (term "0,1,0"))
                                                                                                                                                            (rule "replace_known_left" (formula "128") (term "0") (ifseqformula "127"))
                                                                                                                                                             (builtin "One Step Simplification" (formula "128"))
                                                                                                                                                            (rule "true_left" (formula "128"))
                                                                                                                                                            (rule "polySimp_addComm0" (formula "128") (term "0,1,0"))
                                                                                                                                                            (rule "inEqSimp_commuteLeq" (formula "128") (term "1,0,0"))
                                                                                                                                                            (rule "commute_and" (formula "128") (term "0,0"))
                                                                                                                                                            (rule "elim_double_block_2" (formula "156") (term "1"))
                                                                                                                                                            (rule "ifUnfold" (formula "156") (term "1") (inst "#boolv=x_4"))
                                                                                                                                                            (rule "variableDeclaration" (formula "156") (term "1") (newnames "x_24"))
                                                                                                                                                            (rule "inequality_comparison_simple" (formula "156") (term "1"))
                                                                                                                                                             (builtin "One Step Simplification" (formula "156"))
                                                                                                                                                            (rule "replace_known_left" (formula "156") (term "0,0,1,0") (ifseqformula "127"))
                                                                                                                                                             (builtin "One Step Simplification" (formula "156"))
                                                                                                                                                            (rule "ifSplit" (formula "156"))
                                                                                                                                                            (branch "if x_24 true"
                                                                                                                                                                (builtin "One Step Simplification" (formula "157"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                               (rule "closeFalse" (formula "1"))
                                                                                                                                                            )
                                                                                                                                                            (branch "if x_24 false"
                                                                                                                                                                (builtin "One Step Simplification" (formula "157"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                               (rule "true_left" (formula "1"))
                                                                                                                                                               (rule "blockEmpty" (formula "156") (term "1"))
                                                                                                                                                                (builtin "Use Operation Contract" (formula "156") (newnames "heapBefore_place_block,exc_25,heapAfter_place_block,anon_heap_place_block") (contract "de.wiesler.Permute[de.wiesler.Permute::place_block(int,[I,int,int,de.wiesler.Classifier,de.wiesler.BucketPointers,[I,[I,[I)].JML normal_behavior operation contract.0"))
                                                                                                                                                               (branch "Post (place_block)"
                                                                                                                                                                   (builtin "One Step Simplification" (formula "158"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "130"))
                                                                                                                                                                  (rule "expand_inInt" (formula "130") (term "1,0,0,0,1,0,1"))
                                                                                                                                                                  (rule "expand_inInt" (formula "130") (term "0,0,0,1,1,1,0,1"))
                                                                                                                                                                  (rule "expand_inInt" (formula "130") (term "1,0,0,0,1,1,0,1"))
                                                                                                                                                                  (rule "replace_int_MIN" (formula "130") (term "0,1,1,0,0,0,1,0,1"))
                                                                                                                                                                  (rule "replace_int_MAX" (formula "130") (term "1,0,1,0,0,0,1,0,1"))
                                                                                                                                                                  (rule "replace_int_MIN" (formula "130") (term "0,1,0,0,0,1,1,1,0,1"))
                                                                                                                                                                  (rule "replace_int_MAX" (formula "130") (term "1,0,0,0,0,1,1,1,0,1"))
                                                                                                                                                                  (rule "replace_int_MAX" (formula "130") (term "1,0,1,0,0,0,1,1,0,1"))
                                                                                                                                                                  (rule "replace_int_MIN" (formula "130") (term "0,1,1,0,0,0,1,1,0,1"))
                                                                                                                                                                  (rule "andLeft" (formula "130"))
                                                                                                                                                                  (rule "andLeft" (formula "131"))
                                                                                                                                                                  (rule "andLeft" (formula "131"))
                                                                                                                                                                  (rule "andLeft" (formula "133"))
                                                                                                                                                                  (rule "andLeft" (formula "132"))
                                                                                                                                                                  (rule "andLeft" (formula "134"))
                                                                                                                                                                  (rule "andLeft" (formula "133"))
                                                                                                                                                                  (rule "andLeft" (formula "134"))
                                                                                                                                                                  (rule "andLeft" (formula "135"))
                                                                                                                                                                  (rule "translateJavaSubInt" (formula "130") (term "2,0,0,1,0"))
                                                                                                                                                                  (rule "eqSymm" (formula "132") (term "0,0,1,0"))
                                                                                                                                                                  (rule "translateJavaAddInt" (formula "134") (term "1,1,0"))
                                                                                                                                                                  (rule "translateJavaAddInt" (formula "132") (term "0,0,0,1,0"))
                                                                                                                                                                  (rule "polySimp_elimSub" (formula "130") (term "2,0,0,1,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "130") (term "1,2,0,0,1,0"))
                                                                                                                                                                  (rule "polySimp_addComm0" (formula "134") (term "1,1,0"))
                                                                                                                                                                  (rule "polySimp_addComm0" (formula "130") (term "2,0,0,1,0"))
                                                                                                                                                                  (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_commuteLeq" (formula "132") (term "1,1,0,0"))
                                                                                                                                                                  (rule "inEqSimp_commuteLeq" (formula "133") (term "1,1,0,0"))
                                                                                                                                                                  (rule "inEqSimp_commuteLeq" (formula "133") (term "0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_commuteLeq" (formula "134") (term "1,0,0"))
                                                                                                                                                                  (rule "blockEmpty" (formula "166") (term "1"))
                                                                                                                                                                  (rule "applyEq" (formula "133") (term "1,1,0,0,0") (ifseqformula "54"))
                                                                                                                                                                  (rule "applyEq" (formula "132") (term "1,1,0,0,0") (ifseqformula "54"))
                                                                                                                                                                  (rule "commuteUnion_2" (formula "130") (term "1,1,0"))
                                                                                                                                                                  (rule "commuteUnion" (formula "130") (term "0,1,0"))
                                                                                                                                                                  (rule "commuteUnion" (formula "130") (term "0,1,1,0"))
                                                                                                                                                                  (rule "commuteUnion" (formula "130") (term "1,0"))
                                                                                                                                                                  (rule "commute_and" (formula "134") (term "0,0"))
                                                                                                                                                                  (rule "commute_and" (formula "132") (term "0,1,0"))
                                                                                                                                                                  (rule "commute_and_2" (formula "132") (term "1,0"))
                                                                                                                                                                  (rule "commute_and" (formula "132") (term "1,0,0"))
                                                                                                                                                                  (rule "commute_and" (formula "133") (term "1,0,0"))
                                                                                                                                                                  (rule "commute_and" (formula "133") (term "0,0,0"))
                                                                                                                                                                  (rule "commute_and" (formula "132") (term "0,0,0"))
                                                                                                                                                                  (rule "shift_paren_and" (formula "133") (term "0,0"))
                                                                                                                                                                  (rule "commute_and_2" (formula "133") (term "0,0,0"))
                                                                                                                                                                  (rule "shift_paren_and" (formula "132") (term "0,0"))
                                                                                                                                                                  (rule "commute_and_2" (formula "132") (term "0,0,0"))
                                                                                                                                                                  (rule "associativeLawUnion" (formula "130") (term "1,0"))
                                                                                                                                                                  (rule "lsContinue" (formula "166") (term "1"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "166") (userinteraction))
                                                                                                                                                                  (rule "precOfInt" (formula "166") (userinteraction))
                                                                                                                                                                  (rule "impLeft" (formula "94") (userinteraction))
                                                                                                                                                                  (branch "Case 1"
                                                                                                                                                                     (rule "polySimp_homoEq" (formula "121") (term "1,1,0"))
                                                                                                                                                                     (rule "polySimp_homoEq" (formula "131") (term "1,1,0"))
                                                                                                                                                                     (rule "polySimp_homoEq" (formula "123") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_homoEq" (formula "127") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "121") (term "1,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "131") (term "1,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "123") (term "1,0,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "127") (term "1,0,1,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "121") (term "1,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "121") (term "0,1,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "131") (term "1,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "131") (term "0,1,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "123") (term "1,0,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "123") (term "0,1,0,1,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "127") (term "1,0,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "127") (term "0,1,0,1,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "121") (term "0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "121") (term "0,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "131") (term "0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "131") (term "0,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "123") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "127") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "127") (term "0,0,1,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "121") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "87"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "87") (term "1,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "87") (term "0,1,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "131") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "76") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "add_literals" (formula "76") (term "0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "123") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "123") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "87") (term "0,0"))
                                                                                                                                                                     (rule "add_literals" (formula "87") (term "0,0,0"))
                                                                                                                                                                     (rule "polySimp_addComm1" (formula "87") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                                                                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "166") (term "1"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "166") (term "1,0,0,1"))
                                                                                                                                                                     (rule "mul_literals" (formula "166") (term "0,1,0,0,1"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "132") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "108"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "108") (term "1,0,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "166") (term "0,0,1"))
                                                                                                                                                                     (rule "add_literals" (formula "166") (term "0,0,0,1"))
                                                                                                                                                                     (rule "inEqSimp_commuteLeq" (formula "166") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "46"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "73"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "73") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "73") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "73") (term "0,1,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "73") (term "0,0,1,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "73") (term "0"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "73") (term "0,0"))
                                                                                                                                                                     (rule "inEqSimp_homoInEq1" (formula "56"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "56") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                                                                                                                                     (rule "add_literals" (formula "56") (term "0,0"))
                                                                                                                                                                     (rule "add_zero_left" (formula "56") (term "0"))
                                                                                                                                                                     (rule "polySimp_sepNegMonomial" (formula "121") (term "1,1,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "121") (term "0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "121") (term "0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_sepNegMonomial" (formula "131") (term "1,1,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "131") (term "0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "131") (term "0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_sepNegMonomial" (formula "123") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "123") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "123") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_sepNegMonomial" (formula "127") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "127") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "127") (term "0,1,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "121") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "121") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "121") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "121") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "121") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "131") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "131") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "76") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "123") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "123") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "123") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "87"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "87") (term "0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "87") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "132") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "132") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "132") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "132") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "108"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "108") (term "1"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "108") (term "1"))
                                                                                                                                                                     (rule "mul_literals" (formula "108") (term "0,1"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "108") (term "1,1"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "108") (term "1,1"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "166") (term "1"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "166") (term "1,1"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "166") (term "1,1"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "166") (term "1,1,1"))
                                                                                                                                                                     (rule "mul_literals" (formula "166") (term "0,1,1"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "166") (term "1,1,1"))
                                                                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "73") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_invertInEq0" (formula "56"))
                                                                                                                                                                     (rule "times_zero_2" (formula "56") (term "1"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "56") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_subsumption1" (formula "106") (ifseqformula "107"))
                                                                                                                                                                     (rule "leq_literals" (formula "106") (term "0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "106"))
                                                                                                                                                                     (rule "true_left" (formula "106"))
                                                                                                                                                                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                                                                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                                                                                                                                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                                                                                                                                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                                                                                                                                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                                                                                                                                     (rule "add_zero_right" (formula "13") (term "0,0"))
                                                                                                                                                                     (rule "qeq_literals" (formula "13") (term "0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "13"))
                                                                                                                                                                     (rule "true_left" (formula "13"))
                                                                                                                                                                     (rule "inEqSimp_subsumption1" (formula "136") (term "0") (ifseqformula "12"))
                                                                                                                                                                     (rule "leq_literals" (formula "136") (term "0,0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "136"))
                                                                                                                                                                     (rule "inEqSimp_leqRight" (formula "136"))
                                                                                                                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                                                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                                                                                                                     (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                                                                                                                                                                     (rule "leq_literals" (formula "43") (term "0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                                                                                                                     (rule "true_left" (formula "43"))
                                                                                                                                                                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "40"))
                                                                                                                                                                     (rule "leq_literals" (formula "23") (term "0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                                                                                                                     (rule "true_left" (formula "23"))
                                                                                                                                                                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                                                                                                                                                     (rule "leq_literals" (formula "13") (term "0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "13"))
                                                                                                                                                                     (rule "true_left" (formula "13"))
                                                                                                                                                                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "43"))
                                                                                                                                                                     (rule "mul_literals" (formula "23") (term "0,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                                                                                                                                     (rule "add_literals" (formula "23") (term "0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                                                                                                                     (rule "mul_literals" (formula "23") (term "1"))
                                                                                                                                                                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "39"))
                                                                                                                                                                     (rule "leq_literals" (formula "23") (term "0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                                                                                                                     (rule "true_left" (formula "23"))
                                                                                                                                                                     (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "40"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "42"))
                                                                                                                                                                     (rule "leq_literals" (formula "22") (term "0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "22"))
                                                                                                                                                                     (rule "true_left" (formula "22"))
                                                                                                                                                                     (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "70"))
                                                                                                                                                                     (rule "mul_literals" (formula "63") (term "0,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                                                                                                                                     (rule "add_literals" (formula "63") (term "0,0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "63") (term "1"))
                                                                                                                                                                     (rule "mul_literals" (formula "63") (term "0,1"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "63") (term "1,1"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "63") (term "1,1"))
                                                                                                                                                                     (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "38"))
                                                                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "63") (term "0,0,0"))
                                                                                                                                                                     (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                                                                                                                                                     (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                                                                                                                                     (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                                                                                                                                     (rule "add_zero_right" (formula "63") (term "0,0"))
                                                                                                                                                                     (rule "qeq_literals" (formula "63") (term "0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                                                                                                                     (rule "true_left" (formula "63"))
                                                                                                                                                                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "49"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                                                                                                                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                                                                                                                     (rule "add_literals" (formula "9") (term "0,0"))
                                                                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                                                                                                                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                                                                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "9"))
                                                                                                                                                                     (rule "qeq_literals" (formula "1") (term "0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                                     (rule "closeFalse" (formula "1"))
                                                                                                                                                                  )
                                                                                                                                                                  (branch "Case 2"
                                                                                                                                                                     (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "166") (term "1,0") (userinteraction))
                                                                                                                                                                     (rule "andRight" (formula "167") (userinteraction))
                                                                                                                                                                     (branch "Case 1"
                                                                                                                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0") (ifseqformula "131"))
                                                                                                                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "76"))
                                                                                                                                                                        (rule "wellFormedAnonEQ" (formula "1") (term "1,0,0,0") (ifseqformula "131"))
                                                                                                                                                                        (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0,0,0") (ifseqformula "76"))
                                                                                                                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "64"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "138")) (ifInst ""  (formula "75")) (ifInst ""  (formula "130")) (ifInst ""  (formula "164")) (ifInst ""  (formula "138")) (ifInst ""  (formula "136")) (ifInst ""  (formula "28")))
                                                                                                                                                                        (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "64"))
                                                                                                                                                                        (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                                                                                                                                                                        (rule "wellFormedAnon" (formula "1") (term "0,0,1,0"))
                                                                                                                                                                        (rule "replace_known_left" (formula "1") (term "1,0,0,1,0") (ifseqformula "20"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "8")) (ifInst ""  (formula "63")))
                                                                                                                                                                        (rule "polySimp_homoEq" (formula "129") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_homoEq" (formula "133") (term "1,1,0"))
                                                                                                                                                                        (rule "polySimp_homoEq" (formula "125") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_homoEq" (formula "123") (term "1,1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "129") (term "1,0,1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "133") (term "1,0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "125") (term "1,0,1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "123") (term "1,0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "129") (term "1,0,1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "129") (term "0,1,0,1,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "133") (term "1,0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "133") (term "0,1,0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "125") (term "1,0,1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "125") (term "0,1,0,1,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "123") (term "1,0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "123") (term "0,1,0,1,1,0"))
                                                                                                                                                                        (rule "inEqSimp_leqRight" (formula "167"))
                                                                                                                                                                        (rule "add_zero_right" (formula "1") (term "0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_addAssoc" (formula "130") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_addComm0" (formula "130") (term "0,0,1,0"))
                                                                                                                                                                        (rule "polySimp_addAssoc" (formula "134") (term "0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_addComm0" (formula "134") (term "0,0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_addAssoc" (formula "126") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_addAssoc" (formula "124") (term "0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_addComm0" (formula "124") (term "0,0,1,1,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "124") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "135") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "89"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "89") (term "1,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "89") (term "0,1,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "111"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "111") (term "1,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "78") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "add_literals" (formula "78") (term "0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                                                                                                                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                                                                                                                                        (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_addAssoc" (formula "89") (term "0,0"))
                                                                                                                                                                        (rule "add_literals" (formula "89") (term "0,0,0"))
                                                                                                                                                                        (rule "polySimp_addComm1" (formula "89") (term "0"))
                                                                                                                                                                        (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0"))
                                                                                                                                                                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "14"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                                                                                                                        (rule "inEqSimp_homoInEq1" (formula "58"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                                                                                                                                        (rule "add_literals" (formula "58") (term "0,0"))
                                                                                                                                                                        (rule "add_zero_left" (formula "58") (term "0"))
                                                                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "48"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_mulAssoc" (formula "48") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "48") (term "0,0,1,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "75"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "75") (term "0,1,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "75") (term "0,0,1,0"))
                                                                                                                                                                        (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                                                                                                                                        (rule "polySimp_addComm0" (formula "75") (term "0,0"))
                                                                                                                                                                        (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "96"))
                                                                                                                                                                        (rule "applyEq" (formula "89") (term "0,1,0") (ifseqformula "96"))
                                                                                                                                                                        (rule "polySimp_pullOutFactor1b" (formula "89") (term "0"))
                                                                                                                                                                        (rule "add_literals" (formula "89") (term "1,1,0"))
                                                                                                                                                                        (rule "times_zero_1" (formula "89") (term "1,0"))
                                                                                                                                                                        (rule "add_zero_right" (formula "89") (term "0"))
                                                                                                                                                                        (rule "leq_literals" (formula "89"))
                                                                                                                                                                        (rule "true_left" (formula "89"))
                                                                                                                                                                        (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                                                                                                                                                        (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "10"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                                                                                                                        (rule "andLeft" (formula "2"))
                                                                                                                                                                        (rule "applyEq" (formula "71") (term "1,1") (ifseqformula "96"))
                                                                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "130") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "130") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "130") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "134") (term "1,1,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "134") (term "0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "134") (term "0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "126") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "126") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "126") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "124") (term "1,1,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "124") (term "0,1,1,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "124") (term "0,1,1,0"))
                                                                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "134") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "134") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "134") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "134") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "134") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "126") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "126") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "135") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "111"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "111") (term "1"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "111") (term "1"))
                                                                                                                                                                        (rule "mul_literals" (formula "111") (term "0,1"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "111") (term "1,1"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "111") (term "1,1"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                                                                                                                                                                        (rule "inEqSimp_invertInEq0" (formula "59"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                                                                                                                                        (rule "times_zero_2" (formula "59") (term "1"))
                                                                                                                                                                        (rule "polySimp_elimOne" (formula "59") (term "0"))
                                                                                                                                                                        (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "11"))
                                                                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                                                                                                                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                                                                                                                                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                                                                                                                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                                                                                                                        (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                                                                                                                        (rule "qeq_literals" (formula "16") (term "0"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "16"))
                                                                                                                                                                        (rule "true_left" (formula "16"))
                                                                                                                                                                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                                                                                                                                                        (rule "qeq_literals" (formula "1") (term "0"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                                        (rule "closeFalse" (formula "1"))
                                                                                                                                                                     )
                                                                                                                                                                     (branch "Case 2"
                                                                                                                                                                        (rule "instAll" (formula "167") (term "2,0") (ifseqformula "134") (userinteraction))
                                                                                                                                                                        (rule "impLeft" (formula "1") (userinteraction))
                                                                                                                                                                        (branch "Case 1"
                                                                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0") (ifseqformula "131"))
                                                                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "76"))
                                                                                                                                                                           (rule "wellFormedAnonEQ" (formula "1") (term "1,0,0,0") (ifseqformula "131"))
                                                                                                                                                                           (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0,0,0") (ifseqformula "76"))
                                                                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "64"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "138")) (ifInst ""  (formula "75")) (ifInst ""  (formula "130")) (ifInst ""  (formula "165")) (ifInst ""  (formula "138")) (ifInst ""  (formula "136")) (ifInst ""  (formula "28")))
                                                                                                                                                                           (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "64"))
                                                                                                                                                                           (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                                                                                                                                                                           (rule "wellFormedAnon" (formula "1") (term "0,0,1,0"))
                                                                                                                                                                           (rule "replace_known_left" (formula "140") (term "1,0") (ifseqformula "13"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "9")))
                                                                                                                                                                           (rule "replace_known_left" (formula "1") (term "1,1,0") (ifseqformula "63"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "8")))
                                                                                                                                                                           (rule "polySimp_homoEq" (formula "129") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_homoEq" (formula "133") (term "1,1,0"))
                                                                                                                                                                           (rule "polySimp_homoEq" (formula "123") (term "1,1,0"))
                                                                                                                                                                           (rule "polySimp_homoEq" (formula "125") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "129") (term "1,0,1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "133") (term "1,0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "123") (term "1,0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "125") (term "1,0,1,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "129") (term "1,0,1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "129") (term "0,1,0,1,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "133") (term "1,0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "133") (term "0,1,0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "123") (term "1,0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "123") (term "0,1,0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "125") (term "1,0,1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "125") (term "0,1,0,1,0"))
                                                                                                                                                                           (rule "inEqSimp_ltRight" (formula "168"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "130") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_addComm0" (formula "130") (term "0,0,1,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "134") (term "0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_addComm0" (formula "134") (term "0,0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "124") (term "0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_addComm0" (formula "124") (term "0,0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "126") (term "0,1,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "89"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "89") (term "1,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "89") (term "0,1,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "135") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "124") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "78") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "add_literals" (formula "78") (term "0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "111"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "111") (term "1,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                                                                                                                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "89") (term "0,0"))
                                                                                                                                                                           (rule "add_literals" (formula "89") (term "0,0,0"))
                                                                                                                                                                           (rule "polySimp_addComm1" (formula "89") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                                                                                                                                           (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                                                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0"))
                                                                                                                                                                           (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "14"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "48"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_mulAssoc" (formula "48") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "48") (term "0,0,1,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "75"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "75") (term "0,1,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "75") (term "0,0,1,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                                                                                                                                           (rule "polySimp_addComm0" (formula "75") (term "0,0"))
                                                                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "58"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                                                                                                                                           (rule "add_literals" (formula "58") (term "0,0"))
                                                                                                                                                                           (rule "add_zero_left" (formula "58") (term "0"))
                                                                                                                                                                           (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "96"))
                                                                                                                                                                           (rule "applyEq" (formula "89") (term "0,1,0") (ifseqformula "96"))
                                                                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "89") (term "0"))
                                                                                                                                                                           (rule "add_literals" (formula "89") (term "1,1,0"))
                                                                                                                                                                           (rule "times_zero_1" (formula "89") (term "1,0"))
                                                                                                                                                                           (rule "add_zero_right" (formula "89") (term "0"))
                                                                                                                                                                           (rule "leq_literals" (formula "89"))
                                                                                                                                                                           (rule "true_left" (formula "89"))
                                                                                                                                                                           (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                                                                                                                                                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "10"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                                                                                                                           (rule "andLeft" (formula "2"))
                                                                                                                                                                           (rule "applyEq" (formula "71") (term "1,1") (ifseqformula "96"))
                                                                                                                                                                           (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "96"))
                                                                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "130") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "130") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "130") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "134") (term "1,1,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "134") (term "0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "134") (term "0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "124") (term "1,1,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "124") (term "0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "124") (term "0,1,1,0"))
                                                                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "126") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "126") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "126") (term "0,1,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "135") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "134") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "134") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "134") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "134") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "134") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "111"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "111") (term "1"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "111") (term "1"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "111") (term "1,1"))
                                                                                                                                                                           (rule "mul_literals" (formula "111") (term "0,1"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "111") (term "1,1"))
                                                                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "126") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "126") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "76") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_invertInEq0" (formula "59"))
                                                                                                                                                                           (rule "mul_literals" (formula "59") (term "1"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "59") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                                                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                                                                                                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "43"))
                                                                                                                                                                           (rule "leq_literals" (formula "26") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                                                                                                                           (rule "true_left" (formula "26"))
                                                                                                                                                                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "11"))
                                                                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                                                                                                                                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                                                                                                                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                                                                                                                           (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                                                                                                                           (rule "qeq_literals" (formula "16") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "16"))
                                                                                                                                                                           (rule "true_left" (formula "16"))
                                                                                                                                                                           (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "45"))
                                                                                                                                                                           (rule "leq_literals" (formula "44") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                                                                                                                           (rule "true_left" (formula "44"))
                                                                                                                                                                           (rule "inEqSimp_subsumption1" (formula "106") (ifseqformula "107"))
                                                                                                                                                                           (rule "leq_literals" (formula "106") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "106"))
                                                                                                                                                                           (rule "true_left" (formula "106"))
                                                                                                                                                                           (rule "inEqSimp_subsumption1" (formula "137") (term "0") (ifseqformula "15"))
                                                                                                                                                                           (rule "leq_literals" (formula "137") (term "0,0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "137"))
                                                                                                                                                                           (rule "inEqSimp_leqRight" (formula "137"))
                                                                                                                                                                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                                                                           (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                                                                                                           (rule "mul_literals" (formula "1") (term "1"))
                                                                                                                                                                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                                                                                                                                                           (rule "leq_literals" (formula "16") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "16"))
                                                                                                                                                                           (rule "true_left" (formula "16"))
                                                                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "43"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                                                                                                                                           (rule "polySimp_addComm0" (formula "45") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "45"))
                                                                                                                                                                           (rule "leq_literals" (formula "25") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                                                                                                                           (rule "true_left" (formula "25"))
                                                                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "46"))
                                                                                                                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                                                                                                                           (rule "add_literals" (formula "25") (term "0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                                                                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                                                                                                                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "41"))
                                                                                                                                                                           (rule "leq_literals" (formula "25") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                                                                                                                           (rule "true_left" (formula "25"))
                                                                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "106") (ifseqformula "107"))
                                                                                                                                                                           (rule "times_zero_1" (formula "106") (term "0,0"))
                                                                                                                                                                           (rule "add_zero_left" (formula "106") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "106"))
                                                                                                                                                                           (rule "mul_literals" (formula "106") (term "1"))
                                                                                                                                                                           (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "106"))
                                                                                                                                                                           (rule "leq_literals" (formula "53") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "53"))
                                                                                                                                                                           (rule "true_left" (formula "53"))
                                                                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "72"))
                                                                                                                                                                           (rule "mul_literals" (formula "65") (term "0,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "65") (term "0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                                                                                                                                           (rule "add_literals" (formula "65") (term "0,0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "65") (term "1"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "65") (term "1"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1"))
                                                                                                                                                                           (rule "mul_literals" (formula "65") (term "0,1"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "65") (term "1,1"))
                                                                                                                                                                           (rule "inEqSimp_subsumption1" (formula "65") (ifseqformula "41"))
                                                                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "65") (term "0"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "65") (term "0,1,0,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                                                                                                                                           (rule "polySimp_addComm0" (formula "65") (term "0,0,0"))
                                                                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0"))
                                                                                                                                                                           (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                                                                                                                                           (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                                                                                                                                           (rule "add_zero_right" (formula "65") (term "0,0"))
                                                                                                                                                                           (rule "qeq_literals" (formula "65") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "65"))
                                                                                                                                                                           (rule "true_left" (formula "65"))
                                                                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "52"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                                                                                                                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                                                                                                                           (rule "add_literals" (formula "12") (term "0,0"))
                                                                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                                                                                                                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
                                                                                                                                                                           (rule "qeq_literals" (formula "12") (term "0"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "12"))
                                                                                                                                                                           (rule "closeFalse" (formula "12"))
                                                                                                                                                                        )
                                                                                                                                                                        (branch "Case 2"
                                                                                                                                                                           (rule "cut" (inst "cutFormula=lt(de.wiesler.BucketPointers::toReadCountOfBucket(heapAfter_copy_nonoverlapping,
                                                  bucket_pointers,
                                                  bucket_0),
   add(Z(6(5(2(#)))),
       de.wiesler.BucketPointers::toReadCountOfBucket(heapAfter_decrement_read,
                                                      bucket_pointers,
                                                      bucket_0)))<<origin(\"User_Interaction @ node 62551 (cut)\",\"[]\")>>") (userinteraction))
                                                                                                                                                                           (branch "CUT: bucket_pointers.toReadCountOfBucket(bucket_0) @heapAfter_copy_nonoverlapping < 256 + bucket_pointers.toReadCountOfBucket(bucket_0) @heapAfter_decrement_read TRUE"
                                                                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "1,0,0") (ifseqformula "132"))
                                                                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "77"))
                                                                                                                                                                              (rule "wellFormedAnonEQ" (formula "2") (term "1,0,0,0") (ifseqformula "132"))
                                                                                                                                                                              (rule "wellFormedAnonEQ" (formula "2") (term "0,1,0,0,0") (ifseqformula "77"))
                                                                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "65"))
                                                                                                                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "139")) (ifInst ""  (formula "76")) (ifInst ""  (formula "131")) (ifInst ""  (formula "165")) (ifInst ""  (formula "139")) (ifInst ""  (formula "137")) (ifInst ""  (formula "29")))
                                                                                                                                                                              (rule "wellFormedAnonEQ" (formula "2") (term "1,0") (ifseqformula "65"))
                                                                                                                                                                              (rule "wellFormedAnon" (formula "2") (term "0,1,0"))
                                                                                                                                                                              (rule "wellFormedAnon" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                              (rule "replace_known_left" (formula "2") (term "1,1,0") (ifseqformula "64"))
                                                                                                                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")) (ifInst ""  (formula "21")) (ifInst ""  (formula "9")))
                                                                                                                                                                              (rule "polySimp_homoEq" (formula "124") (term "1,1,0"))
                                                                                                                                                                              (rule "polySimp_homoEq" (formula "126") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_homoEq" (formula "134") (term "1,1,0"))
                                                                                                                                                                              (rule "polySimp_homoEq" (formula "130") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "124") (term "1,0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "126") (term "1,0,1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "134") (term "1,0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "130") (term "1,0,1,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "124") (term "1,0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "124") (term "0,1,0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "126") (term "1,0,1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "126") (term "0,1,0,1,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "134") (term "1,0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "134") (term "0,1,0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "130") (term "1,0,1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "130") (term "0,1,0,1,0"))
                                                                                                                                                                              (rule "inEqSimp_ltRight" (formula "168"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                                                                                                                              (rule "polySimp_addAssoc" (formula "125") (term "0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_addComm0" (formula "125") (term "0,0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_addAssoc" (formula "127") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_addAssoc" (formula "135") (term "0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_addComm0" (formula "135") (term "0,0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_addAssoc" (formula "131") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_addComm0" (formula "131") (term "0,0,1,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "127") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "127") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "add_literals" (formula "79") (term "0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "11"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                                                                                                                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "112"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "112") (term "1,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "90"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "90") (term "1,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "90") (term "0,1,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "135") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0"))
                                                                                                                                                                              (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_addAssoc" (formula "90") (term "0,0"))
                                                                                                                                                                              (rule "add_literals" (formula "90") (term "0,0,0"))
                                                                                                                                                                              (rule "polySimp_addComm1" (formula "90") (term "0"))
                                                                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                                                                                                                                                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "15"))
                                                                                                                                                                               (builtin "One Step Simplification" (formula "3"))
                                                                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "76"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "76") (term "0,1,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "76") (term "0,0,1,0"))
                                                                                                                                                                              (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                                                                                                                                              (rule "polySimp_addComm0" (formula "76") (term "0,0"))
                                                                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "49"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_mulAssoc" (formula "49") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "49") (term "0,0,1,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                                                                                                                              (rule "inEqSimp_homoInEq1" (formula "59"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "59") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "59") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                                                                                                                                                              (rule "add_literals" (formula "59") (term "0,0"))
                                                                                                                                                                              (rule "add_zero_left" (formula "59") (term "0"))
                                                                                                                                                                              (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "39"))
                                                                                                                                                                              (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "11"))
                                                                                                                                                                               (builtin "One Step Simplification" (formula "3"))
                                                                                                                                                                              (rule "andLeft" (formula "3"))
                                                                                                                                                                              (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "98"))
                                                                                                                                                                              (rule "applyEq" (formula "91") (term "0,1,0") (ifseqformula "98"))
                                                                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "91") (term "0"))
                                                                                                                                                                              (rule "add_literals" (formula "91") (term "1,1,0"))
                                                                                                                                                                              (rule "times_zero_1" (formula "91") (term "1,0"))
                                                                                                                                                                              (rule "add_zero_right" (formula "91") (term "0"))
                                                                                                                                                                              (rule "leq_literals" (formula "91"))
                                                                                                                                                                              (rule "true_left" (formula "91"))
                                                                                                                                                                              (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "97"))
                                                                                                                                                                              (rule "applyEq" (formula "72") (term "1,1") (ifseqformula "97"))
                                                                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "125") (term "1,1,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "125") (term "0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "125") (term "0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "127") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "127") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "127") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "135") (term "1,1,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "135") (term "0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "135") (term "0,1,1,0"))
                                                                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "131") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "131") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "131") (term "0,1,0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "127") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "127") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "127") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "80") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "112"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "112") (term "1"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "112") (term "1"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "112") (term "1,1"))
                                                                                                                                                                              (rule "mul_literals" (formula "112") (term "0,1"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "112") (term "1,1"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "135") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "136") (term "0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "136") (term "1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "136") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "136") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "136") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                                                                                                                              (rule "inEqSimp_invertInEq0" (formula "60"))
                                                                                                                                                                              (rule "mul_literals" (formula "60") (term "1"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                                                                                                              (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                                                                                                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                                                                                                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "12"))
                                                                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                                                                                                                                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                                                                                                                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                                                                                                                              (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                                                                                                                              (rule "qeq_literals" (formula "17") (term "0"))
                                                                                                                                                                               (builtin "One Step Simplification" (formula "17"))
                                                                                                                                                                              (rule "true_left" (formula "17"))
                                                                                                                                                                              (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "47"))
                                                                                                                                                                              (rule "leq_literals" (formula "46") (term "0"))
                                                                                                                                                                               (builtin "One Step Simplification" (formula "46"))
                                                                                                                                                                              (rule "true_left" (formula "46"))
                                                                                                                                                                              (rule "inEqSimp_subsumption1" (formula "108") (ifseqformula "109"))
                                                                                                                                                                              (rule "leq_literals" (formula "108") (term "0"))
                                                                                                                                                                               (builtin "One Step Simplification" (formula "108"))
                                                                                                                                                                              (rule "true_left" (formula "108"))
                                                                                                                                                                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "43"))
                                                                                                                                                                              (rule "leq_literals" (formula "26") (term "0"))
                                                                                                                                                                               (builtin "One Step Simplification" (formula "26"))
                                                                                                                                                                              (rule "true_left" (formula "26"))
                                                                                                                                                                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                                                                                                                                              (rule "andLeft" (formula "2"))
                                                                                                                                                                              (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                                                                                                                              (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                                                                                                                              (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                                                                                                                              (rule "add_zero_right" (formula "2") (term "0"))
                                                                                                                                                                              (rule "leq_literals" (formula "2"))
                                                                                                                                                                              (rule "closeFalse" (formula "2"))
                                                                                                                                                                           )
                                                                                                                                                                           (branch "CUT: bucket_pointers.toReadCountOfBucket(bucket_0) @heapAfter_copy_nonoverlapping < 256 + bucket_pointers.toReadCountOfBucket(bucket_0) @heapAfter_decrement_read FALSE"
                                                                                                                                                                              (rule "close" (formula "141") (ifseqformula "89"))
                                                                                                                                                                           )
                                                                                                                                                                        )
                                                                                                                                                                     )
                                                                                                                                                                  )
                                                                                                                                                               )
                                                                                                                                                               (branch "Exceptional Post (place_block)"
                                                                                                                                                                   (builtin "One Step Simplification" (formula "130"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "158"))
                                                                                                                                                                  (rule "andLeft" (formula "130"))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "1,0") (ifseqformula "130"))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "0,1,0") (ifseqformula "75"))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "0,0,1,0") (ifseqformula "63"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "131"))
                                                                                                                                                                  (rule "andLeft" (formula "131"))
                                                                                                                                                                  (rule "andLeft" (formula "132"))
                                                                                                                                                                  (rule "andLeft" (formula "131"))
                                                                                                                                                                  (rule "andLeft" (formula "133"))
                                                                                                                                                                  (rule "notLeft" (formula "131"))
                                                                                                                                                                  (rule "close" (formula "135") (ifseqformula "134"))
                                                                                                                                                               )
                                                                                                                                                               (branch "Pre (place_block)"
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156") (ifInst ""  (formula "81")) (ifInst ""  (formula "80")) (ifInst ""  (formula "155")) (ifInst ""  (formula "154")) (ifInst ""  (formula "153")) (ifInst ""  (formula "152")) (ifInst ""  (formula "150")) (ifInst ""  (formula "151")) (ifInst ""  (formula "155")) (ifInst ""  (formula "154")) (ifInst ""  (formula "153")) (ifInst ""  (formula "152")) (ifInst ""  (formula "150")) (ifInst ""  (formula "151")))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "1") (ifseqformula "75"))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "0,1") (ifseqformula "63"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156") (ifInst ""  (formula "30")))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "1") (ifseqformula "75"))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "0,1") (ifseqformula "63"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156") (ifInst ""  (formula "29")))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "1") (ifseqformula "75"))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "0,1") (ifseqformula "63"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156") (ifInst ""  (formula "28")))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "1") (ifseqformula "75"))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "0,1") (ifseqformula "63"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156") (ifInst ""  (formula "27")))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "1") (ifseqformula "75"))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "0,1") (ifseqformula "63"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156") (ifInst ""  (formula "26")))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "1,0,0") (ifseqformula "75"))
                                                                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "156") (term "0,1,0,0") (ifseqformula "63"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156") (ifInst ""  (formula "21")))
                                                                                                                                                                  (rule "wellFormedAnonEQ" (formula "156") (term "0,0,0") (ifseqformula "75"))
                                                                                                                                                                  (rule "wellFormedAnonEQ" (formula "156") (term "0,0,0,0") (ifseqformula "63"))
                                                                                                                                                                  (rule "wellFormedAnon" (formula "156") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "wellFormedAnon" (formula "156") (term "0,0,0,0,0,0"))
                                                                                                                                                                  (rule "expand_inInt" (formula "156") (term "1"))
                                                                                                                                                                  (rule "expand_inInt" (formula "156") (term "1,0,0"))
                                                                                                                                                                  (rule "expand_inInt" (formula "156") (term "1,0"))
                                                                                                                                                                  (rule "replace_int_MAX" (formula "156") (term "1,0,1"))
                                                                                                                                                                  (rule "replace_int_MIN" (formula "156") (term "0,1,1"))
                                                                                                                                                                  (rule "replace_int_MIN" (formula "156") (term "0,1,1,0,0"))
                                                                                                                                                                  (rule "replace_int_MAX" (formula "156") (term "1,0,1,0,0"))
                                                                                                                                                                  (rule "replace_int_MAX" (formula "156") (term "1,0,1,0"))
                                                                                                                                                                  (rule "replace_int_MIN" (formula "156") (term "0,1,1,0"))
                                                                                                                                                                  (rule "replace_known_left" (formula "156") (term "0,0,0,0,0,0,0") (ifseqformula "20"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156") (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "62")) (ifInst ""  (formula "74")) (ifInst ""  (formula "106")) (ifInst ""  (formula "22")) (ifInst ""  (formula "24")))
                                                                                                                                                                  (rule "polySimp_homoEq" (formula "124") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_homoEq" (formula "128") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_homoEq" (formula "122") (term "1,1,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "124") (term "1,0,1,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "128") (term "1,0,1,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "122") (term "1,0,1,1,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "124") (term "1,0,1,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "124") (term "0,1,0,1,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "128") (term "1,0,1,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "128") (term "0,1,0,1,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "122") (term "1,0,1,1,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "122") (term "0,1,0,1,1,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "76") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                  (rule "add_literals" (formula "76") (term "0,0,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "87"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "87") (term "1,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "87") (term "0,1,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "124") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "109"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "122") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "122") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                                                                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                                                                                                  (rule "polySimp_addAssoc" (formula "124") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_addAssoc" (formula "128") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_addComm0" (formula "128") (term "0,0,1,0"))
                                                                                                                                                                  (rule "polySimp_addAssoc" (formula "122") (term "0,1,1,0"))
                                                                                                                                                                  (rule "polySimp_addComm0" (formula "122") (term "0,0,1,1,0"))
                                                                                                                                                                  (rule "polySimp_addAssoc" (formula "87") (term "0,0"))
                                                                                                                                                                  (rule "add_literals" (formula "87") (term "0,0,0"))
                                                                                                                                                                  (rule "polySimp_addComm1" (formula "87") (term "0"))
                                                                                                                                                                  (rule "inEqSimp_commuteLeq" (formula "156") (term "1"))
                                                                                                                                                                  (rule "replace_known_left" (formula "156") (term "1") (ifseqformula "25"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156"))
                                                                                                                                                                  (rule "inEqSimp_homoInEq0" (formula "46"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                                                                                                                                  (rule "inEqSimp_homoInEq1" (formula "56"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "56") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                                                                                                                                  (rule "add_literals" (formula "56") (term "0,0"))
                                                                                                                                                                  (rule "add_zero_left" (formula "56") (term "0"))
                                                                                                                                                                  (rule "inEqSimp_homoInEq0" (formula "73"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "73") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "73") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "73") (term "0,1,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "73") (term "0,0,1,0"))
                                                                                                                                                                  (rule "polySimp_addAssoc" (formula "73") (term "0"))
                                                                                                                                                                  (rule "polySimp_addComm0" (formula "73") (term "0,0"))
                                                                                                                                                                  (rule "inEqSimp_commuteLeq" (formula "156") (term "0"))
                                                                                                                                                                  (rule "replace_known_left" (formula "156") (term "0") (ifseqformula "107"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "156"))
                                                                                                                                                                  (rule "inEqSimp_leqRight" (formula "156"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                                                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                                                                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                                                                  (rule "polySimp_sepNegMonomial" (formula "125") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "125") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "125") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_sepNegMonomial" (formula "129") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "129") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "129") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_sepNegMonomial" (formula "123") (term "1,1,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "123") (term "0,1,1,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "123") (term "0,1,1,0"))
                                                                                                                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "110"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "110") (term "1"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "110") (term "1"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "110") (term "1,1"))
                                                                                                                                                                  (rule "mul_literals" (formula "110") (term "0,1"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "110") (term "1,1"))
                                                                                                                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "123") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "123") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "123") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0"))
                                                                                                                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                                                                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "88"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "88") (term "0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "88") (term "0"))
                                                                                                                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                                                                                                  (rule "inEqSimp_invertInEq0" (formula "57"))
                                                                                                                                                                  (rule "times_zero_2" (formula "57") (term "1"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "57") (term "0"))
                                                                                                                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "74") (term "0"))
                                                                                                                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                                                                                                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "9"))
                                                                                                                                                                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                                                                                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                                                                                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                                                                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                                                                                                                  (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                                                                                                                  (rule "qeq_literals" (formula "14") (term "0"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                                                                                                                  (rule "true_left" (formula "14"))
                                                                                                                                                                  (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "1"))
                                                                                                                                                                  (rule "qeq_literals" (formula "23") (term "0"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                                                                                                                  (rule "closeFalse" (formula "23"))
                                                                                                                                                               )
                                                                                                                                                            )
                                                                                                                                                         )
                                                                                                                                                      )
                                                                                                                                                   )
                                                                                                                                                )
                                                                                                                                             )
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                              )
                                                                                                                           )
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                                  (branch "Exceptional Post (classify)"
                                                                                                                      (builtin "One Step Simplification" (formula "134"))
                                                                                                                      (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "80")))
                                                                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "1,0") (ifseqformula "75"))
                                                                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "0,1,0") (ifseqformula "63"))
                                                                                                                      (builtin "One Step Simplification" (formula "106"))
                                                                                                                     (rule "andLeft" (formula "106"))
                                                                                                                     (rule "andLeft" (formula "106"))
                                                                                                                     (rule "notLeft" (formula "106"))
                                                                                                                     (rule "close" (formula "108") (ifseqformula "107"))
                                                                                                                  )
                                                                                                                  (branch "Pre (classify)"
                                                                                                                      (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "80")))
                                                                                                                     (rule "wellFormedAnonEQ" (formula "133") (term "0,0") (ifseqformula "75"))
                                                                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "133") (term "1,0") (ifseqformula "75"))
                                                                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "133") (term "0,1,0") (ifseqformula "63"))
                                                                                                                      (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "74")) (ifInst ""  (formula "26")))
                                                                                                                     (rule "wellFormedAnonEQ" (formula "133") (term "0") (ifseqformula "63"))
                                                                                                                     (rule "wellFormedAnon" (formula "133") (term "0,0"))
                                                                                                                     (rule "wellFormedAnon" (formula "133") (term "0,0,0"))
                                                                                                                     (rule "expand_inInt" (formula "133") (term "1"))
                                                                                                                     (rule "replace_int_MAX" (formula "133") (term "1,0,1"))
                                                                                                                     (rule "replace_int_MIN" (formula "133") (term "0,1,1"))
                                                                                                                     (rule "replace_known_left" (formula "133") (term "1,0") (ifseqformula "62"))
                                                                                                                      (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "104")))
                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0,0,0"))
                                                                                                                     (rule "mul_literals" (formula "76") (term "1,0,0,0,0,0,0,0"))
                                                                                                                     (rule "add_literals" (formula "76") (term "0,0,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "87"))
                                                                                                                     (rule "polySimp_rightDist" (formula "87") (term "1,0,0"))
                                                                                                                     (rule "mul_literals" (formula "87") (term "0,1,0,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "87") (term "0,0"))
                                                                                                                     (rule "add_literals" (formula "87") (term "0,0,0"))
                                                                                                                     (rule "polySimp_addComm1" (formula "87") (term "0"))
                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_leqRight" (formula "133"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "74"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "74") (term "0,1,0"))
                                                                                                                     (rule "mul_literals" (formula "74") (term "0,0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                                                                                     (rule "polySimp_addComm0" (formula "74") (term "0,0"))
                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "47"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                                                                     (rule "polySimp_mulAssoc" (formula "47") (term "0,1,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                                                                     (rule "inEqSimp_homoInEq1" (formula "57"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                                                                                     (rule "add_literals" (formula "57") (term "0,0"))
                                                                                                                     (rule "add_zero_left" (formula "57") (term "0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0,0"))
                                                                                                                     (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "88"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "88") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "88") (term "0"))
                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                                                                                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "74") (term "0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                                                     (rule "inEqSimp_invertInEq0" (formula "57"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                                                                                     (rule "mul_literals" (formula "57") (term "1"))
                                                                                                                     (rule "polySimp_elimOne" (formula "57") (term "0"))
                                                                                                                     (rule "inEqSimp_subsumption1" (formula "95") (term "0,0") (ifseqformula "13"))
                                                                                                                     (rule "leq_literals" (formula "95") (term "0,0,0"))
                                                                                                                      (builtin "One Step Simplification" (formula "95"))
                                                                                                                     (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "45"))
                                                                                                                     (rule "leq_literals" (formula "44") (term "0"))
                                                                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                                                                     (rule "true_left" (formula "44"))
                                                                                                                     (rule "inEqSimp_subsumption0" (formula "104") (ifseqformula "1"))
                                                                                                                     (rule "leq_literals" (formula "104") (term "0"))
                                                                                                                      (builtin "One Step Simplification" (formula "104"))
                                                                                                                     (rule "true_left" (formula "104"))
                                                                                                                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "104"))
                                                                                                                     (rule "qeq_literals" (formula "1") (term "0"))
                                                                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                                                                     (rule "closeFalse" (formula "1"))
                                                                                                                  )
                                                                                                                  (branch "Null reference (_classifier = null)"
                                                                                                                      (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "131")))
                                                                                                                     (rule "closeTrue" (formula "133"))
                                                                                                                  )
                                                                                                               )
                                                                                                            )
                                                                                                         )
                                                                                                         (branch "Null Reference (_swap_1 = null)"
                                                                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "127")))
                                                                                                            (rule "closeFalse" (formula "1"))
                                                                                                         )
                                                                                                         (branch "Index Out of Bounds (_swap_1 != null, but 0 Out of Bounds!)"
                                                                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "127")))
                                                                                                             (builtin "One Step Simplification" (formula "131"))
                                                                                                            (rule "false_right" (formula "131"))
                                                                                                            (rule "less_literals" (formula "1") (term "1"))
                                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                                            (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,0,0"))
                                                                                                            (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0,0,0"))
                                                                                                            (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,0"))
                                                                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                                                                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                                                                                            (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                                                                            (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,0"))
                                                                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,0"))
                                                                                                            (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                                                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                                                                                            (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                                                                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
                                                                                                            (rule "inEqSimp_ltToLeq" (formula "88"))
                                                                                                            (rule "polySimp_rightDist" (formula "88") (term "1,0,0"))
                                                                                                            (rule "mul_literals" (formula "88") (term "0,1,0,0"))
                                                                                                            (rule "polySimp_addAssoc" (formula "88") (term "0,0"))
                                                                                                            (rule "add_literals" (formula "88") (term "0,0,0"))
                                                                                                            (rule "polySimp_addComm1" (formula "88") (term "0"))
                                                                                                            (rule "inEqSimp_homoInEq0" (formula "74"))
                                                                                                            (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                                                                            (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                                                                            (rule "polySimp_rightDist" (formula "74") (term "0,1,0"))
                                                                                                            (rule "mul_literals" (formula "74") (term "0,0,1,0"))
                                                                                                            (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                                                                            (rule "polySimp_addComm0" (formula "74") (term "0,0"))
                                                                                                            (rule "inEqSimp_homoInEq1" (formula "57"))
                                                                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                                                            (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                                                            (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                                                                            (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                                                                            (rule "add_literals" (formula "57") (term "0,0"))
                                                                                                            (rule "add_zero_left" (formula "57") (term "0"))
                                                                                                            (rule "inEqSimp_homoInEq0" (formula "47"))
                                                                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                                                            (rule "polySimp_mulAssoc" (formula "47") (term "0,1,0"))
                                                                                                            (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0"))
                                                                                                            (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                                                                            (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                                                                            (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "38"))
                                                                                                            (rule "leq_literals" (formula "1"))
                                                                                                            (rule "closeFalse" (formula "1"))
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Exceptional Post (copy_nonoverlapping)"
                                              (builtin "One Step Simplification" (formula "75"))
                                              (builtin "One Step Simplification" (formula "103"))
                                             (rule "andLeft" (formula "75"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "1,0") (ifseqformula "75"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,1,0") (ifseqformula "63"))
                                              (builtin "One Step Simplification" (formula "76"))
                                             (rule "andLeft" (formula "76"))
                                             (rule "andLeft" (formula "76"))
                                             (rule "notLeft" (formula "76"))
                                             (rule "close" (formula "78") (ifseqformula "77"))
                                          )
                                          (branch "Pre (copy_nonoverlapping)"
                                              (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "100")) (ifInst ""  (formula "97")) (ifInst ""  (formula "100")) (ifInst ""  (formula "97")) (userinteraction))
                                             (rule "andRight" (formula "101"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "101"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "101"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "101"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "101"))
                                                         (branch "Case 1"
                                                            (rule "wellFormedAnonEQ" (formula "101") (ifseqformula "63"))
                                                            (rule "wellFormedAnon" (formula "101") (term "0"))
                                                            (rule "wellFormedAnon" (formula "101") (term "0,0"))
                                                            (rule "replace_known_left" (formula "101") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")))
                                                            (rule "closeTrue" (formula "101"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "21")))
                                                            (rule "closeTrue" (formula "101"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "expand_inInt" (formula "101"))
                                                         (rule "replace_int_MAX" (formula "101") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "101") (term "0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "46"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "73"))
                                                         (rule "polySimp_mulComm0" (formula "73") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "73") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "73") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "73") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "73") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "73") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                         (rule "add_literals" (formula "56") (term "0,0"))
                                                         (rule "add_zero_left" (formula "56") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "101") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "101") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "101") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "101") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "101") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "101") (term "1"))
                                                         (rule "mul_literals" (formula "101") (term "1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "101") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "101") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                                         (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "73") (term "0"))
                                                         (rule "inEqSimp_invertInEq0" (formula "56"))
                                                         (rule "times_zero_2" (formula "56") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "101") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "101") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "101") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "101") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "101") (term "1,1"))
                                                         (rule "mul_literals" (formula "101") (term "0,1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0"))
                                                         (rule "qeq_literals" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                                         (rule "leq_literals" (formula "42") (term "0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "39"))
                                                         (rule "leq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "40"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "42"))
                                                         (rule "leq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "70"))
                                                         (rule "mul_literals" (formula "63") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                         (rule "add_literals" (formula "63") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1"))
                                                         (rule "mul_literals" (formula "63") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "38"))
                                                         (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "63") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                                         (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "63") (term "0,0"))
                                                         (rule "qeq_literals" (formula "63") (term "0"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "true_left" (formula "63"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "49"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "44"))
                                                         (rule "mul_literals" (formula "23") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                         (rule "add_literals" (formula "23") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                         (rule "mul_literals" (formula "23") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "39"))
                                                         (rule "leq_literals" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "42"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "39"))
                                                         (rule "leq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "4") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "47") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "nnf_imp2or" (formula "18") (term "0"))
                                                         (rule "nnf_imp2or" (formula "6") (term "0"))
                                                         (rule "nnf_imp2or" (formula "4") (term "0"))
                                                         (rule "nnf_imp2or" (formula "5") (term "0"))
                                                         (rule "nnf_imp2or" (formula "16") (term "0"))
                                                         (rule "nnf_imp2or" (formula "17") (term "0"))
                                                         (rule "nnf_imp2or" (formula "47") (term "0"))
                                                         (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "4") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                                         (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "66") (term "1,1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "97")) (ifInst ""  (formula "70")) (ifInst ""  (formula "54")) (ifInst ""  (formula "69")) (ifInst ""  (formula "24")))
                                                         (rule "wellFormedAnonEQ" (formula "66") (term "1,0") (ifseqformula "61"))
                                                         (rule "wellFormedAnon" (formula "66") (term "0,1,0"))
                                                         (rule "wellFormedAnon" (formula "66") (term "0,0,1,0"))
                                                         (rule "replace_known_left" (formula "66") (term "1,0,1,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "60")))
                                                         (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "66") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0"))
                                                         (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "13"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "applyEq" (formula "66") (term "0,1,0,0") (ifseqformula "33"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "66") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "0,0"))
                                                         (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "Definition_axiom_for_elementsToReadCountElementSplitBucket_in_de_wiesler_BucketPointers" (formula "59") (term "0") (inst "element=element") (inst "b=b"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "expand_inInt" (formula "59") (term "0,0"))
                                                         (rule "replace_int_MAX" (formula "59") (term "1,0,0,0"))
                                                         (rule "replace_int_MIN" (formula "59") (term "0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "2,1,2,0,0,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "3,1,1,1,0"))
                                                         (rule "translateJavaCastInt" (formula "59") (term "0,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "59") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "59") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "59") (term "1,0,0"))
                                                         (rule "applyEq" (formula "59") (term "1,1,0,1,0") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "59") (term "1,3,0,0,0,1,0") (ifseqformula "68"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "3,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "0,3,0,0,0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "59") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "0,1,1,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "14"))
                                                         (rule "notLeft" (formula "14"))
                                                         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "68") (inst "b=b"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "expand_inInt" (formula "68") (term "1,0,0,1"))
                                                         (rule "replace_int_MAX" (formula "68") (term "1,0,1,0,0,1"))
                                                         (rule "replace_int_MIN" (formula "68") (term "0,1,1,0,0,1"))
                                                         (rule "andLeft" (formula "68"))
                                                         (rule "andLeft" (formula "68"))
                                                         (rule "andLeft" (formula "68"))
                                                         (rule "andLeft" (formula "70"))
                                                         (rule "andLeft" (formula "68"))
                                                         (rule "andLeft" (formula "68"))
                                                         (rule "andLeft" (formula "70"))
                                                         (rule "andLeft" (formula "70"))
                                                         (rule "andLeft" (formula "70"))
                                                         (rule "translateJavaAddInt" (formula "74") (term "1"))
                                                         (rule "translateJavaCastInt" (formula "75") (term "0"))
                                                         (rule "translateJavaMulInt" (formula "69") (term "0"))
                                                         (rule "translateJavaMulInt" (formula "68") (term "1"))
                                                         (rule "translateJavaCastInt" (formula "72") (term "0"))
                                                         (rule "translateJavaCastInt" (formula "71") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "69") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                         (rule "polySimp_addComm0" (formula "74") (term "1"))
                                                         (rule "castedGetAny" (formula "75") (term "0"))
                                                         (rule "castedGetAny" (formula "72") (term "0"))
                                                         (rule "castedGetAny" (formula "71") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "77") (term "1,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "70"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68"))
                                                         (rule "inEqSimp_commuteLeq" (formula "71"))
                                                         (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "32"))
                                                         (rule "inEqSimp_commuteLeq" (formula "69"))
                                                         (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "68") (term "0,0") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "74") (term "1,1") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "77") (term "0,1,0,0,1,0,0,0") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "71") (term "0") (ifseqformula "44"))
                                                         (rule "inEqSimp_commuteGeq" (formula "71"))
                                                         (rule "applyEq" (formula "71") (term "0") (ifseqformula "44"))
                                                         (rule "inEqSimp_homoInEq0" (formula "71"))
                                                         (rule "polySimp_mulComm0" (formula "71") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "71") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "71") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "71") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "71") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "71") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "71") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "76") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "76") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                                                         (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "71") (term "0"))
                                                         (rule "elimGcdGeq_antec" (formula "68") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcd=Z(2(#))"))
                                                         (rule "leq_literals" (formula "68") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "add_zero_right" (formula "68") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "68") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "68") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                         (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "68") (term "0,0"))
                                                         (rule "leq_literals" (formula "68") (term "0"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "68"))
                                                         (rule "leq_literals" (formula "50") (term "0"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "45"))
                                                         (rule "mul_literals" (formula "69") (term "0,0"))
                                                         (rule "add_zero_left" (formula "69") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                                                         (rule "polySimp_mulLiterals" (formula "69") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "69") (term "1"))
                                                         (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "30") (inst "b=b"))
                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "70")) (ifInst ""  (formula "73")))
                                                         (rule "expand_inInt" (formula "30") (term "1,0,0,1"))
                                                         (rule "replace_int_MAX" (formula "30") (term "1,0,1,0,0,1"))
                                                         (rule "replace_int_MIN" (formula "30") (term "0,1,1,0,0,1"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "andLeft" (formula "32"))
                                                         (rule "andLeft" (formula "32"))
                                                         (rule "translateJavaCastInt" (formula "36") (term "0"))
                                                         (rule "translateJavaAddInt" (formula "35") (term "1"))
                                                         (rule "translateJavaMulInt" (formula "30") (term "1"))
                                                         (rule "translateJavaMulInt" (formula "31") (term "0"))
                                                         (rule "translateJavaCastInt" (formula "34") (term "0"))
                                                         (rule "translateJavaCastInt" (formula "33") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "35") (term "1"))
                                                         (rule "castedGetAny" (formula "36") (term "0"))
                                                         (rule "castedGetAny" (formula "34") (term "0"))
                                                         (rule "castedGetAny" (formula "33") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "32"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30"))
                                                         (rule "inEqSimp_commuteLeq" (formula "32"))
                                                         (rule "applyEq" (formula "34") (term "0") (ifseqformula "76"))
                                                         (rule "polySimp_homoEq" (formula "34"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,0"))
                                                         (rule "apply_eq_monomials" (formula "30") (term "0") (ifseqformula "37"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "30") (term "0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "0"))
                                                         (rule "apply_eq_monomials" (formula "31") (term "0") (ifseqformula "37"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "31") (term "0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0"))
                                                         (rule "add_zero_right" (formula "31") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "31"))
                                                         (rule "applyEq" (formula "34") (term "0,1,0,0,1,0,0,0") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "36"))
                                                         (rule "polySimp_pullOutFactor2" (formula "33") (term "0"))
                                                         (rule "add_literals" (formula "33") (term "1,0"))
                                                         (rule "times_zero_1" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "applyEq" (formula "32") (term "0") (ifseqformula "47"))
                                                         (rule "inEqSimp_homoInEq0" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "applyEq" (formula "31") (term "0") (ifseqformula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "31"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                         (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "68"))
                                                         (rule "times_zero_1" (formula "30") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "30") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "leq_literals" (formula "30") (term "0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "52") (inst "b=b"))
                                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "69")) (ifInst ""  (formula "72")))
                                                         (rule "expand_inInt" (formula "52") (term "1,0,0,1"))
                                                         (rule "replace_int_MAX" (formula "52") (term "1,0,1,0,0,1"))
                                                         (rule "replace_int_MIN" (formula "52") (term "0,1,1,0,0,1"))
                                                         (rule "andLeft" (formula "52"))
                                                         (rule "andLeft" (formula "52"))
                                                         (rule "andLeft" (formula "52"))
                                                         (rule "andLeft" (formula "52"))
                                                         (rule "andLeft" (formula "52"))
                                                         (rule "andLeft" (formula "54"))
                                                         (rule "andLeft" (formula "54"))
                                                         (rule "translateJavaCastInt" (formula "58") (term "0"))
                                                         (rule "translateJavaAddInt" (formula "57") (term "1"))
                                                         (rule "translateJavaMulInt" (formula "53") (term "0"))
                                                         (rule "translateJavaMulInt" (formula "52") (term "1"))
                                                         (rule "translateJavaCastInt" (formula "56") (term "0"))
                                                         (rule "translateJavaCastInt" (formula "55") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                                         (rule "polySimp_addComm0" (formula "57") (term "1"))
                                                         (rule "castedGetAny" (formula "58") (term "0"))
                                                         (rule "castedGetAny" (formula "56") (term "0"))
                                                         (rule "castedGetAny" (formula "55") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "58") (term "1,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "54"))
                                                         (rule "inEqSimp_commuteLeq" (formula "52"))
                                                         (rule "inEqSimp_commuteLeq" (formula "54"))
                                                         (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "31"))
                                                         (rule "applyEq" (formula "75") (term "0") (ifseqformula "56"))
                                                         (rule "polySimp_homoEq" (formula "75"))
                                                         (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                         (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "75") (term "0,0"))
                                                         (rule "add_literals" (formula "75") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "75") (term "0,0"))
                                                         (rule "applyEq" (formula "57") (term "0,1,0,0,1,0,0,0") (ifseqformula "31"))
                                                         (rule "applyEq" (formula "56") (term "1,1") (ifseqformula "31"))
                                                         (rule "applyEq" (formula "75") (term "0,1,0") (ifseqformula "31"))
                                                         (rule "polySimp_pullOutFactor1" (formula "75") (term "0"))
                                                         (rule "add_literals" (formula "75") (term "1,0"))
                                                         (rule "times_zero_1" (formula "75") (term "0"))
                                                          (builtin "One Step Simplification" (formula "75"))
                                                         (rule "true_left" (formula "75"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0"))
                                                         (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "31"))
                                                         (rule "inEqSimp_commuteLeq" (formula "53"))
                                                         (rule "inEqSimp_subsumption6" (formula "52") (ifseqformula "70"))
                                                         (rule "times_zero_1" (formula "52") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "52") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "leq_literals" (formula "52") (term "0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "true_left" (formula "52"))
                                                         (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "53"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                         (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "31"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "31"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "43"))
                                                         (rule "inEqSimp_homoInEq0" (formula "55"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "55") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "43"))
                                                         (rule "inEqSimp_commuteGeq" (formula "54"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                         (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "64") (term "0"))
                                                         (rule "translateJavaMulInt" (formula "64") (term "0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "0,2,0"))
                                                         (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_0"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "60"))
                                                          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "79")) (ifInst ""  (formula "12")))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "65"))
                                                         (rule "hideAuxiliaryEq" (formula "65"))
                                                         (rule "elementOfSingleton" (formula "64") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "3"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "notLeft" (formula "4"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "77"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "78"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "translateJavaSubInt" (formula "34") (term "0,2,1"))
                                                         (rule "translateJavaSubInt" (formula "34") (term "0,2,0"))
                                                         (rule "translateJavaMulInt" (formula "31") (term "1,1"))
                                                         (rule "eqSymm" (formula "34"))
                                                         (rule "eqSymm" (formula "31"))
                                                         (rule "polySimp_elimSub" (formula "34") (term "0,2,1"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,2,1"))
                                                         (rule "polySimp_elimSub" (formula "34") (term "0,2,0"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,2,1"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,2,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "29"))
                                                         (rule "applyEq" (formula "30") (term "0") (ifseqformula "54"))
                                                         (rule "applyEq" (formula "29") (term "0") (ifseqformula "54"))
                                                         (rule "applyEq" (formula "31") (term "1") (ifseqformula "54"))
                                                         (rule "inEqSimp_subsumption1" (formula "73") (ifseqformula "29"))
                                                         (rule "leq_literals" (formula "73") (term "0"))
                                                          (builtin "One Step Simplification" (formula "73"))
                                                         (rule "true_left" (formula "73"))
                                                         (rule "inEqSimp_subsumption0" (formula "53") (ifseqformula "30"))
                                                         (rule "leq_literals" (formula "53") (term "0"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "true_left" (formula "53"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "30"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "51") (term "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "translateJavaAddInt" (formula "51") (term "0,0,1"))
                                                         (rule "translateJavaUnaryMinusInt" (formula "51") (term "1,1"))
                                                         (rule "neg_literal" (formula "51") (term "1,1"))
                                                         (rule "translateJavaSubInt" (formula "51") (term "0,1"))
                                                         (rule "polySimp_elimSub" (formula "51") (term "0,1"))
                                                         (rule "mul_literals" (formula "51") (term "1,0,1"))
                                                         (rule "polySimp_addLiterals" (formula "51") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "51") (term "0,0,1"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "Definition_axiom_for_elementsToReadCountClassEqSplitBucket_in_de_wiesler_BucketPointers" (formula "59") (term "0") (inst "bucket=bucket_1") (inst "b=b"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "expand_inInt" (formula "59") (term "1,0,0"))
                                                         (rule "replace_int_MIN" (formula "59") (term "0,1,1,0,0"))
                                                         (rule "replace_int_MAX" (formula "59") (term "1,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "3,1,2,0,0,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "4,1,1,1,0"))
                                                         (rule "translateJavaCastInt" (formula "59") (term "0,1,1,0"))
                                                         (rule "eqSymm" (formula "59") (term "1,0"))
                                                         (rule "translateJavaAddInt" (formula "59") (term "0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "59") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "1,1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "59") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "59") (term "1,0,1,0,1,0") (ifseqformula "34"))
                                                         (rule "applyEq" (formula "59") (term "0,1,0,0,1,0,0,0") (ifseqformula "34"))
                                                         (rule "applyEq" (formula "59") (term "1,4,0,0,0,0,1,0") (ifseqformula "69"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "4,0,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "0,4,0,0,0,0,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "59") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "67") (term "1,1"))
                                                         (rule "translateJavaSubInt" (formula "67") (term "1,1,1"))
                                                         (rule "polySimp_homoEq" (formula "67"))
                                                         (rule "polySimp_elimSub" (formula "67") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "67"))
                                                         (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                         (rule "mul_literals" (formula "67") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "75"))
                                                         (rule "notLeft" (formula "75"))
                                                         (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "68") (term "0"))
                                                          (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "105")) (ifInst ""  (formula "20")))
                                                         (rule "wellFormedAnon" (formula "68") (term "1,0"))
                                                         (rule "wellFormedAnon" (formula "68") (term "0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "68") (term "2,0,1,0,1,1"))
                                                         (rule "translateJavaAddInt" (formula "68") (term "2,1,1,0,0,1,1"))
                                                         (rule "replace_known_left" (formula "68") (term "1,1,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
                                                         (rule "polySimp_addComm0" (formula "68") (term "2,1,1,0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "68") (term "2,0,1,0,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "68") (term "0,0,0") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68") (term "0,1,1,1,1"))
                                                         (rule "applyEq" (formula "68") (term "2,0,0,1,1,1,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "68") (term "0,0,0,1,1,1,1,1") (ifseqformula "69"))
                                                         (rule "applyEq" (formula "68") (term "2,0,1,0,1,1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "68") (term "0,0,0,1,1,1") (ifseqformula "69"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,1,1,1"))
                                                         (rule "applyEq" (formula "68") (term "0,1,0,0,1,1") (ifseqformula "69"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,0,1,1"))
                                                         (rule "applyEq" (formula "68") (term "0,1,0,0,0,1,1") (ifseqformula "69"))
                                                         (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0,0,0,1,1"))
                                                         (rule "applyEq" (formula "68") (term "0,1,0,1,1,1") (ifseqformula "69"))
                                                         (rule "eqSymm" (formula "68") (term "1,0,1,1,1"))
                                                         (rule "applyEq" (formula "68") (term "0,1,0,0,0") (ifseqformula "33"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "68") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "68") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "68") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "69") (term "0"))
                                                         (rule "translateJavaMulInt" (formula "69") (term "0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "69") (term "0,2,0"))
                                                         (rule "pullOutSelect" (formula "69") (term "0") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfAnon" (formula "69"))
                                                          (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "81")) (ifInst ""  (formula "10")))
                                                         (rule "polySimp_homoEq" (formula "70"))
                                                         (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "70"))
                                                         (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "70") (term "1"))
                                                         (rule "mul_literals" (formula "70") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "70") (term "1,1"))
                                                         (rule "applyEq" (formula "68") (term "1,1,1,0,0,0,1,1") (ifseqformula "70"))
                                                         (rule "polySimp_addAssoc" (formula "68") (term "1,1,0,0,0,1,1"))
                                                         (rule "add_literals" (formula "68") (term "0,1,1,0,0,0,1,1"))
                                                         (rule "add_zero_left" (formula "68") (term "1,1,0,0,0,1,1"))
                                                         (rule "applyEq" (formula "78") (term "0") (ifseqformula "70"))
                                                         (rule "inEqSimp_homoInEq0" (formula "78"))
                                                         (rule "polySimp_mulComm0" (formula "78") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                                                         (rule "mul_literals" (formula "78") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "78") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "78") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "78") (term "0,0,0"))
                                                         (rule "add_literals" (formula "78") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "78") (term "0,0,0"))
                                                         (rule "applyEq" (formula "68") (term "1,0,0,0,1,1,1,1,1") (ifseqformula "70"))
                                                         (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,1,1,1,1,1"))
                                                         (rule "add_literals" (formula "68") (term "0,0,0,0,1,1,1,1,1"))
                                                         (rule "add_zero_left" (formula "68") (term "0,0,0,1,1,1,1,1"))
                                                         (rule "applyEq" (formula "109") (term "0,1") (ifseqformula "70"))
                                                         (rule "inEqSimp_homoInEq1" (formula "109") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "109") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "109") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "109") (term "0,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "109") (term "0,1"))
                                                         (rule "polySimp_addAssoc" (formula "109") (term "0,0,1"))
                                                         (rule "add_literals" (formula "109") (term "0,0,0,1"))
                                                         (rule "applyEq" (formula "68") (term "1,1,1,0,0,1,1") (ifseqformula "70"))
                                                         (rule "polySimp_addAssoc" (formula "68") (term "1,1,0,0,1,1"))
                                                         (rule "add_literals" (formula "68") (term "0,1,1,0,0,1,1"))
                                                         (rule "add_zero_left" (formula "68") (term "1,1,0,0,1,1"))
                                                         (rule "applyEq" (formula "109") (term "0,0") (ifseqformula "70"))
                                                         (rule "inEqSimp_homoInEq0" (formula "109") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "109") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "109") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "109") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "109") (term "0,0,0"))
                                                         (rule "add_literals" (formula "109") (term "0,0,0,0"))
                                                         (rule "applyEq" (formula "58") (term "1,4,1,2,0,1,0") (ifseqformula "70"))
                                                         (rule "polySimp_addComm0" (formula "58") (term "4,1,2,0,1,0"))
                                                         (rule "applyEq" (formula "64") (term "0") (ifseqformula "70"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                         (rule "add_literals" (formula "64") (term "0,0"))
                                                         (rule "applyEq" (formula "68") (term "1,1,0,0,1,1,1") (ifseqformula "70"))
                                                         (rule "polySimp_addAssoc" (formula "68") (term "1,0,0,1,1,1"))
                                                         (rule "add_literals" (formula "68") (term "0,1,0,0,1,1,1"))
                                                         (rule "add_zero_left" (formula "68") (term "1,0,0,1,1,1"))
                                                         (rule "applyEq" (formula "63") (term "0") (ifseqformula "70"))
                                                         (rule "inEqSimp_homoInEq0" (formula "63"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                         (rule "add_literals" (formula "63") (term "0,0"))
                                                         (rule "applyEq" (formula "59") (term "1,3,1,2,0,1,0") (ifseqformula "70"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "3,1,2,0,1,0"))
                                                         (rule "applyEq" (formula "65") (term "1") (ifseqformula "70"))
                                                         (rule "applyEq" (formula "68") (term "1,1,1,0,1,1,1") (ifseqformula "70"))
                                                         (rule "polySimp_addAssoc" (formula "68") (term "1,1,0,1,1,1"))
                                                         (rule "add_literals" (formula "68") (term "0,1,1,0,1,1,1"))
                                                         (rule "add_zero_left" (formula "68") (term "1,1,0,1,1,1"))
                                                         (rule "applyEq" (formula "59") (term "1,3,0,0,1,1,0") (ifseqformula "70"))
                                                         (rule "polySimp_addComm1" (formula "59") (term "3,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "0,3,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "59") (term "0,0,3,0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "59") (term "0,3,0,0,1,1,0"))
                                                         (rule "applyEq" (formula "58") (term "1,3,0,0,1,1,0") (ifseqformula "70"))
                                                         (rule "polySimp_addComm0" (formula "58") (term "3,0,0,1,1,0"))
                                                         (rule "applyEq" (formula "58") (term "1,4,0,0,1,1,0") (ifseqformula "70"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "4,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "0,4,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "58") (term "0,0,4,0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "58") (term "0,4,0,0,1,1,0"))
                                                         (rule "applyEq" (formula "59") (term "1,2,0,0,1,1,0") (ifseqformula "70"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "2,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "78"))
                                                         (rule "polySimp_mulComm0" (formula "78") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "78") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "78") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "78") (term "1,1"))
                                                         (rule "polySimp_mulAssoc" (formula "78") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "78") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "78") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "78") (term "0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "109") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "109") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "109") (term "0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "109") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "109") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "109") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "63") (term "0"))
                                                         (rule "elementOfUnion" (formula "69") (term "0,0"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "69") (term "1,0,0"))
                                                         (rule "replace_known_right" (formula "69") (term "0,0,1,0,0") (ifseqformula "87"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "elementOfUnion" (formula "69") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "applyEqReverse" (formula "68") (term "1,1,0,0,0,1,1") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "58") (term "0,4,0,0,1,1,0") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "70") (term "1,1") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "68") (term "1,1,0,1,1,1") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "68") (term "1,1,0,0,1,1") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "65") (term "1,1") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "58") (term "1,0,4,1,2,0,1,0") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "109") (term "0,1,1,1") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "68") (term "0,0,0,1,1,1,1,1") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "58") (term "1,0,3,0,0,1,1,0") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "68") (term "1,0,0,1,1,1") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "78") (term "0,1") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "59") (term "0,3,0,0,1,1,0") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "59") (term "1,0,3,1,2,0,1,0") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "109") (term "0,1,1,0") (ifseqformula "69"))
                                                         (rule "applyEqReverse" (formula "59") (term "1,0,2,0,0,1,1,0") (ifseqformula "69"))
                                                         (rule "hideAuxiliaryEq" (formula "69"))
                                                         (rule "polySimp_homoEq" (formula "69"))
                                                         (rule "polySimp_addComm0" (formula "58") (term "4,0,0,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "4,1,2,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "3,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "77") (term "1"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "3,0,0,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "59") (term "3,1,2,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "59") (term "2,0,0,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "68") (term "0,0,1,1,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "108") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "108") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "108") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "108") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "77"))
                                                         (rule "polySimp_addComm1" (formula "77") (term "0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "69"))
                                                         (rule "polySimp_mulComm0" (formula "69") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "69") (term "1"))
                                                         (rule "mul_literals" (formula "69") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "69") (term "1,1"))
                                                         (rule "applyEq" (formula "68") (term "1,1,0,0,0,1,1") (ifseqformula "69"))
                                                         (rule "applyEq" (formula "108") (term "0,1,0,0") (ifseqformula "69"))
                                                         (rule "polySimp_mulComm0" (formula "108") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "108") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "108") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "108") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "108") (term "0,0,0"))
                                                         (rule "add_literals" (formula "108") (term "0,0,0,0"))
                                                         (rule "applyEq" (formula "108") (term "0,1,0,1") (ifseqformula "69"))
                                                         (rule "polySimp_mulComm0" (formula "108") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "108") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "108") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "108") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "108") (term "0,0,1"))
                                                         (rule "add_literals" (formula "108") (term "0,0,0,1"))
                                                         (rule "applyEq" (formula "59") (term "1,3,1,2,0,1,0") (ifseqformula "69"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "3,1,2,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "59") (term "0,3,1,2,0,1,0"))
                                                         (rule "add_literals" (formula "59") (term "0,0,3,1,2,0,1,0"))
                                                         (rule "add_zero_left" (formula "59") (term "0,3,1,2,0,1,0"))
                                                         (rule "applyEq" (formula "68") (term "0,0,0,1,1,1,1,1") (ifseqformula "69"))
                                                         (rule "applyEq" (formula "68") (term "1,1,0,0,1,1") (ifseqformula "69"))
                                                         (rule "applyEq" (formula "63") (term "0") (ifseqformula "69"))
                                                         (rule "inEqSimp_homoInEq0" (formula "63"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                         (rule "add_literals" (formula "63") (term "0,0"))
                                                         (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "69"))
                                                         (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "77") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "77") (term "0,0,0"))
                                                         (rule "applyEq" (formula "68") (term "0,0,0,1,1,1") (ifseqformula "69"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,1,1,1"))
                                                         (rule "applyEq" (formula "64") (term "0") (ifseqformula "69"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                         (rule "add_literals" (formula "64") (term "0,0"))
                                                         (rule "applyEq" (formula "58") (term "1,4,1,2,0,1,0") (ifseqformula "69"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "4,1,2,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "0,4,1,2,0,1,0"))
                                                         (rule "add_literals" (formula "58") (term "0,0,4,1,2,0,1,0"))
                                                         (rule "add_zero_left" (formula "58") (term "0,4,1,2,0,1,0"))
                                                         (rule "applyEq" (formula "68") (term "1,1,0,1,1,1") (ifseqformula "69"))
                                                         (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "69"))
                                                         (rule "polySimp_addAssoc" (formula "65") (term "1"))
                                                         (rule "add_literals" (formula "65") (term "0,1"))
                                                         (rule "add_zero_left" (formula "65") (term "1"))
                                                         (rule "applyEq" (formula "59") (term "1,2,0,0,1,1,0") (ifseqformula "69"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "2,0,0,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "59") (term "0,2,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "59") (term "0,0,2,0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "59") (term "0,2,0,0,1,1,0"))
                                                         (rule "applyEq" (formula "58") (term "1,4,0,0,1,1,0") (ifseqformula "69"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "4,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "58") (term "0,4,0,0,1,1,0"))
                                                         (rule "applyEq" (formula "58") (term "1,3,0,0,1,1,0") (ifseqformula "69"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "3,0,0,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "0,3,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "58") (term "0,0,3,0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "58") (term "0,3,0,0,1,1,0"))
                                                         (rule "applyEq" (formula "59") (term "1,3,0,0,1,1,0") (ifseqformula "69"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "3,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "0,3,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "108") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "108") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "108") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "108") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "108") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "108") (term "0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "63") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "77"))
                                                         (rule "polySimp_mulComm0" (formula "77") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "77") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "77") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "77") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "77") (term "0,1"))
                                                         (rule "mul_literals" (formula "77") (term "0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "77"))
                                                         (rule "mul_literals" (formula "64") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                         (rule "add_literals" (formula "64") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1"))
                                                         (rule "mul_literals" (formula "64") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "64") (ifseqformula "39"))
                                                         (rule "inEqSimp_homoInEq0" (formula "64") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "64") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                                         (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "64") (term "0,0"))
                                                         (rule "qeq_literals" (formula "64") (term "0"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "true_left" (formula "64"))
                                                         (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
                                                         (rule "nnf_notAnd" (formula "3") (term "0,0,0"))
                                                         (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                                         (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                                                         (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                                                         (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "52") (term "0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "106")) (ifInst ""  (formula "53")) (ifInst ""  (formula "67")) (ifInst ""  (formula "20")))
                                                         (rule "wellFormedAnonEQ" (formula "52") (term "1,0") (ifseqformula "62"))
                                                         (rule "wellFormedAnon" (formula "52") (term "0,1,0"))
                                                         (rule "wellFormedAnon" (formula "52") (term "0,0,1,0"))
                                                         (rule "replace_known_left" (formula "52") (term "1,0,1,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "61")))
                                                         (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "52") (term "0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "applyEq" (formula "52") (term "0,1,0,0,0") (ifseqformula "33"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "53") (term "0"))
                                                         (rule "translateJavaSubInt" (formula "53") (term "1,0"))
                                                         (rule "polySimp_elimSub" (formula "53") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "68"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                         (rule "mul_literals" (formula "53") (term "1"))
                                                         (rule "nnf_imp2or" (formula "76") (term "0"))
                                                         (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "Contract_axiom_for_elementsToReadCountElement_in_BucketPointers" (formula "14") (term "1,1,0"))
                                                         (rule "replace_known_right" (formula "14") (term "0,1,0,0,0,0") (ifseqformula "109"))
                                                          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")) (ifInst ""  (formula "21")) (ifInst ""  (formula "107")))
                                                         (rule "Definition_axiom_for_countElement_in_de_wiesler_BucketPointers" (formula "15") (term "0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "15") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "15") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                                         (rule "Definition_axiom_for_elementsToReadCountElement_in_de_wiesler_BucketPointers" (formula "4") (term "1,1,0") (inst "b=b"))
                                                         (rule "translateJavaCastInt" (formula "4") (term "1,1,0"))
                                                         (rule "eqSymm" (formula "4") (term "1,0"))
                                                         (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "34"))
                                                         (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "2") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "translateJavaSubInt" (formula "2") (term "0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "2") (term "0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "2") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0"))
                                                         (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "3") (term "0,1,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "translateJavaAddInt" (formula "3") (term "0,4,0,0,1,1,0,1,0"))
                                                         (rule "translateJavaSubInt" (formula "3") (term "0,0,0,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "3") (term "3,0,2,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "3") (term "4,0,2,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "3") (term "3,0,0,1,1,0,1,0"))
                                                         (rule "translateJavaSubInt" (formula "3") (term "4,0,0,1,1,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "3") (term "0,0,0,1,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "3") (term "4,0,0,1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "3") (term "1,4,0,0,1,1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "4,0,0,1,1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0,4,0,0,1,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,1,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,0,1,0"))
                                                         (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "12") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "translateJavaSubInt" (formula "12") (term "0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
                                                         (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "13") (term "0,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "13") (term "0,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "13") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "13") (term "0,0,1,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "13") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0,1,1,0"))
                                                         (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "13") (term "0,1,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "translateJavaAddInt" (formula "13") (term "3,0,0,1,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "13") (term "3,0,2,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "13") (term "4,0,2,1,0,1,0"))
                                                         (rule "translateJavaSubInt" (formula "13") (term "4,0,0,1,1,0,1,0"))
                                                         (rule "translateJavaSubInt" (formula "13") (term "0,0,0,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "13") (term "0,4,0,0,1,1,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "13") (term "0,0,0,1,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "13") (term "4,0,0,1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,4,0,0,1,1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "4,0,0,1,1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "13") (term "0,4,0,0,1,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0,1,0"))
                                                         (rule "Definition_axiom_for_bucketSize_in_de_wiesler_BucketPointers" (formula "48") (term "1,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "48") (term "2,0,1,1,1,0"))
                                                         (rule "translateJavaSubInt" (formula "48") (term "1,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "48") (term "1,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "2,0,1,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "1,1,1,0"))
                                                         (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "48") (term "0,0,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "translateJavaAddInt" (formula "48") (term "3,0,1,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "48") (term "4,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "26") (term "0"))
                                                         (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "68") (term "0,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0,0") (ifseqformula "63"))
                                                          (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "108")) (ifInst ""  (formula "69")) (ifInst ""  (formula "21")))
                                                         (rule "wellFormedAnonEQ" (formula "68") (term "1,0") (ifseqformula "63"))
                                                         (rule "wellFormedAnon" (formula "68") (term "0,1,0"))
                                                         (rule "wellFormedAnon" (formula "68") (term "0,0,1,0"))
                                                         (rule "replace_known_left" (formula "68") (term "1,0,1,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "62")))
                                                         (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "68") (term "0,0,0") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "applyEq" (formula "68") (term "0,1,0,0,0") (ifseqformula "34"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "68") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "68") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "68") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "69") (term "0,0"))
                                                         (rule "translateJavaSubInt" (formula "69") (term "1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "69") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                                         (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "70"))
                                                         (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "61") (term "1,2,1,2,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "61") (term "0,0,2,1,2,1,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "61") (term "0,2,1,2,1,2,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "0,0,2,1,2,1,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "61") (term "0,2,1,2,1,2,0,1,0"))
                                                         (rule "Definition_axiom_for_elementsToReadOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "61") (term "2,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "61") (term "2,2,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "61") (term "3,2,2,0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "61") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "61") (term "0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "61") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "61") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "61") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "0,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "57") (term "0"))
                                                         (rule "Definition_axiom_for_isSortedSeqTransitive_in_de_wiesler_Functions" (formula "77") (term "0") (inst "i=i") (inst "j=j"))
                                                          (builtin "One Step Simplification" (formula "77"))
                                                         (rule "expand_inInt" (formula "77") (term "1,0,0,1,0"))
                                                         (rule "expand_inInt" (formula "77") (term "1,0,0"))
                                                         (rule "replace_int_MIN" (formula "77") (term "0,1,1,0,0,1,0"))
                                                         (rule "replace_int_MAX" (formula "77") (term "1,0,1,0,0,1,0"))
                                                         (rule "replace_int_MIN" (formula "77") (term "0,1,1,0,0"))
                                                         (rule "replace_int_MAX" (formula "77") (term "1,0,1,0,0"))
                                                         (rule "translateJavaCastInt" (formula "77") (term "1,1,0,1,0"))
                                                         (rule "translateJavaCastInt" (formula "77") (term "0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "77") (term "1,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "77") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "77") (term "1,1,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "77") (term "1,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "77") (term "1,0,1,0"))
                                                         (rule "applyEq" (formula "77") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "56"))
                                                         (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "applyEq" (formula "77") (term "0,1,0,0,1,0,0,0") (ifseqformula "56"))
                                                         (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                                         (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "75") (term "0"))
                                                          (builtin "One Step Simplification" (formula "75"))
                                                         (rule "translateJavaMod" (formula "75") (term "0"))
                                                         (rule "jmod_axiom" (formula "75") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "75") (term "1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "75"))
                                                         (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                         (rule "newSym_eq" (formula "75") (inst "l=l_0") (inst "newSymDef=mul(int::final(bucket_pointers,
               de.wiesler.BucketPointers::$first_empty_position),
    Z(0(#)))"))
                                                         (rule "times_zero_1" (formula "75") (term "1,1"))
                                                         (rule "add_zero_right" (formula "75") (term "1"))
                                                         (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "75"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "applyEq" (formula "71") (term "0,0,0,1,1,1") (ifseqformula "76"))
                                                         (rule "inEqSimp_homoInEq1" (formula "71") (term "0,0,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,1,1,1"))
                                                         (rule "polySimp_addComm1" (formula "71") (term "0,0,0,1,1,1"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "76"))
                                                         (rule "applyEq" (formula "75") (term "0,0") (ifseqformula "76"))
                                                         (rule "applyEq" (formula "74") (term "0") (ifseqformula "76"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "76"))
                                                         (rule "inEqSimp_homoInEq0" (formula "47"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                         (rule "applyEq" (formula "71") (term "1,0,1,1,1,1") (ifseqformula "76"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,1,1"))
                                                         (rule "mul_literals" (formula "71") (term "0,1,0,0,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,1,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                                         (rule "elimGcdGeq_antec" (formula "74") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0"))
                                                         (rule "leq_literals" (formula "74") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "74"))
                                                         (rule "add_zero_right" (formula "74") (term "0,0,0,0"))
                                                         (rule "times_zero_1" (formula "74") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "74") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                         (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "74") (term "0,0"))
                                                         (rule "leq_literals" (formula "74") (term "0"))
                                                          (builtin "One Step Simplification" (formula "74"))
                                                         (rule "elimGcdLeq_antec" (formula "55") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "neg_literal" (formula "55") (term "0,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "55") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "55") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "55") (term "0,0"))
                                                         (rule "qeq_literals" (formula "55") (term "0"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "45"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "47") (term "0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0"))
                                                         (rule "add_zero_right" (formula "47") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                         (rule "inEqSimp_subsumption4" (formula "47") (ifseqformula "56"))
                                                         (rule "greater_literals" (formula "47") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "mul_literals" (formula "47") (term "0,0"))
                                                         (rule "leq_literals" (formula "47") (term "0"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "43"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "47"))
                                                         (rule "mul_literals" (formula "38") (term "0,0"))
                                                         (rule "add_zero_left" (formula "38") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "38") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "neg_literal" (formula "38") (term "0,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "38") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                                         (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0"))
                                                         (rule "qeq_literals" (formula "38") (term "0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_subsumption0" (formula "57") (ifseqformula "38"))
                                                         (rule "leq_literals" (formula "57") (term "0"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "true_left" (formula "57"))
                                                         (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "12") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0"))
                                                         (rule "commute_and" (formula "62") (term "0,0"))
                                                         (rule "inEqSimp_or_subsumption6" (formula "2") (term "1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "2") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,1,1,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,1,1,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "33") (inst "i=i") (inst "i_0=i_0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "expand_inInt" (formula "33") (term "1,0,0,1"))
                                                         (rule "expand_inInt" (formula "33") (term "1,0,0,1,0"))
                                                         (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,1"))
                                                         (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,1"))
                                                         (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,1,0"))
                                                         (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,1,0"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "translateJavaSubInt" (formula "41") (term "0,2,1,1,0"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "3,0"))
                                                         (rule "translateJavaShiftLeftInt" (formula "35") (term "1"))
                                                         (rule "eqSymm" (formula "41") (term "1,0"))
                                                         (rule "polySimp_elimSub" (formula "39") (term "3,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,3,0"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "0,2,0,1,0"))
                                                         (rule "mul_literals" (formula "41") (term "1,0,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "3,0"))
                                                         (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "40") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36"))
                                                         (rule "inEqSimp_commuteLeq" (formula "33"))
                                                         (rule "applyEq" (formula "37") (term "1") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "92") (term "0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "31") (term "3,0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "32") (term "1,0,2,0") (ifseqformula "35"))
                                                         (rule "eqSymm" (formula "32"))
                                                         (rule "applyEq" (formula "38") (term "1") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "39") (term "1,3,0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "30"))
                                                         (rule "inEqSimp_commuteGeq" (formula "38"))
                                                         (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "41") (term "1,0,1,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0,0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,0,1,1,0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "32") (term "1,0,2,0") (ifseqformula "35"))
                                                         (rule "eqSymm" (formula "32"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,1,1,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "35") (term "1"))
                                                         (rule "mod_axiom" (formula "35") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1"))
                                                         (rule "javaShiftLeftIntDef" (formula "37") (term "1"))
                                                         (rule "mod_axiom" (formula "37") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1"))
                                                         (rule "javaShiftLeftIntDef" (formula "31") (term "3,0"))
                                                         (rule "mod_axiom" (formula "31") (term "1,0,3,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,3,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "29") (term "2,0"))
                                                         (rule "mod_axiom" (formula "29") (term "1,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,2,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "29") (term "0,1,0"))
                                                         (rule "mod_axiom" (formula "29") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "39") (term "1,3,0"))
                                                         (rule "mod_axiom" (formula "39") (term "1,0,1,3,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,3,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "38") (term "0"))
                                                         (rule "mod_axiom" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "36") (term "0"))
                                                         (rule "mod_axiom" (formula "36") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "32") (term "1,0,2,1"))
                                                         (rule "mod_axiom" (formula "32") (term "1,0,1,0,2,1"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0,2,1"))
                                                         (rule "javaShiftLeftIntDef" (formula "32") (term "1,0,2,0"))
                                                         (rule "mod_axiom" (formula "32") (term "1,0,1,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0,2,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "41") (term "1,1,1,0,0,0"))
                                                         (rule "mod_axiom" (formula "41") (term "1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1,1,0,0,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "40") (term "1,1,1,0,0,0"))
                                                         (rule "mod_axiom" (formula "40") (term "1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "40") (term "1,1,1,1,0"))
                                                         (rule "mod_axiom" (formula "40") (term "1,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,1,1,0"))
                                                         (rule "shiftLeftDef" (formula "35") (term "0,1"))
                                                         (rule "eqSymm" (formula "35"))
                                                         (rule "polySimp_elimNeg" (formula "35") (term "1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "0,1,1,0,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "35") (term "2,0,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "35") (term "2,0,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "35") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0"))
                                                         (rule "shiftLeftDef" (formula "37") (term "0,1"))
                                                         (rule "polySimp_elimNeg" (formula "37") (term "1,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "0,1,1,0,1"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "37") (term "2,0,1"))
                                                         (rule "polySimp_elimOneLeft0" (formula "37") (term "2,0,1"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "37") (term "1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1"))
                                                         (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,1"))
                                                         (rule "add_zero_right" (formula "37") (term "0,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "37"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37"))
                                                         (rule "shiftLeftDef" (formula "31") (term "0,3,0"))
                                                         (rule "polySimp_elimNeg" (formula "31") (term "1,1,0,3,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,3,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,1,0,3,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,3,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0,3,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "31") (term "2,0,3,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "31") (term "2,0,3,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "31") (term "1,0,3,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,3,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,0,0,0,0,3,0"))
                                                         (rule "add_zero_right" (formula "31") (term "0,0,0,0,3,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,3,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,3,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,3,0"))
                                                         (rule "applyEq" (formula "31") (term "3,0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "29") (term "0,2,0"))
                                                         (rule "polySimp_elimNeg" (formula "29") (term "1,1,0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,2,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,1,1,0,2,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "29") (term "2,0,2,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "29") (term "2,0,2,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "29") (term "1,0,2,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,2,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,2,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0,0,0,2,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,2,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,2,0"))
                                                         (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "29") (term "0,0,1,0"))
                                                         (rule "polySimp_elimNeg" (formula "29") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,1,1,0,0,1,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "29") (term "2,0,0,1,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "29") (term "2,0,0,1,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "29") (term "1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,0,1,0"))
                                                         (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "39") (term "0,1,3,0"))
                                                         (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,1,3,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1,3,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1,3,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1,3,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,1,3,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,1,3,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,1,3,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,1,3,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,3,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1,3,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0,0,1,3,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,3,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,3,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,3,0"))
                                                         (rule "applyEq" (formula "39") (term "1,3,0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "38") (term "0,0"))
                                                         (rule "polySimp_elimNeg" (formula "38") (term "1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "38") (term "2,0,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "38") (term "2,0,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "38") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0"))
                                                         (rule "applyEq" (formula "38") (term "0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "36") (term "0,0"))
                                                         (rule "polySimp_elimNeg" (formula "36") (term "1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "36") (term "2,0,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "36") (term "2,0,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "36") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "32") (term "0,1,0,2,1"))
                                                         (rule "eqSymm" (formula "32"))
                                                         (rule "polySimp_elimNeg" (formula "32") (term "1,1,0,1,0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,1,0,2,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,1,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,1,0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,1,1,0,1,0,2,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "32") (term "2,0,1,0,2,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "32") (term "2,0,1,0,2,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "32") (term "1,0,1,0,2,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,2,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,0,2,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,2,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,2,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0,1,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,1,0,2,0"))
                                                         (rule "applyEq" (formula "32") (term "1,0,2,0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "41") (term "0,1,1,1,0,0,0"))
                                                         (rule "polySimp_elimNeg" (formula "41") (term "1,1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,1,1,1,0,0,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "41") (term "2,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "41") (term "2,0,1,1,1,0,0,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "41") (term "1,0,1,1,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,0,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,1,1,1,0,0,0"))
                                                         (rule "applyEq" (formula "41") (term "1,1,1,0,0,0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "40") (term "0,1,1,1,0,0,0"))
                                                         (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,1,1,1,0,0,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,1,1,1,0,0,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,1,1,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,1,1,0,0,0"))
                                                         (rule "applyEq" (formula "40") (term "1,1,1,0,0,0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "40") (term "0,1,1,1,1,0"))
                                                         (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,1,1,1,1,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,1,1,1,1,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "applyEq" (formula "40") (term "1,1,1,1,0") (ifseqformula "35"))
                                                         (rule "shiftLeftDef" (formula "32") (term "0,1,0,2,1"))
                                                         (rule "eqSymm" (formula "32"))
                                                         (rule "polySimp_elimNeg" (formula "32") (term "1,1,0,1,0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,1,0,2,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,1,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,1,0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,1,1,0,1,0,2,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "32") (term "2,0,1,0,2,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "32") (term "2,0,1,0,2,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "32") (term "1,0,1,0,2,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,2,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,0,2,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0,0,0,0,1,0,2,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,2,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0,1,0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,1,0,2,0"))
                                                         (rule "applyEq" (formula "32") (term "1,0,2,0") (ifseqformula "35"))
                                                         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                                         (rule "mul_literals" (formula "36") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                         (rule "mul_literals" (formula "36") (term "1"))
                                                         (rule "inEqSimp_or_subsumption6" (formula "12") (term "1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "12") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,1,1,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0,1,1,0"))
                                                         (rule "qeq_literals" (formula "12") (term "0,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "61") (term "0"))
                                                         (rule "translateJavaCastInt" (formula "61") (term "0,0"))
                                                         (rule "castedGetAny" (formula "61") (term "0,0"))
                                                         (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "56"))
                                                         (rule "eqSymm" (formula "61"))
                                                         (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                                         (rule "castedGetAny" (formula "87") (term "0"))
                                                          (builtin "One Step Simplification" (formula "87"))
                                                         (rule "true_left" (formula "87"))
                                                         (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "70") (term "1,1,1,0") (inst "b=b"))
                                                         (rule "translateJavaCastInt" (formula "70") (term "1,1,1,0"))
                                                         (rule "applyEq" (formula "70") (term "1,1,1,1,0") (ifseqformula "43"))
                                                         (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "70") (term "1,3,1,2,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "70") (term "0,0,2,1,3,1,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "70") (term "0,2,1,3,1,2,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "70") (term "0,0,2,1,3,1,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "70") (term "0,2,1,3,1,2,0,1,0"))
                                                         (rule "Definition_axiom_for_elementsToReadOfBucketCountClassEq_in_de_wiesler_BucketPointers" (formula "70") (term "2,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "70") (term "4,2,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "70") (term "3,2,2,0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "70") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "70") (term "0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "70") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "70") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "70") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "70") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "70") (term "0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "70") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "70") (term "0,1,1,0"))
                                                         (rule "arrayLengthNotNegative" (formula "83") (term "0"))
                                                         (rule "arrayLengthIsAShort" (formula "84") (term "0"))
                                                         (rule "expand_inShort" (formula "84"))
                                                         (rule "replace_short_MAX" (formula "84") (term "1,0"))
                                                         (rule "replace_short_MIN" (formula "84") (term "0,1"))
                                                         (rule "andLeft" (formula "84"))
                                                         (rule "inEqSimp_commuteLeq" (formula "85"))
                                                         (rule "inEqSimp_subsumption1" (formula "85") (ifseqformula "83"))
                                                         (rule "leq_literals" (formula "85") (term "0"))
                                                          (builtin "One Step Simplification" (formula "85"))
                                                         (rule "true_left" (formula "85"))
                                                         (rule "inEqSimp_exactShadow3" (formula "85") (ifseqformula "84"))
                                                         (rule "polySimp_mulAssoc" (formula "85") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "85") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "85") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "85") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "85"))
                                                         (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                                         (rule "inEqSimp_subsumption4" (formula "85") (ifseqformula "28"))
                                                         (rule "greater_literals" (formula "85") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "85"))
                                                         (rule "mul_literals" (formula "85") (term "0,0"))
                                                         (rule "leq_literals" (formula "85") (term "0"))
                                                          (builtin "One Step Simplification" (formula "85"))
                                                         (rule "true_left" (formula "85"))
                                                         (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "80") (term "0,1,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "1,0,0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "123")) (ifInst ""  (formula "21")))
                                                         (rule "wellFormedAnonEQ" (formula "80") (term "1,0") (ifseqformula "73"))
                                                         (rule "wellFormedAnon" (formula "80") (term "0,1,0"))
                                                         (rule "wellFormedAnon" (formula "80") (term "0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "80") (term "2,1,1,0,0,1,1"))
                                                         (rule "translateJavaAddInt" (formula "80") (term "2,0,1,0,1,1"))
                                                         (rule "replace_known_left" (formula "80") (term "1,1,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
                                                         (rule "polySimp_addComm0" (formula "80") (term "2,1,1,0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "80") (term "2,0,1,0,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "80") (term "0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "80") (term "0,1,1,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "80") (term "1,0,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "80") (term "0,0,0") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "80"))
                                                         (rule "inEqSimp_commuteLeq" (formula "80") (term "1,0,1,1"))
                                                         (rule "applyEq" (formula "80") (term "2,0,1,0,1,1") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "80") (term "1,0,0,1,1,1") (ifseqformula "89"))
                                                         (rule "applyEq" (formula "80") (term "1,0,1,1,1,1") (ifseqformula "89"))
                                                         (rule "applyEq" (formula "80") (term "2,0,0,1,1,1,1") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "80") (term "0,1,0,0,0") (ifseqformula "43"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "80") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "80") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "80") (term "0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "80"))
                                                         (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "81") (term "0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "81") (term "0,2,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "81") (term "0,2,0,1,0"))
                                                         (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "81") (term "0,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "81") (term "0,1,0"))
                                                         (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "81") (term "0,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "81") (term "0,2,0,1,1,0"))
                                                         (rule "translateJavaMulInt" (formula "81") (term "0,0,2,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "81") (term "0,0,2,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "81") (term "0,2,0,1,1,0"))
                                                         (rule "pullOutSelect" (formula "81") (term "0,1,1,0") (inst "selectSK=arr_2"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "81") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "99")) (ifInst ""  (formula "10")))
                                                         (rule "polySimp_addComm0" (formula "82") (term "1,0"))
                                                         (rule "elementOfSingleton" (formula "81") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "polySimp_homoEq" (formula "81") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "81") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "81") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "81") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "81") (term "0,0,0"))
                                                         (rule "add_literals" (formula "81") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "81") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "81") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "81") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "simplifySelectOfAnon" (formula "81"))
                                                          (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "99")) (ifInst ""  (formula "10")))
                                                         (rule "elementOfUnion" (formula "81") (term "0,0"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "81") (term "1,0,0"))
                                                         (rule "replace_known_right" (formula "81") (term "0,0,1,0,0") (ifseqformula "105"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "elementOfUnion" (formula "81") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "applyEqReverse" (formula "82") (term "0,0,1,0") (ifseqformula "81"))
                                                         (rule "hideAuxiliaryEq" (formula "81"))
                                                         (rule "polySimp_addComm0" (formula "81") (term "1,0"))
                                                         (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "81") (term "1,1"))
                                                          (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "124")) (ifInst ""  (formula "21")))
                                                         (rule "wellFormedAnon" (formula "81") (term "1,0"))
                                                         (rule "wellFormedAnon" (formula "81") (term "0,1,0"))
                                                         (rule "replace_known_left" (formula "81") (term "1,0,1,0") (ifseqformula "16"))
                                                          (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "17")) (ifInst ""  (formula "5")))
                                                         (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "81") (term "0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "applyEq" (formula "81") (term "0,1,0,0,0") (ifseqformula "43"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "81") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "inEqSimp_subsumption1" (formula "81") (term "0,1,1") (ifseqformula "65"))
                                                         (rule "leq_literals" (formula "81") (term "0,0,1,1"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "82") (term "1,1"))
                                                         (rule "translateJavaSubInt" (formula "82") (term "1,1,1"))
                                                         (rule "polySimp_elimSub" (formula "82") (term "1,1,1"))
                                                         (rule "polySimp_homoEq" (formula "82"))
                                                         (rule "polySimp_addComm1" (formula "82") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "82") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "82"))
                                                         (rule "polySimp_mulComm0" (formula "82") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "82") (term "1"))
                                                         (rule "mul_literals" (formula "82") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "82") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "82") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "82") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "82") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0"))
                                                         (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "83") (term "0,0,1,1,1,1"))
                                                          (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "125")) (ifInst ""  (formula "21")))
                                                         (rule "wellFormedAnon" (formula "83") (term "1,0"))
                                                         (rule "wellFormedAnon" (formula "83") (term "0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "83") (term "2,1,1,0,1,1,1,1"))
                                                         (rule "translateJavaSubInt" (formula "83") (term "2,0,1,0,1,1,1,1,1"))
                                                         (rule "replace_known_left" (formula "83") (term "1,0,1,0") (ifseqformula "16"))
                                                          (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "17")) (ifInst ""  (formula "5")))
                                                         (rule "polySimp_elimSub" (formula "83") (term "2,0,1,0,1,1,1,1,1"))
                                                         (rule "mul_literals" (formula "83") (term "1,2,0,1,0,1,1,1,1,1"))
                                                         (rule "polySimp_addComm0" (formula "83") (term "2,1,1,0,1,1,1,1"))
                                                         (rule "polySimp_addComm0" (formula "83") (term "2,0,1,0,1,1,1,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,1,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,1,1,1,1"))
                                                         (rule "polySimp_addComm1" (formula "83") (term "0,0,0,1,1,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0,1,1,1,1,1"))
                                                         (rule "add_zero_right" (formula "83") (term "0,0,0,0,1,1,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,1,1,1,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "83") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "83") (term "1,0,0,1,1,1,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "83") (term "1,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "83") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "83") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "83") (term "1,0,1,1,1,1"))
                                                         (rule "applyEq" (formula "83") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "43"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0,0,1,1,1,1"))
                                                         (rule "add_literals" (formula "83") (term "1,1,0,0,0,1,1,1,1"))
                                                         (rule "times_zero_1" (formula "83") (term "1,0,0,0,1,1,1,1"))
                                                         (rule "add_literals" (formula "83") (term "0,0,0,1,1,1,1"))
                                                         (rule "leq_literals" (formula "83") (term "0,0,1,1,1,1"))
                                                          (builtin "One Step Simplification" (formula "83"))
                                                         (rule "applyEq" (formula "83") (term "2,0,1,0,0,1,1") (ifseqformula "43"))
                                                         (rule "inEqSimp_homoInEq1" (formula "83") (term "1,0,0,1,1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "83") (term "0,1,0,0,1,1"))
                                                         (rule "add_literals" (formula "83") (term "1,0,1,0,0,1,1"))
                                                         (rule "times_zero_1" (formula "83") (term "0,1,0,0,1,1"))
                                                         (rule "leq_literals" (formula "83") (term "1,0,0,1,1"))
                                                          (builtin "One Step Simplification" (formula "83"))
                                                         (rule "applyEq" (formula "83") (term "0,1,0,0") (ifseqformula "43"))
                                                         (rule "inEqSimp_homoInEq1" (formula "83") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "83") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "83") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "83") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "83") (term "1,0,0"))
                                                          (builtin "One Step Simplification" (formula "83"))
                                                         (rule "applyEq" (formula "83") (term "0,1,0,0,1,1,1,1") (ifseqformula "43"))
                                                         (rule "inEqSimp_homoInEq1" (formula "83") (term "1,0,0,1,1,1,1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "83") (term "0,1,0,0,1,1,1,1"))
                                                         (rule "add_literals" (formula "83") (term "1,0,1,0,0,1,1,1,1"))
                                                         (rule "times_zero_1" (formula "83") (term "0,1,0,0,1,1,1,1"))
                                                         (rule "leq_literals" (formula "83") (term "1,0,0,1,1,1,1"))
                                                          (builtin "One Step Simplification" (formula "83"))
                                                         (rule "applyEq" (formula "83") (term "2,0,1,0,1,1") (ifseqformula "43"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "83") (term "0,0,1,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "83") (term "0,0,0,1,1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "83") (term "0,0,0,1,1,1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "83") (term "0,0") (ifseqformula "27"))
                                                         (rule "leq_literals" (formula "83") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "83"))
                                                         (rule "inEqSimp_subsumption1" (formula "83") (term "0,0,1,1,1,1") (ifseqformula "27"))
                                                         (rule "leq_literals" (formula "83") (term "0,0,0,1,1,1,1"))
                                                          (builtin "One Step Simplification" (formula "83"))
                                                         (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "84") (term "0,1,0,1,1,1"))
                                                         (rule "translateJavaCastInt" (formula "84") (term "0,0,1,0,1,1,1"))
                                                         (rule "castedGetAny" (formula "84") (term "0,0,1,0,1,1,1"))
                                                         (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "84") (term "0,1,0,0,0,1,1"))
                                                          (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "126")) (ifInst ""  (formula "21")))
                                                         (rule "wellFormedAnon" (formula "84") (term "1,0"))
                                                         (rule "wellFormedAnon" (formula "84") (term "0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "84") (term "2,1,1,0,1,1,1,1"))
                                                         (rule "translateJavaSubInt" (formula "84") (term "2,0,1,0,1,1,1,1,1"))
                                                         (rule "replace_known_left" (formula "84") (term "1,1,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")))
                                                         (rule "polySimp_elimSub" (formula "84") (term "2,0,1,0,1,1,1,1,1"))
                                                         (rule "mul_literals" (formula "84") (term "1,2,0,1,0,1,1,1,1,1"))
                                                         (rule "polySimp_addComm0" (formula "84") (term "2,1,1,0,1,1,1,1"))
                                                         (rule "polySimp_addComm0" (formula "84") (term "2,0,1,0,1,1,1,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,1,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,1,1,1,1"))
                                                         (rule "polySimp_addComm1" (formula "84") (term "0,0,0,1,1,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0,1,1,1,1,1"))
                                                         (rule "add_zero_right" (formula "84") (term "0,0,0,0,1,1,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,1,1,1,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "84") (term "0,0,0") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "84"))
                                                         (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,1,1,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,0,1,1,1,1,1"))
                                                         (rule "applyEq" (formula "84") (term "0,1,0,0,1,1,1,1,1") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "84") (term "0,0,0") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "84") (term "2,0,1,0,1,1") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "84") (term "2,0,1,0,0,1,1") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "84") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "43"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "84") (term "0,0,0,1,1,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0,0,1,1,1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "84") (term "0,0,0,0,1,1,1,1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "84") (term "0,0,1,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0,1,1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "84") (term "0,0,0,1,1,1,1"))
                                                         (rule "replace_known_left" (formula "84") (term "0,0,1,1,1,1") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "84"))
                                                         (rule "inEqSimp_subsumption1" (formula "84") (term "0,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "84") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "84") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "84") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "84") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "84") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "84"))
                                                         (rule "inEqSimp_subsumption1" (formula "84") (term "1,0,0,1,1,1,1,1") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "84") (term "0,1,0,0,1,1,1,1,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,1,0,0,1,1,1,1,1"))
                                                         (rule "add_literals" (formula "84") (term "1,1,0,0,1,0,0,1,1,1,1,1"))
                                                         (rule "times_zero_1" (formula "84") (term "1,0,0,1,0,0,1,1,1,1,1"))
                                                         (rule "add_literals" (formula "84") (term "0,0,1,0,0,1,1,1,1,1"))
                                                         (rule "qeq_literals" (formula "84") (term "0,1,0,0,1,1,1,1,1"))
                                                          (builtin "One Step Simplification" (formula "84"))
                                                         (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "85") (term "0,1,0,0,0,1,1"))
                                                         (rule "translateJavaCastInt" (formula "85") (term "0,0,1,0,0,0,1,1"))
                                                         (rule "castedGetAny" (formula "85") (term "0,0,1,0,0,0,1,1"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "85") (term "0,1"))
                                                         (rule "replace_known_right" (formula "85") (term "0,0,1") (ifseqformula "101"))
                                                          (builtin "One Step Simplification" (formula "85"))
                                                         (rule "commute_and_2" (formula "70") (term "0,0"))
                                                         (rule "nnf_notAnd" (formula "95") (term "0,0"))
                                                         (rule "lenNonNegative" (formula "66") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "66"))
                                                         (rule "applyEq" (formula "66") (term "0") (ifseqformula "67"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "66"))
                                                         (rule "mul_literals" (formula "66") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "66") (ifseqformula "27"))
                                                         (rule "leq_literals" (formula "66") (term "0"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "true_left" (formula "66"))
                                                         (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                         (rule "commute_and" (formula "129"))
                                                         (rule "nnf_imp2or" (formula "59") (term "0,0,1,0"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "64") (term "0"))
                                                         (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "101"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "andLeft" (formula "64"))
                                                         (rule "replace_known_left" (formula "79") (term "1,1,1") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                         (rule "replace_known_left" (formula "81") (term "0") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "64")) (ifInst ""  (formula "65")))
                                                         (rule "andLeft" (formula "81"))
                                                         (rule "andLeft" (formula "82"))
                                                         (rule "andLeft" (formula "81"))
                                                         (rule "andLeft" (formula "84"))
                                                         (rule "andLeft" (formula "81"))
                                                         (rule "andLeft" (formula "81"))
                                                         (rule "inEqSimp_exactShadow3" (formula "82") (ifseqformula "83"))
                                                         (rule "polySimp_mulComm0" (formula "82") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "82"))
                                                         (rule "polySimp_mulLiterals" (formula "82") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "82") (term "1"))
                                                         (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "66") (term "0"))
                                                          (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "135")) (ifInst ""  (formula "21")))
                                                         (rule "wellFormedAnon" (formula "66") (term "1,0"))
                                                         (rule "wellFormedAnon" (formula "66") (term "0,1,0"))
                                                         (rule "replace_known_left" (formula "66") (term "0,0,1,0") (ifseqformula "17"))
                                                          (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
                                                         (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "66") (term "0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "applyEq" (formula "66") (term "0,1,0,0,0") (ifseqformula "43"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "66") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "inEqSimp_subsumption1" (formula "66") (term "0,1,1") (ifseqformula "67"))
                                                         (rule "leq_literals" (formula "66") (term "0,0,1,1"))
                                                          (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "90")))
                                                         (rule "true_left" (formula "66"))
                                                         (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "66") (term "0"))
                                                         (rule "translateJavaSubInt" (formula "66") (term "1,0"))
                                                         (rule "polySimp_elimSub" (formula "66") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "66") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "66") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "66") (term "0") (ifseqformula "90"))
                                                         (rule "inEqSimp_homoInEq1" (formula "66"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                                                         (rule "mul_literals" (formula "66") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "66") (term "0"))
                                                         (rule "add_literals" (formula "66") (term "0,0"))
                                                         (rule "add_zero_left" (formula "66") (term "0"))
                                                         (rule "inEqSimp_invertInEq0" (formula "66"))
                                                         (rule "mul_literals" (formula "66") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "0"))
                                                         (rule "Contract_axiom_for_isValidBucketPointer_in_BucketPointers" (formula "103") (term "0,1,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "103") (term "1,0,0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "64")) (ifInst ""  (formula "135")) (ifInst ""  (formula "64")) (ifInst ""  (formula "65")) (ifInst ""  (formula "21")))
                                                         (rule "true_left" (formula "103"))
                                                         (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "103") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "103"))
                                                         (rule "translateJavaMulInt" (formula "103") (term "0,2,0,1,0,0,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "103") (term "0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "103") (term "2,1,1,0,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "103") (term "0,2,1,0,0,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "103") (term "0,2,1,0,1,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "103") (term "2,1,1,1,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "103") (term "0,2,0,1,1,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "103") (term "0,2,0,0,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "103") (term "0,2,0,0,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "103") (term "0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "103") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "103") (term "0,1,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "103") (term "0,0,2,0,0,1,1,0"))
                                                         (rule "translateJavaMulInt" (formula "103") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "103") (term "0,2,0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "103") (term "0,2,1,0,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "103") (term "0,2,0,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "103") (term "0,2,0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "103") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "103") (term "0,2,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "103") (term "0,0,2,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "103") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "103") (term "2,1,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "103") (term "2,1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "103") (term "0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "103") (term "0,2,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "103") (term "0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "103") (term "0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "103") (term "0,1,0,0,0,1,0"))
                                                         (rule "applyEq" (formula "103") (term "1,1,1,0,0,1,0") (ifseqformula "100"))
                                                         (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                                         (rule "nnf_imp2or" (formula "102") (term "0"))
                                                         (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "14") (term "1,1") (inst "b=b"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "expand_inInt" (formula "14") (term "1,0,0,1,1,1"))
                                                         (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1,1,1"))
                                                         (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,1,1"))
                                                         (rule "translateJavaCastInt" (formula "14") (term "0,1,0,1,0,0,0,1,1"))
                                                         (rule "translateJavaMulInt" (formula "14") (term "1,0,0,0,0,0,1,1"))
                                                         (rule "translateJavaAddInt" (formula "14") (term "1,1,0,0,1,1"))
                                                         (rule "translateJavaCastInt" (formula "14") (term "0,0,1,0,1,1"))
                                                         (rule "translateJavaMulInt" (formula "14") (term "0,1,0,0,0,0,1,1"))
                                                         (rule "translateJavaCastInt" (formula "14") (term "1,1,0,0,1,0,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,1"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0,1,0,0,0,1,1"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,1"))
                                                         (rule "replace_known_left" (formula "14") (term "0,1,0,1,1") (ifseqformula "101"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "castedGetAny" (formula "14") (term "1,1,0,0,1,0,0,0,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,1,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0,1,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1,0,0,0,1,1"))
                                                         (rule "applyEq" (formula "14") (term "1,0,1,0,0,1,0,0,0,1,1") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "14") (term "1,1,0,0,1,0,0,0,1,1") (ifseqformula "100"))
                                                         (rule "applyEq" (formula "14") (term "0,0,1,1,0,0,0,1,1") (ifseqformula "100"))
                                                         (rule "applyEq" (formula "14") (term "0,1,0,0,1,1") (ifseqformula "67"))
                                                         (rule "polySimp_homoEq" (formula "14") (term "1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,1"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,1"))
                                                         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,1"))
                                                         (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,1,1") (ifseqformula "43"))
                                                         (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0,1,1"))
                                                         (rule "replace_known_left" (formula "14") (term "1,0,0,0,0,1,1") (ifseqformula "97"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "applyEq" (formula "14") (term "0,0,0,0,1,0,0,0,1,1") (ifseqformula "100"))
                                                         (rule "applyEq" (formula "14") (term "1,0,1,0,0,1,1") (ifseqformula "43"))
                                                         (rule "polySimp_pullOutFactor2" (formula "14") (term "0,1,0,0,1,1"))
                                                         (rule "add_literals" (formula "14") (term "1,0,1,0,0,1,1"))
                                                         (rule "times_zero_1" (formula "14") (term "0,1,0,0,1,1"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,1") (ifseqformula "56"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,0,0,1,1"))
                                                         (rule "applyEq" (formula "14") (term "0,0,0,0,0,1,1") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "14") (term "1,0,1,0,1,0,0,1,1") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "14") (term "0,1,0,1,0,0,1,1") (ifseqformula "56"))
                                                         (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,1,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,0,0,1,1"))
                                                         (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,1") (ifseqformula "43"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,1,0,0,1,1"))
                                                         (rule "replace_known_left" (formula "14") (term "1,0,0,1,0,0,1,1") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,1,1"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,1,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0,0,1,1"))
                                                         (rule "replace_known_left" (formula "14") (term "1,0,1,0,0,1,1") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_subsumption6" (formula "14") (term "0,0,0,1,1") (ifseqformula "27"))
                                                         (rule "greater_literals" (formula "14") (term "0,0,0,0,0,1,1"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,1,1"))
                                                         (rule "leq_literals" (formula "14") (term "0,0,0,0,1,1"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_subsumption6" (formula "14") (term "0,0,0,1,1") (ifseqformula "98"))
                                                         (rule "greater_literals" (formula "14") (term "0,0,0,0,0,1,1"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,1,1"))
                                                         (rule "leq_literals" (formula "14") (term "0,0,0,0,1,1"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "Contract_axiom_for_elementsToReadCountElement_in_BucketPointers" (formula "15") (term "0,1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "137")) (ifInst ""  (formula "135")) (ifInst ""  (formula "22")))
                                                         (rule "wellFormedAnon" (formula "15") (term "1,0"))
                                                         (rule "replace_known_left" (formula "15") (term "1,1,0") (ifseqformula "17"))
                                                          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "18")))
                                                         (rule "Contract_axiom_for_elementsToReadCountElement_in_BucketPointers" (formula "16") (term "0,1,1,0"))
                                                         (rule "replace_known_left" (formula "16") (term "1,0,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "138")) (ifInst ""  (formula "23")) (ifInst ""  (formula "136")))
                                                         (rule "Definition_axiom_for_elementsToReadCountElement_in_de_wiesler_BucketPointers" (formula "17") (term "0,1,1,1,0") (inst "b=b"))
                                                         (rule "translateJavaCastInt" (formula "17") (term "0,1,1,1,0"))
                                                         (rule "applyEq" (formula "17") (term "1,0,1,1,1,0") (ifseqformula "45"))
                                                         (rule "Definition_axiom_for_elementsToReadCountElement_in_de_wiesler_BucketPointers" (formula "17") (term "0,1,1,0") (inst "b=b"))
                                                         (rule "translateJavaCastInt" (formula "17") (term "0,1,1,0"))
                                                         (rule "applyEq" (formula "17") (term "1,0,1,1,0") (ifseqformula "45"))
                                                         (rule "Contract_axiom_for_writtenElementsCountElement_in_BucketPointers" (formula "17") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "139")) (ifInst ""  (formula "135")) (ifInst ""  (formula "137")) (ifInst ""  (formula "49")) (ifInst ""  (formula "24")))
                                                         (rule "wellFormedAnon" (formula "17") (term "1,0"))
                                                         (rule "replace_known_left" (formula "17") (term "1,1,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")) (ifInst ""  (formula "15")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "Definition_axiom_for_writtenElementsCountElement_in_de_wiesler_BucketPointers" (formula "17") (term "0,1,0") (inst "b=b"))
                                                         (rule "translateJavaCastInt" (formula "17") (term "0,1,0"))
                                                         (rule "applyEq" (formula "17") (term "1,0,1,0") (ifseqformula "45"))
                                                         (rule "Definition_axiom_for_countElement_in_de_wiesler_BucketPointers" (formula "4") (term "1,1,0"))
                                                         (rule "eqSymm" (formula "4") (term "1,0"))
                                                         (rule "translateJavaAddInt" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "4") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "4") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                                         (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "3") (term "0,1,1,1,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "135")) (ifInst ""  (formula "138")) (ifInst ""  (formula "23")))
                                                         (rule "wellFormedAnon" (formula "3") (term "1,0"))
                                                         (rule "wellFormedAnon" (formula "3") (term "0,1,0"))
                                                         (rule "replace_known_left" (formula "3") (term "1,1,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")))
                                                         (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "4") (term "0,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "4") (term "0,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "4") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0,0,1,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "4") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0,1,1,0"))
                                                         (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "4") (term "0,0,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "translateJavaAddInt" (formula "4") (term "3,0,1,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "4") (term "4,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,1,0"))
                                                         (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "14") (term "0,0,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "translateJavaAddInt" (formula "14") (term "4,0,1,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "14") (term "3,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                                                         (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "62") (term "0,0,1,1,1,0"))
                                                         (rule "translateJavaCastInt" (formula "62") (term "0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "62") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "62") (term "0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "62") (term "1,1,1,0"))
                                                         (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "62") (term "0,1,1,0") (inst "b=b_1"))
                                                         (rule "translateJavaCastInt" (formula "62") (term "0,1,1,0"))
                                                         (rule "applyEq" (formula "62") (term "1,0,1,1,0") (ifseqformula "46"))
                                                         (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "62") (term "0,1,0,1,0"))
                                                         (rule "translateJavaSubInt" (formula "62") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "62") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "62") (term "0,1,0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "62") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "62") (term "1,1,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "75") (term "0"))
                                                         (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "29") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "translateJavaAddInt" (formula "29") (term "2,1,1,0,0,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "29") (term "0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "29") (term "0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "29") (term "2,1,1,1,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "29") (term "0,2,1,0,1,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "29") (term "0,2,0,1,1,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "29") (term "0,2,0,0,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "29") (term "0,2,0,0,1,1,0"))
                                                         (rule "translateJavaMulInt" (formula "29") (term "0,2,0,1,0,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "29") (term "0,2,1,0,0,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "29") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "29") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "29") (term "0,1,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "29") (term "0,0,2,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,2,0,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,2,0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,2,0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,2,1,0,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,2,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,0,2,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "2,1,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "2,1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "0,2,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,1,0,0,0,1,0"))
                                                         (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,0") (ifseqformula "103"))
                                                         (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "83") (term "0"))
                                                          (builtin "One Step Simplification" (formula "83"))
                                                         (rule "translateJavaMod" (formula "83") (term "0"))
                                                         (rule "jmod_axiom" (formula "83") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "83") (term "1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "83"))
                                                         (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                         (rule "newSym_eq" (formula "83") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))),
    mul(de.wiesler.BucketPointers::toReadCountOfBucket(anon(anon(heap,
                                                                 union(union(union(union(allFields(overflow),
                                                                                         allFields(swap_1)),
                                                                                   allFields(swap_2)),
                                                                             allFields(int[]::final(bucket_pointers,
                                                                                                    de.wiesler.BucketPointers::$buffer))),
                                                                       arrayRange(values,
                                                                                  begin,
                                                                                  add(Z(neglit(1(#))),
                                                                                      end))),
                                                                 anon_heap_LOOP_0<<anonHeapFunction>>),
                                                            union(union(union(union(allFields(overflow),
                                                                                    allFields(swap_1)),
                                                                              allFields(swap_2)),
                                                                        allFields(int[]::final(bucket_pointers,
                                                                                               de.wiesler.BucketPointers::$buffer))),
                                                                  arrayRange(values,
                                                                             begin,
                                                                             add(Z(neglit(1(#))),
                                                                                 end))),
                                                            anon_heap_LOOP_1<<anonHeapFunction>>),
                                                       bucket_pointers,
                                                       bucket_0),
        Z(0(#))))"))
                                                         (rule "times_zero_1" (formula "83") (term "1,1,1"))
                                                         (rule "add_literals" (formula "83") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "83") (term "1"))
                                                         (rule "applyEq" (formula "84") (term "0,0") (ifseqformula "83"))
                                                         (rule "polySimp_homoEq" (formula "84"))
                                                         (rule "polySimp_mulLiterals" (formula "84") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "84") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "84") (term "1,0"))
                                                         (rule "mul_literals" (formula "84") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "84") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "84") (term "0,0"))
                                                         (rule "add_literals" (formula "84") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "84") (term "0,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "84"))
                                                         (rule "polySimp_mulLiterals" (formula "84") (term "1"))
                                                         (rule "applyEq" (formula "93") (term "0,0,0,1,1") (ifseqformula "84"))
                                                         (rule "applyEq" (formula "83") (term "1,0,0") (ifseqformula "84"))
                                                         (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "62") (term "0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0,1,0"))
                                                         (rule "commute_or" (formula "62") (term "0,0,0"))
                                                         (rule "Contract_axiom_for_isValidBucketPointer_in_BucketPointers" (formula "71") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "139")) (ifInst ""  (formula "24")))
                                                         (rule "wellFormedAnon" (formula "71") (term "1,0"))
                                                         (rule "wellFormedAnon" (formula "71") (term "0,1,0"))
                                                         (rule "replace_known_left" (formula "71") (term "1,1,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")))
                                                         (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "72") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "72"))
                                                         (rule "translateJavaMulInt" (formula "72") (term "0,2,1,0,0,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "72") (term "0,2,1,0,1,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "72") (term "0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "72") (term "0,2,0,1,0,0,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "72") (term "0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "72") (term "2,1,1,1,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "72") (term "0,2,0,0,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "72") (term "0,2,0,0,1,1,0"))
                                                         (rule "translateJavaMulInt" (formula "72") (term "0,2,0,1,1,0,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "72") (term "2,1,1,0,0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "72") (term "0,1,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "72") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "72") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "72") (term "0,0,2,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "0,2,1,0,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "0,2,0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "0,2,0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "0,2,0,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "0,2,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "0,0,2,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "72") (term "2,1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "72") (term "2,1,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "72") (term "0,2,0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "72") (term "0,2,1,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "72") (term "0,2,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "72") (term "0,1,0,0,0,1,0"))
                                                         (rule "applyEq" (formula "72") (term "1,1,1,0,0,1,0") (ifseqformula "105"))
                                                         (rule "expand_moduloInteger" (formula "38") (term "0"))
                                                         (rule "replace_int_HALFRANGE" (formula "38") (term "0,0,1,0"))
                                                         (rule "replace_int_RANGE" (formula "38") (term "1,1,0"))
                                                         (rule "replace_int_MIN" (formula "38") (term "0,0"))
                                                         (rule "polySimp_homoEq" (formula "38"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "38"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                         (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "2") (term "0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "2") (term "0,2,0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "2") (term "0,0,2,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,0,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0,2,0,1,0"))
                                                         (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "2") (term "1,1,0"))
                                                         (rule "translateJavaMulInt" (formula "2") (term "0,2,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,2,1,1,0"))
                                                         (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "45") (term "1,0,2,0,1,0"))
                                                         (rule "translateJavaSubInt" (formula "45") (term "0,1,1,1,0,2,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "45") (term "1,0,0,1,0,2,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "45") (term "1,1,1,0,2,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "45") (term "0,1,1,1,0,2,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,1,1,1,0,2,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0,1,0,1,0,2,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "0,1,1,0,2,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,1,0,2,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,1,0,2,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "1,1,0,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0,1,1,0,2,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,2,0,1,0"))
                                                         (rule "polySimp_mulComm1" (formula "45") (term "1,1,0,2,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,0,2,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "0,1,0,2,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0,0,1,0,2,0,1,0"))
                                                         (rule "polySimp_mulComm1" (formula "45") (term "1,0,1,0,2,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,1,0,2,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,2,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,2,0,1,0"))
                                                         (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "44") (term "0,0,1,0"))
                                                         (rule "translateJavaSubInt" (formula "44") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "0,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm1" (formula "44") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm1" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,0,1,0,1,0"))
                                                         (rule "commute_or" (formula "2") (term "0,0,0"))
                                                         (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "44") (term "0,1,1,0"))
                                                         (rule "translateJavaSubInt" (formula "44") (term "0,1,1,0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "0,1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "1,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm1" (formula "44") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm1" (formula "44") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "44") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,0,0,1,1,1,0"))
                                                         (rule "jdiv_axiom" (formula "104") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "104") (term "0,0,2,1"))
                                                         (rule "eqSymm" (formula "104"))
                                                         (rule "applyEqRigid" (formula "104") (term "1") (ifseqformula "105"))
                                                         (rule "inEqSimp_subsumption6" (formula "104") (term "0,0") (ifseqformula "103"))
                                                         (rule "greater_literals" (formula "104") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "104"))
                                                         (rule "mul_literals" (formula "104") (term "1,0,0,0"))
                                                         (rule "leq_literals" (formula "104") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "104"))
                                                         (rule "polyDiv_pullOut" (formula "104") (term "0") (inst "polyDivCoeff=l_0"))
                                                         (rule "polySimp_mulLiterals" (formula "104") (term "1,0,0,2,0"))
                                                         (rule "equal_literals" (formula "104") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "104"))
                                                         (rule "polySimp_homoEq" (formula "104"))
                                                         (rule "polySimp_pullOutFactor0" (formula "104") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "104") (term "1,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "104") (term "0,0,0,1,0"))
                                                         (rule "div_literals" (formula "104") (term "0,0,1,0"))
                                                         (rule "add_zero_left" (formula "104") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "104") (term "0"))
                                                         (rule "add_literals" (formula "104") (term "1,0"))
                                                         (rule "times_zero_1" (formula "104") (term "0"))
                                                          (builtin "One Step Simplification" (formula "104"))
                                                         (rule "true_left" (formula "104"))
                                                         (rule "commute_and" (formula "45") (term "1,0,0"))
                                                         (rule "commute_and" (formula "44") (term "1,0,0"))
                                                         (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "34") (term "0"))
                                                         (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "114"))
                                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "20")) (ifInst ""  (formula "35")))
                                                         (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "35") (term "0") (inst "i=i") (inst "j=j"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "expand_inInt" (formula "35") (term "1,0,0,1,0"))
                                                         (rule "expand_inInt" (formula "35") (term "1,0,0"))
                                                         (rule "replace_int_MAX" (formula "35") (term "1,0,1,0,0,1,0"))
                                                         (rule "replace_int_MIN" (formula "35") (term "0,1,1,0,0,1,0"))
                                                         (rule "replace_int_MAX" (formula "35") (term "1,0,1,0,0"))
                                                         (rule "replace_int_MIN" (formula "35") (term "0,1,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "44") (term "0") (inst "i=i") (inst "j=j"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "expand_inInt" (formula "44") (term "1,0,0,1,0"))
                                                         (rule "expand_inInt" (formula "44") (term "1,0,0"))
                                                         (rule "replace_int_MAX" (formula "44") (term "1,0,1,0,0,1,0"))
                                                         (rule "replace_int_MIN" (formula "44") (term "0,1,1,0,0,1,0"))
                                                         (rule "replace_int_MAX" (formula "44") (term "1,0,1,0,0"))
                                                         (rule "replace_int_MIN" (formula "44") (term "0,1,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                         (rule "onlyCreatedObjectsAreReferencedFinal" (formula "120") (term "0") (ifseqformula "20") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "14") (term "0,1,0"))
                                                         (rule "translateJavaMulInt" (formula "14") (term "0,0,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "14") (term "0,2,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "0,0,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "0,2,0,1,0"))
                                                         (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "14") (term "1,1,0"))
                                                         (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1,0"))
                                                         (rule "Contract_axiom_for_blockAligned_in_Buffers" (formula "66") (term "1"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "translateJavaSubInt" (formula "66") (term "0,1,1,1"))
                                                         (rule "polySimp_elimSub" (formula "66") (term "0,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "66") (term "1,0,1,1,1"))
                                                         (rule "polySimp_mulAssoc" (formula "66") (term "0,1,0,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0,1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "0,1,0,1,1,1"))
                                                         (rule "polySimp_addComm0" (formula "66") (term "0,1,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "66") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "66") (term "1,0,0,1,1,1"))
                                                         (rule "add_literals" (formula "66") (term "0,0,1,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "66") (term "0,1,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,1,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "66") (term "0,0"))
                                                         (rule "mul_literals" (formula "66") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "66") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "66") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "66") (term "1,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "66") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "66") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "66") (term "1,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "1,1,1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "66") (term "0,1,1,1,1"))
                                                         (rule "mul_literals" (formula "66") (term "0,0,1,1,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "1,0,0"))
                                                         (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "66") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "0,0"))
                                                         (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "60"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "andLeft" (formula "66"))
                                                         (rule "andLeft" (formula "67"))
                                                         (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "69") (term "1"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "translateJavaSubInt" (formula "69") (term "0,1"))
                                                         (rule "translateJavaUnaryMinusInt" (formula "69") (term "1,1"))
                                                         (rule "neg_literal" (formula "69") (term "1,1"))
                                                         (rule "translateJavaAddInt" (formula "69") (term "0,0,1"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "polySimp_elimSub" (formula "69") (term "0,0"))
                                                         (rule "mul_literals" (formula "69") (term "1,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "69") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "69") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "69") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "true_left" (formula "69"))
                                                         (rule "Definition_axiom_for_elementsToReadOfBucketCountClassEq_in_de_wiesler_BucketPointers" (formula "79") (term "2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "79") (term "3,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "79") (term "4,2,0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "79") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "79") (term "0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "79") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "79") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "79") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "79") (term "0,1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "44") (term "1"))
                                                         (rule "expand_inShort" (formula "44"))
                                                         (rule "replace_short_MAX" (formula "44") (term "1,0"))
                                                         (rule "replace_short_MIN" (formula "44") (term "0,1"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45"))
                                                         (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "41"))
                                                         (rule "leq_literals" (formula "45") (term "0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "arrayLengthNotNegative" (formula "45") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "41"))
                                                         (rule "leq_literals" (formula "45") (term "0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "commute_or" (formula "14") (term "0,0,0"))
                                                         (rule "ifthenelse_split" (formula "33") (term "0"))
                                                         (branch "classifier.equal_buckets = TRUE TRUE"
                                                            (rule "newSym_eq" (formula "34") (inst "l=l_2") (inst "newSymDef=mul(result, Z(0(#)))"))
                                                            (rule "times_zero_1" (formula "34") (term "1,1"))
                                                            (rule "add_zero_right" (formula "34") (term "1"))
                                                            (rule "applyEq" (formula "44") (term "0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "35"))
                                                            (rule "applyEq" (formula "47") (term "0") (ifseqformula "34"))
                                                            (rule "inEqSimp_commuteLeq" (formula "47"))
                                                            (rule "applyEq" (formula "48") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "49") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "39") (term "1,0,2,0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "applyEq" (formula "45") (term "1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "50") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "38") (term "1,1,1,0,0,0,1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "37") (term "3,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "38") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "39") (term "1,0,2,0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "applyEq" (formula "5") (term "1,0,0,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "82") (term "1,0,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "31") (term "0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "9") (term "0") (ifseqformula "35"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "103") (term "2,0,1,0,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "30") (term "1,1,1,0,0,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "105") (term "2,0,1,0,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "109") (term "0,1") (ifseqformula "35"))
                                                            (rule "polySimp_mulLiterals" (formula "109") (term "1"))
                                                            (rule "applyEq" (formula "32") (term "0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "67") (term "1,1,0,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "114") (term "1,1,0,0,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "99") (term "2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "104") (term "2,0,1,0,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "105") (term "2,0,0,1,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "82") (term "1,1,1,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "15") (term "1,0,0,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "114") (term "1,1,0,0,0,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "16") (term "1,1,1,0,0,0,1,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "103") (term "2,0,0,0,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "103") (term "1,2,0,0,1,1,1,1") (ifseqformula "35"))
                                                            (rule "inEqSimp_commuteLeq" (formula "103") (term "0,1,1,1,1"))
                                                            (rule "applyEq" (formula "115") (term "1,1,1,0,0,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "104") (term "2,0,1,0,0,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "103") (term "2,0,0,0,1,1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "67") (term "1,0,1,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "79") (term "1,1,1,0,0,0,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "97") (term "2,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "51") (term "1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "82") (term "1,1,1,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "6") (term "1,1,1,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "83") (term "1,1,1,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "72") (term "1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "77") (term "1,1") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "19") (term "1,0,1,1,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "49") (term "0,1,0,0,1,1,1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "103") (term "2,0,0,1,1,1,1") (ifseqformula "35"))
                                                            (rule "inEqSimp_commuteGeq" (formula "103") (term "0,1,1,1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                            (rule "mul_literals" (formula "9") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                            (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "44"))
                                                            (rule "mul_literals" (formula "31") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "31") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "leq_literals" (formula "31") (term "0"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                                                            (rule "neg_literal" (formula "31") (term "0,0,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "31") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                                            (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0"))
                                                            (rule "qeq_literals" (formula "31") (term "0"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_exactShadow3" (formula "108") (ifseqformula "107"))
                                                            (rule "polySimp_mulAssoc" (formula "108") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "108") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "108") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "108") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "108"))
                                                            (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                                            (rule "inEqSimp_subsumption4" (formula "108") (ifseqformula "31"))
                                                            (rule "greater_literals" (formula "108") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "108"))
                                                            (rule "mul_literals" (formula "108") (term "0,0"))
                                                            (rule "leq_literals" (formula "108") (term "0"))
                                                             (builtin "One Step Simplification" (formula "108"))
                                                            (rule "true_left" (formula "108"))
                                                            (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "45"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "31"))
                                                            (rule "leq_literals" (formula "46") (term "0"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "9"))
                                                            (rule "times_zero_1" (formula "13") (term "0,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                            (rule "mul_literals" (formula "13") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "44"))
                                                            (rule "greater_literals" (formula "13") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "mul_literals" (formula "13") (term "1,0"))
                                                            (rule "leq_literals" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "100") (term "0"))
                                                            (rule "replace_known_right" (formula "100") (term "0,0") (ifseqformula "120"))
                                                             (builtin "One Step Simplification" (formula "100"))
                                                            (rule "andLeft" (formula "100"))
                                                            (rule "andLeft" (formula "101"))
                                                            (rule "replace_known_left" (formula "77") (term "1,1") (ifseqformula "102"))
                                                             (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "100")) (ifInst ""  (formula "100")))
                                                            (rule "true_left" (formula "77"))
                                                            (rule "replace_known_left" (formula "103") (term "0,1") (ifseqformula "99"))
                                                             (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "99")) (ifInst ""  (formula "101")))
                                                            (rule "andLeft" (formula "103"))
                                                            (rule "andLeft" (formula "103"))
                                                            (rule "andLeft" (formula "105"))
                                                            (rule "replace_known_left" (formula "108") (term "0") (ifseqformula "99"))
                                                             (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "101")))
                                                            (rule "andLeft" (formula "108"))
                                                            (rule "andLeft" (formula "109"))
                                                            (rule "andLeft" (formula "108"))
                                                            (rule "andLeft" (formula "111"))
                                                            (rule "andLeft" (formula "108"))
                                                            (rule "andLeft" (formula "108"))
                                                            (rule "replace_known_left" (formula "107") (term "0,1") (ifseqformula "99"))
                                                             (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "99")) (ifInst ""  (formula "108")) (ifInst ""  (formula "104")) (ifInst ""  (formula "101")))
                                                            (rule "andLeft" (formula "107"))
                                                            (rule "andLeft" (formula "108"))
                                                            (rule "andLeft" (formula "109"))
                                                            (rule "inEqSimp_exactShadow3" (formula "116") (ifseqformula "104"))
                                                            (rule "polySimp_mulAssoc" (formula "116") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "116") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "116") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "116") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "116"))
                                                            (rule "polySimp_mulLiterals" (formula "116") (term "0"))
                                                            (rule "inEqSimp_subsumption4" (formula "116") (ifseqformula "54"))
                                                            (rule "greater_literals" (formula "116") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "116"))
                                                            (rule "mul_literals" (formula "116") (term "0,0"))
                                                            (rule "leq_literals" (formula "116") (term "0"))
                                                             (builtin "One Step Simplification" (formula "116"))
                                                            (rule "true_left" (formula "116"))
                                                            (rule "inEqSimp_exactShadow3" (formula "114") (ifseqformula "104"))
                                                            (rule "polySimp_mulComm0" (formula "114") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "114") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "114"))
                                                            (rule "polySimp_mulLiterals" (formula "114") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "114") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "107") (ifseqformula "104"))
                                                            (rule "polySimp_mulComm0" (formula "107") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "107") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "107"))
                                                            (rule "polySimp_mulLiterals" (formula "107") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "107") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "110") (ifseqformula "115"))
                                                            (rule "polySimp_mulComm0" (formula "110") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "110") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "110"))
                                                            (rule "polySimp_mulLiterals" (formula "110") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "110") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "114") (ifseqformula "115"))
                                                            (rule "polySimp_rightDist" (formula "114") (term "0,0"))
                                                            (rule "mul_literals" (formula "114") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "114") (term "0"))
                                                            (rule "add_literals" (formula "114") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "114"))
                                                            (rule "polySimp_mulLiterals" (formula "114") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "114") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "85") (ifseqformula "114"))
                                                            (rule "leq_literals" (formula "85") (term "0"))
                                                             (builtin "One Step Simplification" (formula "85"))
                                                            (rule "true_left" (formula "85"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "101") (term "0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "101") (term "0,2,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "101") (term "0,2,0,1,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_2" (formula "101") (term "0,1,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_3" (formula "101") (term "0,1,0"))
                                                            (rule "applyEq" (formula "101") (term "0,1,0") (ifseqformula "120"))
                                                            (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "101") (term "0,1,1,0"))
                                                             (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "98")) (ifInst ""  (formula "161")) (ifInst ""  (formula "98")) (ifInst ""  (formula "100")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnon" (formula "101") (term "1,0"))
                                                            (rule "wellFormedAnon" (formula "101") (term "0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "101") (term "2,1,1,0,0,1"))
                                                            (rule "translateJavaAddInt" (formula "101") (term "2,0,1,0,1"))
                                                            (rule "replace_known_left" (formula "101") (term "0,0,1,0") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                                            (rule "polySimp_addComm0" (formula "101") (term "2,1,1,0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "101") (term "2,0,1,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "101") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "101") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,0,1"))
                                                            (rule "replace_known_left" (formula "101") (term "0,0,0,0,1") (ifseqformula "112"))
                                                             (builtin "One Step Simplification" (formula "101"))
                                                            (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0"))
                                                            (rule "replace_known_left" (formula "101") (term "0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "101"))
                                                            (rule "inEqSimp_commuteLeq" (formula "101") (term "1,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,1"))
                                                            (rule "applyEq" (formula "101") (term "2,0,1,0,1") (ifseqformula "50"))
                                                            (rule "replace_known_left" (formula "101") (term "1,0,1") (ifseqformula "117"))
                                                             (builtin "One Step Simplification" (formula "101"))
                                                            (rule "applyEq" (formula "101") (term "0,1,0,0") (ifseqformula "50"))
                                                            (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "101") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "101") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "101") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "101") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "101") (term "0,1,0"))
                                                            (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "101"))
                                                            (rule "andLeft" (formula "101"))
                                                            (rule "andLeft" (formula "101"))
                                                            (rule "inEqSimp_exactShadow3" (formula "101") (ifseqformula "102"))
                                                            (rule "polySimp_mulComm0" (formula "101") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "101"))
                                                            (rule "polySimp_mulLiterals" (formula "101") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "101") (term "1"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "104") (term "0,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "104") (term "0,2,0,1,1,0"))
                                                            (rule "translateJavaMulInt" (formula "104") (term "0,0,2,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "104") (term "0,0,2,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "104") (term "0,2,0,1,1,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_5" (formula "104") (term "0,1,1,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_6" (formula "104") (term "0,1,1,0"))
                                                            (rule "nnf_notAnd" (formula "132") (term "1,0,0"))
                                                            (rule "arrayLengthIsAShort" (formula "44") (term "0"))
                                                            (rule "expand_inShort" (formula "44"))
                                                            (rule "replace_short_MAX" (formula "44") (term "1,0"))
                                                            (rule "replace_short_MIN" (formula "44") (term "0,1"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "inEqSimp_commuteLeq" (formula "45"))
                                                            (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "44"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "31"))
                                                            (rule "leq_literals" (formula "46") (term "0"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "46"))
                                                            (rule "leq_literals" (formula "45") (term "0"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "106") (term "0,0,1,1"))
                                                            (rule "translateJavaAddInt" (formula "106") (term "0,2,0,0,1,1"))
                                                            (rule "translateJavaMulInt" (formula "106") (term "0,0,2,0,0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "106") (term "0,0,2,0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "106") (term "0,2,0,0,1,1"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_4" (formula "106") (term "0,0,1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_6" (formula "106") (term "0,0,1,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "106") (term "0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "106") (term "0,0,1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "106") (term "1,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "106") (term "1,0,1,1"))
                                                            (rule "mul_literals" (formula "106") (term "0,1,0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "106") (term "1,1,0,1,1"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "106") (term "0,0,0"))
                                                            (rule "translateJavaAddInt" (formula "106") (term "0,2,0,0,0"))
                                                            (rule "translateJavaMulInt" (formula "106") (term "0,0,2,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "106") (term "0,0,2,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "106") (term "0,2,0,0,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_5" (formula "106") (term "0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_6" (formula "106") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "106") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "106") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "106") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "106") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "106") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "106") (term "1,1,0,0"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "68") (term "1,3,0,1,0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "68") (term "0,2,1,3,0,1,0,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "68") (term "0,0,2,1,3,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "68") (term "0,0,2,1,3,0,1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "68") (term "0,2,1,3,0,1,0,0,1,0"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "68") (term "1,4,0,1,0,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "68") (term "0,2,1,4,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "68") (term "0,2,1,4,0,1,0,0,1,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "75"))
                                                            (rule "notLeft" (formula "75"))
                                                            (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "75") (inst "b=b"))
                                                             (builtin "One Step Simplification" (formula "75"))
                                                            (rule "expand_inInt" (formula "75") (term "1,0,0,1"))
                                                            (rule "replace_int_MAX" (formula "75") (term "1,0,1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "75") (term "0,1,1,0,0,1"))
                                                            (rule "andLeft" (formula "75"))
                                                            (rule "andLeft" (formula "75"))
                                                            (rule "andLeft" (formula "75"))
                                                            (rule "andLeft" (formula "77"))
                                                            (rule "andLeft" (formula "75"))
                                                            (rule "andLeft" (formula "76"))
                                                            (rule "andLeft" (formula "75"))
                                                            (rule "andLeft" (formula "77"))
                                                            (rule "andLeft" (formula "77"))
                                                            (rule "translateJavaAddInt" (formula "81") (term "1"))
                                                            (rule "translateJavaCastInt" (formula "82") (term "0"))
                                                            (rule "translateJavaMulInt" (formula "75") (term "1"))
                                                            (rule "translateJavaMulInt" (formula "76") (term "0"))
                                                            (rule "translateJavaCastInt" (formula "79") (term "0"))
                                                            (rule "translateJavaCastInt" (formula "78") (term "1"))
                                                            (rule "replace_known_left" (formula "16") (term "1,0,1,1") (ifseqformula "83"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "76") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "81") (term "1"))
                                                            (rule "castedGetAny" (formula "82") (term "0"))
                                                            (rule "castedGetAny" (formula "79") (term "0"))
                                                            (rule "castedGetAny" (formula "78") (term "1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "83") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "83") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "83") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "77"))
                                                            (rule "inEqSimp_commuteLeq" (formula "75"))
                                                            (rule "inEqSimp_commuteLeq" (formula "78"))
                                                            (rule "applyEq" (formula "81") (term "0") (ifseqformula "85"))
                                                            (rule "polySimp_homoEq" (formula "81"))
                                                            (rule "polySimp_mulComm0" (formula "81") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "81") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "81") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "81") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "81") (term "0,0"))
                                                            (rule "add_literals" (formula "81") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "81") (term "0,0"))
                                                            (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "138"))
                                                            (rule "replace_known_left" (formula "16") (term "0,1,1") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "76"))
                                                            (rule "applyEq" (formula "76") (term "0") (ifseqformula "137"))
                                                            (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "75") (term "0,0") (ifseqformula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                            (rule "applyEq" (formula "77") (term "1") (ifseqformula "137"))
                                                            (rule "applyEq" (formula "78") (term "1,0") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "82") (term "0,1,0,0,1,0,0,0") (ifseqformula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,1,0,0,0"))
                                                            (rule "applyEq" (formula "77") (term "0") (ifseqformula "65"))
                                                            (rule "inEqSimp_homoInEq1" (formula "77"))
                                                            (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "77") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "77") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "77") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "77") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                            (rule "applyEq" (formula "80") (term "1,0") (ifseqformula "52"))
                                                            (rule "polySimp_pullOutFactor0" (formula "80") (term "0"))
                                                            (rule "add_literals" (formula "80") (term "1,0"))
                                                            (rule "times_zero_1" (formula "80") (term "0"))
                                                             (builtin "One Step Simplification" (formula "80"))
                                                            (rule "true_left" (formula "80"))
                                                            (rule "applyEq" (formula "78") (term "0") (ifseqformula "65"))
                                                            (rule "inEqSimp_homoInEq0" (formula "78"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "78") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "78") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "78") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "78") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "81") (term "0,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                            (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                                                            (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                            (rule "inEqSimp_subsumption6" (formula "76") (ifseqformula "132"))
                                                            (rule "greater_literals" (formula "76") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "76"))
                                                            (rule "mul_literals" (formula "76") (term "1,0"))
                                                            (rule "leq_literals" (formula "76") (term "0"))
                                                             (builtin "One Step Simplification" (formula "76"))
                                                            (rule "true_left" (formula "76"))
                                                            (rule "inEqSimp_subsumption6" (formula "75") (ifseqformula "43"))
                                                            (rule "mul_literals" (formula "75") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "75") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "75"))
                                                            (rule "leq_literals" (formula "75") (term "0"))
                                                             (builtin "One Step Simplification" (formula "75"))
                                                            (rule "true_left" (formula "75"))
                                                            (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "90") (term "0"))
                                                            (rule "translateJavaSubInt" (formula "90") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "90") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "90") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "90") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "90") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "98") (term "0,1"))
                                                            (rule "translateJavaMulInt" (formula "98") (term "0,2,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "98") (term "0,2,0,1"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "98") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "98") (term "0,1"))
                                                            (rule "eqSymm" (formula "98") (term "1"))
                                                            (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "98") (term "0,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,0,0") (ifseqformula "86"))
                                                             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "167")) (ifInst ""  (formula "101")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "98") (term "1,0") (ifseqformula "86"))
                                                            (rule "wellFormedAnon" (formula "98") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "98") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "98") (term "2,1,1,0,0,1,1"))
                                                            (rule "translateJavaAddInt" (formula "98") (term "2,0,1,0,1,1"))
                                                            (rule "replace_known_left" (formula "98") (term "0,0,0,1,0") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "85")))
                                                            (rule "polySimp_addComm0" (formula "98") (term "2,0,1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "98") (term "2,1,1,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "98") (term "1,0,0,1,1") (ifseqformula "96"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "inEqSimp_ltToLeq" (formula "98") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "98") (term "0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "98") (term "0,0,0,1,1") (ifseqformula "93"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "98") (term "0,0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,1,1"))
                                                            (rule "replace_known_left" (formula "98") (term "0,0,1,1") (ifseqformula "95"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "applyEq" (formula "98") (term "2,0,0,1,1") (ifseqformula "52"))
                                                            (rule "replace_known_left" (formula "98") (term "0,1,1") (ifseqformula "97"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "applyEq" (formula "98") (term "0,1,0,0,0") (ifseqformula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "98") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "98") (term "0,0,0"))
                                                            (rule "applyEq" (formula "98") (term "1,0,0,1,1") (ifseqformula "133"))
                                                            (rule "applyEq" (formula "98") (term "1,0,1,1,1") (ifseqformula "133"))
                                                            (rule "applyEq" (formula "98") (term "2,0,0,1,1,1") (ifseqformula "52"))
                                                            (rule "replace_known_left" (formula "98") (term "0,1,1,1") (ifseqformula "100"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "98") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "98") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "98") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0"))
                                                            (rule "replace_known_left" (formula "98") (term "0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "99") (term "0,0"))
                                                            (rule "translateJavaMulInt" (formula "99") (term "0,2,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "99") (term "0,2,0,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "99") (term "0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "99") (term "0,0"))
                                                            (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "97") (term "1"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "168")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "1,0") (ifseqformula "86"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "97") (term "1,0") (ifseqformula "86"))
                                                            (rule "wellFormedAnon" (formula "97") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "97") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "97") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "translateJavaSubInt" (formula "97") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "97") (term "1,1,0") (ifseqformula "85"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                                            (rule "polySimp_elimSub" (formula "97") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "mul_literals" (formula "97") (term "1,2,0,1,0,1,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "97") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "add_literals" (formula "97") (term "0,2,1,1,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "97") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "add_literals" (formula "97") (term "0,2,0,1,0,1,1,1,1,1"))
                                                            (rule "add_zero_left" (formula "97") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,1,1,1,1,1"))
                                                            (rule "add_zero_right" (formula "97") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,1,1,1,1,1"))
                                                            (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,1,1,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "add_literals" (formula "97") (term "0,0,0,0,0,1,1,1,1,1"))
                                                            (rule "add_zero_left" (formula "97") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "97") (term "0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,1,1,1,1"))
                                                            (rule "add_literals" (formula "97") (term "0,0,0,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,1,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "97") (term "1,0,1,1,1,1,1") (ifseqformula "94"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "inEqSimp_homoInEq0" (formula "97") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "97") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "97") (term "0,0,0,0"))
                                                            (rule "applyEq" (formula "97") (term "2,0,1,0,1,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "97") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "97") (term "0,0,0,1,1,1,1"))
                                                            (rule "applyEq" (formula "97") (term "2,0,1,0,0,1,1") (ifseqformula "52"))
                                                            (rule "replace_known_left" (formula "97") (term "1,0,0,1,1") (ifseqformula "98"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "applyEq" (formula "97") (term "0,1,0,0") (ifseqformula "52"))
                                                            (rule "inEqSimp_homoInEq1" (formula "97") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "97") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "97") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "0,0,1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,1,1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "97") (term "1,0,0,1,1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0,0,1,1,1,1"))
                                                            (rule "mul_literals" (formula "97") (term "0,1,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "97") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "97") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "97") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "97") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "97") (term "1,1,1,0,0"))
                                                            (rule "replace_known_left" (formula "97") (term "1,0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "inEqSimp_subsumption1" (formula "97") (term "0,0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "97") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "98") (term "1"))
                                                            (rule "translateJavaCastInt" (formula "98") (term "0,1"))
                                                            (rule "castedGetAny" (formula "98") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "98"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "102") (term "0,0"))
                                                            (rule "translateJavaMulInt" (formula "102") (term "0,2,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "102") (term "0,2,0,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "102") (term "0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "102") (term "0,0"))
                                                            (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "96") (term "1"))
                                                             (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "169")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1,0") (ifseqformula "86"))
                                                             (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "96") (term "1,0") (ifseqformula "86"))
                                                            (rule "wellFormedAnon" (formula "96") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "96") (term "0,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "96") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "translateJavaAddInt" (formula "96") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "96") (term "0,0,0,1,0") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "85")))
                                                            (rule "polySimp_elimSub" (formula "96") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "mul_literals" (formula "96") (term "1,2,0,1,0,1,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "add_literals" (formula "96") (term "0,2,1,1,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "add_literals" (formula "96") (term "0,2,0,1,0,1,1,1,1,1"))
                                                            (rule "add_zero_left" (formula "96") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,1,1,1,1"))
                                                            (rule "add_literals" (formula "96") (term "0,0,0,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,1,1,1,1,1"))
                                                            (rule "add_zero_right" (formula "96") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,1,1,1,1,1"))
                                                            (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,1,1,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "add_literals" (formula "96") (term "0,0,0,0,0,1,1,1,1,1"))
                                                            (rule "add_zero_left" (formula "96") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,1,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "96") (term "1,0,1,1,1,1,1") (ifseqformula "94"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "inEqSimp_homoInEq0" (formula "96") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "96") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "96") (term "0,0,0,0"))
                                                            (rule "applyEq" (formula "96") (term "2,0,1,0,0,1,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "96") (term "2,0,1,0,1,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "96") (term "0,1,0,0") (ifseqformula "52"))
                                                            (rule "inEqSimp_homoInEq1" (formula "96") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "0,1,0,0"))
                                                            (rule "applyEq" (formula "96") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "0,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "96") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "96") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "96") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "96") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "1,1,1,0,0"))
                                                            (rule "replace_known_left" (formula "96") (term "1,0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,1,1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "96") (term "1,0,0,1,1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,1,1,1,1"))
                                                            (rule "mul_literals" (formula "96") (term "0,1,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "96") (term "0,0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "96") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "97") (term "0"))
                                                            (rule "translateJavaMulInt" (formula "97") (term "0,2,0"))
                                                            (rule "polySimp_mulComm0" (formula "97") (term "0,2,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "97") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "97") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "93") (term "0"))
                                                            (rule "translateJavaCastInt" (formula "93") (term "0,0"))
                                                            (rule "castedGetAny" (formula "93") (term "0,0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "93") (ifseqformula "121"))
                                                            (rule "mul_literals" (formula "93") (term "0,0"))
                                                            (rule "add_zero_left" (formula "93") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "93"))
                                                            (rule "mul_literals" (formula "93") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "88") (ifseqformula "93"))
                                                            (rule "leq_literals" (formula "88") (term "0"))
                                                             (builtin "One Step Simplification" (formula "88"))
                                                            (rule "true_left" (formula "88"))
                                                            (rule "inEqSimp_exactShadow3" (formula "92") (ifseqformula "140"))
                                                            (rule "mul_literals" (formula "92") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "92") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "92") (term "0,0"))
                                                            (rule "add_literals" (formula "92") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "92") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                            (rule "polySimp_mulLiterals" (formula "92") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "92") (term "1"))
                                                            (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "95") (term "0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "1,0,0") (ifseqformula "86"))
                                                             (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "170")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "95") (term "1,0") (ifseqformula "86"))
                                                            (rule "wellFormedAnon" (formula "95") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "95") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "95") (term "2,1,1,0,0,1,1"))
                                                            (rule "translateJavaAddInt" (formula "95") (term "2,0,1,0,1,1"))
                                                            (rule "replace_known_left" (formula "95") (term "1,1,0") (ifseqformula "85"))
                                                             (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                                            (rule "polySimp_addComm0" (formula "95") (term "2,0,1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "95") (term "2,1,1,0,0,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "95") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "95") (term "0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "95") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "95") (term "0,0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "95"))
                                                            (rule "inEqSimp_commuteLeq" (formula "95") (term "0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "95") (term "0,0,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "95") (term "1,0,0,0,1,1") (ifseqformula "96"))
                                                             (builtin "One Step Simplification" (formula "95"))
                                                            (rule "applyEq" (formula "95") (term "2,0,0,1,1,1,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "95") (term "1,0,0,1,1,1") (ifseqformula "136"))
                                                            (rule "applyEq" (formula "95") (term "2,0,1,0,1,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "95") (term "1,0,1,1,1,1") (ifseqformula "136"))
                                                            (rule "replace_known_left" (formula "95") (term "0,1,1,1,1") (ifseqformula "103"))
                                                             (builtin "One Step Simplification" (formula "95"))
                                                            (rule "applyEq" (formula "95") (term "0,1,0,0,0") (ifseqformula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "95") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "95") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "95") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "95") (term "0,1,0,0"))
                                                            (rule "replace_known_left" (formula "95") (term "0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "95"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "96") (term "1"))
                                                            (rule "translateJavaCastInt" (formula "96") (term "0,1"))
                                                            (rule "castedGetAny" (formula "96") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "96"))
                                                            (rule "inEqSimp_exactShadow3" (formula "93") (ifseqformula "96"))
                                                            (rule "times_zero_1" (formula "93") (term "0,0"))
                                                            (rule "add_zero_left" (formula "93") (term "0"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "0"))
                                                            (rule "translateJavaCastInt" (formula "95") (term "0,0"))
                                                            (rule "castedGetAny" (formula "95") (term "0,0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "95") (ifseqformula "101"))
                                                            (rule "polySimp_mulComm0" (formula "95") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "95"))
                                                            (rule "polySimp_mulLiterals" (formula "95") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "95") (term "1"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "96") (term "1"))
                                                            (rule "translateJavaCastInt" (formula "96") (term "0,1"))
                                                            (rule "castedGetAny" (formula "96") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "96") (ifseqformula "102"))
                                                            (rule "polySimp_mulComm0" (formula "96") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "96") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "96"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "96") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "94") (ifseqformula "96"))
                                                            (rule "mul_literals" (formula "94") (term "0,0"))
                                                            (rule "add_zero_left" (formula "94") (term "0"))
                                                            (rule "nnf_imp2or" (formula "5") (term "0,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "84") (term "0,0"))
                                                            (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "78") (term "1,1,0,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "1,0,0") (ifseqformula "87"))
                                                             (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "175")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "78") (term "1,0") (ifseqformula "87"))
                                                            (rule "wellFormedAnon" (formula "78") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "78") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "78") (term "2,0,1,0,1,1"))
                                                            (rule "translateJavaAddInt" (formula "78") (term "2,1,1,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "78") (term "1,1,0") (ifseqformula "86"))
                                                             (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                                            (rule "polySimp_addComm0" (formula "78") (term "2,1,1,0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "78") (term "2,0,1,0,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "78") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "78") (term "0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "78") (term "0,0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "78"))
                                                            (rule "inEqSimp_commuteLeq" (formula "78") (term "0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "78") (term "1,0,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "78") (term "1,0,1,1"))
                                                            (rule "applyEq" (formula "78") (term "2,0,0,1,1,1,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "78") (term "2,0,1,0,1,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "78") (term "1,0,0,1,1,1") (ifseqformula "141"))
                                                            (rule "applyEq" (formula "78") (term "0,1,0,0,0") (ifseqformula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
                                                            (rule "applyEq" (formula "78") (term "1,0,1,1,1,1") (ifseqformula "141"))
                                                            (rule "replace_known_left" (formula "78") (term "0,1,1,1,1") (ifseqformula "108"))
                                                             (builtin "One Step Simplification" (formula "78"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "78") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "78") (term "0,1,0,0"))
                                                            (rule "replace_known_left" (formula "78") (term "0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "78"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "79") (term "1,1,0,0"))
                                                            (rule "translateJavaMulInt" (formula "79") (term "0,2,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "79") (term "0,2,1,1,0,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "79") (term "1,1,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "79") (term "1,1,0,0"))
                                                            (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "79") (term "0,0,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "1,0,0") (ifseqformula "88"))
                                                             (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "176")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "79") (term "1,0") (ifseqformula "88"))
                                                            (rule "wellFormedAnon" (formula "79") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "79") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "79") (term "2,0,1,0,1,1"))
                                                            (rule "translateJavaAddInt" (formula "79") (term "2,1,1,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "79") (term "1,0,0,1,0") (ifseqformula "20"))
                                                             (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "21")) (ifInst ""  (formula "7")) (ifInst ""  (formula "87")))
                                                            (rule "polySimp_addComm0" (formula "79") (term "2,0,1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "79") (term "2,1,1,0,0,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "79") (term "0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "79") (term "1,0,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "79") (term "0,0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "79"))
                                                            (rule "inEqSimp_commuteLeq" (formula "79") (term "1,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,1"))
                                                            (rule "applyEq" (formula "79") (term "2,0,1,0,1,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "79") (term "0,1,0,0,0") (ifseqformula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "79") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "79") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "79") (term "0,1,0,0"))
                                                            (rule "replace_known_left" (formula "79") (term "0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "79"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "80") (term "0,0,0"))
                                                            (rule "translateJavaMulInt" (formula "80") (term "0,0,2,0,0,0"))
                                                            (rule "translateJavaAddInt" (formula "80") (term "0,2,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "80") (term "0,0,2,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "80") (term "0,2,0,0,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_4" (formula "80") (term "0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_6" (formula "80") (term "0,0,0"))
                                                            (rule "nnf_imp2or" (formula "15") (term "0,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "30") (term "1,0,0"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "145") (term "1,0,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "145") (term "0,1,0,0,1,0"))
                                                            (rule "translateJavaCastInt" (formula "145") (term "0,0,0,1,0,0,1,0"))
                                                            (rule "castedGetAny" (formula "145") (term "0,0,0,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "145") (term "0,1,0,0,1,0"))
                                                            (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "145") (term "0,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "145"))
                                                            (rule "translateJavaMod" (formula "145") (term "0,1,0,1,0"))
                                                            (rule "jmod_axiom" (formula "145") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "145") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "145") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "145") (term "0,1,0,1,0"))
                                                            (rule "commute_and" (formula "85") (term "1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "82") (term "1,0,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "17") (term "0"))
                                                            (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "151"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "andLeft" (formula "17"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "19") (term "0,1"))
                                                            (rule "replace_known_right" (formula "19") (term "0,0,1") (ifseqformula "152"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "Definition_axiom_for_elementsToReadOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "20") (term "2,0,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "20") (term "2,2,0,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "20") (term "3,2,0,1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "1,1,0"))
                                                            (rule "Definition_axiom_for_writtenElementsOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "20") (term "2,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "translateJavaAddInt" (formula "20") (term "0,3,0,1,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "20") (term "2,2,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "20") (term "0,0,0,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "20") (term "2,0,1,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "20") (term "3,2,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "20") (term "3,0,1,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "20") (term "1,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "20") (term "0,0,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "20") (term "3,0,1,2,0,1,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,3,0,1,2,0,1,0"))
                                                            (rule "polySimp_homoEq" (formula "20") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,0,0,2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "3,0,1,2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "1,2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,3,1,1,2,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,0,0,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,2,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "20") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "20") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,2,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,2,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "0,0,0,2,0,1,1,0"))
                                                            (rule "commute_and" (formula "145") (term "1,0,0,0"))
                                                            (rule "Contract_axiom_for_elementsToReadCountElement_in_BucketPointers" (formula "6") (term "0,0,1,1,0"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "113")) (ifInst ""  (formula "180")) (ifInst ""  (formula "178")) (ifInst ""  (formula "113")) (ifInst ""  (formula "115")) (ifInst ""  (formula "27")))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "Definition_axiom_for_elementsToReadOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "6") (term "2,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "6") (term "3,2,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "6") (term "2,2,1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "1,1,0"))
                                                            (rule "Contract_axiom_for_writtenElementsCountElement_in_BucketPointers" (formula "6") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "113")) (ifInst ""  (formula "180")) (ifInst ""  (formula "176")) (ifInst ""  (formula "178")) (ifInst ""  (formula "113")) (ifInst ""  (formula "115")) (ifInst ""  (formula "57")) (ifInst ""  (formula "27")))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "Definition_axiom_for_writtenElementsCountElement_in_de_wiesler_BucketPointers" (formula "6") (term "0,1,0") (inst "b=b"))
                                                            (rule "translateJavaCastInt" (formula "6") (term "0,1,0"))
                                                            (rule "applyEq" (formula "6") (term "1,0,1,0") (ifseqformula "53"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "4") (term "0"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "150"))
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "151")))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "commute_and" (formula "146") (term "1,0,0,1,0"))
                                                            (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "6") (term "0,1,1,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")) (ifInst ""  (formula "177")) (ifInst ""  (formula "180")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "27")))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "6") (term "0,0,1,1,0,1,0") (inst "i=i"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "expand_inInt" (formula "6") (term "1,0,0,0,1,1,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "6") (term "0,1,1,0,0,0,1,1,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "6") (term "1,0,1,0,0,0,1,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,1,0,0,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,0,1,1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6") (term "1,1,0,0,0,1,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,1,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,1,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,0,1,1,0,0,0,0,1,1,0,1,0"))
                                                            (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "16") (term "1,1,1,1,0") (inst "b=b_1"))
                                                            (rule "translateJavaCastInt" (formula "16") (term "1,1,1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "16") (term "1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "16") (term "0,1,1,0"))
                                                            (rule "applyEq" (formula "16") (term "1,1,0,1,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_sepPosMonomial" (formula "16") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "16") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "0,1,1,1,0"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "16") (term "1,4,0,2,1,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "16") (term "0,0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "16") (term "0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "0,0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "16") (term "0,1,1,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "177")) (ifInst ""  (formula "180")) (ifInst ""  (formula "27")))
                                                            (rule "wellFormedAnon" (formula "16") (term "1,0"))
                                                            (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "23")))
                                                            (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "17") (term "0,0,1,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "182")) (ifInst ""  (formula "181")) (ifInst ""  (formula "28")))
                                                            (rule "wellFormedAnon" (formula "17") (term "1,0"))
                                                            (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "25"))
                                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "16")))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "17") (term "1,3,0,0,1,1,0,1,0"))
                                                            (rule "translateJavaCastInt" (formula "17") (term "0,1,3,0,0,1,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "17") (term "0,1,3,0,0,1,1,0,1,0"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "17") (term "0,0,0,1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "17") (term "0,2,0,0,0,1,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "17") (term "0,0,2,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,0,2,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "0,2,0,0,0,1,0,1,0"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "17") (term "1,3,0,2,1,0,1,0"))
                                                            (rule "translateJavaCastInt" (formula "17") (term "0,1,3,0,2,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "17") (term "0,1,3,0,2,1,0,1,0"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "17") (term "1,4,0,0,1,1,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "17") (term "0,0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "17") (term "0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "17") (term "0,1,1,1,0,1,0") (inst "i=i"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "expand_inInt" (formula "17") (term "1,0,0,1,1,1,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0,1,1,1,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "17") (term "1,0,1,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "71") (term "1,1,1,1,0"))
                                                            (rule "translateJavaCastInt" (formula "71") (term "0,1,1,1,1,0"))
                                                            (rule "castedGetAny" (formula "71") (term "0,1,1,1,1,0"))
                                                            (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "71") (term "0,0,1,1,1,0"))
                                                             (builtin "One Step Simplification" (formula "71"))
                                                            (rule "translateJavaUnaryMinusInt" (formula "71") (term "1,0,0,1,1,1,0"))
                                                            (rule "neg_literal" (formula "71") (term "1,0,0,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "71") (term "0,0,0,0,1,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "71") (term "0,0,0,1,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "71") (term "0,0,0,1,1,1,0"))
                                                            (rule "mul_literals" (formula "71") (term "1,0,0,0,1,1,1,0"))
                                                            (rule "polySimp_addLiterals" (formula "71") (term "0,0,0,1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "71") (term "1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "71") (term "0,0,1,1,1,1,0"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "89") (term "1,3,2,2,1,1,1,0"))
                                                            (rule "translateJavaMulInt" (formula "89") (term "0,2,1,3,2,2,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "89") (term "0,2,1,3,2,2,1,1,1,0"))
                                                            (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "89") (term "1,2,1,1,1,0") (inst "i=i"))
                                                            (rule "polySimp_homoEq" (formula "89") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "89") (term "0,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "89") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "89") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "89") (term "0,1,1,0"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "33") (term "1,0,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "33") (term "0,1,0,0,1,0"))
                                                            (rule "translateJavaCastInt" (formula "33") (term "0,0,0,1,0,0,1,0"))
                                                            (rule "castedGetAny" (formula "33") (term "0,0,0,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "33") (term "0,1,0,0,1,0"))
                                                            (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "33") (term "0,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "translateJavaMod" (formula "33") (term "0,1,0,1,0"))
                                                            (rule "jmod_axiom" (formula "33") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "33") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,1,0"))
                                                            (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "96") (term "0"))
                                                             (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "115")) (ifInst ""  (formula "180")) (ifInst ""  (formula "115")) (ifInst ""  (formula "117")) (ifInst ""  (formula "28")))
                                                            (rule "wellFormedAnon" (formula "96") (term "1,0"))
                                                            (rule "wellFormedAnon" (formula "96") (term "0,1,0"))
                                                            (rule "replace_known_left" (formula "96") (term "0,0,1,0") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "23")) (ifInst ""  (formula "8")))
                                                            (rule "inEqSimp_ltToLeq" (formula "96") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "0,0"))
                                                            (rule "replace_known_left" (formula "96") (term "0,0") (ifseqformula "14"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "applyEq" (formula "96") (term "0,0,1") (ifseqformula "97"))
                                                            (rule "applyEq" (formula "96") (term "0,0,1,1") (ifseqformula "97"))
                                                            (rule "replace_known_left" (formula "96") (term "1,1") (ifseqformula "116"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "applyEq" (formula "96") (term "0,1,0,0") (ifseqformula "55"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "96") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "96") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "96") (term "0,1,0"))
                                                            (rule "replace_known_left" (formula "96") (term "0") (ifseqformula "10"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "elimGcdGeq_antec" (formula "96") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "leq_literals" (formula "96") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "96") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "96") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "96") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "96") (term "0,0"))
                                                            (rule "add_literals" (formula "96") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "96") (term "1,0,0"))
                                                            (rule "add_literals" (formula "96") (term "0,0"))
                                                            (rule "leq_literals" (formula "96") (term "0"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "97") (term "0"))
                                                            (rule "translateJavaSubInt" (formula "97") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "97") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "97") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "97") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "97") (term "1,1,0,0"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "38") (term "0") (ifseqformula "24") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "38") (term "1,0,1") (ifseqformula "39"))
                                                            (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "12"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "true_left" (formula "38"))
                                                            (rule "cut_direct" (formula "183") (term "1"))
                                                            (branch "CUT: result_1 <= 2147483647 + begin * -1 TRUE"
                                                                (builtin "One Step Simplification" (formula "184"))
                                                               (rule "inEqSimp_geqRight" (formula "184"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "99") (ifseqformula "1"))
                                                               (rule "mul_literals" (formula "99") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "99") (term "0"))
                                                               (rule "add_literals" (formula "99") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "99"))
                                                               (rule "polySimp_mulLiterals" (formula "99") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "99") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "99") (ifseqformula "61"))
                                                               (rule "qeq_literals" (formula "99") (term "0"))
                                                                (builtin "One Step Simplification" (formula "99"))
                                                               (rule "closeFalse" (formula "99"))
                                                            )
                                                            (branch "CUT: result_1 <= 2147483647 + begin * -1 FALSE"
                                                                (builtin "One Step Simplification" (formula "184"))
                                                               (rule "false_right" (formula "184"))
                                                               (rule "inEqSimp_leqRight" (formula "183"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "152"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "67"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                         (branch "classifier.equal_buckets = TRUE FALSE"
                                                            (rule "applyEq" (formula "36") (term "1,1,1,0,0,0,1,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "46") (term "1,1,1,0,0,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "35") (term "3,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "42") (term "0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "47") (term "1,1,1,0,0,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "46") (term "1,1,1,0,0,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "36") (term "1,1,1,0,0,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "45") (term "1,1,1,0,0,0,1,0") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "44") (term "0") (ifseqformula "33"))
                                                            (rule "inEqSimp_commuteLeq" (formula "44"))
                                                            (rule "applyEq" (formula "37") (term "1,0,2,0") (ifseqformula "33"))
                                                            (rule "eqSymm" (formula "37"))
                                                            (rule "applyEq" (formula "42") (term "1") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "37") (term "1,0,2,0") (ifseqformula "33"))
                                                            (rule "eqSymm" (formula "37"))
                                                            (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "46") (term "0,1,0,0,1,1,1,0") (ifseqformula "33"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "43"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "32"))
                                                            (rule "leq_literals" (formula "44") (term "0"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "98") (term "0"))
                                                            (rule "replace_known_right" (formula "98") (term "0,0") (ifseqformula "119"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "andLeft" (formula "98"))
                                                            (rule "andLeft" (formula "99"))
                                                            (rule "replace_known_left" (formula "102") (term "1,1,1,1,1") (ifseqformula "100"))
                                                             (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "98")) (ifInst ""  (formula "98")))
                                                            (rule "andLeft" (formula "102"))
                                                            (rule "andLeft" (formula "103"))
                                                            (rule "andLeft" (formula "102"))
                                                            (rule "replace_known_left" (formula "75") (term "1,1") (ifseqformula "100"))
                                                             (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "98")) (ifInst ""  (formula "98")))
                                                            (rule "true_left" (formula "75"))
                                                            (rule "replace_known_left" (formula "105") (term "1,0,1,1") (ifseqformula "102"))
                                                             (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "97")) (ifInst ""  (formula "97")) (ifInst ""  (formula "99")))
                                                            (rule "andLeft" (formula "105"))
                                                            (rule "andLeft" (formula "106"))
                                                            (rule "andLeft" (formula "105"))
                                                            (rule "andLeft" (formula "108"))
                                                            (rule "replace_known_left" (formula "110") (term "1,1,1,1,1") (ifseqformula "99"))
                                                             (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "97")) (ifInst ""  (formula "105")))
                                                            (rule "andLeft" (formula "110"))
                                                            (rule "andLeft" (formula "111"))
                                                            (rule "andLeft" (formula "110"))
                                                            (rule "andLeft" (formula "113"))
                                                            (rule "andLeft" (formula "110"))
                                                            (rule "inEqSimp_exactShadow3" (formula "114") (ifseqformula "102"))
                                                            (rule "polySimp_mulAssoc" (formula "114") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "114") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "114") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "114") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "114"))
                                                            (rule "polySimp_mulLiterals" (formula "114") (term "0"))
                                                            (rule "inEqSimp_subsumption4" (formula "114") (ifseqformula "52"))
                                                            (rule "greater_literals" (formula "114") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "114"))
                                                            (rule "mul_literals" (formula "114") (term "0,0"))
                                                            (rule "leq_literals" (formula "114") (term "0"))
                                                             (builtin "One Step Simplification" (formula "114"))
                                                            (rule "true_left" (formula "114"))
                                                            (rule "inEqSimp_exactShadow3" (formula "106") (ifseqformula "102"))
                                                            (rule "polySimp_mulComm0" (formula "106") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "106") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "106"))
                                                            (rule "polySimp_mulLiterals" (formula "106") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "106") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "113") (ifseqformula "102"))
                                                            (rule "polySimp_mulComm0" (formula "113") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "113") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "113"))
                                                            (rule "polySimp_mulLiterals" (formula "113") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "113") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "109") (ifseqformula "113"))
                                                            (rule "polySimp_mulComm0" (formula "109") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "109") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "109"))
                                                            (rule "polySimp_mulLiterals" (formula "109") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "109") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "112") (ifseqformula "113"))
                                                            (rule "polySimp_rightDist" (formula "112") (term "0,0"))
                                                            (rule "mul_literals" (formula "112") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "112") (term "0"))
                                                            (rule "add_literals" (formula "112") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "112"))
                                                            (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "112") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "83") (ifseqformula "112"))
                                                            (rule "leq_literals" (formula "83") (term "0"))
                                                             (builtin "One Step Simplification" (formula "83"))
                                                            (rule "true_left" (formula "83"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "99") (term "0,1,1,0"))
                                                            (rule "translateJavaMulInt" (formula "99") (term "0,0,2,0,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "99") (term "0,2,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "99") (term "0,0,2,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "99") (term "0,2,0,1,1,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_5" (formula "99") (term "0,1,1,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_6" (formula "99") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "99") (term "1,0"))
                                                            (rule "nnf_notAnd" (formula "127") (term "1,0,0"))
                                                            (rule "nnf_notAnd" (formula "127") (term "0,0,0"))
                                                            (rule "arrayLengthIsAShort" (formula "42") (term "0"))
                                                            (rule "expand_inShort" (formula "42"))
                                                            (rule "replace_short_MIN" (formula "42") (term "0,1"))
                                                            (rule "replace_short_MAX" (formula "42") (term "1,0"))
                                                            (rule "andLeft" (formula "42"))
                                                            (rule "inEqSimp_commuteLeq" (formula "43"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "42"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "32"))
                                                            (rule "leq_literals" (formula "44") (term "0"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                                                            (rule "leq_literals" (formula "43") (term "0"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "101") (term "1,1,0,1,1"))
                                                            (rule "translateJavaMulInt" (formula "101") (term "0,2,1,1,0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "101") (term "0,2,1,1,0,1,1"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "101") (term "1,1,0,1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "101") (term "1,1,0,1,1"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "101") (term "0,0,1,1"))
                                                            (rule "translateJavaAddInt" (formula "101") (term "0,2,0,0,1,1"))
                                                            (rule "translateJavaMulInt" (formula "101") (term "0,0,2,0,0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "101") (term "0,0,2,0,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "101") (term "0,2,0,0,1,1"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_4" (formula "101") (term "0,0,1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_6" (formula "101") (term "0,0,1,1"))
                                                            (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "101") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "98")) (ifInst ""  (formula "162")) (ifInst ""  (formula "98")) (ifInst ""  (formula "100")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnon" (formula "101") (term "1,0"))
                                                            (rule "wellFormedAnon" (formula "101") (term "0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "101") (term "2,1,1,0,0,1"))
                                                            (rule "translateJavaAddInt" (formula "101") (term "2,0,1,0,1"))
                                                            (rule "replace_known_left" (formula "101") (term "0,0,1,0") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                                            (rule "polySimp_addComm0" (formula "101") (term "2,0,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "101") (term "2,1,1,0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "101") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "101") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0"))
                                                            (rule "replace_known_left" (formula "101") (term "0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "101"))
                                                            (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,0,1"))
                                                            (rule "replace_known_left" (formula "101") (term "0,0,0,0,1") (ifseqformula "107"))
                                                             (builtin "One Step Simplification" (formula "101"))
                                                            (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "101") (term "1,0,1"))
                                                            (rule "applyEq" (formula "101") (term "2,0,1,0,1") (ifseqformula "50"))
                                                            (rule "replace_known_left" (formula "101") (term "1,0,1") (ifseqformula "117"))
                                                             (builtin "One Step Simplification" (formula "101"))
                                                            (rule "applyEq" (formula "101") (term "0,1,0,0") (ifseqformula "50"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "101") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "101") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "101") (term "0,0"))
                                                            (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "101"))
                                                            (rule "andLeft" (formula "101"))
                                                            (rule "andLeft" (formula "101"))
                                                            (rule "inEqSimp_exactShadow3" (formula "101") (ifseqformula "102"))
                                                            (rule "polySimp_mulComm0" (formula "101") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "101"))
                                                            (rule "polySimp_mulLiterals" (formula "101") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "101") (term "1"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "104") (term "0,0,0"))
                                                            (rule "translateJavaAddInt" (formula "104") (term "0,2,0,0,0"))
                                                            (rule "translateJavaMulInt" (formula "104") (term "0,0,2,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "104") (term "0,0,2,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "104") (term "0,2,0,0,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_5" (formula "104") (term "0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_6" (formula "104") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "104") (term "0,0"))
                                                            (rule "polySimp_homoEq" (formula "104"))
                                                            (rule "polySimp_addComm1" (formula "104") (term "0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "104") (term "0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "104"))
                                                            (rule "polySimp_mulComm0" (formula "104") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "104") (term "1"))
                                                            (rule "mul_literals" (formula "104") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "104") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "104") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "104") (term "0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "104") (term "1,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "104") (term "1,0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "104") (term "1,1,0,1,1"))
                                                            (rule "mul_literals" (formula "104") (term "0,1,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "104") (term "1,1,0,1,1"))
                                                            (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                                            (rule "nnf_imp2or" (formula "131") (term "0,1,0"))
                                                            (rule "inEqSimp_notGeq" (formula "132") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "132") (term "1,0,0,1,1,0,0"))
                                                            (rule "add_literals" (formula "132") (term "0,0,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "132") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "132") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "132") (term "1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "132") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "132") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "132") (term "1,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "132") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "132") (term "1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "132") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "132") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "132") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "132") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "132") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "132") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "132") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "132") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "132") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "132") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "132") (term "1,1,0,0,0"))
                                                            (rule "nnf_imp2or" (formula "16") (term "0,1,1,1"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "66") (term "1,3,0,1,0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "66") (term "0,2,1,3,0,1,0,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "66") (term "0,0,2,1,3,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "66") (term "0,0,2,1,3,0,1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "66") (term "0,2,1,3,0,1,0,0,1,0"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "66") (term "1,4,0,1,0,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "66") (term "0,2,1,4,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "66") (term "0,2,1,4,0,1,0,0,1,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "73"))
                                                            (rule "notLeft" (formula "73"))
                                                            (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "73") (inst "b=b"))
                                                             (builtin "One Step Simplification" (formula "73"))
                                                            (rule "expand_inInt" (formula "73") (term "1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "73") (term "0,1,1,0,0,1"))
                                                            (rule "replace_int_MAX" (formula "73") (term "1,0,1,0,0,1"))
                                                            (rule "andLeft" (formula "73"))
                                                            (rule "andLeft" (formula "73"))
                                                            (rule "andLeft" (formula "74"))
                                                            (rule "andLeft" (formula "73"))
                                                            (rule "andLeft" (formula "73"))
                                                            (rule "andLeft" (formula "73"))
                                                            (rule "andLeft" (formula "75"))
                                                            (rule "andLeft" (formula "75"))
                                                            (rule "andLeft" (formula "75"))
                                                            (rule "translateJavaCastInt" (formula "80") (term "0"))
                                                            (rule "translateJavaAddInt" (formula "79") (term "1"))
                                                            (rule "translateJavaMulInt" (formula "74") (term "0"))
                                                            (rule "translateJavaMulInt" (formula "73") (term "1"))
                                                            (rule "translateJavaCastInt" (formula "77") (term "0"))
                                                            (rule "translateJavaCastInt" (formula "76") (term "1"))
                                                            (rule "replace_known_left" (formula "16") (term "1,0,1,1") (ifseqformula "81"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "74") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "79") (term "1"))
                                                            (rule "castedGetAny" (formula "80") (term "0"))
                                                            (rule "castedGetAny" (formula "77") (term "0"))
                                                            (rule "castedGetAny" (formula "76") (term "1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "81") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "75"))
                                                            (rule "inEqSimp_commuteLeq" (formula "73"))
                                                            (rule "inEqSimp_commuteLeq" (formula "76"))
                                                            (rule "applyEq" (formula "76") (term "1") (ifseqformula "136"))
                                                            (rule "applyEq" (formula "76") (term "1,0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "75") (term "0") (ifseqformula "136"))
                                                            (rule "applyEq" (formula "83") (term "0") (ifseqformula "79"))
                                                            (rule "polySimp_homoEq" (formula "83"))
                                                            (rule "polySimp_mulComm0" (formula "83") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "83") (term "1,0"))
                                                            (rule "mul_literals" (formula "83") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "83") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "83") (term "0,0"))
                                                            (rule "add_literals" (formula "83") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "83") (term "0,0"))
                                                            (rule "applyEq" (formula "78") (term "0,0") (ifseqformula "136"))
                                                            (rule "replace_known_left" (formula "16") (term "0,1,1") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "74") (term "0,0") (ifseqformula "50"))
                                                            (rule "inEqSimp_commuteLeq" (formula "74"))
                                                            (rule "applyEq" (formula "80") (term "0,1,0,0,1,0,0,0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "75") (term "0") (ifseqformula "63"))
                                                            (rule "inEqSimp_homoInEq1" (formula "75"))
                                                            (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "75") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "75") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "75") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "75") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                            (rule "applyEq" (formula "76") (term "0") (ifseqformula "63"))
                                                            (rule "inEqSimp_homoInEq0" (formula "76"))
                                                            (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "76") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "76") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "76") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "76") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                            (rule "applyEq" (formula "82") (term "0,1,0") (ifseqformula "50"))
                                                            (rule "polySimp_pullOutFactor1" (formula "82") (term "0"))
                                                            (rule "add_literals" (formula "82") (term "1,0"))
                                                            (rule "times_zero_1" (formula "82") (term "0"))
                                                             (builtin "One Step Simplification" (formula "82"))
                                                            (rule "true_left" (formula "82"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                                            (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "75") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                            (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "75") (term "0"))
                                                            (rule "inEqSimp_subsumption6" (formula "74") (ifseqformula "130"))
                                                            (rule "greater_literals" (formula "74") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "mul_literals" (formula "74") (term "1,0"))
                                                            (rule "leq_literals" (formula "74") (term "0"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "true_left" (formula "74"))
                                                            (rule "inEqSimp_subsumption6" (formula "73") (ifseqformula "31"))
                                                            (rule "mul_literals" (formula "73") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "73") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "73"))
                                                            (rule "leq_literals" (formula "73") (term "0"))
                                                             (builtin "One Step Simplification" (formula "73"))
                                                            (rule "true_left" (formula "73"))
                                                            (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "88") (term "0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "1,0,0") (ifseqformula "84"))
                                                             (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "166")) (ifInst ""  (formula "89")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "88") (term "1,0") (ifseqformula "84"))
                                                            (rule "wellFormedAnon" (formula "88") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "88") (term "0,0,1,0"))
                                                            (rule "replace_known_left" (formula "88") (term "0,0,0,1,0") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "83")))
                                                            (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "88") (term "0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "88") (term "0,0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "88"))
                                                            (rule "applyEq" (formula "88") (term "0,1,0,0,0") (ifseqformula "50"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "88") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "88") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "88") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "88") (term "0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "88"))
                                                            (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "89") (term "0"))
                                                            (rule "translateJavaSubInt" (formula "89") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "89") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "89") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "89") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0"))
                                                            (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "97") (term "0,1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "1,0,0") (ifseqformula "84"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "167")) (ifInst ""  (formula "100")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "97") (term "1,0") (ifseqformula "84"))
                                                            (rule "wellFormedAnon" (formula "97") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "97") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "97") (term "2,1,1,0,0,1,1"))
                                                            (rule "translateJavaAddInt" (formula "97") (term "2,0,1,0,1,1"))
                                                            (rule "replace_known_left" (formula "97") (term "0,0,0,1,0") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")) (ifInst ""  (formula "83")))
                                                            (rule "polySimp_addComm0" (formula "97") (term "2,1,1,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "97") (term "1,0,0,1,1") (ifseqformula "95"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "polySimp_addComm0" (formula "97") (term "2,0,1,0,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "97") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "97") (term "0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "97") (term "1,0,0,1,1") (ifseqformula "94"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,1,1"))
                                                            (rule "replace_known_left" (formula "97") (term "0,0,1,1") (ifseqformula "92"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "97") (term "0,0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "applyEq" (formula "97") (term "1,0,0,1,1,1") (ifseqformula "132"))
                                                            (rule "replace_known_left" (formula "97") (term "0,1,1,1") (ifseqformula "98"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "applyEq" (formula "97") (term "2,0,0,1,1") (ifseqformula "50"))
                                                            (rule "replace_known_left" (formula "97") (term "0,1,1") (ifseqformula "96"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "applyEq" (formula "97") (term "2,0,0,1,1") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "97") (term "0,1,0,0,0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "97") (term "1,0,1,1") (ifseqformula "132"))
                                                            (rule "replace_known_left" (formula "97") (term "0,1,1") (ifseqformula "99"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "97") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "97") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "97") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "97") (term "0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "98") (term "1,1"))
                                                            (rule "eqSymm" (formula "98") (term "1"))
                                                            (rule "translateJavaCastInt" (formula "98") (term "0,0,1"))
                                                            (rule "castedGetAny" (formula "98") (term "0,0,1"))
                                                            (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "98") (term "0,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,0,0") (ifseqformula "84"))
                                                             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "168")) (ifInst ""  (formula "101")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "98") (term "1,0") (ifseqformula "84"))
                                                            (rule "wellFormedAnon" (formula "98") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "98") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "98") (term "2,0,1,0,1,1"))
                                                            (rule "translateJavaAddInt" (formula "98") (term "2,1,1,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "98") (term "1,1,0") (ifseqformula "83"))
                                                             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                                            (rule "polySimp_addComm0" (formula "98") (term "2,0,1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "98") (term "2,1,1,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "98") (term "1,0,0,1,1") (ifseqformula "95"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "inEqSimp_ltToLeq" (formula "98") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "98") (term "0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "98") (term "0,0,0,1,1") (ifseqformula "92"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,1,1"))
                                                            (rule "replace_known_left" (formula "98") (term "0,0,1,1") (ifseqformula "94"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "98") (term "0,0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "applyEq" (formula "98") (term "1,0,1,1,1,1") (ifseqformula "133"))
                                                            (rule "applyEq" (formula "98") (term "2,0,0,1,1") (ifseqformula "50"))
                                                            (rule "replace_known_left" (formula "98") (term "0,1,1") (ifseqformula "96"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "applyEq" (formula "98") (term "0,1,0,0,0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "98") (term "2,0,0,1,1,1") (ifseqformula "50"))
                                                            (rule "replace_known_left" (formula "98") (term "0,1,1,1") (ifseqformula "100"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "applyEq" (formula "98") (term "1,0,0,1,1") (ifseqformula "133"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "98") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "98") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "98") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "98") (term "0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "98"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "99") (term "0,0"))
                                                            (rule "translateJavaMulInt" (formula "99") (term "0,2,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "99") (term "0,2,0,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "99") (term "0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "99") (term "0,0"))
                                                            (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "96") (term "1"))
                                                             (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "169")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1,0") (ifseqformula "84"))
                                                             (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "96") (term "1,0") (ifseqformula "84"))
                                                            (rule "wellFormedAnon" (formula "96") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "96") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "96") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "translateJavaSubInt" (formula "96") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "96") (term "1,1,0") (ifseqformula "83"))
                                                             (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                                            (rule "polySimp_elimSub" (formula "96") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "mul_literals" (formula "96") (term "1,2,0,1,0,1,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "add_literals" (formula "96") (term "0,2,1,1,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "add_literals" (formula "96") (term "0,2,0,1,0,1,1,1,1,1"))
                                                            (rule "add_zero_left" (formula "96") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,1,1,1,1,1"))
                                                            (rule "add_zero_right" (formula "96") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,1,1,1,1,1"))
                                                            (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,1,1,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "add_literals" (formula "96") (term "0,0,0,0,0,1,1,1,1,1"))
                                                            (rule "add_zero_left" (formula "96") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,1,1,1,1"))
                                                            (rule "add_literals" (formula "96") (term "0,0,0,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,1,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "96") (term "1,0,1,1,1,1,1") (ifseqformula "93"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "inEqSimp_homoInEq0" (formula "96") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "96") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "96") (term "0,0,0,0"))
                                                            (rule "applyEq" (formula "96") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "96") (term "0,1,0,0") (ifseqformula "50"))
                                                            (rule "replace_known_left" (formula "96") (term "1,0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "applyEq" (formula "96") (term "2,0,1,0,0,1,1") (ifseqformula "50"))
                                                            (rule "replace_known_left" (formula "96") (term "1,0,0,1,1") (ifseqformula "97"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "applyEq" (formula "96") (term "2,0,1,0,1,1") (ifseqformula "50"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0"))
                                                            (rule "mul_literals" (formula "96") (term "1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "96") (term "0,0,1,1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "0,0,0,1,1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "96") (term "0,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "96") (term "0,0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "96") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "97") (term "0"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "170")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "1,0") (ifseqformula "84"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "97") (term "1,0") (ifseqformula "84"))
                                                            (rule "wellFormedAnon" (formula "97") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "97") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "97") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "translateJavaSubInt" (formula "97") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "97") (term "1,0,0,1,0") (ifseqformula "20"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "21")) (ifInst ""  (formula "7")) (ifInst ""  (formula "83")))
                                                            (rule "polySimp_elimSub" (formula "97") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "mul_literals" (formula "97") (term "1,2,0,1,0,1,1,1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "97") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "97") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,1,1,1,1,1"))
                                                            (rule "add_zero_right" (formula "97") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "97") (term "0,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,1,1,1,1"))
                                                            (rule "applyEq" (formula "97") (term "0,1,0,0,0,1,1,1,1") (ifseqformula "50"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "97") (term "0,0,0,1,1,1,1"))
                                                            (rule "add_literals" (formula "97") (term "1,1,0,0,0,1,1,1,1"))
                                                            (rule "times_zero_1" (formula "97") (term "1,0,0,0,1,1,1,1"))
                                                            (rule "add_zero_right" (formula "97") (term "0,0,0,1,1,1,1"))
                                                            (rule "leq_literals" (formula "97") (term "0,0,1,1,1,1"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "applyEq" (formula "97") (term "2,0,1,0,1,1") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "97") (term "0,1,0,0,1,1,1,1") (ifseqformula "50"))
                                                            (rule "inEqSimp_homoInEq1" (formula "97") (term "1,0,0,1,1,1,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "97") (term "0,1,0,0,1,1,1,1"))
                                                            (rule "add_literals" (formula "97") (term "1,0,1,0,0,1,1,1,1"))
                                                            (rule "times_zero_1" (formula "97") (term "0,1,0,0,1,1,1,1"))
                                                            (rule "leq_literals" (formula "97") (term "1,0,0,1,1,1,1"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "applyEq" (formula "97") (term "2,0,1,0,0,1,1") (ifseqformula "50"))
                                                            (rule "inEqSimp_homoInEq1" (formula "97") (term "1,0,0,1,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "97") (term "0,1,0,0,1,1"))
                                                            (rule "add_literals" (formula "97") (term "1,0,1,0,0,1,1"))
                                                            (rule "times_zero_1" (formula "97") (term "0,1,0,0,1,1"))
                                                            (rule "leq_literals" (formula "97") (term "1,0,0,1,1"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "applyEq" (formula "97") (term "0,1,0,0") (ifseqformula "50"))
                                                            (rule "inEqSimp_homoInEq1" (formula "97") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "97") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "97") (term "1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "97") (term "0,1,0,0"))
                                                            (rule "leq_literals" (formula "97") (term "1,0,0"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "97") (term "0,0,1,1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "97") (term "0,0,0,1,1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "97") (term "0,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "97") (term "0,0") (ifseqformula "31"))
                                                            (rule "leq_literals" (formula "97") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "inEqSimp_subsumption1" (formula "97") (term "0,0,1,1,1,1") (ifseqformula "31"))
                                                            (rule "leq_literals" (formula "97") (term "0,0,0,1,1,1,1"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "98") (term "1"))
                                                            (rule "translateJavaCastInt" (formula "98") (term "0,1"))
                                                            (rule "castedGetAny" (formula "98") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "98"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "102") (term "0"))
                                                            (rule "translateJavaCastInt" (formula "102") (term "0,0"))
                                                            (rule "castedGetAny" (formula "102") (term "0,0"))
                                                            (rule "applyEq" (formula "102") (term "0,0") (ifseqformula "63"))
                                                            (rule "inEqSimp_exactShadow3" (formula "102") (ifseqformula "70"))
                                                            (rule "polySimp_mulAssoc" (formula "102") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "102") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "102") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "102") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "102") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "102") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "102"))
                                                            (rule "polySimp_mulComm0" (formula "102") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "102") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "102") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "102") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "102") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "102") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "102") (term "0,0,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "102") (ifseqformula "65"))
                                                            (rule "inEqSimp_homoInEq0" (formula "102") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "102") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "102") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "102") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "102") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "102") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "102") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "102") (term "0,0"))
                                                            (rule "add_literals" (formula "102") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "102") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "102") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "102") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "102") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "102") (term "0,0"))
                                                            (rule "add_literals" (formula "102") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "102") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "102") (term "0,0"))
                                                            (rule "qeq_literals" (formula "102") (term "0"))
                                                             (builtin "One Step Simplification" (formula "102"))
                                                            (rule "true_left" (formula "102"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "103") (term "0,0"))
                                                            (rule "translateJavaMulInt" (formula "103") (term "0,2,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "103") (term "0,2,0,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "103") (term "0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "103") (term "0,0"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "95") (term "0"))
                                                            (rule "translateJavaMulInt" (formula "95") (term "0,2,0"))
                                                            (rule "polySimp_mulComm0" (formula "95") (term "0,2,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_0" (formula "95") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_1" (formula "95") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "95"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "94") (term "1"))
                                                            (rule "translateJavaCastInt" (formula "94") (term "0,1"))
                                                            (rule "castedGetAny" (formula "94") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "94"))
                                                            (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "92") (term "0"))
                                                             (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "171")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "1,0") (ifseqformula "84"))
                                                             (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "92") (term "1,0") (ifseqformula "84"))
                                                            (rule "wellFormedAnon" (formula "92") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "92") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "92") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "translateJavaSubInt" (formula "92") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "92") (term "1,0,0,1,0") (ifseqformula "20"))
                                                             (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "21")) (ifInst ""  (formula "7")) (ifInst ""  (formula "83")))
                                                            (rule "polySimp_elimSub" (formula "92") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "mul_literals" (formula "92") (term "1,2,0,1,0,1,1,1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "92") (term "2,1,1,0,1,1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "92") (term "2,0,1,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,1,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "92") (term "0,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0,1,1,1,1,1"))
                                                            (rule "add_zero_right" (formula "92") (term "0,0,0,0,1,1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "92") (term "1,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "92") (term "0,0,0,1,1"))
                                                            (rule "replace_known_left" (formula "92") (term "0,0,0,1,1") (ifseqformula "93"))
                                                             (builtin "One Step Simplification" (formula "92"))
                                                            (rule "inEqSimp_commuteLeq" (formula "92") (term "1,0,0,1,1,1,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "92") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "92") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "92") (term "0,0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "92"))
                                                            (rule "inEqSimp_commuteLeq" (formula "92") (term "1,0,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "92") (term "1,0,1,1,1,1") (ifseqformula "94"))
                                                             (builtin "One Step Simplification" (formula "92"))
                                                            (rule "applyEq" (formula "92") (term "0,0,0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "92") (term "2,0,1,0,1,1") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "92") (term "2,0,0,0,1,1") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "92") (term "0,1,0,0,1,1,1,1") (ifseqformula "50"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "92") (term "0,0,0,1,1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "92") (term "0,0,0,0,1,1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "92") (term "0,0,0,0,1,1,1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "92") (term "1,0,0,1,1,1,1") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq0" (formula "92") (term "0,1,0,0,1,1,1,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "92") (term "0,0,1,0,0,1,1,1,1"))
                                                            (rule "add_literals" (formula "92") (term "1,1,0,0,1,0,0,1,1,1,1"))
                                                            (rule "times_zero_1" (formula "92") (term "1,0,0,1,0,0,1,1,1,1"))
                                                            (rule "add_zero_right" (formula "92") (term "0,0,1,0,0,1,1,1,1"))
                                                            (rule "qeq_literals" (formula "92") (term "0,1,0,0,1,1,1,1"))
                                                             (builtin "One Step Simplification" (formula "92"))
                                                            (rule "inEqSimp_subsumption1" (formula "92") (term "0,0") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq0" (formula "92") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "92") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "92") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "92") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "92") (term "0,0,0,0"))
                                                            (rule "qeq_literals" (formula "92") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "92"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "93") (term "0"))
                                                            (rule "translateJavaCastInt" (formula "93") (term "0,0"))
                                                            (rule "castedGetAny" (formula "93") (term "0,0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "93") (ifseqformula "95"))
                                                            (rule "mul_literals" (formula "93") (term "0,0"))
                                                            (rule "add_zero_left" (formula "93") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "94") (ifseqformula "123"))
                                                            (rule "mul_literals" (formula "94") (term "0,0"))
                                                            (rule "add_zero_left" (formula "94") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "94"))
                                                            (rule "mul_literals" (formula "94") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "86") (ifseqformula "94"))
                                                            (rule "leq_literals" (formula "86") (term "0"))
                                                             (builtin "One Step Simplification" (formula "86"))
                                                            (rule "true_left" (formula "86"))
                                                            (rule "inEqSimp_exactShadow3" (formula "93") (ifseqformula "142"))
                                                            (rule "mul_literals" (formula "93") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "93") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "93") (term "0,0"))
                                                            (rule "add_literals" (formula "93") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "93") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "93"))
                                                            (rule "polySimp_mulLiterals" (formula "93") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "93") (term "1"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "0"))
                                                            (rule "translateJavaCastInt" (formula "95") (term "0,0"))
                                                            (rule "castedGetAny" (formula "95") (term "0,0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "95") (ifseqformula "100"))
                                                            (rule "polySimp_mulComm0" (formula "95") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "95"))
                                                            (rule "polySimp_mulLiterals" (formula "95") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "95") (term "1"))
                                                            (rule "replace_known_left" (formula "91") (term "0,0,1,1") (ifseqformula "95"))
                                                             (builtin "One Step Simplification" (formula "91"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "96") (term "1"))
                                                            (rule "translateJavaCastInt" (formula "96") (term "0,1"))
                                                            (rule "castedGetAny" (formula "96") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "96") (ifseqformula "101"))
                                                            (rule "polySimp_mulComm0" (formula "96") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "96") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "96"))
                                                            (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "96") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "94") (ifseqformula "96"))
                                                            (rule "mul_literals" (formula "94") (term "0,0"))
                                                            (rule "add_zero_left" (formula "94") (term "0"))
                                                            (rule "replace_known_left" (formula "102") (term "0,0,1,1") (ifseqformula "94"))
                                                             (builtin "One Step Simplification" (formula "102"))
                                                            (rule "nnf_imp2or" (formula "5") (term "0,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "82") (term "0,0"))
                                                            (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "77") (term "0,0,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "1,0,0") (ifseqformula "85"))
                                                             (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "176")) (ifInst ""  (formula "25")))
                                                            (rule "wellFormedAnonEQ" (formula "77") (term "1,0") (ifseqformula "85"))
                                                            (rule "wellFormedAnon" (formula "77") (term "0,1,0"))
                                                            (rule "wellFormedAnon" (formula "77") (term "0,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "77") (term "2,1,1,0,0,1,1"))
                                                            (rule "translateJavaAddInt" (formula "77") (term "2,0,1,0,1,1"))
                                                            (rule "replace_known_left" (formula "77") (term "1,1,0") (ifseqformula "84"))
                                                             (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                                            (rule "polySimp_addComm0" (formula "77") (term "2,0,1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "77") (term "2,1,1,0,0,1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "77") (term "0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "77") (term "0,0,0") (ifseqformula "13"))
                                                             (builtin "One Step Simplification" (formula "77"))
                                                            (rule "inEqSimp_commuteLeq" (formula "77") (term "1,0,1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "77") (term "1,0,0,0,1,1"))
                                                            (rule "applyEq" (formula "77") (term "2,0,1,0,1,1") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "77") (term "0,1,0,0,0") (ifseqformula "50"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "77") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "77") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "77") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "77") (term "0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "77"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "78") (term "0,0,0"))
                                                            (rule "translateJavaAddInt" (formula "78") (term "0,2,0,0,0"))
                                                            (rule "translateJavaMulInt" (formula "78") (term "0,0,2,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "0,0,2,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "78") (term "0,2,0,0,0"))
                                                            (rule "replaceKnownSelect_taclet1000211201200101012_4" (formula "78") (term "0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1000211201200101012_6" (formula "78") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "78") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "78") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0"))
                                                            (rule "nnf_imp2or" (formula "15") (term "0,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "30") (term "1,0,0"))
                                                            (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "144") (term "1,0,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "144") (term "0,1,0,0,1,0"))
                                                            (rule "translateJavaCastInt" (formula "144") (term "0,0,0,1,0,0,1,0"))
                                                            (rule "castedGetAny" (formula "144") (term "0,0,0,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "144") (term "0,1,0,0,1,0"))
                                                            (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "144") (term "0,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "144"))
                                                            (rule "translateJavaMod" (formula "144") (term "0,1,0,1,0"))
                                                            (rule "jmod_axiom" (formula "144") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "144") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "144") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "144") (term "0,1,0,1,0"))
                                                            (rule "commute_and" (formula "82") (term "1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "79") (term "0,0,0"))
                                                            (rule "nnf_notAnd" (formula "79") (term "1,0,0"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "17") (term "0,1"))
                                                            (rule "replace_known_right" (formula "17") (term "0,0,1") (ifseqformula "151"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "18") (term "0,1"))
                                                            (rule "replace_known_right" (formula "18") (term "0,0,1") (ifseqformula "151"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "Definition_axiom_for_elementsToReadOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "19") (term "2,0,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "19") (term "3,2,0,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "19") (term "2,2,0,1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
                                                            (rule "Definition_axiom_for_writtenElementsOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "19") (term "2,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "translateJavaAddInt" (formula "19") (term "1,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "19") (term "0,0,0,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "19") (term "2,2,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "19") (term "3,2,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "19") (term "0,3,0,1,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "19") (term "2,0,1,2,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "19") (term "3,0,1,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "0,0,0,2,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "19") (term "3,0,1,2,0,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,3,0,1,2,0,1,0"))
                                                            (rule "polySimp_homoEq" (formula "19") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "3,0,1,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,0,0,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,3,0,1,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "1,2,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,2,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,2,0,0,0,0,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "19") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "19") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,2,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,2,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0,0,0,2,0,1,1,0"))
                                                            (rule "Definition_axiom_for_elementsToReadOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "6") (term "2,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "6") (term "3,2,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "6") (term "2,2,1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "1,1,0"))
                                                            (rule "Contract_axiom_for_writtenElementsCountElement_in_BucketPointers" (formula "6") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "111")) (ifInst ""  (formula "179")) (ifInst ""  (formula "175")) (ifInst ""  (formula "177")) (ifInst ""  (formula "111")) (ifInst ""  (formula "113")) (ifInst ""  (formula "54")) (ifInst ""  (formula "26")))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "Definition_axiom_for_writtenElementsCountElement_in_de_wiesler_BucketPointers" (formula "6") (term "0,1,0") (inst "b=b"))
                                                            (rule "translateJavaCastInt" (formula "6") (term "0,1,0"))
                                                            (rule "applyEq" (formula "6") (term "1,0,1,0") (ifseqformula "50"))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "4") (term "0"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "149"))
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "150")))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "6") (term "0,0,1,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "6") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "6") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "6") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,0,1,1,1,0"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "6") (term "1,4,0,2,1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "6") (term "0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "6") (term "0,0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "6") (term "0,1,1,0") (inst "b=b_1"))
                                                            (rule "translateJavaCastInt" (formula "6") (term "0,1,1,0"))
                                                            (rule "applyEq" (formula "6") (term "1,0,1,1,0") (ifseqformula "51"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "6") (term "1,4,0,0,1,1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "6") (term "0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "6") (term "0,0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,0,1,0"))
                                                            (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "6") (term "1,1,1,1,0") (inst "b=b_1"))
                                                            (rule "translateJavaCastInt" (formula "6") (term "1,1,1,1,0"))
                                                            (rule "applyEq" (formula "6") (term "1,1,1,1,1,0") (ifseqformula "51"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "6") (term "0,0,0,1,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "6") (term "0,0,2,0,0,0,1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "6") (term "0,2,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,0,2,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,2,0,0,0,1,0,1,0"))
                                                            (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "6") (term "0,1,1,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")) (ifInst ""  (formula "176")) (ifInst ""  (formula "179")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "26")))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "6") (term "1,3,0,0,1,1,0,1,0"))
                                                            (rule "translateJavaCastInt" (formula "6") (term "0,1,3,0,0,1,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "6") (term "0,1,3,0,0,1,1,0,1,0"))
                                                            (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "6") (term "0,1,1,1,0,1,0") (inst "i=i"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "expand_inInt" (formula "6") (term "1,0,0,1,1,1,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "6") (term "1,0,1,0,0,1,1,1,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "6") (term "0,1,1,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6") (term "1,1,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "1,1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "16") (term "0,1,1,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "176")) (ifInst ""  (formula "179")) (ifInst ""  (formula "26")))
                                                            (rule "wellFormedAnon" (formula "16") (term "1,0"))
                                                            (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "23"))
                                                             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")))
                                                            (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0,1,0"))
                                                            (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "17") (term "0,0,1,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "181")) (ifInst ""  (formula "180")) (ifInst ""  (formula "27")))
                                                            (rule "wellFormedAnon" (formula "17") (term "1,0"))
                                                            (rule "replace_known_left" (formula "17") (term "1,1,0") (ifseqformula "23"))
                                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "16")))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "17") (term "1,3,0,2,1,0,1,0"))
                                                            (rule "translateJavaCastInt" (formula "17") (term "0,1,3,0,2,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "17") (term "0,1,3,0,2,1,0,1,0"))
                                                            (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "17") (term "0,0,1,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "17") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "17") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "17") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0,0,1,1,1,0"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "17") (term "1,3,0,0,1,1,0,1,0"))
                                                            (rule "translateJavaCastInt" (formula "17") (term "0,1,3,0,0,1,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "17") (term "0,1,3,0,0,1,1,0,1,0"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "17") (term "1,4,0,0,1,1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "17") (term "0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "17") (term "0,0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "0,2,1,4,0,0,1,1,0,1,0"))
                                                            (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "17") (term "0,1,1,0") (inst "b=b_1"))
                                                            (rule "translateJavaCastInt" (formula "17") (term "0,1,1,0"))
                                                            (rule "applyEq" (formula "17") (term "1,0,1,1,0") (ifseqformula "52"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "17") (term "1,4,0,2,1,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "17") (term "0,0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "17") (term "0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "0,2,1,4,0,2,1,0,1,0"))
                                                            (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "17") (term "1,1,1,1,0") (inst "b=b_1"))
                                                            (rule "translateJavaCastInt" (formula "17") (term "1,1,1,1,0"))
                                                            (rule "applyEq" (formula "17") (term "1,1,1,1,1,0") (ifseqformula "52"))
                                                            (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "17") (term "0,0,0,1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "17") (term "0,2,0,0,0,1,0,1,0"))
                                                            (rule "translateJavaMulInt" (formula "17") (term "0,0,2,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,0,2,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "0,2,0,0,0,1,0,1,0"))
                                                            (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "17") (term "0,1,1,1,0,1,0") (inst "i=i"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "expand_inInt" (formula "17") (term "1,0,0,1,1,1,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "17") (term "1,0,1,0,0,1,1,1,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0,1,1,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,1,0,0,0,1,1,1,0,1,0"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "68") (term "1,1,1,1,0"))
                                                            (rule "translateJavaCastInt" (formula "68") (term "0,1,1,1,1,0"))
                                                            (rule "castedGetAny" (formula "68") (term "0,1,1,1,1,0"))
                                                            (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "68") (term "0,0,1,1,1,0"))
                                                             (builtin "One Step Simplification" (formula "68"))
                                                            (rule "translateJavaUnaryMinusInt" (formula "68") (term "1,0,0,1,1,1,0"))
                                                            (rule "neg_literal" (formula "68") (term "1,0,0,1,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "68") (term "0,0,0,0,1,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "68") (term "0,0,0,1,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "68") (term "0,0,0,1,1,1,0"))
                                                            (rule "mul_literals" (formula "68") (term "1,0,0,0,1,1,1,0"))
                                                            (rule "polySimp_addLiterals" (formula "68") (term "0,0,0,1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "68") (term "1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "68") (term "0,0,1,1,1,1,0"))
                                                            (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "85") (term "1,3,2,2,1,1,1,0"))
                                                            (rule "translateJavaMulInt" (formula "85") (term "0,2,1,3,2,2,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "0,2,1,3,2,2,1,1,1,0"))
                                                            (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "85") (term "0,1,1,0") (inst "i=i"))
                                                            (rule "polySimp_homoEq" (formula "85") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "85") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "85") (term "0,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "85") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "85") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "0,1,1,0"))
                                                            (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "32") (term "1,0,1,0,0,1,0"))
                                                            (rule "translateJavaCastInt" (formula "32") (term "0,1,0,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "32") (term "0,1,0,0,1,0"))
                                                            (rule "castedGetAny" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "32") (term "0,1,0,0,1,0"))
                                                            (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "32") (term "0,1,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "translateJavaMod" (formula "32") (term "0,1,0,1,0"))
                                                            (rule "jmod_axiom" (formula "32") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "32") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,1,0"))
                                                            (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "93") (term "0"))
                                                             (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "113")) (ifInst ""  (formula "179")) (ifInst ""  (formula "113")) (ifInst ""  (formula "115")) (ifInst ""  (formula "27")))
                                                            (rule "wellFormedAnon" (formula "93") (term "1,0"))
                                                            (rule "wellFormedAnon" (formula "93") (term "0,1,0"))
                                                            (rule "replace_known_left" (formula "93") (term "1,1,0") (ifseqformula "8"))
                                                             (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "23")) (ifInst ""  (formula "22")))
                                                            (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "93") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "93") (term "0,0"))
                                                            (rule "replace_known_left" (formula "93") (term "0,0") (ifseqformula "14"))
                                                             (builtin "One Step Simplification" (formula "93"))
                                                            (rule "applyEq" (formula "93") (term "0,0,1,1") (ifseqformula "94"))
                                                            (rule "replace_known_left" (formula "93") (term "1,1") (ifseqformula "114"))
                                                             (builtin "One Step Simplification" (formula "93"))
                                                            (rule "applyEq" (formula "93") (term "0,1") (ifseqformula "94"))
                                                            (rule "applyEq" (formula "93") (term "0,1,0,0") (ifseqformula "52"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "93") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "93") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "93") (term "0,0"))
                                                            (rule "replace_known_left" (formula "93") (term "0") (ifseqformula "10"))
                                                             (builtin "One Step Simplification" (formula "93"))
                                                            (rule "elimGcdGeq_antec" (formula "93") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "93") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "93"))
                                                            (rule "times_zero_1" (formula "93") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0"))
                                                            (rule "add_literals" (formula "93") (term "0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "93") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "93") (term "0,0"))
                                                            (rule "add_literals" (formula "93") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "93") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "93") (term "0,0"))
                                                            (rule "leq_literals" (formula "93") (term "0"))
                                                             (builtin "One Step Simplification" (formula "93"))
                                                            (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "94") (term "0"))
                                                            (rule "translateJavaSubInt" (formula "94") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "94") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "94") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "94") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "36") (term "0") (ifseqformula "23") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "37"))
                                                            (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "154"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "37"))
                                                            (rule "cut_direct" (formula "182") (term "1"))
                                                            (branch "CUT: result_1 <= 2147483647 + begin * -1 TRUE"
                                                                (builtin "One Step Simplification" (formula "183"))
                                                               (rule "inEqSimp_geqRight" (formula "183"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "98") (ifseqformula "1"))
                                                               (rule "mul_literals" (formula "98") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "98") (term "0"))
                                                               (rule "add_literals" (formula "98") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "98"))
                                                               (rule "polySimp_mulLiterals" (formula "98") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "98") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "98") (ifseqformula "58"))
                                                               (rule "qeq_literals" (formula "98") (term "0"))
                                                                (builtin "One Step Simplification" (formula "98"))
                                                               (rule "closeFalse" (formula "98"))
                                                            )
                                                            (branch "CUT: result_1 <= 2147483647 + begin * -1 FALSE"
                                                                (builtin "One Step Simplification" (formula "183"))
                                                               (rule "false_right" (formula "183"))
                                                               (rule "inEqSimp_leqRight" (formula "182"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "132"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "1"))
                                                               (rule "leq_literals" (formula "59") (term "0"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "true_left" (formula "59"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "150"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "64"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (ifseqformula "63"))
                                                       (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "28")))
                                                      (rule "closeTrue" (formula "101"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "expand_inInt" (formula "101"))
                                                   (rule "replace_int_MIN" (formula "101") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "101") (term "1,0"))
                                                   (rule "leq_literals" (formula "101") (term "1"))
                                                    (builtin "One Step Simplification" (formula "101"))
                                                   (rule "leq_literals" (formula "101"))
                                                   (rule "closeTrue" (formula "101"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "expand_inInt" (formula "101"))
                                                (rule "replace_int_MIN" (formula "101") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "101") (term "1,0"))
                                                (rule "leq_literals" (formula "101") (term "1"))
                                                 (builtin "One Step Simplification" (formula "101"))
                                                (rule "leq_literals" (formula "101"))
                                                (rule "closeTrue" (formula "101"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Exceptional Post (decrement_read)"
                                  (builtin "One Step Simplification" (formula "63"))
                                  (builtin "One Step Simplification" (formula "91"))
                                 (rule "andLeft" (formula "63"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "1,0") (ifseqformula "63"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "andLeft" (formula "64"))
                                 (rule "andLeft" (formula "64"))
                                 (rule "andLeft" (formula "66"))
                                 (rule "notLeft" (formula "64"))
                                 (rule "close" (formula "67") (ifseqformula "66"))
                              )
                              (branch "Pre (decrement_read)"
                                  (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "2")) (ifInst ""  (formula "27")))
                                 (rule "wellFormedAnon" (formula "89") (term "0"))
                                 (rule "wellFormedAnon" (formula "89") (term "0,0"))
                                 (rule "expand_inInt" (formula "89") (term "1"))
                                 (rule "replace_int_MIN" (formula "89") (term "0,1,1"))
                                 (rule "replace_int_MAX" (formula "89") (term "1,0,1"))
                                 (rule "replace_known_left" (formula "89") (term "1,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "89") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "46"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_subsumption1" (formula "88") (term "1") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "88") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "88"))
                                 (rule "inEqSimp_leqRight" (formula "88"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "40"))
                                 (rule "leq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                 (rule "leq_literals" (formula "42") (term "0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "22"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "42") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "42"))
                                 (rule "leq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "49"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0"))
                                 (rule "add_literals" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "closeFalse" (formula "9"))
                              )
                              (branch "Null reference (_bucket_pointers = null)"
                                  (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "86")))
                                 (rule "closeTrue" (formula "89"))
                              )
                           )
                        )
                     )
                     (branch "if x_4 false"
                         (builtin "One Step Simplification" (formula "86"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "apply_eq_boolean" (formula "55") (term "1") (ifseqformula "58"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "notLeft" (formula "55"))
                        (rule "elim_double_block_2" (formula "86") (term "1"))
                        (rule "blockBreak" (formula "86") (term "1"))
                        (rule "lsBreak" (formula "86") (term "1"))
                        (rule "assignment" (formula "86") (term "1"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "preincrement" (formula "86") (term "1"))
                        (rule "compound_int_cast_expression" (formula "86") (term "1") (inst "#v=x_2"))
                        (rule "variableDeclarationAssign" (formula "86") (term "1"))
                        (rule "variableDeclaration" (formula "86") (term "1") (newnames "x_5"))
                        (rule "remove_parentheses_right" (formula "86") (term "1"))
                        (rule "assignmentAdditionInt" (formula "86") (term "1"))
                        (branch "Overflow check"
                            (builtin "One Step Simplification" (formula "86"))
                           (rule "expand_inInt" (formula "86"))
                           (rule "replace_int_MIN" (formula "86") (term "0,1"))
                           (rule "replace_int_MAX" (formula "86") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "86") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "86") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "57"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "46"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "86") (term "1"))
                           (rule "mul_literals" (formula "86") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "86") (term "0,1"))
                           (rule "add_literals" (formula "86") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "86") (term "0"))
                           (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "86") (term "1,0,0"))
                           (rule "mul_literals" (formula "86") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "86") (term "0,0"))
                           (rule "add_literals" (formula "86") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1"))
                           (rule "mul_literals" (formula "86") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "86") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "86") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "86") (term "0,0"))
                           (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "39"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "42"))
                           (rule "leq_literals" (formula "41") (term "0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "inEqSimp_subsumption1" (formula "83") (term "1") (ifseqformula "12"))
                           (rule "leq_literals" (formula "83") (term "0,1"))
                            (builtin "One Step Simplification" (formula "83"))
                           (rule "inEqSimp_leqRight" (formula "83"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                           (rule "leq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "40"))
                           (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "42") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                           (rule "polySimp_elimOne" (formula "42") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "42"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "43"))
                           (rule "mul_literals" (formula "22") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "mul_literals" (formula "22") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "38"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "49"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                           (rule "polySimp_elimOne" (formula "9") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "closeFalse" (formula "9"))
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "86"))
                           (rule "translateJavaAddInt" (formula "86") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "86") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "86") (term "1"))
                           (rule "assignment" (formula "86") (term "1"))
                            (builtin "One Step Simplification" (formula "86"))
                           (rule "blockEmpty" (formula "86") (term "1"))
                           (rule "lsContinue" (formula "86") (term "1"))
                            (builtin "One Step Simplification" (formula "86"))
                           (rule "polySimp_mulComm0" (formula "86") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "86") (term "0,0"))
                           (rule "mul_literals" (formula "86") (term "0,0,0"))
                           (rule "precOfInt" (formula "86"))
                           (rule "inEqSimp_geqRight" (formula "57"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "86") (term "1"))
                           (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1"))
                           (rule "polySimp_mulAssoc" (formula "86") (term "0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "86") (term "0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "86") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "86") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "86") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "86") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "86") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "86") (term "0,1"))
                           (rule "add_literals" (formula "86") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "86") (term "1,0,1"))
                           (rule "add_zero_right" (formula "86") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "86") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "86") (term "0,0,1"))
                           (rule "add_literals" (formula "86") (term "0,0,0,1"))
                           (rule "add_zero_left" (formula "86") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor1" (formula "86") (term "0,1"))
                           (rule "add_literals" (formula "86") (term "1,0,1"))
                           (rule "times_zero_1" (formula "86") (term "0,1"))
                           (rule "leq_literals" (formula "86") (term "1"))
                            (builtin "One Step Simplification" (formula "86"))
                           (rule "inEqSimp_leqRight" (formula "86"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "47"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "47") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                           (rule "polySimp_elimOne" (formula "9") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                           (rule "polySimp_elimOne" (formula "47") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "45"))
                           (rule "leq_literals" (formula "44") (term "0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "true_left" (formula "44"))
                           (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                           (rule "andLeft" (formula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "9"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,1,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0"))
                           (rule "add_zero_right" (formula "9") (term "0"))
                           (rule "leq_literals" (formula "9"))
                           (rule "closeFalse" (formula "9"))
                        )
                     )
                  )
                  (branch "Exceptional Post (hasRemainingRead)"
                      (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "1")))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "55"))
                     (rule "notLeft" (formula "55"))
                     (rule "close" (formula "57") (ifseqformula "56"))
                  )
                  (branch "Pre (hasRemainingRead)"
                      (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "1")) (ifInst ""  (formula "26")))
                     (rule "wellFormedAnon" (formula "82") (term "0"))
                     (rule "wellFormedAnon" (formula "82") (term "0,0"))
                     (rule "expand_inInt" (formula "82") (term "1"))
                     (rule "replace_int_MAX" (formula "82") (term "1,0,1"))
                     (rule "replace_int_MIN" (formula "82") (term "0,1,1"))
                     (rule "replace_known_left" (formula "82") (term "1,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "19")) (ifInst ""  (formula "18")))
                     (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "82") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "45") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                     (rule "polySimp_elimOne" (formula "45") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "82") (term "1") (ifseqformula "11"))
                     (rule "leq_literals" (formula "82") (term "0,1"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_leqRight" (formula "82"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "40"))
                     (rule "leq_literals" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "42"))
                     (rule "leq_literals" (formula "41") (term "0"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "true_left" (formula "41"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "48"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Null reference (_bucket_pointers = null)"
                      (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "79")))
                     (rule "closeTrue" (formula "82"))
                  )
               )
            )
            (branch "if x_2 false"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "76"))
               (rule "notLeft" (formula "1"))
               (rule "elim_double_block_2" (formula "76") (term "1"))
               (rule "blockBreak" (formula "76") (term "1"))
               (rule "lsBreak" (formula "76") (term "1"))
               (rule "assignment" (formula "76") (term "1"))
                (builtin "One Step Simplification" (formula "76"))
               (rule "methodCallEmpty" (formula "76") (term "1"))
               (rule "tryEmpty" (formula "76") (term "1"))
               (rule "emptyModality" (formula "76") (term "1"))
               (rule "andRight" (formula "76"))
               (branch
                  (rule "impRight" (formula "76"))
                  (rule "andRight" (formula "77"))
                  (branch
                     (rule "andRight" (formula "77"))
                     (branch
                         (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "7")))
                        (rule "closeTrue" (formula "77"))
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "8")))
                        (rule "closeTrue" (formula "77"))
                     )
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "77"))
                     (rule "closeTrue" (formula "77"))
                  )
               )
               (branch
                  (rule "impRight" (formula "76"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
      )
      (branch "Exceptional Post (num_buckets)"
          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "14")))
         (rule "andLeft" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "notLeft" (formula "30"))
         (rule "close" (formula "32") (ifseqformula "31"))
      )
      (branch "Pre (num_buckets)"
          (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")))
         (rule "closeTrue" (formula "57"))
      )
      (branch "Null reference (_classifier = null)"
          (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "55")))
         (rule "closeTrue" (formula "57"))
      )
   )
)
)
}
