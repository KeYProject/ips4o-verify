\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Oct 28 01:58:46 CEST 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../java-overflow";

\proofObligation "#Proof Obligation Settings
#Sat Oct 28 01:58:46 CEST 2023
contract=de.wiesler.Permute[de.wiesler.Permute\\:\\:swap_block(int,[I,int,int,de.wiesler.Classifier,de.wiesler.BucketPointers,[I,[I,[I)].JML normal_behavior operation contract.0
name=de.wiesler.Permute[de.wiesler.Permute\\:\\:swap_block(int,[I,int,int,de.wiesler.Classifier,de.wiesler.BucketPointers,[I,[I,[I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "4" (keyUser "mattias" ) (keyVersion "e1a85b31e7"))
(keyLog "5" (keyUser "mattias" ) (keyVersion "e1a85b31e7"))

(autoModeTime "728764")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,0,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "19"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "20"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "26"))
(rule "andLeft" (formula "28"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "29"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "32"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "translateJavaSubInt" (formula "26") (term "0"))
(rule "translateJavaSubInt" (formula "29") (term "1"))
(rule "translateJavaCastInt" (formula "29") (term "0"))
(rule "translateJavaSubInt" (formula "30") (term "1"))
(rule "translateJavaAddInt" (formula "53") (term "0,0,0,1,0"))
(rule "replace_known_right" (formula "13") (term "0") (ifseqformula "54"))
 (builtin "One Step Simplification" (formula "13"))
(rule "replace_known_right" (formula "11") (term "0") (ifseqformula "56"))
 (builtin "One Step Simplification" (formula "11"))
(rule "replace_known_right" (formula "12") (term "0") (ifseqformula "55"))
 (builtin "One Step Simplification" (formula "12"))
(rule "replace_known_right" (formula "10") (term "0") (ifseqformula "57"))
 (builtin "One Step Simplification" (formula "10"))
(rule "replace_known_right" (formula "9") (term "0") (ifseqformula "58"))
 (builtin "One Step Simplification" (formula "9"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "59"))
 (builtin "One Step Simplification" (formula "4"))
(rule "polySimp_elimSub" (formula "26") (term "0"))
(rule "polySimp_elimSub" (formula "29") (term "1"))
(rule "polySimp_elimSub" (formula "30") (term "1"))
(rule "polySimp_addComm0" (formula "26") (term "0"))
(rule "polySimp_addComm0" (formula "29") (term "1"))
(rule "polySimp_addComm0" (formula "30") (term "1"))
(rule "disjointDefinition" (formula "51"))
 (builtin "One Step Simplification" (formula "51"))
(rule "notLeft" (formula "51"))
(rule "eqSymm" (formula "53"))
(rule "disjointDefinition" (formula "50"))
 (builtin "One Step Simplification" (formula "50"))
(rule "notLeft" (formula "50"))
(rule "eqSymm" (formula "52"))
(rule "disjointDefinition" (formula "49"))
 (builtin "One Step Simplification" (formula "49"))
(rule "notLeft" (formula "49"))
(rule "eqSymm" (formula "51"))
(rule "disjointDefinition" (formula "48"))
 (builtin "One Step Simplification" (formula "48"))
(rule "notLeft" (formula "48"))
(rule "eqSymm" (formula "50"))
(rule "disjointDefinition" (formula "47"))
 (builtin "One Step Simplification" (formula "47"))
(rule "notLeft" (formula "47"))
(rule "eqSymm" (formula "49"))
(rule "disjointDefinition" (formula "46"))
 (builtin "One Step Simplification" (formula "46"))
(rule "notLeft" (formula "46"))
(rule "eqSymm" (formula "48"))
(rule "disjointDefinition" (formula "45"))
 (builtin "One Step Simplification" (formula "45"))
(rule "notLeft" (formula "45"))
(rule "eqSymm" (formula "47"))
(rule "disjointDefinition" (formula "44"))
 (builtin "One Step Simplification" (formula "44"))
(rule "notLeft" (formula "44"))
(rule "eqSymm" (formula "46"))
(rule "disjointDefinition" (formula "43"))
 (builtin "One Step Simplification" (formula "43"))
(rule "notLeft" (formula "43"))
(rule "eqSymm" (formula "45"))
(rule "disjointDefinition" (formula "42"))
 (builtin "One Step Simplification" (formula "42"))
(rule "notLeft" (formula "42"))
(rule "eqSymm" (formula "44"))
(rule "disjointDefinition" (formula "41"))
 (builtin "One Step Simplification" (formula "41"))
(rule "notLeft" (formula "41"))
(rule "eqSymm" (formula "43"))
(rule "disjointDefinition" (formula "40"))
 (builtin "One Step Simplification" (formula "40"))
(rule "notLeft" (formula "40"))
(rule "eqSymm" (formula "42"))
(rule "disjointDefinition" (formula "39"))
 (builtin "One Step Simplification" (formula "39"))
(rule "notLeft" (formula "39"))
(rule "eqSymm" (formula "41"))
(rule "disjointDefinition" (formula "38"))
 (builtin "One Step Simplification" (formula "38"))
(rule "notLeft" (formula "38"))
(rule "eqSymm" (formula "40"))
(rule "disjointDefinition" (formula "37"))
 (builtin "One Step Simplification" (formula "37"))
(rule "notLeft" (formula "37"))
(rule "eqSymm" (formula "39"))
(rule "disjointDefinition" (formula "36"))
 (builtin "One Step Simplification" (formula "36"))
(rule "notLeft" (formula "36"))
(rule "eqSymm" (formula "38"))
(rule "disjointDefinition" (formula "35"))
 (builtin "One Step Simplification" (formula "35"))
(rule "notLeft" (formula "35"))
(rule "eqSymm" (formula "37"))
(rule "disjointDefinition" (formula "34"))
 (builtin "One Step Simplification" (formula "34"))
(rule "notLeft" (formula "34"))
(rule "eqSymm" (formula "36"))
(rule "disjointDefinition" (formula "33"))
 (builtin "One Step Simplification" (formula "33"))
(rule "notLeft" (formula "33"))
(rule "disjointDefinition" (formula "31"))
 (builtin "One Step Simplification" (formula "31"))
(rule "notLeft" (formula "31"))
(rule "disjointDefinition" (formula "31"))
 (builtin "One Step Simplification" (formula "31"))
(rule "notLeft" (formula "31"))
(rule "castedGetAny" (formula "29") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "25"))
(rule "inEqSimp_commuteLeq" (formula "24"))
(rule "inEqSimp_commuteLeq" (formula "23"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "27"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "3"))
(rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0"))
(rule "assignment" (formula "60") (term "1"))
 (builtin "One Step Simplification" (formula "60"))
(rule "applyEq" (formula "28") (term "1") (ifseqformula "19"))
(rule "applyEq" (formula "29") (term "1,0") (ifseqformula "19"))
(rule "applyEq" (formula "32") (term "1,1,0,0,0") (ifseqformula "19"))
(rule "commute_and" (formula "32") (term "0,1,0"))
(rule "commute_and_2" (formula "32") (term "1,0"))
(rule "commute_and" (formula "32") (term "1,0,0"))
(rule "commute_and" (formula "32") (term "0,0,0"))
(rule "shift_paren_and" (formula "32") (term "0,0"))
(rule "commute_and_2" (formula "32") (term "0,0,0"))
(rule "methodBodyExpand" (formula "60") (term "1") (newnames "heapBefore_swap_block,savedHeapBefore_swap_block,_beginBefore_swap_block,_bucket_pointersBefore_swap_block,_classifierBefore_swap_block,_current_swapBefore_swap_block,_endBefore_swap_block,_other_swapBefore_swap_block,_overflowBefore_swap_block,_target_bucketBefore_swap_block,_valuesBefore_swap_block,writeBefore_swap_block"))
 (builtin "One Step Simplification" (formula "60"))
 (builtin "Block Contract (Internal)" (formula "60") (newnames "result_21,exc_25,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "61"))
    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")))
   (rule "true_left" (formula "33"))
   (rule "eqSymm" (formula "60") (term "0,0,1,0,1"))
   (rule "variableDeclarationAssign" (formula "60") (term "1"))
   (rule "variableDeclaration" (formula "60") (term "1") (newnames "exc_25_1"))
   (rule "assignment" (formula "60") (term "1"))
    (builtin "One Step Simplification" (formula "60"))
   (rule "emptyStatement" (formula "60") (term "1"))
    (builtin "One Step Simplification" (formula "60"))
   (rule "emptyStatement" (formula "60") (term "1"))
   (rule "tryEmpty" (formula "60") (term "1"))
   (rule "blockEmptyLabel" (formula "60") (term "1"))
   (rule "blockEmpty" (formula "60") (term "1"))
   (rule "methodCallEmpty" (formula "60") (term "1"))
   (rule "emptyModality" (formula "60") (term "1"))
   (rule "andRight" (formula "60"))
   (branch
       (builtin "One Step Simplification" (formula "60"))
      (rule "closeTrue" (formula "60"))
   )
   (branch
       (builtin "One Step Simplification" (formula "60"))
      (rule "closeTrue" (formula "60"))
   )
)
(branch "Precondition"
   (rule "andRight" (formula "60"))
   (branch
       (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "14")))
      (rule "closeTrue" (formula "60"))
   )
   (branch
       (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "60"))
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "61"))
    (builtin "One Step Simplification" (formula "33"))
   (rule "expand_inInt" (formula "33") (term "0,1,0"))
   (rule "replace_int_MAX" (formula "33") (term "1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "33") (term "0,1,0,1,0"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "35"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "34"))
   (rule "translateJavaSubInt" (formula "37") (term "0,1"))
   (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "33"))
    (builtin "One Step Simplification" (formula "36"))
   (rule "true_left" (formula "36"))
   (rule "polySimp_elimSub" (formula "36") (term "0,1"))
   (rule "polySimp_addComm0" (formula "36") (term "0,1"))
   (rule "inEqSimp_commuteLeq" (formula "35"))
   (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "19"))
   (rule "elim_double_block_2" (formula "65") (term "1"))
   (rule "ifUnfold" (formula "65") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "65") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "65") (term "1"))
    (builtin "One Step Simplification" (formula "65"))
   (rule "replace_known_left" (formula "65") (term "0,0,1,0") (ifseqformula "33"))
    (builtin "One Step Simplification" (formula "65"))
   (rule "ifSplit" (formula "65"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "66"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "66"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "65") (term "1"))
      (rule "loopScopeInvDia" (formula "65") (term "1") (newnames "o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
      (branch "Invariant Initially Valid"
         (rule "closeTrue" (formula "65"))
      )
      (branch "Invariant Preserved and Used"
          (builtin "One Step Simplification" (formula "66"))
         (rule "expand_inInt" (formula "66") (term "0,0,1,0,0,0,0,0,0"))
         (rule "expand_inInt" (formula "66") (term "1,0,0,0,0,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "66") (term "0,1,0,0,1,0,0,0,0,0,0"))
         (rule "replace_int_MAX" (formula "66") (term "1,0,0,0,1,0,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "66") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
         (rule "replace_int_MAX" (formula "66") (term "1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "impRight" (formula "66"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "3"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "translateJavaMulInt" (formula "74") (term "0,0,1,1,0,0,1,0"))
         (rule "translateJavaAddInt" (formula "74") (term "0,1,1,0,0,1,1,0"))
         (rule "translateJavaAddInt" (formula "6") (term "0,1,1,0,0"))
         (rule "translateJavaAddInt" (formula "8") (term "0,1,1,0"))
         (rule "translateJavaAddInt" (formula "7") (term "0,1,1,0"))
         (rule "translateJavaAddInt" (formula "5") (term "0,1,1,0,0"))
         (rule "translateJavaAddInt" (formula "4") (term "0,1,1,0,0"))
         (rule "translateJavaAddInt" (formula "3") (term "0,1,1,0,0"))
         (rule "translateJavaAddInt" (formula "1") (term "0,1,1,0,0,1,0"))
         (rule "translateJavaAddInt" (formula "2") (term "0,1,1,0,0,1,0"))
         (rule "translateJavaAddInt" (formula "74") (term "0,1,1,0,0,1,0"))
         (rule "translateJavaMulInt" (formula "74") (term "0,0,1,1,0,0,1,1,0"))
         (rule "translateJavaMulInt" (formula "6") (term "0,0,1,1,0,0"))
         (rule "translateJavaMulInt" (formula "8") (term "0,0,1,1,0"))
         (rule "translateJavaMulInt" (formula "7") (term "0,0,1,1,0"))
         (rule "translateJavaMulInt" (formula "5") (term "0,0,1,1,0,0"))
         (rule "translateJavaMulInt" (formula "4") (term "0,0,1,1,0,0"))
         (rule "translateJavaMulInt" (formula "3") (term "0,0,1,1,0,0"))
         (rule "translateJavaMulInt" (formula "1") (term "0,0,1,1,0,0,1,0"))
         (rule "translateJavaMulInt" (formula "2") (term "0,0,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "74") (term "0,0,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "74") (term "0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "74") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "74") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "8") (term "0,1,1,0"))
         (rule "polySimp_addComm0" (formula "7") (term "0,1,1,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "4") (term "0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,1,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0"))
         (rule "variableDeclaration" (formula "74") (term "1") (newnames "x_1"))
         (rule "applyEq" (formula "1") (term "1,1,0,0,0") (ifseqformula "28"))
         (rule "commute_and" (formula "2") (term "0,0"))
         (rule "commute_and" (formula "1") (term "1,0,0"))
         (rule "commute_and" (formula "1") (term "0,0,0"))
         (rule "shift_paren_and" (formula "1") (term "0,0"))
         (rule "commute_and_2" (formula "1") (term "0,0,0"))
         (rule "arrayLengthNotNegative" (formula "30") (term "0"))
         (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
         (rule "qeq_literals" (formula "30"))
         (rule "true_left" (formula "30"))
         (rule "arrayLengthIsAShort" (formula "34") (term "0"))
         (rule "expand_inShort" (formula "34"))
         (rule "replace_short_MIN" (formula "34") (term "0,1"))
         (rule "replace_short_MAX" (formula "34") (term "1,0"))
         (rule "andLeft" (formula "34"))
         (rule "inEqSimp_commuteLeq" (formula "35"))
         (rule "arrayLengthNotNegative" (formula "36") (term "0"))
         (rule "arrayLengthNotNegative" (formula "31") (term "0"))
         (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
         (rule "qeq_literals" (formula "31"))
         (rule "true_left" (formula "31"))
         (rule "arrayLengthIsAShort" (formula "31") (term "0"))
         (rule "expand_inShort" (formula "31"))
         (rule "replace_short_MIN" (formula "31") (term "0,1"))
         (rule "replace_short_MAX" (formula "31") (term "1,0"))
         (rule "andLeft" (formula "31"))
         (rule "inEqSimp_commuteLeq" (formula "32"))
         (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
         (rule "qeq_literals" (formula "32"))
         (rule "true_left" (formula "32"))
         (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
         (rule "leq_literals" (formula "31"))
         (rule "true_left" (formula "31"))
         (rule "arrayLengthIsAShort" (formula "30") (term "0"))
         (rule "expand_inShort" (formula "30"))
         (rule "replace_short_MIN" (formula "30") (term "0,1"))
         (rule "replace_short_MAX" (formula "30") (term "1,0"))
         (rule "andLeft" (formula "30"))
         (rule "inEqSimp_commuteLeq" (formula "31"))
         (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
         (rule "leq_literals" (formula "30"))
         (rule "true_left" (formula "30"))
         (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
         (rule "qeq_literals" (formula "30"))
         (rule "true_left" (formula "30"))
         (rule "seqGetAlphaCast" (formula "41") (term "0"))
         (rule "castedGetAny" (formula "41") (term "0"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "true_left" (formula "41"))
         (rule "arrayLengthIsAShort" (formula "29") (term "0"))
         (rule "expand_inShort" (formula "29"))
         (rule "replace_short_MIN" (formula "29") (term "0,1"))
         (rule "replace_short_MAX" (formula "29") (term "1,0"))
         (rule "andLeft" (formula "29"))
         (rule "inEqSimp_commuteLeq" (formula "30"))
         (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
         (rule "leq_literals" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
         (rule "qeq_literals" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "arrayLengthNotNegative" (formula "29") (term "0"))
         (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
         (rule "qeq_literals" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "ifElseSplit" (formula "77"))
         (branch "if true true"
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclarationGhostAssign" (formula "77") (term "1"))
            (rule "variableDeclarationGhost" (formula "77") (term "1") (newnames "heapAtLoopBodyBegin"))
            (rule "assignment" (formula "77") (term "1"))
             (builtin "One Step Simplification" (formula "77"))
             (builtin "Block Contract (Internal)" (formula "77") (newnames "result_0,exc_0,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
            (branch "Validity"
                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "23")))
                (builtin "One Step Simplification" (formula "78"))
               (rule "eqSymm" (formula "78") (term "0,0,1,0,1"))
               (rule "variableDeclarationAssign" (formula "78") (term "1"))
               (rule "variableDeclaration" (formula "78") (term "1") (newnames "exc_0_1"))
               (rule "assignment" (formula "78") (term "1"))
                (builtin "One Step Simplification" (formula "78"))
               (rule "emptyStatement" (formula "78") (term "1"))
                (builtin "One Step Simplification" (formula "78"))
               (rule "emptyStatement" (formula "78") (term "1"))
               (rule "tryEmpty" (formula "78") (term "1"))
               (rule "blockEmptyLabel" (formula "78") (term "1"))
               (rule "blockEmpty" (formula "78") (term "1"))
               (rule "methodCallEmpty" (formula "78") (term "1"))
               (rule "emptyModality" (formula "78") (term "1"))
               (rule "andRight" (formula "78"))
               (branch
                   (builtin "One Step Simplification" (formula "78"))
                  (rule "closeTrue" (formula "78"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "78"))
                  (rule "closeTrue" (formula "78"))
               )
            )
            (branch "Precondition"
               (rule "andRight" (formula "77"))
               (branch
                   (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "23")))
                  (rule "closeTrue" (formula "77"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "77"))
                  (rule "wellFormedAnon" (formula "77"))
                  (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "9")))
                  (rule "closeTrue" (formula "77"))
               )
            )
            (branch "Usage"
                (builtin "One Step Simplification" (formula "78"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "expand_inInt" (formula "50") (term "0,1,0"))
               (rule "replace_int_MIN" (formula "50") (term "0,1,0,1,0"))
               (rule "replace_int_MAX" (formula "50") (term "1,0,0,1,0"))
               (rule "andLeft" (formula "50"))
               (rule "andLeft" (formula "50"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "translateJavaAddInt" (formula "54") (term "0"))
               (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "true_left" (formula "53"))
               (rule "polySimp_addComm0" (formula "53") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "52"))
               (rule "elim_double_block_2" (formula "81") (term "1"))
               (rule "ifUnfold" (formula "81") (term "1") (inst "#boolv=x_2"))
               (rule "variableDeclaration" (formula "81") (term "1") (newnames "x_2"))
               (rule "inequality_comparison_simple" (formula "81") (term "1"))
                (builtin "One Step Simplification" (formula "81"))
               (rule "replace_known_left" (formula "81") (term "0,0,1,0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "81"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "62") (term "0") (ifseqformula "10") (ifseqformula "19"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "71") (term "0") (ifseqformula "11") (ifseqformula "19"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "61") (term "0,0") (ifseqformula "12") (ifseqformula "20"))
               (rule "ifSplit" (formula "84"))
               (branch "if x_2 true"
                   (builtin "One Step Simplification" (formula "85"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_2 false"
                   (builtin "One Step Simplification" (formula "85"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "blockEmpty" (formula "84") (term "1"))
                  (rule "variableDeclarationAssign" (formula "84") (term "1"))
                  (rule "variableDeclaration" (formula "84") (term "1") (newnames "increment"))
                   (builtin "Use Operation Contract" (formula "84") (newnames "heapBefore_increment_write,result_1,exc_1,heapAfter_increment_write,anon_heap_increment_write") (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::increment_write(int)].JML normal_behavior operation contract.0"))
                  (branch "Post (increment_write)"
                      (builtin "One Step Simplification" (formula "58"))
                      (builtin "One Step Simplification" (formula "86"))
                     (rule "andLeft" (formula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "1,0,1,0") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "andLeft" (formula "59"))
                     (rule "andLeft" (formula "59"))
                     (rule "andLeft" (formula "61"))
                     (rule "andLeft" (formula "60"))
                     (rule "andLeft" (formula "62"))
                     (rule "andLeft" (formula "61"))
                     (rule "notLeft" (formula "64"))
                     (rule "andLeft" (formula "62"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "64"))
                     (rule "andLeft" (formula "65"))
                     (rule "andLeft" (formula "66"))
                     (rule "andLeft" (formula "67"))
                     (rule "translateJavaAddInt" (formula "58") (term "0,1,1,0"))
                     (rule "translateJavaAddInt" (formula "61") (term "0"))
                     (rule "translateJavaAddInt" (formula "62") (term "1"))
                     (rule "translateJavaAddInt" (formula "63") (term "0"))
                     (rule "eqSymm" (formula "64"))
                     (rule "eqSymm" (formula "66"))
                     (rule "eqSymm" (formula "67"))
                     (rule "translateJavaMulInt" (formula "58") (term "0,0,1,1,0"))
                     (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "70"))
                      (builtin "One Step Simplification" (formula "60"))
                     (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "61") (term "0"))
                     (rule "polySimp_addComm0" (formula "62") (term "1"))
                     (rule "polySimp_addComm0" (formula "63") (term "0"))
                     (rule "polySimp_addComm0" (formula "58") (term "0,1,1,0"))
                     (rule "assignment" (formula "98") (term "1"))
                      (builtin "One Step Simplification" (formula "98"))
                     (rule "variableDeclarationAssign" (formula "98") (term "1"))
                     (rule "variableDeclaration" (formula "98") (term "1") (newnames "occupied"))
                     (rule "assignment_read_attribute_final" (formula "98"))
                     (branch "Normal Execution (increment != null)"
                         (builtin "One Step Simplification" (formula "98"))
                        (rule "variableDeclarationAssign" (formula "98") (term "1"))
                        (rule "variableDeclaration" (formula "98") (term "1") (newnames "write"))
                        (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "66"))
                        (rule "eqSymm" (formula "61"))
                        (rule "applyEq" (formula "98") (term "0,1,0,0,0,0,0") (ifseqformula "62"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "62"))
                        (rule "compound_addition_2" (formula "98") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
                        (rule "variableDeclarationAssign" (formula "98") (term "1"))
                        (rule "variableDeclaration" (formula "98") (term "1") (newnames "x_4"))
                        (rule "assignment" (formula "98") (term "1"))
                         (builtin "One Step Simplification" (formula "98"))
                        (rule "variableDeclarationAssign" (formula "98") (term "1"))
                        (rule "variableDeclaration" (formula "98") (term "1") (newnames "x_3"))
                        (rule "assignment_read_attribute_final" (formula "98"))
                        (branch "Normal Execution (increment != null)"
                            (builtin "One Step Simplification" (formula "98"))
                           (rule "assignmentAdditionInt" (formula "98") (term "1"))
                           (branch "Overflow check"
                               (builtin "One Step Simplification" (formula "98") (userinteraction))
                              (rule "applyEqReverse" (formula "98") (term "1,0") (ifseqformula "66") (userinteraction))
                              (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "98") (term "1,0") (userinteraction))
                              (rule "impLeft" (formula "1") (userinteraction))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "43")) (ifInst ""  (formula "10")) (ifInst ""  (formula "96")) (ifInst ""  (formula "22")))
                                 (rule "wellFormedAnon" (formula "70") (term "1"))
                                 (rule "expand_inInt" (formula "99"))
                                 (rule "replace_int_MAX" (formula "99") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "99") (term "0,1"))
                                 (rule "replace_known_left" (formula "70") (term "1,1") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "13")))
                                 (rule "polySimp_homoEq" (formula "63"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                 (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                                 (rule "inEqSimp_leqRight" (formula "70"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "66") (term "0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "57"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                 (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "42"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "99") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "99") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "99") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "99") (term "1"))
                                 (rule "mul_literals" (formula "99") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "99") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "99") (term "0,0,1"))
                                 (rule "applyEq" (formula "99") (term "1,0,1") (ifseqformula "67"))
                                 (rule "applyEq" (formula "99") (term "0,1,0,0") (ifseqformula "67"))
                                 (rule "polySimp_sepNegMonomial" (formula "64"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "0"))
                                 (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "64"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "57") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "57") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "66") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "66") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "99") (term "1,1"))
                                 (rule "mul_literals" (formula "99") (term "0,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "99") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "99") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "99") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "43") (term "0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "closeFalse" (formula "43"))
                              )
                              (branch "Case 2"
                                 (rule "expand_inInt" (formula "99"))
                                 (rule "replace_int_MIN" (formula "99") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "99") (term "1,0"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "translateJavaAddInt" (formula "4") (term "2,0"))
                                 (rule "translateJavaAddInt" (formula "3") (term "2,1"))
                                 (rule "polySimp_homoEq" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "2,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "2,1"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "69") (term "0"))
                                 (rule "polySimp_addComm0" (formula "69") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "71") (term "0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "47"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "47") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "62"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                 (rule "polySimp_addComm0" (formula "62") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "53") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,1,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "104") (term "1"))
                                 (rule "mul_literals" (formula "104") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "104") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "104") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "104") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "104") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "104") (term "0,0"))
                                 (rule "applyEq" (formula "104") (term "1,0,1") (ifseqformula "72"))
                                 (rule "applyEq" (formula "104") (term "0,1,0,0") (ifseqformula "72"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "72"))
                                 (rule "inEqSimp_commuteLeq" (formula "3"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "72"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "72"))
                                 (rule "inEqSimp_commuteGeq" (formula "2"))
                                 (rule "polySimp_sepNegMonomial" (formula "69"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "0"))
                                 (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "69"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "62") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "71") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "71") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "104") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "104") (term "1,1"))
                                 (rule "mul_literals" (formula "104") (term "0,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "104") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "104") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "104") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "45"))
                                 (rule "leq_literals" (formula "44") (term "0"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "41"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "46"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "44"))
                                 (rule "mul_literals" (formula "24") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                 (rule "mul_literals" (formula "24") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "40"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "41"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "43"))
                                 (rule "leq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "43"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "40") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "40"))
                                 (rule "leq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_and_subsumption3" (formula "11") (term "0,0,0"))
                                 (rule "leq_literals" (formula "11") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_and_subsumption3" (formula "51") (term "0,0,0"))
                                 (rule "leq_literals" (formula "51") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_imp2or" (formula "11") (term "0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0,0"))
                                 (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "69") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "17")) (ifInst ""  (formula "100")) (ifInst ""  (formula "17")) (ifInst ""  (formula "7")) (ifInst ""  (formula "25")))
                                 (rule "wellFormedAnon" (formula "69") (term "1,0"))
                                 (rule "replace_known_left" (formula "69") (term "0,1,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "19")))
                                 (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0"))
                                 (rule "replace_known_left" (formula "69") (term "0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "69") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "0,0"))
                                 (rule "replace_known_left" (formula "69") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "andLeft" (formula "69"))
                                 (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "15"))
                                 (rule "times_zero_1" (formula "69") (term "0,0"))
                                 (rule "add_zero_left" (formula "69") (term "0"))
                                 (rule "Contract_axiom_for_elementsToReadOfBucketBlockClassified_in_BucketPointers" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "19")) (ifInst ""  (formula "18")) (ifInst ""  (formula "104")) (ifInst ""  (formula "105")) (ifInst ""  (formula "103")) (ifInst ""  (formula "18")) (ifInst ""  (formula "7")) (ifInst ""  (formula "26")))
                                 (rule "true_left" (formula "13"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "76"))
                                 (rule "notLeft" (formula "76"))
                                 (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "76"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "33"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "eqSymm" (formula "38"))
                                 (rule "translateJavaMulInt" (formula "35") (term "1,1"))
                                 (rule "translateJavaSubInt" (formula "38") (term "0,2,0"))
                                 (rule "translateJavaSubInt" (formula "38") (term "0,2,1"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "polySimp_elimSub" (formula "38") (term "0,2,0"))
                                 (rule "mul_literals" (formula "38") (term "1,0,2,0"))
                                 (rule "eqSymm" (formula "38"))
                                 (rule "polySimp_elimSub" (formula "38") (term "0,2,0"))
                                 (rule "mul_literals" (formula "38") (term "1,0,2,0"))
                                 (rule "eqSymm" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "38") (term "0,2,1"))
                                 (rule "polySimp_addComm0" (formula "38") (term "0,2,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "33"))
                                 (rule "applyEq" (formula "34") (term "0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "33") (term "0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "35") (term "1") (ifseqformula "40"))
                                 (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "34"))
                                 (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0"))
                                 (rule "add_literals" (formula "53") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "53"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "80") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "17")) (ifInst ""  (formula "109")) (ifInst ""  (formula "17")) (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")))
                                 (rule "true_left" (formula "80"))
                                 (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "80") (term "0,0,0"))
                                 (rule "translateJavaSubInt" (formula "80") (term "1,0,0,0"))
                                 (rule "polySimp_elimSub" (formula "80") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "80") (term "1,0,0,0,0,0") (ifseqformula "79"))
                                 (rule "polySimp_addComm1" (formula "80") (term "0,0,0,0,0"))
                                 (rule "applyEq" (formula "80") (term "0,1,1,0,0,0") (ifseqformula "79"))
                                 (rule "polySimp_addComm0" (formula "80") (term "1,0,0,0"))
                                 (rule "applyEq" (formula "80") (term "1,1,0,0,0") (ifseqformula "74"))
                                 (rule "applyEq" (formula "80") (term "0,1,0,0,0,0,0") (ifseqformula "74"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "80") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "80") (term "0,0,0,0,0"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "81") (inst "b=b"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "expand_inInt" (formula "81") (term "1,0,0,1"))
                                 (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,0,1"))
                                 (rule "andLeft" (formula "81"))
                                 (rule "andLeft" (formula "81"))
                                 (rule "andLeft" (formula "82"))
                                 (rule "andLeft" (formula "81"))
                                 (rule "andLeft" (formula "81"))
                                 (rule "andLeft" (formula "81"))
                                 (rule "andLeft" (formula "83"))
                                 (rule "andLeft" (formula "83"))
                                 (rule "andLeft" (formula "83"))
                                 (rule "translateJavaCastInt" (formula "88") (term "0"))
                                 (rule "translateJavaAddInt" (formula "87") (term "1"))
                                 (rule "translateJavaMulInt" (formula "82") (term "0"))
                                 (rule "translateJavaMulInt" (formula "81") (term "1"))
                                 (rule "translateJavaCastInt" (formula "85") (term "0"))
                                 (rule "translateJavaCastInt" (formula "84") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "82") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1"))
                                 (rule "polySimp_addComm0" (formula "87") (term "1"))
                                 (rule "castedGetAny" (formula "88") (term "0"))
                                 (rule "castedGetAny" (formula "85") (term "0"))
                                 (rule "castedGetAny" (formula "84") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "90") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "90") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "83"))
                                 (rule "inEqSimp_commuteLeq" (formula "81"))
                                 (rule "inEqSimp_commuteLeq" (formula "84"))
                                 (rule "applyEq" (formula "84") (term "0") (ifseqformula "54"))
                                 (rule "inEqSimp_commuteGeq" (formula "84"))
                                 (rule "applyEq" (formula "84") (term "0") (ifseqformula "54"))
                                 (rule "inEqSimp_homoInEq0" (formula "84"))
                                 (rule "polySimp_mulComm0" (formula "84") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "84") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "84") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "84") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "84") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "84") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "89") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "84"))
                                 (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                                 (rule "polySimp_elimOne" (formula "84") (term "0"))
                                 (rule "inEqSimp_subsumption6" (formula "81") (ifseqformula "32"))
                                 (rule "mul_literals" (formula "81") (term "1,1,0"))
                                 (rule "greater_literals" (formula "81") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "leq_literals" (formula "81") (term "0"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "true_left" (formula "81"))
                                 (rule "inEqSimp_exactShadow2" (formula "32") (ifseqformula "81"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0,1"))
                                 (rule "greater_literals" (formula "32") (term "0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "mul_literals" (formula "32") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                 (rule "mul_literals" (formula "32") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "83") (ifseqformula "56"))
                                 (rule "mul_literals" (formula "83") (term "0,0"))
                                 (rule "add_zero_left" (formula "83") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "83"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "1"))
                                 (rule "polySimp_elimOne" (formula "83") (term "1"))
                                 (rule "inEqSimp_exactShadow2" (formula "54") (ifseqformula "82"))
                                 (rule "greater_literals" (formula "54") (term "0"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
                                 (rule "mul_literals" (formula "54") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                                 (rule "mul_literals" (formula "54") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1"))
                                 (rule "mul_literals" (formula "54") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                 (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "73") (term "0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (term "1,0,0") (ifseqformula "70"))
                                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "117")) (ifInst ""  (formula "24")))
                                 (rule "wellFormedAnonEQ" (formula "73") (term "1,0") (ifseqformula "70"))
                                 (rule "wellFormedAnon" (formula "73") (term "0,1,0"))
                                 (rule "translateJavaAddInt" (formula "73") (term "2,0,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "73") (term "2,1,1,0,0,1,1"))
                                 (rule "replace_known_left" (formula "73") (term "1,0,1,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "20")) (ifInst ""  (formula "69")))
                                 (rule "polySimp_addComm0" (formula "73") (term "2,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "73") (term "2,0,1,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "73") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "73") (term "1,0,0,0,1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "52"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "inEqSimp_commuteLeq" (formula "73") (term "1,0,1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0,1,1"))
                                 (rule "applyEq" (formula "73") (term "0,1,0,0,0,1,1") (ifseqformula "74"))
                                 (rule "inEqSimp_commuteGeq" (formula "73") (term "1,0,0,0,1,1"))
                                 (rule "applyEq" (formula "73") (term "0,1,0,0,1,1") (ifseqformula "74"))
                                 (rule "inEqSimp_commuteLeq" (formula "73") (term "1,0,0,1,1"))
                                 (rule "applyEq" (formula "73") (term "0,0,0,1,1,1") (ifseqformula "74"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "74") (term "0"))
                                 (rule "translateJavaMulInt" (formula "74") (term "0,0,2,0"))
                                 (rule "translateJavaAddInt" (formula "74") (term "0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "0,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "74") (term "0,2,0"))
                                 (rule "pullOutSelect" (formula "74") (term "0") (inst "selectSK=arr_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "74") (ifseqformula "70"))
                                  (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "92")) (ifInst ""  (formula "10")))
                                 (rule "polySimp_homoEq" (formula "75"))
                                 (rule "polySimp_addComm1" (formula "75") (term "0"))
                                 (rule "elementOfSingleton" (formula "74") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "74"))
                                 (rule "applyEqReverse" (formula "75") (term "0,1,0,0") (ifseqformula "74"))
                                 (rule "hideAuxiliaryEq" (formula "74"))
                                 (rule "polySimp_addComm1" (formula "74") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "74"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "0"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "29"))
                                 (rule "notLeft" (formula "29"))
                                 (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "80") (term "0,0"))
                                 (rule "translateJavaSubInt" (formula "80") (term "1,0,0"))
                                 (rule "polySimp_elimSub" (formula "80") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "80") (term "1,0,0,0,0") (ifseqformula "81"))
                                 (rule "polySimp_addComm1" (formula "80") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "80") (term "0,1,1,0,0") (ifseqformula "81"))
                                 (rule "polySimp_addComm0" (formula "80") (term "1,0,0"))
                                 (rule "applyEq" (formula "80") (term "1,1,0,0") (ifseqformula "76"))
                                 (rule "applyEq" (formula "80") (term "0,1,0,0,0,0") (ifseqformula "76"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "80") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "80") (term "0,0,0,0"))
                                 (rule "Definition_axiom_for_disjointBucketsLemma_in_de_wiesler_BucketPointers" (formula "63") (term "0") (inst "b=b"))
                                  (builtin "One Step Simplification" (formula "63"))
                                 (rule "expand_inInt" (formula "63") (term "1,0,0"))
                                 (rule "replace_int_MIN" (formula "63") (term "0,1,1,0,0"))
                                 (rule "replace_int_MAX" (formula "63") (term "1,0,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "63") (term "2,0,1,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "63") (term "2,0,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "63") (term "2,0,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "63") (term "2,0,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "63") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "63") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "63") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,1,1,0"))
                                 (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "74") (term "1,1"))
                                 (rule "translateJavaAddInt" (formula "74") (term "2,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "74") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "74") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "74") (term "2,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "74") (term "1"))
                                 (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "15") (term "1"))
                                 (rule "replace_known_left" (formula "15") (term "1,0,0,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "25")) (ifInst ""  (formula "117")) (ifInst ""  (formula "78")) (ifInst ""  (formula "31")))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "52"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "63") (term "1"))
                                  (builtin "One Step Simplification" (formula "63"))
                                 (rule "translateJavaUnaryMinusInt" (formula "63") (term "1,1"))
                                 (rule "neg_literal" (formula "63") (term "1,1"))
                                 (rule "translateJavaSubInt" (formula "63") (term "0,1"))
                                 (rule "translateJavaAddInt" (formula "63") (term "0,0,1"))
                                 (rule "polySimp_elimSub" (formula "63") (term "0,1"))
                                 (rule "mul_literals" (formula "63") (term "1,0,1"))
                                 (rule "polySimp_addLiterals" (formula "63") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "63") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "63") (term "0,0,1"))
                                 (rule "Contract_axiom_for_remainingWriteCountOfBucket_in_BucketPointers" (formula "75") (term "0"))
                                  (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "18")) (ifInst ""  (formula "118")) (ifInst ""  (formula "18")) (ifInst ""  (formula "7")) (ifInst ""  (formula "25")))
                                 (rule "true_left" (formula "75"))
                                 (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "75") (term "0"))
                                 (rule "translateJavaAddInt" (formula "75") (term "2,0,0"))
                                 (rule "translateJavaSubInt" (formula "75") (term "0"))
                                 (rule "polySimp_elimSub" (formula "75") (term "0"))
                                 (rule "polySimp_homoEq" (formula "75"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "75") (term "2,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                 (rule "applyEq" (formula "75") (term "1,0") (ifseqformula "82"))
                                 (rule "polySimp_addComm1" (formula "75") (term "0"))
                                 (rule "polySimp_addComm1" (formula "75") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "75"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "0"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "75"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "75"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "translateJavaAddInt" (formula "13") (term "4,0,1"))
                                 (rule "translateJavaAddInt" (formula "13") (term "3,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                 (rule "applyEq" (formula "13") (term "1,4,0,1") (ifseqformula "76"))
                                 (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "81"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                 (rule "applyEq" (formula "13") (term "1,3,0,1") (ifseqformula "81"))
                                 (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "76"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "30") (inst "b=b"))
                                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "85")) (ifInst ""  (formula "88")))
                                 (rule "expand_inInt" (formula "30") (term "1,0,0,1"))
                                 (rule "replace_int_MAX" (formula "30") (term "1,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "30") (term "0,1,1,0,0,1"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "translateJavaCastInt" (formula "36") (term "0"))
                                 (rule "translateJavaAddInt" (formula "35") (term "1"))
                                 (rule "translateJavaCastInt" (formula "34") (term "0"))
                                 (rule "translateJavaMulInt" (formula "31") (term "0"))
                                 (rule "translateJavaMulInt" (formula "30") (term "1"))
                                 (rule "translateJavaCastInt" (formula "33") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "1"))
                                 (rule "castedGetAny" (formula "34") (term "0"))
                                 (rule "castedGetAny" (formula "33") (term "0"))
                                 (rule "castedGetAny" (formula "32") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "31"))
                                 (rule "inEqSimp_commuteLeq" (formula "30"))
                                 (rule "inEqSimp_commuteLeq" (formula "31"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "58"))
                                 (rule "inEqSimp_homoInEq0" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "58"))
                                 (rule "inEqSimp_commuteGeq" (formula "31"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0"))
                                 (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "33"))
                                 (rule "greater_literals" (formula "30") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "mul_literals" (formula "30") (term "1,0"))
                                 (rule "leq_literals" (formula "30") (term "0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "57") (term "0") (inst "i=i"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "expand_inInt" (formula "57") (term "1,0,0"))
                                 (rule "replace_int_MAX" (formula "57") (term "1,0,1,0,0"))
                                 (rule "replace_int_MIN" (formula "57") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,1,0,0,0"))
                                 (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "76") (term "1"))
                                 (rule "translateJavaMulInt" (formula "76") (term "0,2,1"))
                                 (rule "polySimp_mulComm0" (formula "76") (term "0,2,1"))
                                 (rule "pullOutSelect" (formula "76") (term "1") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "69"))
                                  (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "93")) (ifInst ""  (formula "10")))
                                 (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "77"))
                                 (rule "hideAuxiliaryEq" (formula "77"))
                                 (rule "elementOfSingleton" (formula "76") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "76"))
                                 (rule "polySimp_homoEq" (formula "76") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0,0"))
                                 (rule "add_literals" (formula "76") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "76") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "76") (term "0,0,0"))
                                 (rule "equal_literals" (formula "76") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "76"))
                                 (rule "pullOutSelect" (formula "76") (term "0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnon" (formula "76"))
                                  (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "93")) (ifInst ""  (formula "10")))
                                 (rule "eqSymm" (formula "77"))
                                 (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "77"))
                                 (rule "hideAuxiliaryEq" (formula "77"))
                                 (rule "elementOfSingleton" (formula "76") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "76"))
                                 (rule "polySimp_homoEq" (formula "76") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0,0"))
                                 (rule "add_literals" (formula "76") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "76") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "76") (term "0,0,0"))
                                 (rule "equal_literals" (formula "76") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "76"))
                                 (rule "eqSymm" (formula "76"))
                                 (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "80") (term "0,2"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "1,0,0") (ifseqformula "69"))
                                  (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "119")) (ifInst ""  (formula "24")))
                                 (rule "wellFormedAnonEQ" (formula "80") (term "1,0") (ifseqformula "69"))
                                 (rule "wellFormedAnon" (formula "80") (term "0,1,0"))
                                 (rule "replace_known_left" (formula "80") (term "1,1,0") (ifseqformula "68"))
                                  (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")))
                                 (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "80") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "80") (term "0,0,0") (ifseqformula "51"))
                                  (builtin "One Step Simplification" (formula "80"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "80") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "80") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "80") (term "0,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "80"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "notLeft" (formula "29"))
                                 (rule "notLeft" (formula "29"))
                                 (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "80") (term "0,2"))
                                  (builtin "One Step Simplification" (formula "80"))
                                 (rule "translateJavaSubInt" (formula "80") (term "0,1,2"))
                                 (rule "polySimp_elimSub" (formula "80") (term "0,1,2"))
                                 (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,2"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,2"))
                                 (rule "polySimp_sepNegMonomial" (formula "80") (term "1,2"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "0,1,2"))
                                 (rule "polySimp_elimOne" (formula "80") (term "0,1,2"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,2"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,2"))
                                 (rule "polySimp_rightDist" (formula "80") (term "1,0,0,2"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,2"))
                                 (rule "mul_literals" (formula "80") (term "0,1,0,0,2"))
                                 (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,2"))
                                 (rule "inEqSimp_notLeq" (formula "80") (term "0,2"))
                                 (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,2"))
                                 (rule "mul_literals" (formula "80") (term "0,1,0,0,0,2"))
                                 (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,2"))
                                 (rule "add_literals" (formula "80") (term "0,0,0,0,2"))
                                 (rule "add_zero_left" (formula "80") (term "0,0,0,2"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,2"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "1,0,2"))
                                 (rule "polySimp_elimOne" (formula "80") (term "1,0,2"))
                                 (rule "inEqSimp_or_subsumption6" (formula "80") (term "2"))
                                 (rule "inEqSimp_gtToGeq" (formula "80") (term "0,1,2"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,1,2"))
                                 (rule "polySimp_pullOutFactor2b" (formula "80") (term "0,0,1,2"))
                                 (rule "add_literals" (formula "80") (term "1,1,0,0,1,2"))
                                 (rule "times_zero_1" (formula "80") (term "1,0,0,1,2"))
                                 (rule "add_zero_right" (formula "80") (term "0,0,1,2"))
                                 (rule "qeq_literals" (formula "80") (term "0,1,2"))
                                  (builtin "One Step Simplification" (formula "80"))
                                 (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "81") (term "0"))
                                  (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "18")) (ifInst ""  (formula "119")) (ifInst ""  (formula "18")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")))
                                 (rule "wellFormedAnon" (formula "81") (term "1,0"))
                                 (rule "translateJavaAddInt" (formula "81") (term "2,0,1,0,1"))
                                 (rule "translateJavaAddInt" (formula "81") (term "2,1,1,0,0,1"))
                                 (rule "replace_known_left" (formula "81") (term "0,1,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "19")))
                                 (rule "polySimp_addComm0" (formula "81") (term "2,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "81") (term "2,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "81") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0"))
                                 (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "50"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,1"))
                                 (rule "replace_known_left" (formula "81") (term "0,0,0,0,1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "applyEq" (formula "81") (term "0,0,1,1") (ifseqformula "82"))
                                 (rule "replace_known_left" (formula "81") (term "1,1") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "applyEq" (formula "81") (term "0,1,0,1") (ifseqformula "82"))
                                 (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,1"))
                                 (rule "applyEq" (formula "81") (term "1,1,1") (ifseqformula "73"))
                                 (rule "replace_known_left" (formula "81") (term "1,1") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "applyEq" (formula "81") (term "0,0,1") (ifseqformula "82"))
                                 (rule "inEqSimp_commuteGeq" (formula "81") (term "0,1"))
                                 (rule "replace_known_left" (formula "81") (term "0,1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "applyEq" (formula "81") (term "0,1") (ifseqformula "73"))
                                 (rule "inEqSimp_homoInEq1" (formula "81") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "81") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "81") (term "0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "81") (term "0,0,1,0,1"))
                                 (rule "mul_literals" (formula "81") (term "0,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "81") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "81") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "81") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "81") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "81") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "81") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "81") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "81") (term "0,0"))
                                 (rule "replace_known_left" (formula "81") (term "0") (ifseqformula "53"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "81"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1"))
                                 (rule "polySimp_rightDist" (formula "81") (term "1"))
                                 (rule "mul_literals" (formula "81") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "81") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "81") (term "1,1"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "118")) (ifInst ""  (formula "77")) (ifInst ""  (formula "78")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")))
                                 (rule "wellFormedAnon" (formula "16") (term "1,0"))
                                 (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "50"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "53"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "16") (term "0"))
                                 (rule "translateJavaSubInt" (formula "16") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                 (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "80"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,0"))
                                 (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "80"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "74"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "74"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                                 (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "80") (term "0"))
                                 (rule "translateJavaAddInt" (formula "80") (term "0,2,0"))
                                 (rule "translateJavaMulInt" (formula "80") (term "0,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "0,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "80") (term "0,2,0"))
                                 (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfAnon" (formula "80"))
                                  (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "92")) (ifInst ""  (formula "10")))
                                 (rule "eqSymm" (formula "81"))
                                 (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "81"))
                                 (rule "hideAuxiliaryEq" (formula "81"))
                                 (rule "elementOfSingleton" (formula "80") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "80"))
                                 (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "translateJavaSubInt" (formula "14") (term "4,0,0,1"))
                                 (rule "translateJavaAddInt" (formula "14") (term "3,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "14") (term "0,0,0"))
                                 (rule "translateJavaAddInt" (formula "14") (term "3,0,2"))
                                 (rule "translateJavaAddInt" (formula "14") (term "4,0,2"))
                                 (rule "translateJavaAddInt" (formula "14") (term "0,4,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "4,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "1,4,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "4,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,4,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0"))
                                 (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "73"))
                                 (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                 (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "16") (term "1"))
                                 (rule "translateJavaSubInt" (formula "16") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "7") (inst "b=b"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "84")) (ifInst ""  (formula "87")))
                                 (rule "expand_inInt" (formula "7") (term "1,0,0,1"))
                                 (rule "replace_int_MAX" (formula "7") (term "1,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "7") (term "0,1,1,0,0,1"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "translateJavaCastInt" (formula "13") (term "0"))
                                 (rule "translateJavaAddInt" (formula "12") (term "1"))
                                 (rule "translateJavaCastInt" (formula "11") (term "0"))
                                 (rule "translateJavaMulInt" (formula "8") (term "0"))
                                 (rule "translateJavaMulInt" (formula "7") (term "1"))
                                 (rule "translateJavaCastInt" (formula "10") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_addComm0" (formula "11") (term "1"))
                                 (rule "castedGetAny" (formula "11") (term "0"))
                                 (rule "castedGetAny" (formula "10") (term "0"))
                                 (rule "castedGetAny" (formula "9") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "inEqSimp_commuteLeq" (formula "7"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "56"))
                                 (rule "inEqSimp_commuteGeq" (formula "8"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "55"))
                                 (rule "inEqSimp_homoInEq0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "31"))
                                 (rule "mul_literals" (formula "7") (term "1,1,0"))
                                 (rule "greater_literals" (formula "7") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "2") (term "0"))
                                 (rule "translateJavaCastInt" (formula "2") (term "0,0"))
                                 (rule "castedGetAny" (formula "2") (term "0,0"))
                                 (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "5") (term "0"))
                                 (rule "translateJavaCastInt" (formula "5") (term "0,0"))
                                 (rule "castedGetAny" (formula "5") (term "0,0"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0"))
                                 (rule "polySimp_addLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "translateJavaMod" (formula "8") (term "0"))
                                 (rule "jmod_axiom" (formula "8") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "newSym_eq" (formula "8") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_1,
               de.wiesler.Increment::$position),
    Z(0(#)))"))
                                 (rule "times_zero_1" (formula "8") (term "1,1"))
                                 (rule "add_zero_right" (formula "8") (term "1"))
                                 (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "8"))
                                 (rule "eqSymm" (formula "9"))
                                 (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "82") (term "1,1,0,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "73") (term "1,0,0,0,1,1,1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
                                 (rule "inEqSimp_commuteLeq" (formula "6"))
                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "16") (term "1,3,0,1") (ifseqformula "9"))
                                 (rule "polySimp_addComm0" (formula "16") (term "3,0,1"))
                                 (rule "applyEq" (formula "73") (term "1,1,1,0,0,1,1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "73") (term "1,1,1,0,0,0,1,1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "123") (term "0,1") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "123") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "123") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "123") (term "0,1"))
                                 (rule "applyEq" (formula "84") (term "1,1,0,0,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "123") (term "0,0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq0" (formula "123") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "123") (term "0,0"))
                                 (rule "applyEq" (formula "19") (term "1,1,0,1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "84") (term "0,0,1,0,0,0") (ifseqformula "9"))
                                 (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0,0,0"))
                                 (rule "applyEq" (formula "82") (term "0,0,1,0,0") (ifseqformula "9"))
                                 (rule "polySimp_mulLiterals" (formula "82") (term "0,1,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,1") (ifseqformula "9"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1"))
                                 (rule "applyEq" (formula "83") (term "1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "9"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                                 (rule "applyEq" (formula "74") (term "1,1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "75") (term "1,0,0,1") (ifseqformula "9"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "123") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "123") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "123") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "123") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "123") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "123") (term "0,0"))
                                 (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0"))
                                 (rule "polySimp_addLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                                 (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "121")) (ifInst ""  (formula "27")))
                                 (rule "wellFormedAnon" (formula "4") (term "1,0"))
                                 (rule "translateJavaSubInt" (formula "4") (term "2,0,1,0,1,1,1,1,1"))
                                 (rule "translateJavaAddInt" (formula "4") (term "2,1,1,0,1,1,1,1"))
                                 (rule "replace_known_left" (formula "4") (term "1,1,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                                 (rule "polySimp_elimSub" (formula "4") (term "2,0,1,0,1,1,1,1,1"))
                                 (rule "mul_literals" (formula "4") (term "1,2,0,1,0,1,1,1,1,1"))
                                 (rule "polySimp_addComm0" (formula "4") (term "2,1,1,0,1,1,1,1"))
                                 (rule "polySimp_addComm0" (formula "4") (term "2,0,1,0,1,1,1,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,1,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,1,1,1,1"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1,1,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,1,1,1,1,1"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0,1,1,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,1,1,1,1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,1,1,1,1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "53"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,1,1,1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,1,1"))
                                 (rule "applyEq" (formula "4") (term "0,1,0,1,1,1,1") (ifseqformula "76"))
                                 (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,1,1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,1,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1,1,1,1"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,1,1,1,1") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,0,1,1,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0,1,1,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0,1,1,1,1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (term "0,0") (ifseqformula "56"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (term "1,0,0,1,1,1,1,1") (ifseqformula "56"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0,0,1,1,1,1,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0,1,1,1,1,1"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0,1,1,1,1,1"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0,1,1,1,1,1"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,0,0,1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "4") (term "0,1,0,0,1,1,1,1,1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "5") (term "0"))
                                 (rule "translateJavaCastInt" (formula "5") (term "0,0"))
                                 (rule "castedGetAny" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "3") (term "0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "3") (term "1,1,0"))
                                 (rule "greater_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "77") (term "1,1"))
                                 (rule "translateJavaSubInt" (formula "77") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "77") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "77") (term "1,1"))
                                 (rule "polySimp_addAssoc" (formula "77") (term "1"))
                                 (rule "Contract_axiom_for_writtenCountOfBucket_in_BucketPointers" (formula "77") (term "0"))
                                  (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "122")) (ifInst ""  (formula "27")))
                                 (rule "wellFormedAnon" (formula "77") (term "1,0"))
                                 (rule "replace_known_left" (formula "77") (term "1,1,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "23")))
                                 (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "77") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "77") (term "0,0,0") (ifseqformula "53"))
                                  (builtin "One Step Simplification" (formula "77"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "77") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "77") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "77") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "77") (term "0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "77"))
                                 (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "78") (term "0"))
                                 (rule "translateJavaSubInt" (formula "78") (term "0"))
                                 (rule "polySimp_elimSub" (formula "78") (term "0"))
                                 (rule "polySimp_homoEq" (formula "78"))
                                 (rule "polySimp_mulComm0" (formula "78") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "78") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "78") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "78") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "78") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "78") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "78") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "78"))
                                 (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                                 (rule "polySimp_elimOne" (formula "78") (term "0"))
                                 (rule "applyEq" (formula "18") (term "1,4,0,2") (ifseqformula "78"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "4,0,2"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,4,0,2"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,4,0,2"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0,4,0,2"))
                                 (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "78"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "18") (term "1,4,0,0,1") (ifseqformula "78"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "4,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,4,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,4,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,4,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,4,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                 (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "21") (term "1,1"))
                                 (rule "translateJavaSubInt" (formula "21") (term "1,1"))
                                 (rule "translateJavaAddInt" (formula "21") (term "2,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "21") (term "2,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                 (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "21") (term "0"))
                                 (rule "translateJavaAddInt" (formula "21") (term "2,0,0"))
                                 (rule "translateJavaSubInt" (formula "21") (term "0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "2,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0"))
                                 (rule "polySimp_addLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "Definition_axiom_for_bucketSize_in_de_wiesler_BucketPointers" (formula "70") (term "0"))
                                 (rule "translateJavaSubInt" (formula "70") (term "0"))
                                 (rule "translateJavaAddInt" (formula "70") (term "2,0,0"))
                                 (rule "polySimp_elimSub" (formula "70") (term "0"))
                                 (rule "polySimp_addComm0" (formula "70") (term "2,0,0"))
                                 (rule "polySimp_addComm0" (formula "70") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "70"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "70") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "70") (term "0"))
                                 (rule "applyEq" (formula "70") (term "0,1,0") (ifseqformula "77"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "0,0,1,0"))
                                 (rule "mul_literals" (formula "70") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "70") (term "0"))
                                 (rule "polySimp_addComm0" (formula "70") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "70"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1"))
                                 (rule "polySimp_rightDist" (formula "70") (term "0,1"))
                                 (rule "polySimp_rightDist" (formula "70") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "70") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "70") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "70") (term "0,0,0,0,1"))
                                 (rule "nnf_imp2or" (formula "94") (term "0"))
                                 (rule "Definition_axiom_for_countElement_in_de_wiesler_BucketPointers" (formula "16") (term "0,1,0"))
                                 (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_homoEq" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                 (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "15") (term "0,1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0"))
                                 (rule "translateJavaAddInt" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                 (rule "Definition_axiom_for_bucketSize_in_de_wiesler_BucketPointers" (formula "61") (term "0,1,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "61") (term "2,0,0,1,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "61") (term "0,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "61") (term "0,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "61") (term "0,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "61") (term "2,1,0,1,1,1,0"))
                                 (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "61") (term "0,1,1,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "61") (term "0,1,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "61") (term "1,1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "0,1,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "1,1,1,0"))
                                 (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "61") (term "0,1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "translateJavaAddInt" (formula "61") (term "3,0,2,1,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "61") (term "4,0,2,1,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "61") (term "0,4,0,0,1,1,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "61") (term "3,0,0,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "61") (term "0,0,0,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "61") (term "4,0,0,1,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "61") (term "0,0,0,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "61") (term "4,0,0,1,1,0,1,0"))
                                 (rule "mul_literals" (formula "61") (term "1,4,0,0,1,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "61") (term "0,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "61") (term "4,0,0,1,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "61") (term "0,4,0,0,1,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "61") (term "1,0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "0,0,0,1,0,1,0"))
                                 (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "83") (term "0"))
                                  (builtin "One Step Simplification" (formula "83"))
                                 (rule "translateJavaMod" (formula "83") (term "0"))
                                 (rule "jmod_axiom" (formula "83") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "83"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                 (rule "newSym_eq" (formula "83") (inst "l=l_1") (inst "newSymDef=mul(de.wiesler.BucketPointers::toReadCountOfBucket(anon(heap,
                                                        singleton(int[]::final(bucket_pointers,
                                                                               de.wiesler.BucketPointers::$buffer),
                                                                  arr(add(Z(1(#)),
                                                                          mul(target_bucket,
                                                                              Z(2(#)))))),
                                                        anon_heap_LOOP_0<<anonHeapFunction>>),
                                                   bucket_pointers,
                                                   target_bucket),
    Z(0(#)))"))
                                 (rule "times_zero_1" (formula "83") (term "1,1"))
                                 (rule "add_zero_right" (formula "83") (term "1"))
                                 (rule "applyEq" (formula "84") (term "0,0") (ifseqformula "83"))
                                 (rule "eqSymm" (formula "84"))
                                 (rule "applyEq" (formula "86") (term "0,1") (ifseqformula "84"))
                                 (rule "inEqSimp_homoInEq1" (formula "86") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "86") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "86") (term "0,1"))
                                 (rule "applyEq" (formula "82") (term "0") (ifseqformula "84"))
                                 (rule "applyEq" (formula "83") (term "0,0") (ifseqformula "84"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "86") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "86") (term "1,1"))
                                 (rule "mul_literals" (formula "86") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1"))
                                 (rule "elimGcdGeq_antec" (formula "82") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (rule "add_zero_right" (formula "82") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "82") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "82"))
                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "82") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,0"))
                                 (rule "add_literals" (formula "82") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "82") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "82") (term "0,0"))
                                 (rule "leq_literals" (formula "82") (term "0"))
                                  (builtin "One Step Simplification" (formula "82"))
                                 (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "81") (term "0"))
                                 (rule "replace_known_right" (formula "81") (term "0,1,0") (ifseqformula "125"))
                                  (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "24")) (ifInst ""  (formula "28")) (ifInst ""  (formula "82")))
                                 (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "81") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "81") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "82") (term "0"))
                                 (rule "translateJavaSubInt" (formula "82") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "82") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "82") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "66") (term "0"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "41") (inst "i=i") (inst "i_0=i_0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "expand_inInt" (formula "41") (term "1,0,0,1,0"))
                                 (rule "expand_inInt" (formula "41") (term "1,0,0,1"))
                                 (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "notLeft" (formula "41"))
                                 (rule "notLeft" (formula "41"))
                                 (rule "eqSymm" (formula "49") (term "1,0"))
                                 (rule "translateJavaSubInt" (formula "47") (term "3,0"))
                                 (rule "translateJavaShiftLeftInt" (formula "43") (term "1"))
                                 (rule "translateJavaSubInt" (formula "49") (term "0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "47") (term "3,0"))
                                 (rule "mul_literals" (formula "47") (term "1,3,0"))
                                 (rule "polySimp_elimSub" (formula "49") (term "0,2,0,1,0"))
                                 (rule "mul_literals" (formula "49") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "47") (term "3,0"))
                                 (rule "polySimp_addComm0" (formula "49") (term "0,2,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "48") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "48") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "46"))
                                 (rule "inEqSimp_commuteLeq" (formula "45"))
                                 (rule "inEqSimp_commuteLeq" (formula "44"))
                                 (rule "inEqSimp_commuteLeq" (formula "41"))
                                 (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "46") (term "1") (ifseqformula "43"))
                                 (rule "applyEq" (formula "44") (term "0") (ifseqformula "43"))
                                 (rule "applyEq" (formula "49") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "45") (term "1") (ifseqformula "43"))
                                 (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "38"))
                                 (rule "inEqSimp_commuteGeq" (formula "46"))
                                 (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "43"))
                                 (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "43"))
                                 (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "43"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "applyEq" (formula "39") (term "3,0") (ifseqformula "43"))
                                 (rule "applyEq" (formula "106") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "47") (term "1,3,0") (ifseqformula "43"))
                                 (rule "applyEq" (formula "48") (term "0,1,0,0,1,0,0,0") (ifseqformula "43"))
                                 (rule "applyEq" (formula "48") (term "0,1,0,0,1,1,0") (ifseqformula "43"))
                                 (rule "applyEq" (formula "49") (term "0,1,0,0,1,0,0,0") (ifseqformula "43"))
                                 (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "43"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                                 (rule "javaShiftLeftIntDef" (formula "43") (term "1"))
                                 (rule "mod_axiom" (formula "43") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1"))
                                 (rule "javaShiftLeftIntDef" (formula "44") (term "0"))
                                 (rule "mod_axiom" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                 (rule "javaShiftLeftIntDef" (formula "45") (term "1"))
                                 (rule "mod_axiom" (formula "45") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1"))
                                 (rule "javaShiftLeftIntDef" (formula "46") (term "0"))
                                 (rule "mod_axiom" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                 (rule "javaShiftLeftIntDef" (formula "37") (term "2,0"))
                                 (rule "mod_axiom" (formula "37") (term "1,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,2,0"))
                                 (rule "javaShiftLeftIntDef" (formula "37") (term "0,1,0"))
                                 (rule "mod_axiom" (formula "37") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0"))
                                 (rule "javaShiftLeftIntDef" (formula "39") (term "3,0"))
                                 (rule "mod_axiom" (formula "39") (term "1,0,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,3,0"))
                                 (rule "javaShiftLeftIntDef" (formula "47") (term "1,3,0"))
                                 (rule "mod_axiom" (formula "47") (term "1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,3,0"))
                                 (rule "javaShiftLeftIntDef" (formula "40") (term "1,0,2,0"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "mod_axiom" (formula "40") (term "1,0,1,0,2,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,2,1"))
                                 (rule "javaShiftLeftIntDef" (formula "48") (term "1,1,1,0,0,0"))
                                 (rule "mod_axiom" (formula "48") (term "1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "javaShiftLeftIntDef" (formula "48") (term "1,1,1,1,0"))
                                 (rule "mod_axiom" (formula "48") (term "1,0,1,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,1,1,0"))
                                 (rule "javaShiftLeftIntDef" (formula "49") (term "1,1,1,0,0,0"))
                                 (rule "mod_axiom" (formula "49") (term "1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "shiftLeftDef" (formula "43") (term "0,1"))
                                 (rule "eqSymm" (formula "43"))
                                 (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0"))
                                 (rule "shiftLeftDef" (formula "44") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "44") (term "0") (ifseqformula "43"))
                                 (rule "shiftLeftDef" (formula "45") (term "0,1"))
                                 (rule "polySimp_elimNeg" (formula "45") (term "1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,0,1"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "45") (term "2,0,1"))
                                 (rule "polySimp_elimOneLeft0" (formula "45") (term "2,0,1"))
                                 (rule "shiftRightPositiveShiftDef" (formula "45") (term "1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1"))
                                 (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "45"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "43"))
                                 (rule "inEqSimp_commuteLeq" (formula "45"))
                                 (rule "shiftLeftDef" (formula "46") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "46") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "0,1,1,0,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "46") (term "2,0,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "46") (term "2,0,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "46") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "46") (term "0") (ifseqformula "43"))
                                 (rule "shiftLeftDef" (formula "37") (term "0,2,0"))
                                 (rule "polySimp_elimNeg" (formula "37") (term "1,1,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,1,1,0,2,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "37") (term "2,0,2,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "37") (term "2,0,2,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "37") (term "1,0,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,2,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0,2,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,2,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,2,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,2,0"))
                                 (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "43"))
                                 (rule "shiftLeftDef" (formula "37") (term "0,0,1,0"))
                                 (rule "polySimp_elimNeg" (formula "37") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,1,1,0,0,1,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "37") (term "2,0,0,1,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "37") (term "2,0,0,1,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "37") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "43"))
                                 (rule "shiftLeftDef" (formula "39") (term "0,3,0"))
                                 (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,3,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,3,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,3,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,3,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,3,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,3,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,3,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,3,0"))
                                 (rule "mul_literals" (formula "39") (term "1,0,0,0,0,3,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,0,0,3,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,3,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,3,0"))
                                 (rule "applyEq" (formula "39") (term "3,0") (ifseqformula "43"))
                                 (rule "shiftLeftDef" (formula "47") (term "0,1,3,0"))
                                 (rule "polySimp_elimNeg" (formula "47") (term "1,1,0,1,3,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,1,3,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,1,3,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "0,1,1,0,1,3,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "47") (term "2,0,1,3,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "47") (term "2,0,1,3,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "47") (term "1,0,1,3,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,3,0"))
                                 (rule "mul_literals" (formula "47") (term "1,0,0,0,0,1,3,0"))
                                 (rule "add_zero_right" (formula "47") (term "0,0,0,0,1,3,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,3,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,1,3,0"))
                                 (rule "applyEq" (formula "47") (term "1,3,0") (ifseqformula "43"))
                                 (rule "javaShiftLeftIntDef" (formula "40") (term "1,0,2,0"))
                                 (rule "mod_axiom" (formula "40") (term "1,0,1,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,2,0"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "shiftLeftDef" (formula "48") (term "0,1,1,1,0,0,0"))
                                 (rule "polySimp_elimNeg" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,1,1,0,1,1,1,0,0,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "48") (term "2,0,1,1,1,0,0,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "48") (term "2,0,1,1,1,0,0,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "48") (term "1,0,1,1,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,0,1,1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,1,1,1,0,0,0"))
                                 (rule "applyEq" (formula "48") (term "1,1,1,0,0,0") (ifseqformula "43"))
                                 (rule "shiftLeftDef" (formula "48") (term "0,1,1,1,1,0"))
                                 (rule "polySimp_elimNeg" (formula "48") (term "1,1,0,1,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,0,1,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,1,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,1,1,0,1,1,1,1,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "48") (term "2,0,1,1,1,1,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "48") (term "2,0,1,1,1,1,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "48") (term "1,0,1,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,1,1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,1,1,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,1,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,1,1,1,1,0"))
                                 (rule "applyEq" (formula "48") (term "1,1,1,1,0") (ifseqformula "43"))
                                 (rule "shiftLeftDef" (formula "49") (term "0,1,1,1,0,0,0"))
                                 (rule "polySimp_elimNeg" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "0,1,1,0,1,1,1,0,0,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "49") (term "2,0,1,1,1,0,0,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "49") (term "2,0,1,1,1,0,0,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "49") (term "1,0,1,1,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,0,1,1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,0,1,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0,1,1,1,0,0,0"))
                                 (rule "applyEq" (formula "49") (term "1,1,1,0,0,0") (ifseqformula "43"))
                                 (rule "shiftLeftDef" (formula "40") (term "0,1,0,2,1"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,1,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,1,0,2,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,1,0,2,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,1,0,2,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,1,0,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,2,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,0,0,1,0,2,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,2,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,2,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,0,2,0"))
                                 (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "43"))
                                 (rule "shiftLeftDef" (formula "40") (term "0,1,0,2,1"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,1,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,1,0,2,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,1,0,2,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,1,0,2,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,1,0,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,2,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,0,0,1,0,2,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,0,0,1,0,2,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,2,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,0,2,0"))
                                 (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "43"))
                                 (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "46"))
                                 (rule "mul_literals" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                 (rule "mul_literals" (formula "44") (term "1"))
                                 (rule "commute_or" (formula "15") (term "0,0,0"))
                                 (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "98") (term "1,1,0,0,0"))
                                 (rule "translateJavaMulInt" (formula "98") (term "0,2,1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "0,2,1,1,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10000120112_2" (formula "98") (term "1,1,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "98") (term "1,1,0,0,0"))
                                 (rule "applyEq" (formula "98") (term "1,1,0,0,0") (ifseqformula "89"))
                                 (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "98") (term "0,0,0,0,0"))
                                 (rule "translateJavaMulInt" (formula "98") (term "0,2,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "0,2,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10000120112_2" (formula "98") (term "0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "98") (term "0,0,0,0,0"))
                                 (rule "applyEq" (formula "98") (term "0,0,0,0,0") (ifseqformula "89"))
                                 (rule "Definition_axiom_for_isSortedSeqTransitive_in_de_wiesler_Functions" (formula "104") (term "0") (inst "i=i") (inst "j=j"))
                                  (builtin "One Step Simplification" (formula "104"))
                                 (rule "expand_inInt" (formula "104") (term "1,0,0,1,0"))
                                 (rule "expand_inInt" (formula "104") (term "1,0,0"))
                                 (rule "replace_int_MAX" (formula "104") (term "1,0,1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "104") (term "0,1,1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "104") (term "0,1,1,0,0"))
                                 (rule "replace_int_MAX" (formula "104") (term "1,0,1,0,0"))
                                 (rule "translateJavaCastInt" (formula "104") (term "0,1,0,1,0"))
                                 (rule "translateJavaCastInt" (formula "104") (term "1,1,0,1,0"))
                                 (rule "castedGetAny" (formula "104") (term "0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "104") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "104") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "104") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "104") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "104") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "104") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "104") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "104") (term "1,0,1,0"))
                                 (rule "applyEq" (formula "104") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "102"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "104") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "104") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "104") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "104") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "104") (term "0,0,1,0,0,0,1,0"))
                                 (rule "applyEq" (formula "104") (term "0,1,0,0,1,0,0,0") (ifseqformula "102"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "104") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "104") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "104") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "104") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "104") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "104") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "104") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "104") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "104") (term "1,1,0,0,0"))
                                 (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "101") (term "0"))
                                  (builtin "One Step Simplification" (formula "101"))
                                 (rule "translateJavaMod" (formula "101") (term "0"))
                                 (rule "jmod_axiom" (formula "101") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "101") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "101"))
                                 (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                 (rule "newSym_eq" (formula "101") (inst "l=l_2") (inst "newSymDef=mul(int::final(bucket_pointers,
               de.wiesler.BucketPointers::$first_empty_position),
    Z(0(#)))"))
                                 (rule "times_zero_1" (formula "101") (term "1,1"))
                                 (rule "add_zero_right" (formula "101") (term "1"))
                                 (rule "applyEq" (formula "102") (term "0,0") (ifseqformula "101"))
                                 (rule "eqSymm" (formula "102"))
                                 (rule "applyEq" (formula "101") (term "0,0") (ifseqformula "102"))
                                 (rule "applyEq" (formula "68") (term "0") (ifseqformula "102"))
                                 (rule "inEqSimp_homoInEq0" (formula "68"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "68") (term "0"))
                                 (rule "polySimp_addComm0" (formula "68") (term "0,0"))
                                 (rule "applyEq" (formula "100") (term "0") (ifseqformula "102"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "0,1"))
                                 (rule "elimGcdGeq_antec" (formula "100") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (rule "leq_literals" (formula "100") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "100"))
                                 (rule "polySimp_mulLiterals" (formula "100") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "100") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "100") (term "0,0,0,0"))
                                 (rule "times_zero_1" (formula "100") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "100") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "100") (term "0,0"))
                                 (rule "add_literals" (formula "100") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "100") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "100") (term "0,0"))
                                 (rule "leq_literals" (formula "100") (term "0"))
                                  (builtin "One Step Simplification" (formula "100"))
                                 (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "62"))
                                 (rule "polySimp_rightDist" (formula "68") (term "0,0"))
                                 (rule "polySimp_mulAssoc" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                 (rule "polySimp_addComm1" (formula "68") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "68") (term "0"))
                                 (rule "add_literals" (formula "68") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "68") (term "1,0"))
                                 (rule "add_zero_right" (formula "68") (term "0"))
                                 (rule "polySimp_addComm0" (formula "68") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "68"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "68") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (rule "leq_literals" (formula "68") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "68"))
                                 (rule "neg_literal" (formula "68") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "68") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "68") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                 (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "68") (term "0,0"))
                                 (rule "qeq_literals" (formula "68") (term "0"))
                                  (builtin "One Step Simplification" (formula "68"))
                                 (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "60"))
                                 (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                                 (rule "polySimp_mulAssoc" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0"))
                                 (rule "polySimp_addComm0" (formula "69") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "69"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "69"))
                                 (rule "mul_literals" (formula "55") (term "0,0"))
                                 (rule "add_zero_left" (formula "55") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "55") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (rule "leq_literals" (formula "55") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "neg_literal" (formula "55") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "55") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "55") (term "0,0"))
                                 (rule "qeq_literals" (formula "55") (term "0"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_subsumption0" (formula "69") (ifseqformula "55"))
                                 (rule "leq_literals" (formula "69") (term "0"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "true_left" (formula "69"))
                                 (rule "cut_direct" (formula "85") (term "0,0"))
                                 (branch "CUT: result_1.<created> = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "86"))
                                    (rule "true_left" (formula "86"))
                                    (rule "nnf_imp2or" (formula "33") (term "0"))
                                    (rule "nnf_imp2or" (formula "71") (term "0"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "86") (term "1,1,0,1,1"))
                                    (rule "translateJavaCastInt" (formula "86") (term "0,1,1,0,1,1"))
                                    (rule "castedGetAny" (formula "86") (term "0,1,1,0,1,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "86") (term "1,0,1,1"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "86") (term "0,1"))
                                    (rule "replace_known_right" (formula "86") (term "0,0,1") (ifseqformula "112"))
                                     (builtin "One Step Simplification" (formula "86"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "19") (term "0,1"))
                                    (rule "replace_known_right" (formula "19") (term "0,0,1") (ifseqformula "112"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "76") (term "0"))
                                     (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "24")) (ifInst ""  (formula "28")) (ifInst ""  (formula "139")))
                                    (rule "translateJavaAddInt" (formula "76") (term "2,1,1,0,1,1,1,1"))
                                    (rule "translateJavaSubInt" (formula "76") (term "2,0,1,0,1,1,1,1,1"))
                                    (rule "polySimp_elimSub" (formula "76") (term "2,0,1,0,1,1,1,1,1"))
                                    (rule "mul_literals" (formula "76") (term "1,2,0,1,0,1,1,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "76") (term "2,1,1,0,1,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "76") (term "2,0,1,0,1,1,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0,1,1,1,1,1"))
                                    (rule "add_zero_right" (formula "76") (term "0,0,0,0,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,1,1,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,1,1,1,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "76") (term "0,0,0,1,1,1,1"))
                                    (rule "add_literals" (formula "76") (term "1,1,0,0,0,1,1,1,1"))
                                    (rule "times_zero_1" (formula "76") (term "1,0,0,0,1,1,1,1"))
                                    (rule "add_zero_right" (formula "76") (term "0,0,0,1,1,1,1"))
                                    (rule "leq_literals" (formula "76") (term "0,0,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "76") (term "1,0,0,1,1,1,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "76") (term "0,1,0,0,1,1,1,1"))
                                    (rule "add_literals" (formula "76") (term "1,0,1,0,0,1,1,1,1"))
                                    (rule "times_zero_1" (formula "76") (term "0,1,0,0,1,1,1,1"))
                                    (rule "qeq_literals" (formula "76") (term "1,0,0,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "inEqSimp_homoInEq0" (formula "76") (term "1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "76") (term "0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "76") (term "1,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "76") (term "0,1,0,0,1,1"))
                                    (rule "qeq_literals" (formula "76") (term "1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "inEqSimp_homoInEq0" (formula "76") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "76") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "76") (term "1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "76") (term "0,1,0,0"))
                                    (rule "qeq_literals" (formula "76") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "applyEq" (formula "76") (term "0,0,0,1,1") (ifseqformula "77"))
                                    (rule "applyEq" (formula "76") (term "1,1,0,1,1,1,1") (ifseqformula "77"))
                                    (rule "applyEq" (formula "76") (term "0,1,0,1,1") (ifseqformula "77"))
                                    (rule "applyEq" (formula "76") (term "0,0,0,1,1,1") (ifseqformula "77"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "76") (term "0,0,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "76") (term "0,0,0,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "76") (term "0,0,0,1,1,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "76") (term "0,0") (ifseqformula "35"))
                                    (rule "leq_literals" (formula "76") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "inEqSimp_subsumption1" (formula "76") (term "0,0,1,1,1,1") (ifseqformula "35"))
                                    (rule "leq_literals" (formula "76") (term "0,0,0,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "77") (term "0"))
                                    (rule "translateJavaCastInt" (formula "77") (term "0,0"))
                                    (rule "castedGetAny" (formula "77") (term "0,0"))
                                    (rule "applyEq" (formula "77") (term "0,0") (ifseqformula "68"))
                                    (rule "eqSymm" (formula "77"))
                                    (rule "applyEq" (formula "76") (term "0,0,0,1,1") (ifseqformula "77"))
                                    (rule "replace_known_left" (formula "76") (term "0,0,1,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "applyEq" (formula "76") (term "1,0,1,1,1,1") (ifseqformula "77"))
                                    (rule "applyEq" (formula "76") (term "0,0,0,1,1,1") (ifseqformula "77"))
                                    (rule "applyEq" (formula "76") (term "0,0,1,1") (ifseqformula "77"))
                                    (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "89") (term "0,1,1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "1,0,0") (ifseqformula "84"))
                                     (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "140")) (ifInst ""  (formula "28")))
                                    (rule "wellFormedAnonEQ" (formula "89") (term "1,0") (ifseqformula "84"))
                                    (rule "wellFormedAnon" (formula "89") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "89") (term "2,1,1,0,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "89") (term "2,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "89") (term "1,0,1,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "24")) (ifInst ""  (formula "83")))
                                    (rule "polySimp_addComm0" (formula "89") (term "2,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "89") (term "2,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "89") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "89") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "89") (term "0,0,0") (ifseqformula "64"))
                                     (builtin "One Step Simplification" (formula "89"))
                                    (rule "inEqSimp_commuteLeq" (formula "89") (term "1,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "89") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "89") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "89") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "89") (term "0,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "89"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "90") (term "0,1,1"))
                                    (rule "translateJavaAddInt" (formula "90") (term "0,2,0,1,1"))
                                    (rule "translateJavaMulInt" (formula "90") (term "0,0,2,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "90") (term "0,0,2,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "90") (term "0,2,0,1,1"))
                                    (rule "replaceKnownSelect_taclet10000120112_0" (formula "90") (term "0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_1" (formula "90") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "90") (term "1"))
                                    (rule "applyEq" (formula "90") (term "0,1,0,1") (ifseqformula "88"))
                                    (rule "polySimp_pullOutFactor1" (formula "90") (term "0,1"))
                                    (rule "add_literals" (formula "90") (term "1,0,1"))
                                    (rule "times_zero_1" (formula "90") (term "0,1"))
                                    (rule "add_zero_left" (formula "90") (term "1"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "90") (term "0"))
                                    (rule "translateJavaCastInt" (formula "90") (term "0,0"))
                                    (rule "castedGetAny" (formula "90") (term "0,0"))
                                    (rule "applyEq" (formula "87") (term "0,1,0,1") (ifseqformula "90"))
                                    (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,1"))
                                    (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "6") (term "0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0,0") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "141")) (ifInst ""  (formula "29")))
                                    (rule "wellFormedAnonEQ" (formula "6") (term "1,0") (ifseqformula "85"))
                                    (rule "wellFormedAnon" (formula "6") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "6") (term "2,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "6") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "6") (term "1,1,0") (ifseqformula "84"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "25")) (ifInst ""  (formula "24")))
                                    (rule "polySimp_addComm0" (formula "6") (term "2,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "6") (term "2,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "65"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "90")))
                                    (rule "true_left" (formula "6"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "6") (term "0"))
                                    (rule "translateJavaMulInt" (formula "6") (term "0,0,2,0"))
                                    (rule "translateJavaAddInt" (formula "6") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,2,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_0" (formula "6") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_1" (formula "6") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "88"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "17") (term "1,4,0,1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0,0") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "141")) (ifInst ""  (formula "29")))
                                    (rule "wellFormedAnonEQ" (formula "17") (term "1,0") (ifseqformula "85"))
                                    (rule "wellFormedAnon" (formula "17") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "17") (term "2,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "17") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "17") (term "1,0,1,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "25")) (ifInst ""  (formula "84")))
                                    (rule "polySimp_addComm0" (formula "17") (term "2,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "17") (term "2,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "65"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,1,1"))
                                    (rule "applyEq" (formula "17") (term "1,0,0,1,1,1") (ifseqformula "107"))
                                    (rule "applyEq" (formula "17") (term "1,0,1,1,1,1") (ifseqformula "107"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "18") (term "1,4,0,1"))
                                    (rule "translateJavaMulInt" (formula "18") (term "0,2,1,4,0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,4,0,1"))
                                    (rule "replaceKnownSelect_taclet10000120112_2" (formula "18") (term "1,4,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "18") (term "1,4,0,1"))
                                    (rule "applyEq" (formula "18") (term "1,4,0,1") (ifseqformula "94"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "18") (term "0,0"))
                                    (rule "translateJavaMulInt" (formula "18") (term "0,2,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_2" (formula "18") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "18") (term "0,0"))
                                    (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "94"))
                                    (rule "lenNonNegative" (formula "108") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "108"))
                                    (rule "applyEq" (formula "108") (term "0") (ifseqformula "109"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "108"))
                                    (rule "mul_literals" (formula "108") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "108") (ifseqformula "36"))
                                    (rule "leq_literals" (formula "108") (term "0"))
                                     (builtin "One Step Simplification" (formula "108"))
                                    (rule "true_left" (formula "108"))
                                    (rule "arrayLengthNotNegative" (formula "104") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "104") (ifseqformula "35"))
                                    (rule "leq_literals" (formula "104") (term "0"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "true_left" (formula "104"))
                                    (rule "arrayLengthIsAShort" (formula "104") (term "1"))
                                    (rule "expand_inShort" (formula "104"))
                                    (rule "replace_short_MAX" (formula "104") (term "1,0"))
                                    (rule "replace_short_MIN" (formula "104") (term "0,1"))
                                    (rule "andLeft" (formula "104"))
                                    (rule "inEqSimp_commuteLeq" (formula "105"))
                                    (rule "inEqSimp_subsumption1" (formula "105") (ifseqformula "35"))
                                    (rule "leq_literals" (formula "105") (term "0"))
                                     (builtin "One Step Simplification" (formula "105"))
                                    (rule "true_left" (formula "105"))
                                    (rule "inEqSimp_exactShadow3" (formula "67") (ifseqformula "104"))
                                    (rule "polySimp_rightDist" (formula "67") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "67") (term "0"))
                                    (rule "add_literals" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "67"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "67") (ifseqformula "66"))
                                    (rule "greater_literals" (formula "67") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "mul_literals" (formula "67") (term "0,0"))
                                    (rule "leq_literals" (formula "67") (term "0"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "true_left" (formula "67"))
                                    (rule "seqGetAlphaCast" (formula "110") (term "0"))
                                    (rule "castedGetAny" (formula "110") (term "0"))
                                     (builtin "One Step Simplification" (formula "110"))
                                    (rule "true_left" (formula "110"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "94") (term "0"))
                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "143")) (ifInst ""  (formula "29")))
                                    (rule "wellFormedAnon" (formula "94") (term "1,0"))
                                    (rule "translateJavaAddInt" (formula "94") (term "2,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "94") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "94") (term "0,1,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "24")))
                                    (rule "polySimp_addComm0" (formula "94") (term "2,0,1,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "94") (term "2,1,1,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "94") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "94") (term "0,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "94") (term "0,0,0") (ifseqformula "65"))
                                     (builtin "One Step Simplification" (formula "94"))
                                    (rule "inEqSimp_commuteLeq" (formula "94") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "94") (term "1,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,0,1,1"))
                                    (rule "applyEq" (formula "94") (term "0,1,0,1,1,1") (ifseqformula "95"))
                                    (rule "eqSymm" (formula "94") (term "1,0,1,1,1"))
                                    (rule "applyEq" (formula "94") (term "0,0,0,1,1,1,1,1") (ifseqformula "95"))
                                    (rule "applyEq" (formula "94") (term "0,1,0,0,1,1") (ifseqformula "95"))
                                    (rule "inEqSimp_commuteLeq" (formula "94") (term "1,0,0,1,1"))
                                    (rule "applyEq" (formula "94") (term "0,0,0,1,1,1") (ifseqformula "95"))
                                    (rule "applyEq" (formula "94") (term "0,1,0,0,0,1,1") (ifseqformula "95"))
                                    (rule "inEqSimp_commuteGeq" (formula "94") (term "1,0,0,0,1,1"))
                                    (rule "applyEq" (formula "94") (term "1,0,1,1,1,1") (ifseqformula "109"))
                                    (rule "applyEq" (formula "94") (term "1,0,0,1,1,1") (ifseqformula "109"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "94") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "94") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "94") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "94") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "94"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "95") (term "0"))
                                    (rule "translateJavaMulInt" (formula "95") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "95") (term "0,2,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_4" (formula "95") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_5" (formula "95") (term "0"))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "101") (term "0,0,0,1,1,1"))
                                    (rule "translateJavaSubInt" (formula "101") (term "1,0,0,0,1,1,1"))
                                    (rule "polySimp_elimSub" (formula "101") (term "1,0,0,0,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "101") (term "0,0,0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,0,0,0,0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "0,0,0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "101") (term "1,1,0,0,0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "101") (term "1,1,0,0,0,0,1,1,1"))
                                    (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "101") (term "1,1,1,1") (inst "b=b"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "expand_inInt" (formula "101") (term "1,0,0,1,1,1,1,1"))
                                    (rule "replace_int_MIN" (formula "101") (term "0,1,1,0,0,1,1,1,1,1"))
                                    (rule "replace_int_MAX" (formula "101") (term "1,0,1,0,0,1,1,1,1,1"))
                                    (rule "translateJavaCastInt" (formula "101") (term "0,0,1,0,1,1,1,1"))
                                    (rule "translateJavaCastInt" (formula "101") (term "1,1,0,0,1,0,0,0,1,1,1,1"))
                                    (rule "translateJavaAddInt" (formula "101") (term "1,1,0,0,1,1,1,1"))
                                    (rule "translateJavaMulInt" (formula "101") (term "1,0,0,0,0,0,1,1,1,1"))
                                    (rule "translateJavaCastInt" (formula "101") (term "0,1,0,1,0,0,0,1,1,1,1"))
                                    (rule "translateJavaMulInt" (formula "101") (term "0,1,0,0,0,0,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,0,0,0,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "0,1,0,0,0,0,1,1,1,1"))
                                    (rule "replace_known_left" (formula "101") (term "1,0,0,0,0,1,1,1,1") (ifseqformula "106"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "polySimp_addComm0" (formula "101") (term "1,1,0,0,1,1,1,1"))
                                    (rule "replace_known_left" (formula "101") (term "1,0,0,1,1,1,1") (ifseqformula "110"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "castedGetAny" (formula "101") (term "0,0,1,0,1,1,1,1"))
                                    (rule "replace_known_left" (formula "101") (term "0,1,0,1,1,1,1") (ifseqformula "111"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "castedGetAny" (formula "101") (term "1,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "castedGetAny" (formula "101") (term "0,1,0,1,0,0,1,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "101") (term "1,0,0,0,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,1,0,0,0,1,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,0,1,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,1,0,0,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "101") (term "1,1,0,0,1,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "101") (term "1,0,0,1,0,0,1,1,1,1"))
                                    (rule "applyEq" (formula "101") (term "0,0,1,1,0,0,1,1,1,1") (ifseqformula "109"))
                                    (rule "applyEq" (formula "101") (term "0,1,0,1,0,0,1,1,1,1") (ifseqformula "69"))
                                    (rule "inEqSimp_homoInEq0" (formula "101") (term "1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "1,0,1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "101") (term "1,0,1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "101") (term "0,1,0,1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "0,0,1,0,1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "101") (term "0,1,0,1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "101") (term "0,1,0,1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "101") (term "0,1,0,1,0,0,1,1,1,1"))
                                    (rule "applyEq" (formula "101") (term "1,1,0,0,1,0,0,1,1,1,1") (ifseqformula "109"))
                                    (rule "applyEq" (formula "101") (term "0,0,0,0,1,0,0,1,1,1,1") (ifseqformula "109"))
                                    (rule "applyEq" (formula "101") (term "0,1,0,0,1,0,0,1,1,1,1") (ifseqformula "69"))
                                    (rule "inEqSimp_homoInEq1" (formula "101") (term "1,0,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "1,0,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "101") (term "1,0,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "101") (term "0,1,0,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "0,0,1,0,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "101") (term "0,1,0,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "101") (term "0,1,0,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "101") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0,0,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "101") (term "1,1,0,0,0,1,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "101") (term "1,1,0,0,0,1,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "101") (term "1,1,1,0,0,0,1,1,1,1,1"))
                                    (rule "mul_literals" (formula "101") (term "0,1,1,0,0,0,1,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "101") (term "1,1,1,0,0,0,1,1,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "101") (term "1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "101") (term "0,1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "101") (term "0,1,0,1,0,0,1,1,1,1"))
                                    (rule "replace_known_left" (formula "101") (term "1,0,1,0,0,1,1,1,1") (ifseqformula "64"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "101") (term "1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "101") (term "0,1,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "101") (term "0,1,0,1,0,0,1,1,1,1"))
                                    (rule "replace_known_left" (formula "101") (term "1,0,1,0,0,1,1,1,1") (ifseqformula "71"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "inEqSimp_subsumption6" (formula "101") (term "0,1,0,0,1,1,1,1") (ifseqformula "107"))
                                    (rule "mul_literals" (formula "101") (term "1,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "greater_literals" (formula "101") (term "0,0,0,1,0,0,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "leq_literals" (formula "101") (term "0,0,1,0,0,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "inEqSimp_subsumption6" (formula "101") (term "0,0,0,1,1,1,1") (ifseqformula "36"))
                                    (rule "greater_literals" (formula "101") (term "0,0,0,0,0,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "mul_literals" (formula "101") (term "1,0,0,0,0,1,1,1,1"))
                                    (rule "leq_literals" (formula "101") (term "0,0,0,0,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "101"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "102") (term "1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "102") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "102") (term "0,2,1,1,0,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_2" (formula "102") (term "1,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "102") (term "1,1,0,0"))
                                    (rule "applyEq" (formula "102") (term "1,1,0,0") (ifseqformula "95"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "102") (term "1,2"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "1,0,0") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "144")) (ifInst ""  (formula "29")))
                                    (rule "wellFormedAnonEQ" (formula "102") (term "1,0") (ifseqformula "85"))
                                    (rule "wellFormedAnon" (formula "102") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "102") (term "2,1,1,0,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "102") (term "2,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "102") (term "1,0,1,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "25")) (ifInst ""  (formula "84")))
                                    (rule "polySimp_addComm0" (formula "102") (term "2,0,1,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "102") (term "2,1,1,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "102") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "102") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "102") (term "0,0,0") (ifseqformula "65"))
                                     (builtin "One Step Simplification" (formula "102"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "0,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "1,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "0,0,0,0,1,1"))
                                    (rule "applyEq" (formula "102") (term "1,0,1,1,1,1") (ifseqformula "110"))
                                    (rule "applyEq" (formula "102") (term "1,0,0,1,1,1") (ifseqformula "110"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "102") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "102") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "102") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "102") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "17")))
                                    (rule "true_left" (formula "102"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "102") (term "1,2"))
                                    (rule "translateJavaMulInt" (formula "102") (term "0,2,1,2"))
                                    (rule "polySimp_mulComm0" (formula "102") (term "0,2,1,2"))
                                    (rule "replaceKnownSelect_taclet10000120112_2" (formula "102") (term "1,2"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "102") (term "1,2"))
                                    (rule "inEqSimp_commuteGeq" (formula "102") (term "2"))
                                    (rule "applyEq" (formula "102") (term "0,2") (ifseqformula "95"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "2"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "102") (term "0,0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "1,0,0") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "144")) (ifInst ""  (formula "29")))
                                    (rule "wellFormedAnonEQ" (formula "102") (term "1,0") (ifseqformula "85"))
                                    (rule "wellFormedAnon" (formula "102") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "102") (term "2,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "102") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "102") (term "1,1,0") (ifseqformula "84"))
                                     (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "25")) (ifInst ""  (formula "24")))
                                    (rule "polySimp_addComm0" (formula "102") (term "2,0,1,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "102") (term "2,1,1,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "102") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "102") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "0,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "102") (term "0,0,0") (ifseqformula "65"))
                                     (builtin "One Step Simplification" (formula "102"))
                                    (rule "inEqSimp_commuteLeq" (formula "102") (term "1,0,1,1"))
                                    (rule "applyEq" (formula "102") (term "1,0,0,1,1,1") (ifseqformula "110"))
                                    (rule "applyEq" (formula "102") (term "1,0,1,1,1,1") (ifseqformula "110"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "102") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "102") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "102") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "102") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "17")))
                                    (rule "true_left" (formula "102"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "102") (term "0,0,0,0"))
                                    (rule "translateJavaMulInt" (formula "102") (term "0,2,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "102") (term "0,2,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_2" (formula "102") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "102") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "102") (term "0,0,0,0") (ifseqformula "95"))
                                    (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "19") (term "0,1,1") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "expand_inInt" (formula "19") (term "1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0,1,1"))
                                    (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0,0,1,1"))
                                    (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0,0,0,1,1"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "21") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "21") (term "2,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "21") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "30"))
                                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")) (ifInst ""  (formula "144")))
                                    (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "21") (term "2,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "66"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,1,1"))
                                    (rule "applyEq" (formula "21") (term "0,0,0,1,1,1") (ifseqformula "110"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "0,0,1,1,1"))
                                    (rule "applyEq" (formula "21") (term "1,0,1,1,1,1") (ifseqformula "110"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "69"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "22") (term "0,1,0"))
                                    (rule "translateJavaMulInt" (formula "22") (term "0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "1,0"))
                                    (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "22") (term "0,0,0"))
                                    (rule "translateJavaAddInt" (formula "22") (term "2,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "22") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "27")) (ifInst ""  (formula "145")))
                                    (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "22") (term "1,0,0,1,1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "polySimp_addComm0" (formula "22") (term "2,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "70"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "23") (term "0,0,0"))
                                    (rule "translateJavaMulInt" (formula "23") (term "0,0,2,0,0,0"))
                                    (rule "translateJavaAddInt" (formula "23") (term "0,2,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,2,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,2,0,0,0"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "23") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "23") (term "2,1,1,0,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "23") (term "2,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "32")) (ifInst ""  (formula "146")))
                                    (rule "polySimp_addComm0" (formula "23") (term "2,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "2,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,1,1,1"))
                                    (rule "applyEq" (formula "23") (term "1,0,1,1,1,1") (ifseqformula "112"))
                                    (rule "applyEq" (formula "23") (term "0,0,0,1,1,1") (ifseqformula "112"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "0,0,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "71"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
                                    (rule "true_left" (formula "23"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "23") (term "1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,0,0"))
                                    (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "translateJavaSubInt" (formula "3") (term "0,0"))
                                    (rule "translateJavaUnaryMinusInt" (formula "3") (term "1,0"))
                                    (rule "neg_literal" (formula "3") (term "1,0"))
                                    (rule "translateJavaAddInt" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_elimSub" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addLiterals" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "8") (term "1,1"))
                                    (rule "translateJavaCastInt" (formula "8") (term "0,1,1"))
                                    (rule "castedGetAny" (formula "8") (term "0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "93"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "Contract_axiom_for_blockAligned_in_Buffers" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "translateJavaSubInt" (formula "1") (term "0,1,1,1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1,1,1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,1,1,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,1,1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                                    (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "replace_known_left" (formula "82") (term "0,1,1,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "82"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                                    (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "66"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "68"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "153") (term "0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq0" (formula "153") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "153") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "153") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "153") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "153") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "153") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "153") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "153") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "153") (term "0,0,0"))
                                    (rule "add_literals" (formula "153") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "153") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "153") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "153") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "153"))
                                    (rule "inEqSimp_geqRight" (formula "153"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "71"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0"))
                                    (rule "add_zero_right" (formula "11") (term "0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "11") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "65") (term "0,0"))
                                    (rule "add_zero_left" (formula "65") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "65"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "65") (ifseqformula "6"))
                                    (rule "greater_literals" (formula "65") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "times_zero_1" (formula "65") (term "1,0"))
                                    (rule "qeq_literals" (formula "65") (term "0"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "closeFalse" (formula "65"))
                                 )
                                 (branch "CUT: result_1.<created> = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "85"))
                                    (rule "nnf_imp2or" (formula "33") (term "0"))
                                    (rule "nnf_imp2or" (formula "71") (term "0"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "86") (term "0"))
                                    (rule "replace_known_right" (formula "86") (term "0,0") (ifseqformula "113"))
                                     (builtin "One Step Simplification" (formula "86"))
                                    (rule "andLeft" (formula "86"))
                                    (rule "andLeft" (formula "87"))
                                    (rule "andLeft" (formula "88"))
                                    (rule "andLeft" (formula "87"))
                                    (rule "andLeft" (formula "87"))
                                    (rule "andLeft" (formula "87"))
                                    (rule "replace_known_left" (formula "103") (term "0") (ifseqformula "86"))
                                     (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "86")) (ifInst ""  (formula "92")))
                                    (rule "andLeft" (formula "103"))
                                    (rule "inEqSimp_exactShadow3" (formula "87") (ifseqformula "88"))
                                    (rule "times_zero_1" (formula "87") (term "0,0"))
                                    (rule "add_zero_left" (formula "87") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "87"))
                                    (rule "mul_literals" (formula "87") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "87") (ifseqformula "2"))
                                    (rule "greater_literals" (formula "87") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "87"))
                                    (rule "mul_literals" (formula "87") (term "1,0"))
                                    (rule "leq_literals" (formula "87") (term "0"))
                                     (builtin "One Step Simplification" (formula "87"))
                                    (rule "true_left" (formula "87"))
                                    (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "19") (term "0,0,1,1"))
                                    (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "29"))
                                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "147")))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "65"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "20") (term "0"))
                                    (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "121"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "replace_known_left" (formula "100") (term "0,1") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "20")) (ifInst ""  (formula "21")))
                                    (rule "replace_known_left" (formula "19") (term "0,1,1,1") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "100")))
                                    (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "78") (term "0"))
                                     (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")) (ifInst ""  (formula "30")) (ifInst ""  (formula "149")) (ifInst ""  (formula "20")) (ifInst ""  (formula "101")))
                                    (rule "translateJavaAddInt" (formula "78") (term "2,1,1,0,1,1,1"))
                                    (rule "translateJavaSubInt" (formula "78") (term "2,0,1,1,1,1,1"))
                                    (rule "polySimp_elimSub" (formula "78") (term "2,0,1,1,1,1,1"))
                                    (rule "mul_literals" (formula "78") (term "1,2,0,1,1,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "78") (term "2,1,1,0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "78") (term "2,0,1,1,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,1,1,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "78") (term "0,0,0,1,1,1"))
                                    (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,1,1"))
                                    (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,1,1"))
                                    (rule "add_zero_right" (formula "78") (term "0,0,0,1,1,1"))
                                    (rule "leq_literals" (formula "78") (term "0,0,1,1,1"))
                                     (builtin "One Step Simplification" (formula "78"))
                                    (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,1,1,1"))
                                    (rule "add_zero_right" (formula "78") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,1,1,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "78") (term "0,1,0,1,1,1"))
                                    (rule "add_literals" (formula "78") (term "1,0,1,0,1,1,1"))
                                    (rule "times_zero_1" (formula "78") (term "0,1,0,1,1,1"))
                                    (rule "qeq_literals" (formula "78") (term "1,0,1,1,1"))
                                     (builtin "One Step Simplification" (formula "78"))
                                    (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "78") (term "0,1,0"))
                                    (rule "add_literals" (formula "78") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "78") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "78") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "78"))
                                    (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "78") (term "0,1,0,0,1"))
                                    (rule "add_literals" (formula "78") (term "1,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "78") (term "0,1,0,0,1"))
                                    (rule "qeq_literals" (formula "78") (term "1,0,0,1"))
                                     (builtin "One Step Simplification" (formula "78"))
                                    (rule "applyEq" (formula "78") (term "0,0,0,1,1") (ifseqformula "79"))
                                    (rule "applyEq" (formula "78") (term "1,1,1,1,1") (ifseqformula "79"))
                                    (rule "applyEq" (formula "78") (term "0,1,0,1") (ifseqformula "79"))
                                    (rule "applyEq" (formula "78") (term "0,0,0,1") (ifseqformula "79"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "78") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "78") (term "0,0,1,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "78") (term "0") (ifseqformula "37"))
                                    (rule "leq_literals" (formula "78") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "78"))
                                    (rule "andLeft" (formula "78"))
                                    (rule "andLeft" (formula "78"))
                                    (rule "andLeft" (formula "80"))
                                    (rule "inEqSimp_subsumption1" (formula "81") (term "0") (ifseqformula "37"))
                                    (rule "leq_literals" (formula "81") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "81"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "82") (term "0"))
                                    (rule "translateJavaCastInt" (formula "82") (term "0,0"))
                                    (rule "castedGetAny" (formula "82") (term "0,0"))
                                    (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "70"))
                                    (rule "eqSymm" (formula "82"))
                                    (rule "applyEq" (formula "81") (term "1") (ifseqformula "82"))
                                    (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "82"))
                                    (rule "applyEq" (formula "79") (term "0") (ifseqformula "82"))
                                    (rule "applyEq" (formula "78") (term "0") (ifseqformula "82"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "78"))
                                    (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "100") (term "0,1,1"))
                                    (rule "translateJavaMulInt" (formula "100") (term "0,0,2,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "100") (term "0,2,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "100") (term "0,0,2,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "100") (term "0,2,0,1,1"))
                                    (rule "replaceKnownSelect_taclet10000120112_0" (formula "100") (term "0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_1" (formula "100") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "100") (term "1"))
                                    (rule "applyEq" (formula "100") (term "0,1,0,1") (ifseqformula "99"))
                                    (rule "polySimp_pullOutFactor1" (formula "100") (term "0,1"))
                                    (rule "add_literals" (formula "100") (term "1,0,1"))
                                    (rule "times_zero_1" (formula "100") (term "0,1"))
                                    (rule "add_zero_left" (formula "100") (term "1"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "100") (term "0"))
                                    (rule "translateJavaCastInt" (formula "100") (term "0,0"))
                                    (rule "castedGetAny" (formula "100") (term "0,0"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "6") (term "0"))
                                    (rule "translateJavaAddInt" (formula "6") (term "0,2,0"))
                                    (rule "translateJavaMulInt" (formula "6") (term "0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,2,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_0" (formula "6") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_1" (formula "6") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "99"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "95"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "17") (term "1,4,0,1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0,0") (ifseqformula "89"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "92")) (ifInst ""  (formula "152")) (ifInst ""  (formula "92")) (ifInst ""  (formula "98")) (ifInst ""  (formula "31")))
                                    (rule "wellFormedAnonEQ" (formula "17") (term "1,0") (ifseqformula "89"))
                                    (rule "wellFormedAnon" (formula "17") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "17") (term "2,1,1,0,0,1"))
                                    (rule "translateJavaAddInt" (formula "17") (term "2,0,1,0,1"))
                                    (rule "replace_known_left" (formula "17") (term "1,0,1,0") (ifseqformula "26"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "27")) (ifInst ""  (formula "88")))
                                    (rule "polySimp_addComm0" (formula "17") (term "2,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "17") (term "2,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
                                    (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "17") (term "1,0,1") (ifseqformula "96"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1"))
                                    (rule "replace_known_left" (formula "17") (term "0,0,0,1") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "applyEq" (formula "17") (term "1,0,0,1,1") (ifseqformula "117"))
                                    (rule "applyEq" (formula "17") (term "1,0,1,1,1") (ifseqformula "117"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                    (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "70"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "23") (term "1,4,0,1"))
                                    (rule "translateJavaMulInt" (formula "23") (term "0,2,1,4,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,4,0,1"))
                                    (rule "replaceKnownSelect_taclet10000120112_2" (formula "23") (term "1,4,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "23") (term "1,4,0,1"))
                                    (rule "applyEq" (formula "23") (term "1,4,0,1") (ifseqformula "108"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "23") (term "0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0,0") (ifseqformula "95"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "98")) (ifInst ""  (formula "158")) (ifInst ""  (formula "98")) (ifInst ""  (formula "22")) (ifInst ""  (formula "104")) (ifInst ""  (formula "37")))
                                    (rule "wellFormedAnonEQ" (formula "23") (term "1,0") (ifseqformula "95"))
                                    (rule "wellFormedAnon" (formula "23") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "23") (term "2,1,1,0,0,1"))
                                    (rule "translateJavaAddInt" (formula "23") (term "2,0,1,0,1"))
                                    (rule "replace_known_left" (formula "23") (term "1,1,0") (ifseqformula "94"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "33")) (ifInst ""  (formula "32")))
                                    (rule "polySimp_addComm0" (formula "23") (term "2,1,1,0,0,1"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0,1") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_addComm0" (formula "23") (term "2,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0,1") (ifseqformula "99"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,1") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0"))
                                    (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "102"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "123"))
                                    (rule "replace_known_left" (formula "23") (term "1,1") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "123"))
                                    (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "23") (term "0,0"))
                                    (rule "translateJavaMulInt" (formula "23") (term "0,2,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,2,0,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_2" (formula "23") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "23") (term "0,0"))
                                    (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "108"))
                                    (rule "lenNonNegative" (formula "123") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "123"))
                                    (rule "applyEq" (formula "123") (term "0") (ifseqformula "124"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "123"))
                                    (rule "mul_literals" (formula "123") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "123") (ifseqformula "43"))
                                    (rule "leq_literals" (formula "123") (term "0"))
                                     (builtin "One Step Simplification" (formula "123"))
                                    (rule "true_left" (formula "123"))
                                    (rule "arrayLengthNotNegative" (formula "119") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "119") (ifseqformula "42"))
                                    (rule "leq_literals" (formula "119") (term "0"))
                                     (builtin "One Step Simplification" (formula "119"))
                                    (rule "true_left" (formula "119"))
                                    (rule "arrayLengthIsAShort" (formula "119") (term "1"))
                                    (rule "expand_inShort" (formula "119"))
                                    (rule "replace_short_MIN" (formula "119") (term "0,1"))
                                    (rule "replace_short_MAX" (formula "119") (term "1,0"))
                                    (rule "andLeft" (formula "119"))
                                    (rule "inEqSimp_commuteLeq" (formula "120"))
                                    (rule "inEqSimp_subsumption1" (formula "120") (ifseqformula "42"))
                                    (rule "leq_literals" (formula "120") (term "0"))
                                     (builtin "One Step Simplification" (formula "120"))
                                    (rule "true_left" (formula "120"))
                                    (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "119"))
                                    (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "74") (term "0"))
                                    (rule "add_literals" (formula "74") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "74") (ifseqformula "73"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0"))
                                    (rule "greater_literals" (formula "74") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "74"))
                                    (rule "leq_literals" (formula "74") (term "0"))
                                     (builtin "One Step Simplification" (formula "74"))
                                    (rule "true_left" (formula "74"))
                                    (rule "seqGetAlphaCast" (formula "125") (term "0"))
                                    (rule "castedGetAny" (formula "125") (term "0"))
                                     (builtin "One Step Simplification" (formula "125"))
                                    (rule "true_left" (formula "125"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "108") (term "0"))
                                    (rule "translateJavaMulInt" (formula "108") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "108") (term "0,2,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_4" (formula "108") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_5" (formula "108") (term "0"))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "116") (term "1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "116") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "0,2,1,1,0,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_2" (formula "116") (term "1,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "116") (term "1,1,0,0"))
                                    (rule "applyEq" (formula "116") (term "1,1,0,0") (ifseqformula "108"))
                                    (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "116") (term "0,2"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "1,0,0") (ifseqformula "94"))
                                     (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "97")) (ifInst ""  (formula "159")) (ifInst ""  (formula "97")) (ifInst ""  (formula "103")) (ifInst ""  (formula "36")))
                                    (rule "wellFormedAnonEQ" (formula "116") (term "1,0") (ifseqformula "94"))
                                    (rule "wellFormedAnon" (formula "116") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "116") (term "2,0,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "116") (term "2,1,1,0,0,1"))
                                    (rule "replace_known_left" (formula "116") (term "1,0,1,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "32")) (ifInst ""  (formula "93")))
                                    (rule "polySimp_addComm0" (formula "116") (term "2,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "116") (term "2,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "116") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "116") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "116") (term "0,0"))
                                    (rule "replace_known_left" (formula "116") (term "0,0") (ifseqformula "72"))
                                     (builtin "One Step Simplification" (formula "116"))
                                    (rule "inEqSimp_commuteLeq" (formula "116") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "116") (term "1,0,1") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "116"))
                                    (rule "inEqSimp_commuteLeq" (formula "116") (term "0,0,0,1"))
                                    (rule "replace_known_left" (formula "116") (term "0,0,0,1") (ifseqformula "98"))
                                     (builtin "One Step Simplification" (formula "116"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "116") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "116") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "116") (term "0,0"))
                                    (rule "replace_known_left" (formula "116") (term "0") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "116"))
                                    (rule "andLeft" (formula "116"))
                                    (rule "andLeft" (formula "116"))
                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "117"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "30") (term "0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0"))
                                    (rule "add_zero_right" (formula "30") (term "0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0"))
                                    (rule "qeq_literals" (formula "29") (term "0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_exactShadow3" (formula "116") (ifseqformula "117"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "116"))
                                    (rule "polySimp_mulLiterals" (formula "116") (term "1"))
                                    (rule "polySimp_elimOne" (formula "116") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "117"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0"))
                                    (rule "add_zero_right" (formula "8") (term "0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "84"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(6(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "119") (term "0,2"))
                                    (rule "translateJavaMulInt" (formula "119") (term "0,0,2,0,2"))
                                    (rule "translateJavaAddInt" (formula "119") (term "0,2,0,2"))
                                    (rule "polySimp_mulComm0" (formula "119") (term "0,0,2,0,2"))
                                    (rule "polySimp_addComm0" (formula "119") (term "0,2,0,2"))
                                    (rule "replaceKnownSelect_taclet10000120112_0" (formula "119") (term "0,2"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_1" (formula "119") (term "0,2"))
                                    (rule "inEqSimp_commuteGeq" (formula "119") (term "2"))
                                    (rule "applyEq" (formula "119") (term "1,2") (ifseqformula "104"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "119") (term "0,0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "1,0,0") (ifseqformula "94"))
                                     (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "97")) (ifInst ""  (formula "162")) (ifInst ""  (formula "97")) (ifInst ""  (formula "22")) (ifInst ""  (formula "103")) (ifInst ""  (formula "36")))
                                    (rule "wellFormedAnonEQ" (formula "119") (term "1,0") (ifseqformula "94"))
                                    (rule "wellFormedAnon" (formula "119") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "119") (term "2,0,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "119") (term "2,1,1,0,0,1"))
                                    (rule "replace_known_left" (formula "119") (term "1,1,0") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")))
                                    (rule "polySimp_addComm0" (formula "119") (term "2,1,1,0,0,1"))
                                    (rule "replace_known_left" (formula "119") (term "1,0,0,1") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "119"))
                                    (rule "polySimp_addComm0" (formula "119") (term "2,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "119") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "119") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "119") (term "0,0"))
                                    (rule "replace_known_left" (formula "119") (term "0,0") (ifseqformula "72"))
                                     (builtin "One Step Simplification" (formula "119"))
                                    (rule "inEqSimp_commuteLeq" (formula "119") (term "0,0,0,1"))
                                    (rule "replace_known_left" (formula "119") (term "0,0,0,1") (ifseqformula "98"))
                                     (builtin "One Step Simplification" (formula "119"))
                                    (rule "inEqSimp_commuteLeq" (formula "119") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "119") (term "1,0,1") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "119"))
                                    (rule "inEqSimp_commuteLeq" (formula "119") (term "1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "119") (term "0,1"))
                                    (rule "replace_known_left" (formula "119") (term "0,1") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "119"))
                                    (rule "applyEq" (formula "119") (term "1,0,0,1") (ifseqformula "127"))
                                    (rule "replace_known_left" (formula "119") (term "0,1") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "119"))
                                    (rule "applyEq" (formula "119") (term "1,1") (ifseqformula "127"))
                                    (rule "replace_known_left" (formula "119") (term "1") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "119"))
                                    (rule "true_left" (formula "119"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "119") (term "0,0,0,0"))
                                    (rule "translateJavaMulInt" (formula "119") (term "0,2,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "119") (term "0,2,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_2" (formula "119") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_3" (formula "119") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "119") (term "0,0,0,0") (ifseqformula "108"))
                                    (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "24") (term "0,1,1") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "expand_inInt" (formula "24") (term "1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "24") (term "0,1,1,0,0,1,1"))
                                    (rule "replace_int_MAX" (formula "24") (term "1,0,1,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,0,1,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "1,1,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "24") (term "1,1,0,0,0,1,1"))
                                    (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "28") (term "0,1,1,0"))
                                    (rule "translateJavaAddInt" (formula "28") (term "2,1,1,0,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "28") (term "2,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "26"))
                                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "26")) (ifInst ""  (formula "33")) (ifInst ""  (formula "37")) (ifInst ""  (formula "162")) (ifInst ""  (formula "110")))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0"))
                                    (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,0"))
                                    (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "76"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0"))
                                    (rule "qeq_literals" (formula "30") (term "0"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "33"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1"))
                                    (rule "mul_literals" (formula "29") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "33") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "33") (term "2,1,1,0,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "33") (term "2,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "33") (term "1,0,0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "26")) (ifInst ""  (formula "38")) (ifInst ""  (formula "167")) (ifInst ""  (formula "26")) (ifInst ""  (formula "115")))
                                    (rule "polySimp_addComm0" (formula "33") (term "2,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "33") (term "2,1,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0"))
                                    (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "78"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0,0,1") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "33") (term "1,0,1") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,1,1"))
                                    (rule "applyEq" (formula "33") (term "0,0,0,1,1") (ifseqformula "132"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "0,0,1,1"))
                                    (rule "applyEq" (formula "33") (term "1,0,1,1,1") (ifseqformula "132"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                                    (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "81"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "29"))
                                    (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0"))
                                    (rule "qeq_literals" (formula "33") (term "0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "38") (term "0,1,0"))
                                    (rule "translateJavaMulInt" (formula "38") (term "0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "38") (term "0,0,0"))
                                    (rule "translateJavaAddInt" (formula "38") (term "0,2,0,0,0"))
                                    (rule "translateJavaMulInt" (formula "38") (term "0,0,2,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,0,2,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,2,0,0,0"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "38") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "38") (term "2,1,1,0,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "38") (term "2,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "38") (term "1,0,0,0,0") (ifseqformula "26"))
                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "43")) (ifInst ""  (formula "47")) (ifInst ""  (formula "172")) (ifInst ""  (formula "26")) (ifInst ""  (formula "37")) (ifInst ""  (formula "120")))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,1,0,0,1"))
                                    (rule "replace_known_left" (formula "38") (term "1,0,0,1") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0"))
                                    (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,0,1"))
                                    (rule "replace_known_left" (formula "38") (term "1,0,0,1") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "38") (term "1,0,1") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,1"))
                                    (rule "replace_known_left" (formula "38") (term "0,1") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1"))
                                    (rule "applyEq" (formula "38") (term "1,1,1") (ifseqformula "137"))
                                    (rule "replace_known_left" (formula "38") (term "1,1") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "applyEq" (formula "38") (term "0,0,1") (ifseqformula "137"))
                                    (rule "inEqSimp_commuteGeq" (formula "38") (term "0,1"))
                                    (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "38") (term "1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "38") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,0,0"))
                                    (rule "Contract_axiom_for_blockAligned_in_Buffers" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "translateJavaSubInt" (formula "3") (term "0,1,1,1"))
                                    (rule "polySimp_elimSub" (formula "3") (term "0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "1,1,1"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0,1,1,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,1,1,1"))
                                    (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "translateJavaUnaryMinusInt" (formula "4") (term "1,0"))
                                    (rule "neg_literal" (formula "4") (term "1,0"))
                                    (rule "translateJavaAddInt" (formula "4") (term "0,0,0"))
                                    (rule "translateJavaSubInt" (formula "4") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addLiterals" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                    (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "9") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "109")) (ifInst ""  (formula "109")) (ifInst ""  (formula "173")) (ifInst ""  (formula "109")) (ifInst ""  (formula "115")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "106"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "48")))
                                    (rule "wellFormedAnonEQ" (formula "9") (term "1,0") (ifseqformula "106"))
                                    (rule "wellFormedAnon" (formula "9") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "9") (term "2,1,1,0,1,1,1"))
                                    (rule "translateJavaSubInt" (formula "9") (term "2,0,1,1,1,1,1"))
                                    (rule "replace_known_left" (formula "9") (term "1,0,1,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "44")) (ifInst ""  (formula "105")))
                                    (rule "polySimp_elimSub" (formula "9") (term "2,0,1,1,1,1,1"))
                                    (rule "mul_literals" (formula "9") (term "1,2,0,1,1,1,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "2,1,1,0,1,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,2,1,1,0,1,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "2,0,1,1,1,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,2,0,1,1,1,1,1"))
                                    (rule "add_zero_left" (formula "9") (term "2,0,1,1,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,1,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,1,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,1,1,1,1"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,0,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,1"))
                                    (rule "replace_known_left" (formula "9") (term "1,0,0,1") (ifseqformula "113"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,1,1,1"))
                                    (rule "replace_known_left" (formula "9") (term "1,0,1,1,1,1") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0"))
                                    (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "1,1,1,1,1"))
                                    (rule "replace_known_left" (formula "9") (term "1,1,1,1,1") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0,0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0"))
                                    (rule "mul_literals" (formula "9") (term "1,0"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "84"))
                                    (rule "leq_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "13") (term "1,1"))
                                    (rule "translateJavaCastInt" (formula "13") (term "0,1,1"))
                                    (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "13"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "120"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "10"))
                                    (rule "polySimp_mulAssoc" (formula "26") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "26") (ifseqformula "79"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0"))
                                    (rule "greater_literals" (formula "26") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "116") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "116") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "116"))
                                    (rule "polySimp_mulLiterals" (formula "116") (term "0"))
                                    (rule "polySimp_elimOne" (formula "116") (term "0"))
                                    (rule "Contract_axiom_for_blockAligned_in_Buffers" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "101")))
                                    (rule "translateJavaSubInt" (formula "1") (term "0,1,1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,1,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                                    (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "82"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "translateJavaAddInt" (formula "3") (term "0,0,0"))
                                    (rule "translateJavaUnaryMinusInt" (formula "3") (term "1,0"))
                                    (rule "neg_literal" (formula "3") (term "1,0"))
                                    (rule "translateJavaSubInt" (formula "3") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addLiterals" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "104"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "135"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0"))
                                    (rule "add_zero_right" (formula "15") (term "0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "mul_literals" (formula "15") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "118"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "118") (ifseqformula "119"))
                                    (rule "polySimp_rightDist" (formula "118") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "118") (term "1,0,0"))
                                    (rule "mul_literals" (formula "118") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "118") (term "0"))
                                    (rule "add_literals" (formula "118") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "118"))
                                    (rule "polySimp_mulLiterals" (formula "118") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "118") (ifseqformula "9"))
                                    (rule "mul_literals" (formula "118") (term "0,1,0"))
                                    (rule "greater_literals" (formula "118") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "118"))
                                    (rule "leq_literals" (formula "118") (term "0"))
                                     (builtin "One Step Simplification" (formula "118"))
                                    (rule "true_left" (formula "118"))
                                    (rule "nnf_notAnd" (formula "149") (term "0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,1"))
                                    (rule "commute_and" (formula "184"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "103"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "3") (term "0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "86"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "7") (term "1,1,1,1,1,1") (inst "b=b"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "expand_inInt" (formula "7") (term "1,0,0,1,1,1,1,1,1,1"))
                                    (rule "replace_int_MIN" (formula "7") (term "0,1,1,0,0,1,1,1,1,1,1,1"))
                                    (rule "replace_int_MAX" (formula "7") (term "1,0,1,0,0,1,1,1,1,1,1,1"))
                                    (rule "translateJavaCastInt" (formula "7") (term "1,1,0,0,1,0,0,0,1,1,1,1,1,1"))
                                    (rule "translateJavaMulInt" (formula "7") (term "1,0,0,0,0,0,1,1,1,1,1,1"))
                                    (rule "translateJavaCastInt" (formula "7") (term "0,0,1,0,1,1,1,1,1,1"))
                                    (rule "translateJavaMulInt" (formula "7") (term "0,1,0,0,0,0,1,1,1,1,1,1"))
                                    (rule "translateJavaCastInt" (formula "7") (term "0,1,0,1,0,0,0,1,1,1,1,1,1"))
                                    (rule "translateJavaAddInt" (formula "7") (term "1,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,0,1,1,1,1,1,1"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0,0,0,1,1,1,1,1,1") (ifseqformula "143"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,1,1,1,1,1,1"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0,1,1,1,1,1,1") (ifseqformula "147"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "castedGetAny" (formula "7") (term "0,0,1,0,1,1,1,1,1,1"))
                                    (rule "replace_known_left" (formula "7") (term "0,1,0,1,1,1,1,1,1") (ifseqformula "148"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "castedGetAny" (formula "7") (term "0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "castedGetAny" (formula "7") (term "1,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,1,1,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,1,1,1,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,1,1,1,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "1,1,0,0,1,1,1,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,1,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "applyEq" (formula "7") (term "0,0,0,0,1,0,0,1,1,1,1,1,1") (ifseqformula "146"))
                                    (rule "applyEq" (formula "7") (term "1,1,0,0,1,0,0,1,1,1,1,1,1") (ifseqformula "146"))
                                    (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0,1,1,1,1,1,1") (ifseqformula "95"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "applyEq" (formula "7") (term "0,1,0,1,0,0,1,1,1,1,1,1") (ifseqformula "95"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "applyEq" (formula "7") (term "0,0,1,1,0,0,1,1,1,1,1,1") (ifseqformula "146"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,1,1,1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,1,1,1,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,1,1,1,1,1,1,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,1,1,1,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,1,1,1,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,1,1,1,1,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0,1,0,0,1,1,1,1,1,1") (ifseqformula "97"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,1,0,0,1,1,1,1,1,1") (ifseqformula "90"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_subsumption6" (formula "7") (term "0,1,0,0,1,1,1,1,1,1") (ifseqformula "144"))
                                    (rule "mul_literals" (formula "7") (term "1,1,0,0,1,0,0,1,1,1,1,1,1"))
                                    (rule "greater_literals" (formula "7") (term "0,0,0,1,0,0,1,1,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "leq_literals" (formula "7") (term "0,0,1,0,0,1,1,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_subsumption6" (formula "7") (term "0,0,0,1,1,1,1,1,1") (ifseqformula "62"))
                                    (rule "mul_literals" (formula "7") (term "1,1,0,0,0,0,1,1,1,1,1,1"))
                                    (rule "greater_literals" (formula "7") (term "0,0,0,0,0,1,1,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "leq_literals" (formula "7") (term "0,0,0,0,1,1,1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "Contract_axiom_for_blockAligned_in_Buffers" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "translateJavaSubInt" (formula "8") (term "0,1,1,1"))
                                    (rule "polySimp_elimSub" (formula "8") (term "0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,1,1"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0,1,1,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,1,1,1"))
                                    (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "translateJavaSubInt" (formula "8") (term "0,0"))
                                    (rule "translateJavaUnaryMinusInt" (formula "8") (term "1,0"))
                                    (rule "neg_literal" (formula "8") (term "1,0"))
                                    (rule "translateJavaAddInt" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_elimSub" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addLiterals" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "90"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0"))
                                    (rule "polySimp_addLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "10") (ifseqformula "9"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "greater_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "88"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "185") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq0" (formula "185") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "185") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "185") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "185") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "185") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "185") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "185") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "185") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "185") (term "0,0,1"))
                                    (rule "add_literals" (formula "185") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "185") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "185") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "185") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "185"))
                                    (rule "inEqSimp_geqRight" (formula "185"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "127") (term "1,1") (inst "b=b"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "expand_inInt" (formula "127") (term "1,0,0,1,1,1"))
                                    (rule "replace_int_MIN" (formula "127") (term "0,1,1,0,0,1,1,1"))
                                    (rule "replace_int_MAX" (formula "127") (term "1,0,1,0,0,1,1,1"))
                                    (rule "translateJavaMulInt" (formula "127") (term "1,0,0,0,0,0,1,1"))
                                    (rule "translateJavaCastInt" (formula "127") (term "0,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "127") (term "1,1,0,0,1,1"))
                                    (rule "translateJavaCastInt" (formula "127") (term "1,1,0,0,1,0,0,0,1,1"))
                                    (rule "translateJavaMulInt" (formula "127") (term "0,1,0,0,0,0,1,1"))
                                    (rule "translateJavaCastInt" (formula "127") (term "0,1,0,1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "127") (term "1,0,0,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "127") (term "0,1,0,0,0,0,1,1"))
                                    (rule "replace_known_left" (formula "127") (term "1,0,0,0,0,1,1") (ifseqformula "144"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "polySimp_addComm0" (formula "127") (term "1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "127") (term "1,0,0,1,1") (ifseqformula "148"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "castedGetAny" (formula "127") (term "0,1,0,1,0,0,1,1"))
                                    (rule "castedGetAny" (formula "127") (term "1,1,0,0,1,0,0,1,1"))
                                    (rule "castedGetAny" (formula "127") (term "0,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "127") (term "0,1,0,1,1") (ifseqformula "149"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "inEqSimp_ltToLeq" (formula "127") (term "1,0,0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "127") (term "1,0,0,1,0,0,0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "127") (term "1,0,0,1,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "127") (term "0,0,0,0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "127") (term "0,0,0,1,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "127") (term "1,1,0,0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "127") (term "0,0,0,1,1"))
                                    (rule "applyEq" (formula "127") (term "0,1,0,0,1,0,0,1,1") (ifseqformula "96"))
                                    (rule "inEqSimp_commuteGeq" (formula "127") (term "1,0,0,1,0,0,1,1"))
                                    (rule "applyEq" (formula "127") (term "0,0,0,0,1,0,0,1,1") (ifseqformula "147"))
                                    (rule "applyEq" (formula "127") (term "0,0,1,1,0,0,1,1") (ifseqformula "147"))
                                    (rule "applyEq" (formula "127") (term "0,1,0,1,0,0,1,1") (ifseqformula "96"))
                                    (rule "inEqSimp_homoInEq0" (formula "127") (term "1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "127") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "127") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "127") (term "0,1,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "127") (term "0,0,1,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "127") (term "0,1,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "127") (term "0,1,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "127") (term "0,1,0,1,0,0,1,1"))
                                    (rule "applyEq" (formula "127") (term "0,1,0,0,1,0,0,1,1") (ifseqformula "147"))
                                    (rule "inEqSimp_homoInEq0" (formula "127") (term "1,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "127") (term "1,0,1,0,0,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "127") (term "0,1,0,0,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "127") (term "0,0,1,0,0,1,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "127") (term "1,1,0,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "127") (term "1,1,0,0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "127") (term "1,1,1,0,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "127") (term "0,1,1,0,0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "127") (term "1,1,1,0,0,0,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "127") (term "1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "127") (term "0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "127") (term "0,1,0,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "127") (term "1,0,1,0,0,1,1") (ifseqformula "91"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "127") (term "1,1,0,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "127") (term "1,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "127") (term "1,1,1,0,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "127") (term "1,1,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "127") (term "0,1,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "127") (term "0,1,1,0,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "127") (term "1,0,1,0,0,1,1") (ifseqformula "98"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "inEqSimp_subsumption6" (formula "127") (term "0,0,0,1,1") (ifseqformula "63"))
                                    (rule "greater_literals" (formula "127") (term "0,0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "mul_literals" (formula "127") (term "1,0,0,0,0,1,1"))
                                    (rule "leq_literals" (formula "127") (term "0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "inEqSimp_subsumption6" (formula "127") (term "0,0,0,1,1") (ifseqformula "145"))
                                    (rule "mul_literals" (formula "127") (term "1,1,0,0,0,0,1,1"))
                                    (rule "greater_literals" (formula "127") (term "0,0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "leq_literals" (formula "127") (term "0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "nnf_notAnd" (formula "108") (term "0,0"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "128") (term "1,1"))
                                    (rule "translateJavaCastInt" (formula "128") (term "0,1,1"))
                                    (rule "polySimp_homoEq" (formula "128"))
                                    (rule "polySimp_addComm1" (formula "128") (term "0"))
                                    (rule "castedGetAny" (formula "128") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "128") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "128"))
                                    (rule "polySimp_mulLiterals" (formula "128") (term "0"))
                                    (rule "polySimp_elimOne" (formula "128") (term "0"))
                                    (rule "nnf_imp2or" (formula "108") (term "0,1,0"))
                                    (rule "nnf_imp2or" (formula "108") (term "1,1,0"))
                                     (builtin "Use Dependency Contract" (formula "129") (term "0") (ifInst ""  (formula "131") (term "0,1,0")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::lastReadOf(int)].JML accessible clause.0"))
                                    (rule "wellFormedAnon" (formula "152") (term "1,1,0,0,0,0"))
                                    (rule "expand_inInt" (formula "152") (term "1,0,0,0"))
                                    (rule "replace_int_MAX" (formula "152") (term "1,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "152") (term "0,1,1,0,0,0"))
                                    (rule "translateJavaMulInt" (formula "152") (term "0,1,1,1,0"))
                                    (rule "replace_known_left" (formula "152") (term "1,0,0,0,0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "152") (ifInst ""  (formula "183")) (ifInst ""  (formula "52")) (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "36")))
                                    (rule "polySimp_mulComm0" (formula "152") (term "0,1,1,1,0"))
                                    (rule "disjointDefinition" (formula "152") (term "1,0"))
                                    (rule "disjointWithSingleton1" (formula "152") (term "1,0"))
                                    (rule "elementOfSingleton" (formula "152") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "152"))
                                    (rule "polySimp_homoEq" (formula "152") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "152") (term "1,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "152") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "152") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "152") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "152") (term "0,0,1,0"))
                                    (rule "equal_literals" (formula "152") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "152"))
                                    (rule "inEqSimp_ltToLeq" (formula "152") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "152") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "152") (term "0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "152") (term "1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "152") (term "0,1,0"))
                                    (rule "replace_known_left" (formula "152") (term "0,1,0") (ifseqformula "92"))
                                     (builtin "One Step Simplification" (formula "152"))
                                    (rule "applyEq" (formula "152") (term "0,1") (ifseqformula "129"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "152") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "152") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "152") (term "0,1,0"))
                                    (rule "replace_known_left" (formula "152") (term "1,0") (ifseqformula "95"))
                                     (builtin "One Step Simplification" (formula "152"))
                                    (rule "inEqSimp_subsumption0" (formula "152") (term "0,0") (ifseqformula "93"))
                                    (rule "leq_literals" (formula "152") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "152"))
                                    (rule "inEqSimp_subsumption1" (formula "152") (term "0") (ifseqformula "92"))
                                    (rule "leq_literals" (formula "152") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "152"))
                                    (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "152"))
                                    (rule "polySimp_addComm0" (formula "48") (term "1,0"))
                                    (rule "applyEq" (formula "33") (term "1,4,0,1") (ifseqformula "152"))
                                    (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "152"))
                                    (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "152"))
                                    (rule "applyEq" (formula "142") (term "1,1,0,0,0") (ifseqformula "152"))
                                    (rule "applyEq" (formula "48") (term "1,1,1") (ifseqformula "152"))
                                    (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "152"))
                                    (rule "applyEq" (formula "140") (term "0,0,0,0") (ifseqformula "152"))
                                    (rule "applyEq" (formula "142") (term "0,0,0,0,0") (ifseqformula "152"))
                                    (rule "applyEq" (formula "48") (term "0,0,1") (ifseqformula "152"))
                                    (rule "applyEq" (formula "129") (term "1") (ifseqformula "152"))
                                    (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "50") (term "0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "1,0,0") (ifseqformula "115"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "118")) (ifInst ""  (formula "184")) (ifInst ""  (formula "118")) (ifInst ""  (formula "140")) (ifInst ""  (formula "125")) (ifInst ""  (formula "57")))
                                    (rule "wellFormedAnonEQ" (formula "50") (term "1,0") (ifseqformula "115"))
                                    (rule "wellFormedAnon" (formula "50") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "50") (term "2,1,1,0,1"))
                                    (rule "translateJavaAddInt" (formula "50") (term "2,0,1,1"))
                                    (rule "replace_known_left" (formula "50") (term "1,1,0") (ifseqformula "114"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                    (rule "polySimp_addComm0" (formula "50") (term "2,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "50") (term "2,1,1,0,1"))
                                    (rule "replace_known_left" (formula "50") (term "1,0,1") (ifseqformula "139"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1"))
                                    (rule "replace_known_left" (formula "50") (term "1,1") (ifseqformula "123"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_commuteLeq" (formula "50") (term "0,1"))
                                    (rule "replace_known_left" (formula "50") (term "0,1") (ifseqformula "119"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_commuteLeq" (formula "50") (term "1"))
                                    (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "138"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "50") (term "0"))
                                    (rule "translateJavaAddInt" (formula "50") (term "0,2,0"))
                                    (rule "translateJavaMulInt" (formula "50") (term "0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "0,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "50") (term "0,2,0"))
                                    (rule "replaceKnownSelect_taclet10000120112_0" (formula "50") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000120112_1" (formula "50") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "50"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0"))
                                    (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "125"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "50") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1"))
                                    (rule "polySimp_rightDist" (formula "50") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1"))
                                    (rule "jdiv_axiom" (formula "18") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "18"))
                                    (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "19"))
                                    (rule "inEqSimp_subsumption6" (formula "18") (term "0,0") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "18") (term "1,1,0,0,0"))
                                    (rule "greater_literals" (formula "18") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "leq_literals" (formula "18") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                    (rule "mul_literals" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "5"))
                                    (rule "mul_literals" (formula "7") (term "1,1,0"))
                                    (rule "greater_literals" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "113") (term "0"))
                                    (rule "translateJavaCastInt" (formula "113") (term "0,0"))
                                    (rule "castedGetAny" (formula "113") (term "0,0"))
                                    (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "113") (term "0,1,1"))
                                    (rule "translateJavaSubInt" (formula "113") (term "0,1,1"))
                                    (rule "polySimp_elimSub" (formula "113") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "113") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "113") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "113") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "113") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "113") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "113") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "113") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "113") (term "1"))
                                    (rule "polySimp_addComm1" (formula "113") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "113") (term "1"))
                                    (rule "add_literals" (formula "113") (term "1,1,1"))
                                    (rule "polySimp_addComm1" (formula "113") (term "0,1"))
                                    (rule "expand_moduloInteger" (formula "72") (term "0"))
                                    (rule "replace_int_MIN" (formula "72") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "72") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "72") (term "0,0,1,0"))
                                    (rule "polySimp_homoEq" (formula "72"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "72") (term "0"))
                                    (rule "polySimp_addComm0" (formula "72") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "72"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "0"))
                                    (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "152") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "152"))
                                    (rule "translateJavaMulInt" (formula "152") (term "0,2,1,0,0,0,0,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "152") (term "0,2,0,1,1,0,0,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "152") (term "2,1,1,1,0,0,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "152") (term "0,2,0,0,1,1,0"))
                                    (rule "translateJavaAddInt" (formula "152") (term "2,1,1,0,0,0,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "152") (term "0,2,0,1,0,0,0,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "152") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                    (rule "eqSymm" (formula "152") (term "0,1,0,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "152") (term "0,2,0,1,1,0,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "152") (term "0,2,0,0,1,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "152") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "152") (term "0,0,2,0,0,1,1,0"))
                                    (rule "translateJavaAddInt" (formula "152") (term "0,2,1,0,1,0,0,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "152") (term "0,2,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "152") (term "0,2,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "152") (term "0,2,0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "152") (term "0,2,0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "152") (term "0,2,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "152") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "152") (term "0,0,2,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "152") (term "0,0,2,1,0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "152") (term "0,2,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "152") (term "2,1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "152") (term "2,1,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "152") (term "0,2,0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "152") (term "0,2,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "152") (term "0,2,1,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "152") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "152") (term "0,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "152") (term "1,1,1,0,0,1,0") (ifseqformula "148"))
                                    (rule "Contract_axiom_for_countElement_in_BucketPointers" (formula "26") (term "1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "38")) (ifInst ""  (formula "187")) (ifInst ""  (formula "182")) (ifInst ""  (formula "54")) (ifInst ""  (formula "58")) (ifInst ""  (formula "185")) (ifInst ""  (formula "38")) (ifInst ""  (formula "132")) (ifInst ""  (formula "84")))
                                    (rule "true_left" (formula "26"))
                                    (rule "Definition_axiom_for_countElement_in_de_wiesler_BucketPointers" (formula "26") (term "1,1,1,0"))
                                    (rule "translateJavaAddInt" (formula "26") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "1,1,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,1,1,0"))
                                    (rule "Contract_axiom_for_writtenElementsCountElement_in_BucketPointers" (formula "26") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "187")) (ifInst ""  (formula "182")) (ifInst ""  (formula "185")) (ifInst ""  (formula "84")) (ifInst ""  (formula "58")))
                                    (rule "wellFormedAnon" (formula "26") (term "1,0"))
                                    (rule "replace_known_left" (formula "26") (term "1,1,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "54")))
                                    (rule "Definition_axiom_for_writtenElementsCountElement_in_de_wiesler_BucketPointers" (formula "27") (term "0,1,0") (inst "b=b"))
                                    (rule "translateJavaCastInt" (formula "27") (term "0,1,0"))
                                    (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "25") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_homoEq" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1,0"))
                                    (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "102") (term "1,0,0,1,1,1,0"))
                                    (rule "translateJavaCastInt" (formula "102") (term "0,1,0,0,1,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "102") (term "0,1,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "102") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "102") (term "0,1,1,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "102") (term "1,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "102") (term "0,1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "102") (term "0,0,1,1,1,0"))
                                    (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "102") (term "0,0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "102"))
                                    (rule "translateJavaAddInt" (formula "102") (term "3,0,1,0,0,1,0"))
                                    (rule "translateJavaAddInt" (formula "102") (term "4,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "102") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "102") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "102") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "102") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "102") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "102") (term "1,1,0,0,0,1,0"))
                                    (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "136") (term "0"))
                                     (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "186")) (ifInst ""  (formula "58")))
                                    (rule "wellFormedAnon" (formula "136") (term "1,0"))
                                    (rule "replace_known_left" (formula "136") (term "1,1,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "54")))
                                    (rule "inEqSimp_ltToLeq" (formula "136") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "136") (term "0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "136") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "136") (term "0,0,0") (ifseqformula "94"))
                                     (builtin "One Step Simplification" (formula "136"))
                                    (rule "applyEq" (formula "136") (term "0,0,0,1,1,1") (ifseqformula "137"))
                                    (rule "applyEq" (formula "136") (term "0,0,1,1") (ifseqformula "137"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "136") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "136") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "136") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "136") (term "0,0") (ifseqformula "97"))
                                     (builtin "One Step Simplification" (formula "136"))
                                    (rule "inEqSimp_subsumption6" (formula "136") (term "0,1,1") (ifseqformula "134"))
                                    (rule "mul_literals" (formula "136") (term "1,1,0,0,1,1"))
                                    (rule "greater_literals" (formula "136") (term "0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "136"))
                                    (rule "leq_literals" (formula "136") (term "0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "136"))
                                    (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "137") (term "0"))
                                    (rule "translateJavaSubInt" (formula "137") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "137") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "137") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "137") (term "1,0,0,0,0"))
                                    (rule "applyEq" (formula "137") (term "0,1,1,0") (ifseqformula "130"))
                                    (rule "polySimp_mulComm0" (formula "137") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "137") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "137") (term "0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "137") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "137") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "137") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "137") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "137") (term "1,0"))
                                    (rule "applyEq" (formula "137") (term "1,0,0,0") (ifseqformula "130"))
                                    (rule "polySimp_addComm1" (formula "137") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "137") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "137") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "137") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "137") (term "0,0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "137") (term "0,1,0,0,0") (ifseqformula "131"))
                                    (rule "polySimp_addComm1" (formula "137") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "137") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "137") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "137") (term "1,1,0") (ifseqformula "131"))
                                    (rule "polySimp_addComm1" (formula "137") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "137") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "137") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "137") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "137") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "137") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "137") (term "1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "137") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "137") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "137") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "137") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "137") (term "1,0,0,1,0,0"))
                                    (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "143") (term "0,1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "143") (term "1,0,0") (ifseqformula "116"))
                                     (builtin "One Step Simplification" (formula "143") (ifInst ""  (formula "119")) (ifInst ""  (formula "187")) (ifInst ""  (formula "119")) (ifInst ""  (formula "138")) (ifInst ""  (formula "139")) (ifInst ""  (formula "126")) (ifInst ""  (formula "58")))
                                    (rule "true_left" (formula "143"))
                                    (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "143") (term "0,1"))
                                    (rule "translateJavaSubInt" (formula "143") (term "1,0,1"))
                                    (rule "polySimp_elimSub" (formula "143") (term "1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "143") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "143") (term "1,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "143") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "143") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "143") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "143") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "143") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "143") (term "1,1,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "18") (term "0") (inst "polyDivCoeff=l_0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "polySimp_homoEq" (formula "18"))
                                    (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "18") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,0"))
                                    (rule "times_zero_1" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "132") (term "0,1,0"))
                                    (rule "translateJavaAddInt" (formula "132") (term "2,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "132") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "132") (term "1,0,0,0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "53")) (ifInst ""  (formula "57")) (ifInst ""  (formula "186")) (ifInst ""  (formula "37")) (ifInst ""  (formula "48")) (ifInst ""  (formula "131")))
                                    (rule "polySimp_addComm0" (formula "132") (term "2,1,1,0,0,1"))
                                    (rule "replace_known_left" (formula "132") (term "1,0,0,1") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "polySimp_addComm0" (formula "132") (term "2,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "132") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "132") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0"))
                                    (rule "replace_known_left" (formula "132") (term "0,0") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0,0,1"))
                                    (rule "replace_known_left" (formula "132") (term "0,0,0,1") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "132") (term "1,0,1") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "0,1"))
                                    (rule "replace_known_left" (formula "132") (term "0,1") (ifseqformula "44"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "applyEq" (formula "132") (term "0,0,0,1") (ifseqformula "150"))
                                    (rule "inEqSimp_commuteGeq" (formula "132") (term "0,0,1"))
                                    (rule "replace_known_left" (formula "132") (term "0,1") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "150"))
                                    (rule "replace_known_left" (formula "132") (term "1") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "true_left" (formula "132"))
                                    (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "132") (term "0,1,1,0"))
                                    (rule "translateJavaAddInt" (formula "132") (term "2,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "132") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "132") (term "1,0,0,0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "53")) (ifInst ""  (formula "57")) (ifInst ""  (formula "186")) (ifInst ""  (formula "37")) (ifInst ""  (formula "43")) (ifInst ""  (formula "131")))
                                    (rule "polySimp_addComm0" (formula "132") (term "2,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "132") (term "2,1,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "132") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "132") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "1,0,0,1"))
                                    (rule "replace_known_left" (formula "132") (term "1,0,0,1") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "1,1"))
                                    (rule "replace_known_left" (formula "132") (term "1,1") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0"))
                                    (rule "replace_known_left" (formula "132") (term "0,0") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "0,1"))
                                    (rule "replace_known_left" (formula "132") (term "0,1") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "132") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "132") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "132") (term "0,0"))
                                    (rule "replace_known_left" (formula "132") (term "0") (ifseqformula "96"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_subsumption0" (formula "132") (ifseqformula "50"))
                                    (rule "inEqSimp_homoInEq0" (formula "132") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "132") (term "1,0,0"))
                                    (rule "mul_literals" (formula "132") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "132") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "132") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "132") (term "0,0"))
                                    (rule "add_literals" (formula "132") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "132") (term "1,0,0"))
                                    (rule "add_literals" (formula "132") (term "0,0"))
                                    (rule "qeq_literals" (formula "132") (term "0"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "true_left" (formula "132"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "132") (term "0,1,1,0"))
                                    (rule "translateJavaAddInt" (formula "132") (term "0,2,0,1,1,0"))
                                    (rule "translateJavaMulInt" (formula "132") (term "0,0,2,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "0,0,2,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "132") (term "0,2,0,1,1,0"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "132") (term "0,1,0"))
                                    (rule "translateJavaMulInt" (formula "132") (term "0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "0,2,0,1,0"))
                                    (rule "applyEq" (formula "132") (term "0,1,0") (ifseqformula "154"))
                                    (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "132") (term "0,0,0"))
                                    (rule "translateJavaAddInt" (formula "132") (term "2,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "132") (term "2,1,1,0,0,1,1"))
                                    (rule "replace_known_left" (formula "132") (term "1,0,0,0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "53")) (ifInst ""  (formula "57")) (ifInst ""  (formula "186")) (ifInst ""  (formula "37")) (ifInst ""  (formula "43")) (ifInst ""  (formula "131")))
                                    (rule "polySimp_addComm0" (formula "132") (term "2,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "132") (term "2,1,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "132") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "132") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0"))
                                    (rule "replace_known_left" (formula "132") (term "0,0") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0,0,1"))
                                    (rule "replace_known_left" (formula "132") (term "0,0,0,1") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "1,1"))
                                    (rule "replace_known_left" (formula "132") (term "1,1") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_commuteLeq" (formula "132") (term "0,1"))
                                    (rule "replace_known_left" (formula "132") (term "0,1") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "132") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "132") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "132") (term "0,0"))
                                    (rule "replace_known_left" (formula "132") (term "0") (ifseqformula "96"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_subsumption0" (formula "132") (ifseqformula "50"))
                                    (rule "inEqSimp_homoInEq0" (formula "132") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "132") (term "1,0,0"))
                                    (rule "mul_literals" (formula "132") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "132") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "132") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "132") (term "0,0"))
                                    (rule "add_literals" (formula "132") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "132") (term "1,0,0"))
                                    (rule "add_literals" (formula "132") (term "0,0"))
                                    (rule "qeq_literals" (formula "132") (term "0"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "true_left" (formula "132"))
                                    (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "132") (term "0,0,0"))
                                    (rule "translateJavaAddInt" (formula "132") (term "0,2,0,0,0"))
                                    (rule "translateJavaMulInt" (formula "132") (term "0,0,2,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "0,0,2,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "132") (term "0,2,0,0,0"))
                                    (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "132") (term "1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "132") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "0,2,1,1,0,0"))
                                    (rule "applyEq" (formula "132") (term "1,1,0,0") (ifseqformula "154"))
                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "79") (term "1,0,2,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "79") (term "0,1,1,1,0,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "79") (term "1,0,0,1,0,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "79") (term "1,1,1,0,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "79") (term "0,1,1,1,0,2,0,1,0"))
                                    (rule "mul_literals" (formula "79") (term "1,0,1,1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "79") (term "0,1,0,1,0,2,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "79") (term "0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "0,0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "79") (term "1,1,0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "79") (term "0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "79") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm1" (formula "79") (term "1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "79") (term "0,1,0,2,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "79") (term "0,0,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm1" (formula "79") (term "1,0,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,1,0,2,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "79") (term "0,2,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "79") (term "0,0,2,0,1,0"))
                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "78") (term "0,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "78") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "78") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "78") (term "0,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "78") (term "1,0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "78") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "78") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "78") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "78") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm1" (formula "78") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm1" (formula "78") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "78") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,0,1,0,1,0"))
                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "78") (term "0,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "78") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "78") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "78") (term "0,1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "78") (term "1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "78") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "78") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,0,1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "78") (term "1,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "78") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm1" (formula "78") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm1" (formula "78") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "78") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "0,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "78") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "0,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "78") (term "0,0,0,1,1,1,0"))
                                     (builtin "Use Dependency Contract" (formula "17") (term "0") (ifInst ""  (formula "129") (term "0")) (ifInst ""  (formula "115")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::nextWriteOf(int)].JML accessible clause.0"))
                                     (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "186")) (ifInst ""  (formula "57")))
                                    (rule "wellFormedAnon" (formula "155") (term "0,0,0,0,0"))
                                    (rule "wellFormedAnonEQ" (formula "155") (term "1,0,0,0,0") (ifseqformula "115"))
                                    (rule "wellFormedAnon" (formula "155") (term "0,1,0,0,0,0"))
                                    (rule "expand_inInt" (formula "155") (term "1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "155") (term "0,1,1,0,0,0"))
                                    (rule "replace_int_MAX" (formula "155") (term "1,0,1,0,0,0"))
                                    (rule "eqSymm" (formula "155") (term "1"))
                                    (rule "translateJavaMulInt" (formula "155") (term "0,0,1,1,1,0"))
                                    (rule "translateJavaAddInt" (formula "155") (term "0,1,1,1,0"))
                                    (rule "replace_known_left" (formula "155") (term "0,0,0,0,0,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "114")))
                                    (rule "polySimp_mulComm0" (formula "155") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "155") (term "0,1,1,1,0"))
                                    (rule "disjointDefinition" (formula "155") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "155"))
                                    (rule "true_left" (formula "155"))
                                    (rule "commute_and" (formula "79") (term "1,0,0"))
                                    (rule "commute_and" (formula "78") (term "1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "85") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "85") (term "0,0"))
                                    (rule "add_zero_left" (formula "85") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "85"))
                                    (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "85") (ifseqformula "5"))
                                    (rule "mul_literals" (formula "85") (term "1,1,0"))
                                    (rule "greater_literals" (formula "85") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "85"))
                                    (rule "qeq_literals" (formula "85") (term "0"))
                                     (builtin "One Step Simplification" (formula "85"))
                                    (rule "closeFalse" (formula "85"))
                                 )
                              )
                           )
                           (branch "Usage"
                               (builtin "One Step Simplification" (formula "98"))
                               (builtin "Block Contract (Internal)" (formula "98") (newnames "result_2,exc_2,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                              (branch "Validity"
                                  (builtin "One Step Simplification" (formula "99"))
                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "26")))
                                 (rule "translateJavaAddInt" (formula "99") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "99") (term "0,0,1,0,1"))
                                 (rule "variableDeclarationAssign" (formula "99") (term "1"))
                                 (rule "variableDeclaration" (formula "99") (term "1") (newnames "exc_2_1"))
                                 (rule "assignment" (formula "99") (term "1"))
                                  (builtin "One Step Simplification" (formula "99"))
                                 (rule "emptyStatement" (formula "99") (term "1"))
                                  (builtin "One Step Simplification" (formula "99"))
                                 (rule "emptyStatement" (formula "99") (term "1"))
                                 (rule "tryEmpty" (formula "99") (term "1"))
                                 (rule "blockEmptyLabel" (formula "99") (term "1"))
                                 (rule "blockEmpty" (formula "99") (term "1"))
                                 (rule "methodCallEmpty" (formula "99") (term "1"))
                                 (rule "emptyModality" (formula "99") (term "1"))
                                 (rule "andRight" (formula "99"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "99"))
                                    (rule "closeTrue" (formula "99"))
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "99"))
                                    (rule "closeTrue" (formula "99"))
                                 )
                              )
                              (branch "Precondition"
                                 (rule "andRight" (formula "98"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "26")))
                                    (rule "closeTrue" (formula "98"))
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "98"))
                                    (rule "wellFormedAnonEQ" (formula "98") (ifseqformula "58"))
                                    (rule "wellFormedAnon" (formula "98") (term "0"))
                                    (rule "replace_known_left" (formula "98") (term "1") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")))
                                    (rule "closeTrue" (formula "98"))
                                 )
                              )
                              (branch "Usage"
                                  (builtin "One Step Simplification" (formula "70"))
                                  (builtin "One Step Simplification" (formula "99"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "1,1,1,0") (ifseqformula "58"))
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "expand_inInt" (formula "70") (term "0,1,0"))
                                 (rule "replace_int_MAX" (formula "70") (term "1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "70") (term "0,1,0,1,0"))
                                 (rule "andLeft" (formula "70"))
                                 (rule "andLeft" (formula "70"))
                                 (rule "andLeft" (formula "72"))
                                 (rule "andLeft" (formula "71"))
                                 (rule "andLeft" (formula "73"))
                                 (rule "andLeft" (formula "71"))
                                 (rule "andLeft" (formula "75"))
                                 (rule "translateJavaAddInt" (formula "106") (term "0,1,0"))
                                 (rule "eqSymm" (formula "77"))
                                 (rule "translateJavaAddInt" (formula "76") (term "0"))
                                 (rule "translateJavaAddInt" (formula "75") (term "1"))
                                 (rule "replace_known_left" (formula "73") (term "0") (ifseqformula "70"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "true_left" (formula "73"))
                                 (rule "inEqSimp_commuteLeq" (formula "72"))
                                 (rule "elim_double_block_2" (formula "104") (term "1"))
                                 (rule "ifUnfold" (formula "104") (term "1") (inst "#boolv=x_2"))
                                 (rule "variableDeclaration" (formula "104") (term "1") (newnames "x_5"))
                                 (rule "inequality_comparison_simple" (formula "104") (term "1"))
                                  (builtin "One Step Simplification" (formula "104"))
                                 (rule "replace_known_left" (formula "104") (term "0,0,1,0") (ifseqformula "70"))
                                  (builtin "One Step Simplification" (formula "104"))
                                  (builtin "Use Dependency Contract" (formula "11") (ifInst ""  (formula "104") (term "1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0"))
                                 (rule "replace_known_left" (formula "76") (term "1,1") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "103")) (ifInst ""  (formula "21")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "28")) (ifInst ""  (formula "11")))
                                 (rule "true_left" (formula "76"))
                                  (builtin "Use Dependency Contract" (formula "10") (ifInst ""  (formula "104") (term "0,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0"))
                                 (rule "replace_known_left" (formula "76") (term "1,1") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "102")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "27")) (ifInst ""  (formula "10")))
                                 (rule "true_left" (formula "76"))
                                 (rule "ifSplit" (formula "104"))
                                 (branch "if x_5 true"
                                     (builtin "One Step Simplification" (formula "105"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_5 false"
                                     (builtin "One Step Simplification" (formula "105"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "blockEmpty" (formula "104") (term "1"))
                                     (builtin "Block Contract (Internal)" (formula "104") (newnames "result_3,exc_3,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,o,f"))
                                    (branch "Validity"
                                        (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "26")))
                                        (builtin "One Step Simplification" (formula "105"))
                                       (rule "eqSymm" (formula "105") (term "0,0,1,0,1"))
                                       (rule "variableDeclarationAssign" (formula "105") (term "1"))
                                       (rule "variableDeclaration" (formula "105") (term "1") (newnames "exc_3_1"))
                                       (rule "assignment" (formula "105") (term "1"))
                                        (builtin "One Step Simplification" (formula "105"))
                                       (rule "emptyStatement" (formula "105") (term "1"))
                                        (builtin "One Step Simplification" (formula "105"))
                                       (rule "emptyStatement" (formula "105") (term "1"))
                                       (rule "tryEmpty" (formula "105") (term "1"))
                                       (rule "blockEmptyLabel" (formula "105") (term "1"))
                                       (rule "blockEmpty" (formula "105") (term "1"))
                                       (rule "methodCallEmpty" (formula "105") (term "1"))
                                       (rule "emptyModality" (formula "105") (term "1"))
                                       (rule "andRight" (formula "105"))
                                       (branch
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "closeTrue" (formula "105"))
                                       )
                                       (branch
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "closeTrue" (formula "105"))
                                       )
                                    )
                                    (branch "Precondition"
                                       (rule "andRight" (formula "104"))
                                       (branch
                                           (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "26")))
                                          (rule "closeTrue" (formula "104"))
                                       )
                                       (branch
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "wellFormedAnonEQ" (formula "104") (ifseqformula "58"))
                                          (rule "wellFormedAnon" (formula "104") (term "0"))
                                          (rule "replace_known_left" (formula "104") (term "1") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")))
                                          (rule "closeTrue" (formula "104"))
                                       )
                                    )
                                    (branch "Usage"
                                        (builtin "One Step Simplification" (formula "105"))
                                        (builtin "One Step Simplification" (formula "76"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "1,1,1,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "76"))
                                       (rule "expand_inInt" (formula "76") (term "0,1,0"))
                                       (rule "replace_int_MAX" (formula "76") (term "1,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "76") (term "0,1,0,1,0"))
                                       (rule "andLeft" (formula "76"))
                                       (rule "andLeft" (formula "76"))
                                       (rule "andLeft" (formula "78"))
                                       (rule "andLeft" (formula "77"))
                                       (rule "andLeft" (formula "77"))
                                       (rule "translateJavaAddInt" (formula "80") (term "7,0"))
                                       (rule "translateJavaAddInt" (formula "81") (term "7,0"))
                                       (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "76"))
                                        (builtin "One Step Simplification" (formula "79"))
                                       (rule "true_left" (formula "79"))
                                       (rule "polySimp_addComm1" (formula "79") (term "7,0"))
                                       (rule "polySimp_addComm1" (formula "80") (term "7,0"))
                                       (rule "polySimp_addComm0" (formula "79") (term "0,7,0"))
                                       (rule "polySimp_addComm0" (formula "80") (term "0,7,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "78"))
                                       (rule "elim_double_block_2" (formula "109") (term "1"))
                                       (rule "ifUnfold" (formula "109") (term "1") (inst "#boolv=x_2"))
                                       (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_6"))
                                       (rule "inequality_comparison_simple" (formula "109") (term "1"))
                                        (builtin "One Step Simplification" (formula "109"))
                                       (rule "replace_known_left" (formula "109") (term "0,0,1,0") (ifseqformula "76"))
                                        (builtin "One Step Simplification" (formula "109"))
                                        (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "8") (term "1")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "81") (term "1,1,0,0,0,0"))
                                       (rule "expand_inInt" (formula "81") (term "1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,0,0"))
                                       (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,0,0"))
                                       (rule "translateJavaAddInt" (formula "81") (term "0,1,1,1,1,0"))
                                       (rule "translateJavaMulInt" (formula "81") (term "0,1,0,1,1,0"))
                                       (rule "translateJavaMulInt" (formula "81") (term "0,0,1,1,1,1,0"))
                                       (rule "replace_known_left" (formula "81") (term "1,0,1,0,0") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "107")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "14")) (ifInst ""  (formula "27")))
                                       (rule "polySimp_mulComm0" (formula "81") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "81") (term "0,1,1,1,1,0"))
                                       (rule "disjointDefinition" (formula "81") (term "1,0"))
                                       (rule "disjointWithSingleton2" (formula "81") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0"))
                                       (rule "replace_known_left" (formula "81") (term "1,0,0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0"))
                                       (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "elementOfUnion" (formula "81") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "81") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "true_left" (formula "81"))
                                        (builtin "Use Dependency Contract" (formula "7") (term "0") (ifInst ""  (formula "47") (term "0,1,0,1,0")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::writtenElementsOfBucketClassified(de.wiesler.Classifier,[I,int,int,[I,int)].JML accessible clause.0"))
                                        (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "107")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "108")) (ifInst ""  (formula "21")) (ifInst ""  (formula "109")) (ifInst ""  (formula "16")) (ifInst ""  (formula "104")) (ifInst ""  (formula "25")) (ifInst ""  (formula "43")) (ifInst ""  (formula "28")) (ifInst ""  (formula "27")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "104")) (ifInst ""  (formula "34")))
                                       (rule "wellFormedAnon" (formula "81") (term "0,0,0,0,0,0"))
                                       (rule "expand_inInt" (formula "81") (term "1,0,0,0"))
                                       (rule "expand_inInt" (formula "81") (term "1,0,0,0,0,0"))
                                       (rule "expand_inInt" (formula "81") (term "1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,0,0"))
                                       (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,0,0"))
                                       (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,0,0,0"))
                                       (rule "translateJavaAddInt" (formula "81") (term "1,0,0,0,0,1,1,0"))
                                       (rule "translateJavaMulInt" (formula "81") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "81") (term "2,0,0,0,0,1,1,0"))
                                       (rule "translateJavaAddInt" (formula "81") (term "0,1,1,0,0,1,1,0"))
                                       (rule "translateJavaAddInt" (formula "81") (term "0,2,0,0,0,0,1,1,0"))
                                       (rule "replace_known_left" (formula "81") (term "0,1,0,0,0") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "17")) (ifInst ""  (formula "19")))
                                       (rule "polySimp_elimSub" (formula "81") (term "2,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "81") (term "1,2,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "81") (term "2,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "81") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "81") (term "0,2,0,0,0,0,1,1,0"))
                                       (rule "disjointDefinition" (formula "81") (term "1,0"))
                                       (rule "disjointWithSingleton2" (formula "81") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0,0"))
                                       (rule "replace_known_left" (formula "81") (term "1,0,0,0") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0"))
                                       (rule "replace_known_left" (formula "81") (term "1,0,0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0"))
                                       (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "applyEq" (formula "81") (term "0,1") (ifseqformula "7"))
                                       (rule "eqSymm" (formula "81") (term "1"))
                                       (rule "elementOfUnion" (formula "81") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "eqSymm" (formula "81") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "81") (term "1,0,0") (ifseqformula "102"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "elementOfUnion" (formula "81") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "eqSymm" (formula "81") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "81") (term "1,0,0") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "elementOfUnion" (formula "81") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "81") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "true_left" (formula "81"))
                                        (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "47") (term "0,0,0,1,0")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::elementsToReadOfBucketBlockClassified(de.wiesler.Classifier,[I,int,int,int)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "81") (term "1,1,0,0,0,0,0,0,0,0"))
                                       (rule "expand_inInt" (formula "81") (term "1,0,0,0,0"))
                                       (rule "expand_inInt" (formula "81") (term "1,0,0,0"))
                                       (rule "expand_inInt" (formula "81") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,0,0"))
                                       (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,0,0,0,0"))
                                       (rule "translateJavaAddInt" (formula "81") (term "0,2,0,0,0,1,1,0"))
                                       (rule "translateJavaAddInt" (formula "81") (term "2,1,0,0,1,1,0"))
                                       (rule "translateJavaMulInt" (formula "81") (term "1,1,0,0,1,1,0"))
                                       (rule "translateJavaAddInt" (formula "81") (term "1,0,0,0,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "81") (term "2,0,0,0,1,1,0"))
                                       (rule "translateJavaMulInt" (formula "81") (term "0,2,1,0,0,1,1,0"))
                                       (rule "replace_known_right" (formula "81") (term "0,1,0,0,0,0,0,0") (ifseqformula "109"))
                                        (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "107")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "108")) (ifInst ""  (formula "21")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "19")) (ifInst ""  (formula "14")) (ifInst ""  (formula "43")) (ifInst ""  (formula "28")) (ifInst ""  (formula "27")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                       (rule "polySimp_elimSub" (formula "81") (term "2,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "81") (term "1,2,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "81") (term "0,2,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "81") (term "2,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "81") (term "2,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "81") (term "0,2,0,0,0,1,1,0"))
                                       (rule "disjointDefinition" (formula "81") (term "1,0"))
                                       (rule "disjointWithSingleton2" (formula "81") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0,0,0"))
                                       (rule "replace_known_left" (formula "81") (term "1,0,0,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0,0"))
                                       (rule "replace_known_left" (formula "81") (term "1,0,0,0") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0"))
                                       (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "applyEq" (formula "81") (term "0,1") (ifseqformula "6"))
                                       (rule "eqSymm" (formula "81") (term "1"))
                                       (rule "elementOfUnion" (formula "81") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "eqSymm" (formula "81") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "81") (term "1,0,0") (ifseqformula "102"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "elementOfUnion" (formula "81") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "eqSymm" (formula "81") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "81") (term "1,0,0") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "elementOfUnion" (formula "81") (term "0,0"))
                                       (rule "elementOfArrayRangeConcrete" (formula "81") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "elementOfArrayRangeConcrete" (formula "81") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "81") (term "0,0,0,0,0") (ifseqformula "86"))
                                        (builtin "One Step Simplification" (formula "81"))
                                       (rule "ifSplit" (formula "110"))
                                       (branch "if x_6 true"
                                           (builtin "One Step Simplification" (formula "111"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "if x_6 false"
                                           (builtin "One Step Simplification" (formula "111"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "blockEmpty" (formula "110") (term "1"))
                                           (builtin "Use Dependency Contract" (formula "65") (term "0,2") (ifInst ""  (formula "67") (term "0,0,0")) (ifInst ""  (formula "58")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "108")) (ifInst ""  (formula "43")) (ifInst ""  (formula "10")) (ifInst ""  (formula "22")))
                                          (rule "wellFormedAnon" (formula "82") (term "0,0,0,0,0"))
                                          (rule "wellFormedAnonEQ" (formula "82") (term "1,0,0,0,0") (ifseqformula "58"))
                                          (rule "wellFormedAnon" (formula "82") (term "0,1,0,0,0,0"))
                                          (rule "expand_inInt" (formula "82") (term "1,0,0,0"))
                                          (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0"))
                                          (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "82") (term "0,1,1,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "82") (term "1"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,0,1,1,1,1,0"))
                                          (rule "replace_known_left" (formula "82") (term "0,0,0,0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")) (ifInst ""  (formula "14")))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "82") (term "0,1,1,1,1,0"))
                                          (rule "disjointDefinition" (formula "82") (term "1,0"))
                                          (rule "disjointWithSingleton2" (formula "82") (term "1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "82") (term "0,0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0"))
                                          (rule "replace_known_left" (formula "82") (term "0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "elementOfUnion" (formula "82") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "82") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "true_left" (formula "82"))
                                           (builtin "Use Dependency Contract" (formula "65") (term "0,1") (ifInst ""  (formula "8") (term "1")) (ifInst ""  (formula "58")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "108")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "43")) (ifInst ""  (formula "27")))
                                          (rule "wellFormedAnonEQ" (formula "82") (term "0,0,0,0") (ifseqformula "58"))
                                          (rule "wellFormedAnon" (formula "82") (term "0,0,0,0,0"))
                                          (rule "expand_inInt" (formula "82") (term "1,0,0,0"))
                                          (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0"))
                                          (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "82") (term "0,1,1,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,1,0,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,0,1,1,1,1,0"))
                                          (rule "replace_known_left" (formula "82") (term "0,1,0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "82") (term "0,1,1,1,1,0"))
                                          (rule "disjointDefinition" (formula "82") (term "1,0"))
                                          (rule "disjointWithSingleton2" (formula "82") (term "1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "82") (term "1,0,0"))
                                          (rule "replace_known_left" (formula "82") (term "1,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0"))
                                          (rule "replace_known_left" (formula "82") (term "0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "elementOfUnion" (formula "82") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "82") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "true_left" (formula "82"))
                                           (builtin "Use Dependency Contract" (formula "64") (term "1") (ifInst ""  (formula "64") (term "0")) (ifInst ""  (formula "58")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::lastReadOf(int)].JML accessible clause.0"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "108")) (ifInst ""  (formula "43")) (ifInst ""  (formula "10")) (ifInst ""  (formula "22")))
                                          (rule "wellFormedAnon" (formula "82") (term "0,0,0,0,0"))
                                          (rule "wellFormedAnonEQ" (formula "82") (term "1,0,0,0,0") (ifseqformula "58"))
                                          (rule "wellFormedAnon" (formula "82") (term "0,1,0,0,0,0"))
                                          (rule "expand_inInt" (formula "82") (term "1,0,0,0"))
                                          (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0"))
                                          (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "82") (term "1"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,1,1,1,0"))
                                          (rule "replace_known_left" (formula "82") (term "0,0,0,0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")) (ifInst ""  (formula "14")) (ifInst ""  (formula "64")))
                                          (rule "true_left" (formula "82"))
                                           (builtin "Use Dependency Contract" (formula "62") (term "0") (ifInst ""  (formula "9") (term "1")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::remainingWriteCountOfBucket(int)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "82") (term "1,1,0,0,0,0"))
                                          (rule "expand_inInt" (formula "82") (term "1,0,0,0"))
                                          (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0"))
                                          (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "82") (term "0,1,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "replace_known_left" (formula "82") (term "0,1,0,0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "108")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "14")) (ifInst ""  (formula "43")) (ifInst ""  (formula "27")))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "82") (term "0,1,1,1,0"))
                                          (rule "disjointDefinition" (formula "82") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "true_left" (formula "82"))
                                           (builtin "Use Dependency Contract" (formula "62") (term "1,1") (ifInst ""  (formula "62") (term "0")) (ifInst ""  (formula "58")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::remainingWriteCountOfBucket(int)].JML accessible clause.0"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "108")) (ifInst ""  (formula "43")) (ifInst ""  (formula "10")) (ifInst ""  (formula "22")))
                                          (rule "wellFormedAnon" (formula "82") (term "0,0,0,0,0"))
                                          (rule "wellFormedAnonEQ" (formula "82") (term "1,0,0,0,0") (ifseqformula "58"))
                                          (rule "wellFormedAnon" (formula "82") (term "0,1,0,0,0,0"))
                                          (rule "expand_inInt" (formula "82") (term "1,0,0,0"))
                                          (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0"))
                                          (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "82") (term "1"))
                                          (rule "translateJavaAddInt" (formula "82") (term "0,1,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "replace_known_left" (formula "82") (term "1,0,0,0,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")) (ifInst ""  (formula "14")))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "82") (term "0,1,1,1,0"))
                                          (rule "disjointDefinition" (formula "82") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "true_left" (formula "82"))
                                           (builtin "Use Dependency Contract" (formula "63") (term "1") (ifInst ""  (formula "63") (term "1,0")) (ifInst ""  (formula "58")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::writtenCountOfBucket(int)].JML accessible clause.0"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "108")) (ifInst ""  (formula "43")) (ifInst ""  (formula "10")) (ifInst ""  (formula "22")))
                                          (rule "wellFormedAnon" (formula "82") (term "0,0,0,0,0"))
                                          (rule "wellFormedAnonEQ" (formula "82") (term "1,0,0,0,0") (ifseqformula "58"))
                                          (rule "wellFormedAnon" (formula "82") (term "0,1,0,0,0,0"))
                                          (rule "expand_inInt" (formula "82") (term "1,0,0,0"))
                                          (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0"))
                                          (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "82") (term "1"))
                                          (rule "translateJavaAddInt" (formula "82") (term "0,1,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "replace_known_left" (formula "82") (term "0,0,0,0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")) (ifInst ""  (formula "14")))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "82") (term "0,1,1,1,0"))
                                          (rule "disjointDefinition" (formula "82") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "true_left" (formula "82"))
                                           (builtin "Use Dependency Contract" (formula "61") (term "0") (ifInst ""  (formula "66") (term "0")) (ifInst ""  (formula "58")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::nextWriteOf(int)].JML accessible clause.0"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "108")) (ifInst ""  (formula "43")) (ifInst ""  (formula "10")) (ifInst ""  (formula "22")))
                                          (rule "wellFormedAnon" (formula "82") (term "0,0,0,0,0"))
                                          (rule "wellFormedAnonEQ" (formula "82") (term "1,0,0,0,0") (ifseqformula "58"))
                                          (rule "wellFormedAnon" (formula "82") (term "0,1,0,0,0,0"))
                                          (rule "expand_inInt" (formula "82") (term "1,0,0,0"))
                                          (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0"))
                                          (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "82") (term "1"))
                                          (rule "translateJavaAddInt" (formula "82") (term "0,1,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "replace_known_left" (formula "82") (term "0,0,0,0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")) (ifInst ""  (formula "14")))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "82") (term "0,1,1,1,0"))
                                          (rule "disjointDefinition" (formula "82") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "true_left" (formula "82"))
                                           (builtin "Use Dependency Contract" (formula "9") (term "1,0") (ifInst ""  (formula "9") (term "1")) (ifInst ""  (formula "58")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::remainingWriteCountOfBucket(int)].JML accessible clause.0"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "108")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "43")) (ifInst ""  (formula "27")))
                                          (rule "wellFormedAnonEQ" (formula "82") (term "0,0,0,0") (ifseqformula "58"))
                                          (rule "wellFormedAnon" (formula "82") (term "0,0,0,0,0"))
                                          (rule "expand_inInt" (formula "82") (term "1,0,0,0"))
                                          (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0"))
                                          (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "82") (term "0,1,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "replace_known_left" (formula "82") (term "1,0,0,0,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "13")) (ifInst ""  (formula "57")) (ifInst ""  (formula "14")))
                                          (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "82") (term "0,1,1,1,0"))
                                          (rule "disjointDefinition" (formula "82") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "true_left" (formula "82"))
                                          (rule "ifElseSplit" (formula "110"))
                                          (branch "if occupied true"
                                              (builtin "Block Contract (Internal)" (formula "111") (newnames "result_4,exc_4,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                                             (branch "Validity"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "112"))
                                                 (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "27")))
                                                (rule "eqSymm" (formula "112") (term "0,0,1,0,1"))
                                                (rule "variableDeclarationAssign" (formula "112") (term "1"))
                                                (rule "variableDeclaration" (formula "112") (term "1") (newnames "exc_4_1"))
                                                (rule "assignment" (formula "112") (term "1"))
                                                 (builtin "One Step Simplification" (formula "112"))
                                                (rule "emptyStatement" (formula "112") (term "1"))
                                                 (builtin "One Step Simplification" (formula "112"))
                                                (rule "emptyStatement" (formula "112") (term "1"))
                                                (rule "applyEq" (formula "68") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                (rule "tryEmpty" (formula "112") (term "1"))
                                                (rule "blockEmptyLabel" (formula "112") (term "1"))
                                                (rule "blockEmpty" (formula "112") (term "1"))
                                                (rule "methodCallEmpty" (formula "112") (term "1"))
                                                (rule "emptyModality" (formula "112") (term "1"))
                                                (rule "andRight" (formula "112"))
                                                (branch
                                                    (builtin "One Step Simplification" (formula "112"))
                                                   (rule "closeTrue" (formula "112"))
                                                )
                                                (branch
                                                    (builtin "One Step Simplification" (formula "112"))
                                                   (rule "closeTrue" (formula "112"))
                                                )
                                             )
                                             (branch "Precondition"
                                                (rule "andRight" (formula "111"))
                                                (branch
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "27")))
                                                   (rule "closeTrue" (formula "111"))
                                                )
                                                (branch
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "111"))
                                                   (rule "wellFormedAnonEQ" (formula "111") (ifseqformula "59"))
                                                   (rule "wellFormedAnon" (formula "111") (term "0"))
                                                   (rule "replace_known_left" (formula "111") (term "1") (ifseqformula "58"))
                                                    (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                   (rule "closeTrue" (formula "111"))
                                                )
                                             )
                                             (branch "Usage"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "112"))
                                                 (builtin "One Step Simplification" (formula "83"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "1,1,1,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "83"))
                                                (rule "expand_inInt" (formula "83") (term "0,1,0"))
                                                (rule "replace_int_MAX" (formula "83") (term "1,0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "83") (term "0,1,0,1,0"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "84"))
                                                (rule "andLeft" (formula "84"))
                                                (rule "translateJavaSubInt" (formula "87") (term "0"))
                                                (rule "replace_known_left" (formula "86") (term "0") (ifseqformula "83"))
                                                 (builtin "One Step Simplification" (formula "86"))
                                                (rule "true_left" (formula "86"))
                                                (rule "polySimp_elimSub" (formula "86") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "85"))
                                                (rule "applyEq" (formula "86") (term "0,1,0") (ifseqformula "67"))
                                                (rule "polySimp_addComm0" (formula "86") (term "0"))
                                                (rule "applyEq" (formula "68") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                (rule "applyEq" (formula "86") (term "1,0") (ifseqformula "65"))
                                                (rule "elim_double_block_2" (formula "115") (term "1"))
                                                 (builtin "Use Dependency Contract" (formula "12") (ifInst ""  (formula "115") (term "1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                (rule "wellFormedAnon" (formula "87") (term "1,1,0,0,0"))
                                                (rule "replace_known_right" (formula "87") (term "0,0,0,0,0,0") (ifseqformula "114"))
                                                 (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "29")) (ifInst ""  (formula "12")) (ifInst ""  (formula "29")))
                                                (rule "true_left" (formula "87"))
                                                 (builtin "Use Dependency Contract" (formula "11") (ifInst ""  (formula "115") (term "0,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                (rule "wellFormedAnon" (formula "87") (term "1,1,0,0,0"))
                                                (rule "replace_known_left" (formula "87") (term "1,0,0,0,0") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "113")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "28")) (ifInst ""  (formula "11")) (ifInst ""  (formula "28")))
                                                (rule "true_left" (formula "87"))
                                                (rule "ifUnfold" (formula "115") (term "1") (inst "#boolv=x_2"))
                                                (rule "variableDeclaration" (formula "115") (term "1") (newnames "x_7"))
                                                (rule "inequality_comparison_simple" (formula "115") (term "1"))
                                                 (builtin "One Step Simplification" (formula "115"))
                                                (rule "replace_known_left" (formula "115") (term "0,0,1,0") (ifseqformula "83"))
                                                 (builtin "One Step Simplification" (formula "115"))
                                                 (builtin "Use Dependency Contract" (formula "7") (term "0") (ifInst ""  (formula "82") (term "0,1")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::elementsToReadOfBucketBlockClassified(de.wiesler.Classifier,[I,int,int,int)].JML accessible clause.0"))
                                                (rule "wellFormedAnon" (formula "87") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "expand_inInt" (formula "87") (term "1,0,0,0,0,0"))
                                                (rule "expand_inInt" (formula "87") (term "1,0,0,0"))
                                                (rule "expand_inInt" (formula "87") (term "1,0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0,0,0,0"))
                                                (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0,0"))
                                                (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0,0"))
                                                (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "87") (term "1,0,0,0,1,1,0"))
                                                (rule "translateJavaMulInt" (formula "87") (term "0,2,1,0,0,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "87") (term "2,0,0,0,1,1,0"))
                                                (rule "translateJavaMulInt" (formula "87") (term "1,1,0,0,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "87") (term "2,1,0,0,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "87") (term "0,2,0,0,0,1,1,0"))
                                                (rule "replace_known_right" (formula "87") (term "0,1,1,1,1,1,0,0") (ifseqformula "115"))
                                                 (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "113")) (ifInst ""  (formula "23")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "114")) (ifInst ""  (formula "22")) (ifInst ""  (formula "115")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "20")) (ifInst ""  (formula "15")) (ifInst ""  (formula "44")) (ifInst ""  (formula "29")) (ifInst ""  (formula "28")) (ifInst ""  (formula "114")))
                                                (rule "polySimp_elimSub" (formula "87") (term "2,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "87") (term "1,2,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "87") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "87") (term "0,2,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "87") (term "2,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "87") (term "2,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "87") (term "0,2,0,0,0,1,1,0"))
                                                (rule "disjointDefinition" (formula "87") (term "1,0"))
                                                (rule "disjointWithSingleton2" (formula "87") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,0,0,0"))
                                                (rule "replace_known_left" (formula "87") (term "1,0,0,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "87") (term "1,0,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,0"))
                                                (rule "replace_known_left" (formula "87") (term "1,0,0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0"))
                                                (rule "replace_known_left" (formula "87") (term "0,0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "applyEq" (formula "87") (term "0,1") (ifseqformula "7"))
                                                (rule "eqSymm" (formula "87") (term "1"))
                                                (rule "elementOfUnion" (formula "87") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "eqSymm" (formula "87") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "87") (term "1,0,0") (ifseqformula "108"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "elementOfUnion" (formula "87") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "eqSymm" (formula "87") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "87") (term "1,0,0") (ifseqformula "107"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "elementOfUnion" (formula "87") (term "0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "87") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "87"))
                                                (rule "elementOfArrayRangeConcrete" (formula "87") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "87") (term "0,0,0,0,0") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "82")))
                                                (rule "true_left" (formula "87"))
                                                (rule "ifSplit" (formula "115"))
                                                (branch "if x_7 true"
                                                    (builtin "One Step Simplification" (formula "116"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_7 false"
                                                    (builtin "One Step Simplification" (formula "116"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "blockEmpty" (formula "115") (term "1"))
                                                    (builtin "Block Contract (Internal)" (formula "115") (newnames "result_5,exc_5,heap_Before_BLOCK_4,savedHeap_Before_BLOCK_4,o,f"))
                                                   (branch "Validity"
                                                       (builtin "One Step Simplification" (formula "116"))
                                                       (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "27")))
                                                      (rule "eqSymm" (formula "116") (term "0,0,1,0,1"))
                                                      (rule "variableDeclarationAssign" (formula "116") (term "1"))
                                                      (rule "variableDeclaration" (formula "116") (term "1") (newnames "exc_5_1"))
                                                      (rule "assignment" (formula "116") (term "1"))
                                                       (builtin "One Step Simplification" (formula "116"))
                                                      (rule "emptyStatement" (formula "116") (term "1"))
                                                       (builtin "One Step Simplification" (formula "116"))
                                                      (rule "emptyStatement" (formula "116") (term "1"))
                                                      (rule "tryEmpty" (formula "116") (term "1"))
                                                      (rule "blockEmptyLabel" (formula "116") (term "1"))
                                                      (rule "blockEmpty" (formula "116") (term "1"))
                                                      (rule "methodCallEmpty" (formula "116") (term "1"))
                                                      (rule "emptyModality" (formula "116") (term "1"))
                                                      (rule "andRight" (formula "116"))
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "116"))
                                                         (rule "closeTrue" (formula "116"))
                                                      )
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "116"))
                                                         (rule "closeTrue" (formula "116"))
                                                      )
                                                   )
                                                   (branch "Precondition"
                                                      (rule "andRight" (formula "115"))
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "27")))
                                                         (rule "closeTrue" (formula "115"))
                                                      )
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "115"))
                                                         (rule "wellFormedAnonEQ" (formula "115") (ifseqformula "59"))
                                                         (rule "wellFormedAnon" (formula "115") (term "0"))
                                                         (rule "replace_known_left" (formula "115") (term "1") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                         (rule "closeTrue" (formula "115"))
                                                      )
                                                   )
                                                   (branch "Usage"
                                                       (builtin "One Step Simplification" (formula "87"))
                                                       (builtin "One Step Simplification" (formula "116"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "1,1,1,0") (ifseqformula "59"))
                                                       (builtin "One Step Simplification" (formula "87"))
                                                      (rule "expand_inInt" (formula "87") (term "0,1,0"))
                                                      (rule "replace_int_MIN" (formula "87") (term "0,1,0,1,0"))
                                                      (rule "replace_int_MAX" (formula "87") (term "1,0,0,1,0"))
                                                      (rule "andLeft" (formula "87"))
                                                      (rule "andLeft" (formula "87"))
                                                      (rule "andLeft" (formula "89"))
                                                      (rule "andLeft" (formula "88"))
                                                      (rule "andLeft" (formula "90"))
                                                      (rule "andLeft" (formula "88"))
                                                      (rule "translateJavaAddInt" (formula "92") (term "0,4,0"))
                                                      (rule "translateJavaAddInt" (formula "91") (term "5,0"))
                                                      (rule "translateJavaAddInt" (formula "92") (term "4,0"))
                                                      (rule "translateJavaAddInt" (formula "91") (term "0,5,0"))
                                                      (rule "replace_known_left" (formula "90") (term "0") (ifseqformula "87"))
                                                       (builtin "One Step Simplification" (formula "90"))
                                                      (rule "true_left" (formula "90"))
                                                      (rule "polySimp_addComm1" (formula "91") (term "4,0"))
                                                      (rule "polySimp_addComm1" (formula "90") (term "5,0"))
                                                      (rule "polySimp_addComm0" (formula "91") (term "0,4,0"))
                                                      (rule "polySimp_addComm0" (formula "90") (term "0,5,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "89"))
                                                      (rule "applyEq" (formula "92") (term "2,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "91") (term "1,4,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "90") (term "1,5,0") (ifseqformula "67"))
                                                      (rule "elim_double_block_2" (formula "121") (term "1"))
                                                      (rule "ifUnfold" (formula "121") (term "1") (inst "#boolv=x_2"))
                                                      (rule "variableDeclaration" (formula "121") (term "1") (newnames "x_8"))
                                                      (rule "inequality_comparison_simple" (formula "121") (term "1"))
                                                       (builtin "One Step Simplification" (formula "121"))
                                                      (rule "replace_known_left" (formula "121") (term "0,0,1,0") (ifseqformula "87"))
                                                       (builtin "One Step Simplification" (formula "121"))
                                                      (rule "ifSplit" (formula "121"))
                                                      (branch "if x_8 true"
                                                          (builtin "One Step Simplification" (formula "122"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "if x_8 false"
                                                          (builtin "One Step Simplification" (formula "122"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "blockEmpty" (formula "121") (term "1"))
                                                          (builtin "Block Contract (Internal)" (formula "121") (newnames "result_6,exc_6,heap_Before_BLOCK_5,savedHeap_Before_BLOCK_5,o,f"))
                                                         (branch "Validity"
                                                             (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "27")))
                                                             (builtin "One Step Simplification" (formula "122"))
                                                            (rule "eqSymm" (formula "122") (term "0,0,1,0,1"))
                                                            (rule "variableDeclarationAssign" (formula "122") (term "1"))
                                                            (rule "variableDeclaration" (formula "122") (term "1") (newnames "exc_6_1"))
                                                            (rule "assignment" (formula "122") (term "1"))
                                                             (builtin "One Step Simplification" (formula "122"))
                                                            (rule "emptyStatement" (formula "122") (term "1"))
                                                             (builtin "One Step Simplification" (formula "122"))
                                                            (rule "emptyStatement" (formula "122") (term "1"))
                                                            (rule "tryEmpty" (formula "122") (term "1"))
                                                            (rule "blockEmptyLabel" (formula "122") (term "1"))
                                                            (rule "blockEmpty" (formula "122") (term "1"))
                                                            (rule "methodCallEmpty" (formula "122") (term "1"))
                                                            (rule "emptyModality" (formula "122") (term "1"))
                                                            (rule "andRight" (formula "122"))
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "122"))
                                                               (rule "closeTrue" (formula "122"))
                                                            )
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "122"))
                                                               (rule "closeTrue" (formula "122"))
                                                            )
                                                         )
                                                         (branch "Precondition"
                                                            (rule "andRight" (formula "121"))
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "27")))
                                                               (rule "closeTrue" (formula "121"))
                                                            )
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "121"))
                                                               (rule "wellFormedAnonEQ" (formula "121") (ifseqformula "59"))
                                                               (rule "wellFormedAnon" (formula "121") (term "0"))
                                                               (rule "replace_known_left" (formula "121") (term "1") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                               (rule "closeTrue" (formula "121"))
                                                            )
                                                         )
                                                         (branch "Usage"
                                                             (builtin "One Step Simplification" (formula "93"))
                                                             (builtin "One Step Simplification" (formula "122"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "1,1,1,0") (ifseqformula "59"))
                                                             (builtin "One Step Simplification" (formula "93"))
                                                            (rule "expand_inInt" (formula "93") (term "0,1,0"))
                                                            (rule "replace_int_MAX" (formula "93") (term "1,0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "93") (term "0,1,0,1,0"))
                                                            (rule "andLeft" (formula "93"))
                                                            (rule "andLeft" (formula "94"))
                                                            (rule "andLeft" (formula "93"))
                                                            (rule "andLeft" (formula "94"))
                                                            (rule "andLeft" (formula "94"))
                                                            (rule "translateJavaSubInt" (formula "98") (term "0,0"))
                                                            (rule "translateJavaAddInt" (formula "97") (term "0"))
                                                            (rule "replace_known_left" (formula "96") (term "0") (ifseqformula "93"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "true_left" (formula "96"))
                                                            (rule "polySimp_elimSub" (formula "97") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "96") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "96") (term "0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "95"))
                                                            (rule "applyEq" (formula "97") (term "0,1,0,0") (ifseqformula "67"))
                                                            (rule "polySimp_addComm0" (formula "97") (term "0,0"))
                                                            (rule "elim_double_block_2" (formula "126") (term "1"))
                                                            (rule "ifUnfold" (formula "126") (term "1") (inst "#boolv=x_2"))
                                                            (rule "variableDeclaration" (formula "126") (term "1") (newnames "x_9"))
                                                            (rule "inequality_comparison_simple" (formula "126") (term "1"))
                                                             (builtin "One Step Simplification" (formula "126"))
                                                            (rule "replace_known_left" (formula "126") (term "0,0,1,0") (ifseqformula "93"))
                                                             (builtin "One Step Simplification" (formula "126"))
                                                            (rule "ifSplit" (formula "126"))
                                                            (branch "if x_9 true"
                                                                (builtin "One Step Simplification" (formula "127"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "if x_9 false"
                                                                (builtin "One Step Simplification" (formula "127"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "blockEmpty" (formula "126") (term "1"))
                                                                (builtin "Block Contract (Internal)" (formula "126") (newnames "result_7,exc_7,heap_Before_BLOCK_6,savedHeap_Before_BLOCK_6,o,f"))
                                                               (branch "Validity"
                                                                   (builtin "One Step Simplification" (formula "127"))
                                                                   (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "27")))
                                                                  (rule "eqSymm" (formula "127") (term "0,0,1,0,1"))
                                                                  (rule "variableDeclarationAssign" (formula "127") (term "1"))
                                                                  (rule "variableDeclaration" (formula "127") (term "1") (newnames "exc_7_1"))
                                                                  (rule "assignment" (formula "127") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "127"))
                                                                  (rule "emptyStatement" (formula "127") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "127"))
                                                                  (rule "emptyStatement" (formula "127") (term "1"))
                                                                  (rule "tryEmpty" (formula "127") (term "1"))
                                                                  (rule "blockEmptyLabel" (formula "127") (term "1"))
                                                                  (rule "blockEmpty" (formula "127") (term "1"))
                                                                  (rule "methodCallEmpty" (formula "127") (term "1"))
                                                                  (rule "emptyModality" (formula "127") (term "1"))
                                                                  (rule "andRight" (formula "127"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "127"))
                                                                     (rule "closeTrue" (formula "127"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "127"))
                                                                     (rule "closeTrue" (formula "127"))
                                                                  )
                                                               )
                                                               (branch "Precondition"
                                                                  (rule "andRight" (formula "126"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "27")))
                                                                     (rule "closeTrue" (formula "126"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "126"))
                                                                     (rule "wellFormedAnonEQ" (formula "126") (ifseqformula "59"))
                                                                     (rule "wellFormedAnon" (formula "126") (term "0"))
                                                                     (rule "replace_known_left" (formula "126") (term "1") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                     (rule "closeTrue" (formula "126"))
                                                                  )
                                                               )
                                                               (branch "Usage"
                                                                   (builtin "One Step Simplification" (formula "127"))
                                                                   (builtin "One Step Simplification" (formula "98"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,1,1,0") (ifseqformula "59"))
                                                                   (builtin "One Step Simplification" (formula "98"))
                                                                  (rule "expand_inInt" (formula "98") (term "0,1,0"))
                                                                  (rule "expand_inInt" (formula "98") (term "1"))
                                                                  (rule "replace_int_MIN" (formula "98") (term "0,1,0,1,0"))
                                                                  (rule "replace_int_MAX" (formula "98") (term "1,0,0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "98") (term "0,1,1"))
                                                                  (rule "replace_int_MAX" (formula "98") (term "1,0,1"))
                                                                  (rule "andLeft" (formula "98"))
                                                                  (rule "andLeft" (formula "98"))
                                                                  (rule "andLeft" (formula "100"))
                                                                  (rule "andLeft" (formula "99"))
                                                                  (rule "andLeft" (formula "99"))
                                                                  (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "98"))
                                                                   (builtin "One Step Simplification" (formula "101"))
                                                                  (rule "true_left" (formula "101"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "102"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "100"))
                                                                  (rule "pullOutSelect" (formula "101") (term "0") (inst "selectSK=arr_0"))
                                                                  (rule "applyEq" (formula "103") (term "0") (ifseqformula "101"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "101") (ifseqformula "59"))
                                                                   (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "131")) (ifInst ""  (formula "17")))
                                                                  (rule "elementOfSingleton" (formula "101") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "101"))
                                                                  (rule "eqSymm" (formula "101") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "101") (term "0,0,0") (ifseqformula "108"))
                                                                   (builtin "One Step Simplification" (formula "101"))
                                                                  (rule "simplifySelectOfAnon" (formula "101"))
                                                                   (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "131")) (ifInst ""  (formula "17")))
                                                                  (rule "elementOfSingleton" (formula "101") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "101"))
                                                                  (rule "eqSymm" (formula "101") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "101") (term "0,0,0") (ifseqformula "108"))
                                                                   (builtin "One Step Simplification" (formula "101"))
                                                                  (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "101"))
                                                                  (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "101"))
                                                                  (rule "hideAuxiliaryEq" (formula "101"))
                                                                  (rule "elim_double_block_2" (formula "131") (term "1"))
                                                                  (rule "ifUnfold" (formula "131") (term "1") (inst "#boolv=x_2"))
                                                                  (rule "variableDeclaration" (formula "131") (term "1") (newnames "x_10"))
                                                                  (rule "inequality_comparison_simple" (formula "131") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "131"))
                                                                  (rule "replace_known_left" (formula "131") (term "0,0,1,0") (ifseqformula "98"))
                                                                   (builtin "One Step Simplification" (formula "131"))
                                                                   (builtin "Use Dependency Contract" (formula "66") (term "0") (ifInst ""  (formula "68") (term "0")) (ifInst ""  (formula "59")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                   (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "129")) (ifInst ""  (formula "44")) (ifInst ""  (formula "11")) (ifInst ""  (formula "23")))
                                                                  (rule "wellFormedAnon" (formula "103") (term "0,0,0,0,0"))
                                                                  (rule "wellFormedAnonEQ" (formula "103") (term "1,0,0,0,0") (ifseqformula "59"))
                                                                  (rule "wellFormedAnon" (formula "103") (term "0,1,0,0,0,0"))
                                                                  (rule "expand_inInt" (formula "103") (term "1,0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "103") (term "0,1,1,0,0,0"))
                                                                  (rule "replace_int_MAX" (formula "103") (term "1,0,1,0,0,0"))
                                                                  (rule "eqSymm" (formula "103") (term "1"))
                                                                  (rule "translateJavaMulInt" (formula "103") (term "0,1,0,1,1,0"))
                                                                  (rule "translateJavaMulInt" (formula "103") (term "0,0,1,1,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "103") (term "0,1,1,1,1,0"))
                                                                  (rule "replace_known_left" (formula "103") (term "0,0,0,0,0,0") (ifseqformula "14"))
                                                                   (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "15")))
                                                                  (rule "polySimp_mulComm0" (formula "103") (term "0,0,1,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "103") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "103") (term "0,1,1,1,1,0"))
                                                                  (rule "disjointDefinition" (formula "103") (term "1,0"))
                                                                  (rule "disjointWithSingleton2" (formula "103") (term "1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "103") (term "1,0,0"))
                                                                  (rule "replace_known_left" (formula "103") (term "1,0,0") (ifseqformula "43"))
                                                                   (builtin "One Step Simplification" (formula "103"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "103") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "103") (term "0,0") (ifseqformula "16"))
                                                                   (builtin "One Step Simplification" (formula "103"))
                                                                  (rule "elementOfUnion" (formula "103") (term "0,0"))
                                                                  (rule "elementOfSingleton" (formula "103") (term "1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "103"))
                                                                  (rule "true_left" (formula "103"))
                                                                   (builtin "Use Dependency Contract" (formula "12") (ifInst ""  (formula "131") (term "1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "103") (term "1,1,0,0,0"))
                                                                  (rule "replace_known_left" (formula "103") (term "1,1") (ifseqformula "29"))
                                                                   (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "130")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "29")) (ifInst ""  (formula "12")))
                                                                  (rule "true_left" (formula "103"))
                                                                  (rule "ifSplit" (formula "131"))
                                                                  (branch "if x_10 true"
                                                                      (builtin "One Step Simplification" (formula "132"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "if x_10 false"
                                                                      (builtin "One Step Simplification" (formula "132"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "blockEmpty" (formula "131") (term "1"))
                                                                     (rule "variableDeclarationAssign" (formula "131") (term "1"))
                                                                     (rule "variableDeclaration" (formula "131") (term "1") (newnames "new_target"))
                                                                     (rule "methodCallWithAssignmentUnfoldArguments" (formula "131") (term "1"))
                                                                     (rule "variableDeclarationAssign" (formula "131") (term "1"))
                                                                     (rule "variableDeclaration" (formula "131") (term "1") (newnames "var"))
                                                                     (rule "assignment" (formula "131") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "131"))
                                                                     (rule "variableDeclarationAssign" (formula "131") (term "1"))
                                                                     (rule "variableDeclaration" (formula "131") (term "1") (newnames "var_1"))
                                                                     (rule "assignment_array2" (formula "131"))
                                                                     (branch "Normal Execution (_values != null)"
                                                                         (builtin "One Step Simplification" (formula "131"))
                                                                        (rule "replaceKnownSelect_taclet2121212012121000120112_0" (formula "131") (term "0,1,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet2121212012121000120112_2" (formula "131") (term "0,1,0"))
                                                                         (builtin "Use Operation Contract" (formula "131") (newnames "heapBefore_classify,result_8,exc_8") (contract "de.wiesler.Classifier[de.wiesler.Classifier::classify(int)].JML normal_behavior operation contract.0"))
                                                                        (branch "Post (classify)"
                                                                            (builtin "One Step Simplification" (formula "132"))
                                                                            (builtin "One Step Simplification" (formula "103"))
                                                                           (rule "expand_inInt" (formula "103") (term "0,1,0"))
                                                                           (rule "replace_int_MAX" (formula "103") (term "1,0,0,1,0"))
                                                                           (rule "replace_int_MIN" (formula "103") (term "0,1,0,1,0"))
                                                                           (rule "andLeft" (formula "103"))
                                                                           (rule "andLeft" (formula "104"))
                                                                           (rule "andLeft" (formula "103"))
                                                                           (rule "andLeft" (formula "103"))
                                                                           (rule "andLeft" (formula "103"))
                                                                           (rule "andLeft" (formula "105"))
                                                                           (rule "andLeft" (formula "106"))
                                                                           (rule "andLeft" (formula "105"))
                                                                           (rule "andLeft" (formula "108"))
                                                                           (rule "eqSymm" (formula "108"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "104"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "105"))
                                                                           (rule "assignment" (formula "140") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                           (rule "blockEmpty" (formula "140") (term "1"))
                                                                            (builtin "Block Contract (Internal)" (formula "140") (newnames "result_9,exc_9,heap_Before_BLOCK_7,savedHeap_Before_BLOCK_7,o,f"))
                                                                           (branch "Validity"
                                                                               (builtin "One Step Simplification" (formula "141"))
                                                                               (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "27")))
                                                                              (rule "eqSymm" (formula "141") (term "0,0,1,0,1"))
                                                                              (rule "variableDeclarationAssign" (formula "141") (term "1"))
                                                                              (rule "variableDeclaration" (formula "141") (term "1") (newnames "exc_9_1"))
                                                                              (rule "assignment" (formula "141") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "141"))
                                                                              (rule "emptyStatement" (formula "141") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "141"))
                                                                              (rule "emptyStatement" (formula "141") (term "1"))
                                                                              (rule "applyEq" (formula "106") (term "1") (ifseqformula "32"))
                                                                              (rule "tryEmpty" (formula "141") (term "1"))
                                                                              (rule "blockEmptyLabel" (formula "141") (term "1"))
                                                                              (rule "blockEmpty" (formula "141") (term "1"))
                                                                              (rule "methodCallEmpty" (formula "141") (term "1"))
                                                                              (rule "emptyModality" (formula "141") (term "1"))
                                                                              (rule "andRight" (formula "141"))
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "141"))
                                                                                 (rule "closeTrue" (formula "141"))
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "141"))
                                                                                 (rule "closeTrue" (formula "141"))
                                                                              )
                                                                           )
                                                                           (branch "Precondition"
                                                                              (rule "andRight" (formula "140"))
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "27")))
                                                                                 (rule "closeTrue" (formula "140"))
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "140"))
                                                                                 (rule "wellFormedAnonEQ" (formula "140") (ifseqformula "59"))
                                                                                 (rule "wellFormedAnon" (formula "140") (term "0"))
                                                                                 (rule "replace_known_left" (formula "140") (term "1") (ifseqformula "58"))
                                                                                  (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                 (rule "closeTrue" (formula "140"))
                                                                              )
                                                                           )
                                                                           (branch "Usage"
                                                                               (builtin "One Step Simplification" (formula "112"))
                                                                               (builtin "One Step Simplification" (formula "141"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "1,1,1,0") (ifseqformula "59"))
                                                                               (builtin "One Step Simplification" (formula "112"))
                                                                              (rule "expand_inInt" (formula "112") (term "0,1,0"))
                                                                              (rule "replace_int_MAX" (formula "112") (term "1,0,0,1,0"))
                                                                              (rule "replace_int_MIN" (formula "112") (term "0,1,0,1,0"))
                                                                              (rule "andLeft" (formula "112"))
                                                                              (rule "andLeft" (formula "112"))
                                                                              (rule "andLeft" (formula "113"))
                                                                              (rule "andLeft" (formula "113"))
                                                                              (rule "translateJavaAddInt" (formula "116") (term "4,0"))
                                                                              (rule "replace_known_left" (formula "115") (term "0") (ifseqformula "112"))
                                                                               (builtin "One Step Simplification" (formula "115"))
                                                                              (rule "true_left" (formula "115"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "114"))
                                                                              (rule "applyEq" (formula "106") (term "1") (ifseqformula "32"))
                                                                              (rule "elim_double_block_2" (formula "144") (term "1"))
                                                                               (builtin "Use Dependency Contract" (formula "11") (ifInst ""  (formula "144") (term "0,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "116") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_right" (formula "116") (term "0,0,0,0,0,0") (ifseqformula "142"))
                                                                               (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "23")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "28")) (ifInst ""  (formula "11")) (ifInst ""  (formula "28")))
                                                                              (rule "true_left" (formula "116"))
                                                                              (rule "ifUnfold" (formula "144") (term "1") (inst "#boolv=x_2"))
                                                                              (rule "variableDeclaration" (formula "144") (term "1") (newnames "x_11"))
                                                                              (rule "inequality_comparison_simple" (formula "144") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "144"))
                                                                              (rule "replace_known_left" (formula "144") (term "0,0,1,0") (ifseqformula "112"))
                                                                               (builtin "One Step Simplification" (formula "144"))
                                                                              (rule "ifSplit" (formula "144"))
                                                                              (branch "if x_11 true"
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "if x_11 false"
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                  (builtin "One Step Simplification" (formula "145"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "blockEmpty" (formula "144") (term "1"))
                                                                                  (builtin "Block Contract (Internal)" (formula "144") (newnames "result_10,exc_10,heap_Before_BLOCK_8,savedHeap_Before_BLOCK_8,o,f"))
                                                                                 (branch "Validity"
                                                                                     (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "27")))
                                                                                     (builtin "One Step Simplification" (formula "145"))
                                                                                    (rule "eqSymm" (formula "145") (term "0,0,1,0,1"))
                                                                                    (rule "variableDeclarationAssign" (formula "145") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "145") (term "1") (newnames "exc_10_1"))
                                                                                    (rule "assignment" (formula "145") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "145"))
                                                                                    (rule "emptyStatement" (formula "145") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "145"))
                                                                                    (rule "emptyStatement" (formula "145") (term "1"))
                                                                                    (rule "tryEmpty" (formula "145") (term "1"))
                                                                                    (rule "blockEmptyLabel" (formula "145") (term "1"))
                                                                                    (rule "blockEmpty" (formula "145") (term "1"))
                                                                                    (rule "methodCallEmpty" (formula "145") (term "1"))
                                                                                    (rule "emptyModality" (formula "145") (term "1"))
                                                                                    (rule "andRight" (formula "145"))
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "145"))
                                                                                       (rule "closeTrue" (formula "145"))
                                                                                    )
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "145"))
                                                                                       (rule "closeTrue" (formula "145"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Precondition"
                                                                                    (rule "andRight" (formula "144"))
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "144") (ifInst ""  (formula "27")))
                                                                                       (rule "closeTrue" (formula "144"))
                                                                                    )
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "144"))
                                                                                       (rule "wellFormedAnonEQ" (formula "144") (ifseqformula "59"))
                                                                                       (rule "wellFormedAnon" (formula "144") (term "0"))
                                                                                       (rule "replace_known_left" (formula "144") (term "1") (ifseqformula "58"))
                                                                                        (builtin "One Step Simplification" (formula "144") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                       (rule "closeTrue" (formula "144"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Usage"
                                                                                     (builtin "One Step Simplification" (formula "145"))
                                                                                     (builtin "One Step Simplification" (formula "116"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "1,1,1,0") (ifseqformula "59"))
                                                                                     (builtin "One Step Simplification" (formula "116"))
                                                                                    (rule "expand_inInt" (formula "116") (term "0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "116") (term "1,0,0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "116") (term "0,1,0,1,0"))
                                                                                    (rule "andLeft" (formula "116"))
                                                                                    (rule "andLeft" (formula "116"))
                                                                                    (rule "andLeft" (formula "117"))
                                                                                    (rule "andLeft" (formula "117"))
                                                                                    (rule "translateJavaAddInt" (formula "120") (term "5,0"))
                                                                                    (rule "translateJavaAddInt" (formula "120") (term "4,0"))
                                                                                    (rule "replace_known_left" (formula "119") (term "0") (ifseqformula "116"))
                                                                                     (builtin "One Step Simplification" (formula "119"))
                                                                                    (rule "true_left" (formula "119"))
                                                                                    (rule "polySimp_addComm1" (formula "119") (term "4,0"))
                                                                                    (rule "polySimp_addComm0" (formula "119") (term "0,4,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "118"))
                                                                                    (rule "elim_double_block_2" (formula "148") (term "1"))
                                                                                    (rule "ifUnfold" (formula "148") (term "1") (inst "#boolv=x_2"))
                                                                                    (rule "variableDeclaration" (formula "148") (term "1") (newnames "x_12"))
                                                                                    (rule "inequality_comparison_simple" (formula "148") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "148"))
                                                                                    (rule "replace_known_left" (formula "148") (term "0,0,1,0") (ifseqformula "116"))
                                                                                     (builtin "One Step Simplification" (formula "148"))
                                                                                    (rule "ifSplit" (formula "148"))
                                                                                    (branch "if x_12 true"
                                                                                        (builtin "One Step Simplification" (formula "149"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch "if x_12 false"
                                                                                        (builtin "One Step Simplification" (formula "149"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "true_left" (formula "1"))
                                                                                       (rule "blockEmpty" (formula "148") (term "1"))
                                                                                        (builtin "Block Contract (Internal)" (formula "148") (newnames "result_11,exc_11,heap_Before_BLOCK_9,savedHeap_Before_BLOCK_9,o,f"))
                                                                                       (branch "Validity"
                                                                                           (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "27")))
                                                                                           (builtin "One Step Simplification" (formula "149"))
                                                                                          (rule "eqSymm" (formula "149") (term "0,0,1,0,1"))
                                                                                          (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                                                          (rule "variableDeclaration" (formula "149") (term "1") (newnames "exc_11_1"))
                                                                                          (rule "assignment" (formula "149") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "149"))
                                                                                          (rule "emptyStatement" (formula "149") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "149"))
                                                                                          (rule "emptyStatement" (formula "149") (term "1"))
                                                                                          (rule "tryEmpty" (formula "149") (term "1"))
                                                                                          (rule "blockEmptyLabel" (formula "149") (term "1"))
                                                                                          (rule "blockEmpty" (formula "149") (term "1"))
                                                                                          (rule "methodCallEmpty" (formula "149") (term "1"))
                                                                                          (rule "emptyModality" (formula "149") (term "1"))
                                                                                          (rule "andRight" (formula "149"))
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "149"))
                                                                                             (rule "closeTrue" (formula "149"))
                                                                                          )
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "149"))
                                                                                             (rule "closeTrue" (formula "149"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Precondition"
                                                                                          (rule "andRight" (formula "148"))
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "148") (ifInst ""  (formula "27")))
                                                                                             (rule "closeTrue" (formula "148"))
                                                                                          )
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "148"))
                                                                                             (rule "wellFormedAnonEQ" (formula "148") (ifseqformula "59"))
                                                                                             (rule "wellFormedAnon" (formula "148") (term "0"))
                                                                                             (rule "replace_known_left" (formula "148") (term "1") (ifseqformula "58"))
                                                                                              (builtin "One Step Simplification" (formula "148") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                             (rule "closeTrue" (formula "148"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Usage"
                                                                                           (builtin "One Step Simplification" (formula "120"))
                                                                                           (builtin "One Step Simplification" (formula "149"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "1,1,1,0") (ifseqformula "59"))
                                                                                           (builtin "One Step Simplification" (formula "120"))
                                                                                          (rule "expand_inInt" (formula "120") (term "0,1,0"))
                                                                                          (rule "replace_int_MAX" (formula "120") (term "1,0,0,1,0"))
                                                                                          (rule "replace_int_MIN" (formula "120") (term "0,1,0,1,0"))
                                                                                          (rule "andLeft" (formula "120"))
                                                                                          (rule "andLeft" (formula "120"))
                                                                                          (rule "andLeft" (formula "121"))
                                                                                          (rule "andLeft" (formula "121"))
                                                                                          (rule "translateJavaAddInt" (formula "124") (term "4,0"))
                                                                                          (rule "replace_known_left" (formula "123") (term "0") (ifseqformula "120"))
                                                                                           (builtin "One Step Simplification" (formula "123"))
                                                                                          (rule "true_left" (formula "123"))
                                                                                          (rule "polySimp_addComm1" (formula "123") (term "4,0"))
                                                                                          (rule "polySimp_addComm0" (formula "123") (term "0,4,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "122"))
                                                                                          (rule "elim_double_block_2" (formula "152") (term "1"))
                                                                                          (rule "ifUnfold" (formula "152") (term "1") (inst "#boolv=x_2"))
                                                                                          (rule "variableDeclaration" (formula "152") (term "1") (newnames "x_13"))
                                                                                          (rule "inequality_comparison_simple" (formula "152") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "152"))
                                                                                          (rule "replace_known_left" (formula "152") (term "0,0,1,0") (ifseqformula "120"))
                                                                                           (builtin "One Step Simplification" (formula "152"))
                                                                                          (rule "ifSplit" (formula "152"))
                                                                                          (branch "if x_13 true"
                                                                                              (builtin "One Step Simplification" (formula "153"))
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "closeFalse" (formula "1"))
                                                                                          )
                                                                                          (branch "if x_13 false"
                                                                                              (builtin "One Step Simplification" (formula "153"))
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "true_left" (formula "1"))
                                                                                             (rule "blockEmpty" (formula "152") (term "1"))
                                                                                              (builtin "Block Contract (Internal)" (formula "152") (newnames "result_12,exc_12,heap_Before_BLOCK_10,savedHeap_Before_BLOCK_10,o,f"))
                                                                                             (branch "Validity"
                                                                                                 (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "27")))
                                                                                                 (builtin "One Step Simplification" (formula "153"))
                                                                                                (rule "eqSymm" (formula "153") (term "0,0,1,0,1"))
                                                                                                (rule "variableDeclarationAssign" (formula "153") (term "1"))
                                                                                                (rule "variableDeclaration" (formula "153") (term "1") (newnames "exc_12_1"))
                                                                                                (rule "assignment" (formula "153") (term "1"))
                                                                                                 (builtin "One Step Simplification" (formula "153"))
                                                                                                (rule "emptyStatement" (formula "153") (term "1"))
                                                                                                 (builtin "One Step Simplification" (formula "153"))
                                                                                                (rule "emptyStatement" (formula "153") (term "1"))
                                                                                                (rule "tryEmpty" (formula "153") (term "1"))
                                                                                                (rule "blockEmptyLabel" (formula "153") (term "1"))
                                                                                                (rule "blockEmpty" (formula "153") (term "1"))
                                                                                                (rule "methodCallEmpty" (formula "153") (term "1"))
                                                                                                (rule "emptyModality" (formula "153") (term "1"))
                                                                                                (rule "andRight" (formula "153"))
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "153"))
                                                                                                   (rule "closeTrue" (formula "153"))
                                                                                                )
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "153"))
                                                                                                   (rule "closeTrue" (formula "153"))
                                                                                                )
                                                                                             )
                                                                                             (branch "Precondition"
                                                                                                (rule "andRight" (formula "152"))
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "152") (ifInst ""  (formula "27")))
                                                                                                   (rule "closeTrue" (formula "152"))
                                                                                                )
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "152"))
                                                                                                   (rule "wellFormedAnonEQ" (formula "152") (ifseqformula "59"))
                                                                                                   (rule "wellFormedAnon" (formula "152") (term "0"))
                                                                                                   (rule "replace_known_left" (formula "152") (term "1") (ifseqformula "58"))
                                                                                                    (builtin "One Step Simplification" (formula "152") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                   (rule "closeTrue" (formula "152"))
                                                                                                )
                                                                                             )
                                                                                             (branch "Usage"
                                                                                                 (builtin "One Step Simplification" (formula "153"))
                                                                                                 (builtin "One Step Simplification" (formula "124"))
                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "1,1,1,0") (ifseqformula "59"))
                                                                                                 (builtin "One Step Simplification" (formula "124"))
                                                                                                (rule "expand_inInt" (formula "124") (term "0,1,0"))
                                                                                                (rule "replace_int_MAX" (formula "124") (term "1,0,0,1,0"))
                                                                                                (rule "replace_int_MIN" (formula "124") (term "0,1,0,1,0"))
                                                                                                (rule "andLeft" (formula "124"))
                                                                                                (rule "andLeft" (formula "124"))
                                                                                                (rule "andLeft" (formula "125"))
                                                                                                (rule "andLeft" (formula "125"))
                                                                                                (rule "translateJavaAddInt" (formula "128") (term "4,0"))
                                                                                                (rule "replace_known_left" (formula "127") (term "0") (ifseqformula "124"))
                                                                                                 (builtin "One Step Simplification" (formula "127"))
                                                                                                (rule "true_left" (formula "127"))
                                                                                                (rule "polySimp_addComm1" (formula "127") (term "4,0"))
                                                                                                (rule "polySimp_addComm0" (formula "127") (term "0,4,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "126"))
                                                                                                (rule "elim_double_block_2" (formula "155") (term "1"))
                                                                                                (rule "ifUnfold" (formula "155") (term "1") (inst "#boolv=x_2"))
                                                                                                (rule "variableDeclaration" (formula "155") (term "1") (newnames "x_14"))
                                                                                                (rule "inequality_comparison_simple" (formula "155") (term "1"))
                                                                                                 (builtin "One Step Simplification" (formula "155"))
                                                                                                (rule "replace_known_left" (formula "155") (term "0,0,1,0") (ifseqformula "124"))
                                                                                                 (builtin "One Step Simplification" (formula "155"))
                                                                                                (rule "ifSplit" (formula "155"))
                                                                                                (branch "if x_14 true"
                                                                                                    (builtin "One Step Simplification" (formula "156"))
                                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "closeFalse" (formula "1"))
                                                                                                )
                                                                                                (branch "if x_14 false"
                                                                                                    (builtin "One Step Simplification" (formula "156"))
                                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "true_left" (formula "1"))
                                                                                                   (rule "blockEmpty" (formula "155") (term "1"))
                                                                                                    (builtin "Block Contract (Internal)" (formula "155") (newnames "result_13,exc_13,heap_Before_BLOCK_11,savedHeap_Before_BLOCK_11,o,f"))
                                                                                                   (branch "Validity"
                                                                                                       (builtin "One Step Simplification" (formula "156"))
                                                                                                       (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "27")))
                                                                                                      (rule "eqSymm" (formula "156") (term "0,0,1,0,1"))
                                                                                                      (rule "variableDeclarationAssign" (formula "156") (term "1"))
                                                                                                      (rule "variableDeclaration" (formula "156") (term "1") (newnames "exc_13_1"))
                                                                                                      (rule "assignment" (formula "156") (term "1"))
                                                                                                       (builtin "One Step Simplification" (formula "156"))
                                                                                                      (rule "emptyStatement" (formula "156") (term "1"))
                                                                                                       (builtin "One Step Simplification" (formula "156"))
                                                                                                      (rule "emptyStatement" (formula "156") (term "1"))
                                                                                                      (rule "tryEmpty" (formula "156") (term "1"))
                                                                                                      (rule "blockEmptyLabel" (formula "156") (term "1"))
                                                                                                      (rule "blockEmpty" (formula "156") (term "1"))
                                                                                                      (rule "methodCallEmpty" (formula "156") (term "1"))
                                                                                                      (rule "emptyModality" (formula "156") (term "1"))
                                                                                                      (rule "andRight" (formula "156"))
                                                                                                      (branch
                                                                                                          (builtin "One Step Simplification" (formula "156"))
                                                                                                         (rule "closeTrue" (formula "156"))
                                                                                                      )
                                                                                                      (branch
                                                                                                          (builtin "One Step Simplification" (formula "156"))
                                                                                                         (rule "closeTrue" (formula "156"))
                                                                                                      )
                                                                                                   )
                                                                                                   (branch "Precondition"
                                                                                                      (rule "andRight" (formula "155"))
                                                                                                      (branch
                                                                                                          (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "27")))
                                                                                                         (rule "closeTrue" (formula "155"))
                                                                                                      )
                                                                                                      (branch
                                                                                                          (builtin "One Step Simplification" (formula "155"))
                                                                                                         (rule "wellFormedAnonEQ" (formula "155") (ifseqformula "59"))
                                                                                                         (rule "wellFormedAnon" (formula "155") (term "0"))
                                                                                                         (rule "replace_known_left" (formula "155") (term "1") (ifseqformula "58"))
                                                                                                          (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                         (rule "closeTrue" (formula "155"))
                                                                                                      )
                                                                                                   )
                                                                                                   (branch "Usage"
                                                                                                       (builtin "One Step Simplification" (formula "156"))
                                                                                                       (builtin "One Step Simplification" (formula "127"))
                                                                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "1,1,1,0") (ifseqformula "59"))
                                                                                                       (builtin "One Step Simplification" (formula "127"))
                                                                                                      (rule "expand_inInt" (formula "127") (term "0,1,0"))
                                                                                                      (rule "replace_int_MAX" (formula "127") (term "1,0,0,1,0"))
                                                                                                      (rule "replace_int_MIN" (formula "127") (term "0,1,0,1,0"))
                                                                                                      (rule "andLeft" (formula "127"))
                                                                                                      (rule "andLeft" (formula "127"))
                                                                                                      (rule "andLeft" (formula "128"))
                                                                                                      (rule "andLeft" (formula "128"))
                                                                                                      (rule "translateJavaAddInt" (formula "131") (term "4,0"))
                                                                                                      (rule "replace_known_left" (formula "130") (term "0") (ifseqformula "127"))
                                                                                                       (builtin "One Step Simplification" (formula "130"))
                                                                                                      (rule "true_left" (formula "130"))
                                                                                                      (rule "polySimp_addComm1" (formula "130") (term "4,0"))
                                                                                                      (rule "polySimp_addComm0" (formula "130") (term "0,4,0"))
                                                                                                      (rule "inEqSimp_commuteLeq" (formula "129"))
                                                                                                      (rule "elim_double_block_2" (formula "159") (term "1"))
                                                                                                      (rule "ifUnfold" (formula "159") (term "1") (inst "#boolv=x_2"))
                                                                                                      (rule "variableDeclaration" (formula "159") (term "1") (newnames "x_15"))
                                                                                                      (rule "inequality_comparison_simple" (formula "159") (term "1"))
                                                                                                       (builtin "One Step Simplification" (formula "159"))
                                                                                                      (rule "replace_known_left" (formula "159") (term "0,0,1,0") (ifseqformula "127"))
                                                                                                       (builtin "One Step Simplification" (formula "159"))
                                                                                                      (rule "ifSplit" (formula "159"))
                                                                                                      (branch "if x_15 true"
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "closeFalse" (formula "1"))
                                                                                                      )
                                                                                                      (branch "if x_15 false"
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                          (builtin "One Step Simplification" (formula "160"))
                                                                                                         (rule "true_left" (formula "1"))
                                                                                                         (rule "blockEmpty" (formula "159") (term "1"))
                                                                                                          (builtin "Block Contract (Internal)" (formula "159") (newnames "result_14,exc_14,heap_Before_BLOCK_12,savedHeap_Before_BLOCK_12,o,f"))
                                                                                                         (branch "Validity"
                                                                                                             (builtin "One Step Simplification" (formula "160"))
                                                                                                             (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "27")))
                                                                                                            (rule "eqSymm" (formula "160") (term "0,0,1,0,1"))
                                                                                                            (rule "variableDeclarationAssign" (formula "160") (term "1"))
                                                                                                            (rule "variableDeclaration" (formula "160") (term "1") (newnames "exc_14_1"))
                                                                                                            (rule "assignment" (formula "160") (term "1"))
                                                                                                             (builtin "One Step Simplification" (formula "160"))
                                                                                                            (rule "emptyStatement" (formula "160") (term "1"))
                                                                                                             (builtin "One Step Simplification" (formula "160"))
                                                                                                            (rule "emptyStatement" (formula "160") (term "1"))
                                                                                                            (rule "tryEmpty" (formula "160") (term "1"))
                                                                                                            (rule "blockEmptyLabel" (formula "160") (term "1"))
                                                                                                            (rule "blockEmpty" (formula "160") (term "1"))
                                                                                                            (rule "methodCallEmpty" (formula "160") (term "1"))
                                                                                                            (rule "emptyModality" (formula "160") (term "1"))
                                                                                                            (rule "andRight" (formula "160"))
                                                                                                            (branch
                                                                                                                (builtin "One Step Simplification" (formula "160"))
                                                                                                               (rule "closeTrue" (formula "160"))
                                                                                                            )
                                                                                                            (branch
                                                                                                                (builtin "One Step Simplification" (formula "160"))
                                                                                                               (rule "closeTrue" (formula "160"))
                                                                                                            )
                                                                                                         )
                                                                                                         (branch "Precondition"
                                                                                                            (rule "andRight" (formula "159"))
                                                                                                            (branch
                                                                                                                (builtin "One Step Simplification" (formula "159") (ifInst ""  (formula "27")))
                                                                                                               (rule "closeTrue" (formula "159"))
                                                                                                            )
                                                                                                            (branch
                                                                                                                (builtin "One Step Simplification" (formula "159"))
                                                                                                               (rule "wellFormedAnonEQ" (formula "159") (ifseqformula "59"))
                                                                                                               (rule "wellFormedAnon" (formula "159") (term "0"))
                                                                                                               (rule "replace_known_left" (formula "159") (term "1") (ifseqformula "58"))
                                                                                                                (builtin "One Step Simplification" (formula "159") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                               (rule "closeTrue" (formula "159"))
                                                                                                            )
                                                                                                         )
                                                                                                         (branch "Usage"
                                                                                                             (builtin "One Step Simplification" (formula "160"))
                                                                                                             (builtin "One Step Simplification" (formula "131"))
                                                                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "1,1,1,0") (ifseqformula "59"))
                                                                                                             (builtin "One Step Simplification" (formula "131"))
                                                                                                            (rule "expand_inInt" (formula "131") (term "0,1,0"))
                                                                                                            (rule "replace_int_MAX" (formula "131") (term "1,0,0,1,0"))
                                                                                                            (rule "replace_int_MIN" (formula "131") (term "0,1,0,1,0"))
                                                                                                            (rule "andLeft" (formula "131"))
                                                                                                            (rule "andLeft" (formula "131"))
                                                                                                            (rule "andLeft" (formula "132"))
                                                                                                            (rule "andLeft" (formula "132"))
                                                                                                            (rule "replace_known_left" (formula "134") (term "0") (ifseqformula "131"))
                                                                                                             (builtin "One Step Simplification" (formula "134"))
                                                                                                            (rule "true_left" (formula "134"))
                                                                                                            (rule "inEqSimp_commuteLeq" (formula "133"))
                                                                                                            (rule "elim_double_block_2" (formula "163") (term "1"))
                                                                                                            (rule "ifUnfold" (formula "163") (term "1") (inst "#boolv=x_2"))
                                                                                                            (rule "variableDeclaration" (formula "163") (term "1") (newnames "x_16"))
                                                                                                            (rule "inequality_comparison_simple" (formula "163") (term "1"))
                                                                                                             (builtin "One Step Simplification" (formula "163"))
                                                                                                            (rule "replace_known_left" (formula "163") (term "0,0,1,0") (ifseqformula "131"))
                                                                                                             (builtin "One Step Simplification" (formula "163"))
                                                                                                             (builtin "Use Dependency Contract" (formula "12") (ifInst ""  (formula "163") (term "1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                            (rule "wellFormedAnon" (formula "135") (term "1,1,0,0,0"))
                                                                                                            (rule "replace_known_left" (formula "135") (term "0,1") (ifseqformula "12"))
                                                                                                             (builtin "One Step Simplification" (formula "135") (ifInst ""  (formula "162")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
                                                                                                            (rule "true_left" (formula "135"))
                                                                                                            (rule "ifSplit" (formula "163"))
                                                                                                            (branch "if x_16 true"
                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                               (rule "closeFalse" (formula "1"))
                                                                                                            )
                                                                                                            (branch "if x_16 false"
                                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                                (builtin "One Step Simplification" (formula "164"))
                                                                                                               (rule "true_left" (formula "1"))
                                                                                                               (rule "blockEmpty" (formula "163") (term "1"))
                                                                                                                (builtin "Block Contract (Internal)" (formula "163") (newnames "result_15,exc_15,heap_Before_BLOCK_13,savedHeap_Before_BLOCK_13,o,f"))
                                                                                                               (branch "Validity"
                                                                                                                   (builtin "One Step Simplification" (formula "135") (ifInst ""  (formula "27")))
                                                                                                                   (builtin "One Step Simplification" (formula "164"))
                                                                                                                  (rule "eqSymm" (formula "164") (term "0,0,1,0,1"))
                                                                                                                  (rule "variableDeclarationAssign" (formula "164") (term "1"))
                                                                                                                  (rule "variableDeclaration" (formula "164") (term "1") (newnames "exc_15_1"))
                                                                                                                  (rule "assignment" (formula "164") (term "1"))
                                                                                                                   (builtin "One Step Simplification" (formula "164"))
                                                                                                                  (rule "emptyStatement" (formula "164") (term "1"))
                                                                                                                   (builtin "One Step Simplification" (formula "164"))
                                                                                                                  (rule "emptyStatement" (formula "164") (term "1"))
                                                                                                                  (rule "tryEmpty" (formula "164") (term "1"))
                                                                                                                  (rule "blockEmptyLabel" (formula "164") (term "1"))
                                                                                                                  (rule "blockEmpty" (formula "164") (term "1"))
                                                                                                                  (rule "methodCallEmpty" (formula "164") (term "1"))
                                                                                                                  (rule "emptyModality" (formula "164") (term "1"))
                                                                                                                  (rule "andRight" (formula "164"))
                                                                                                                  (branch
                                                                                                                      (builtin "One Step Simplification" (formula "164"))
                                                                                                                     (rule "closeTrue" (formula "164"))
                                                                                                                  )
                                                                                                                  (branch
                                                                                                                      (builtin "One Step Simplification" (formula "164"))
                                                                                                                     (rule "closeTrue" (formula "164"))
                                                                                                                  )
                                                                                                               )
                                                                                                               (branch "Precondition"
                                                                                                                  (rule "andRight" (formula "163"))
                                                                                                                  (branch
                                                                                                                      (builtin "One Step Simplification" (formula "163") (ifInst ""  (formula "27")))
                                                                                                                     (rule "closeTrue" (formula "163"))
                                                                                                                  )
                                                                                                                  (branch
                                                                                                                      (builtin "One Step Simplification" (formula "163"))
                                                                                                                     (rule "wellFormedAnonEQ" (formula "163") (ifseqformula "59"))
                                                                                                                     (rule "wellFormedAnon" (formula "163") (term "0"))
                                                                                                                     (rule "replace_known_left" (formula "163") (term "1") (ifseqformula "58"))
                                                                                                                      (builtin "One Step Simplification" (formula "163") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                     (rule "closeTrue" (formula "163"))
                                                                                                                  )
                                                                                                               )
                                                                                                               (branch "Usage"
                                                                                                                   (builtin "One Step Simplification" (formula "135"))
                                                                                                                   (builtin "One Step Simplification" (formula "164"))
                                                                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "135") (term "1,1,1,0") (ifseqformula "59"))
                                                                                                                   (builtin "One Step Simplification" (formula "135"))
                                                                                                                  (rule "expand_inInt" (formula "135") (term "0,1,0"))
                                                                                                                  (rule "replace_int_MIN" (formula "135") (term "0,1,0,1,0"))
                                                                                                                  (rule "replace_int_MAX" (formula "135") (term "1,0,0,1,0"))
                                                                                                                  (rule "andLeft" (formula "135"))
                                                                                                                  (rule "andLeft" (formula "135"))
                                                                                                                  (rule "andLeft" (formula "136"))
                                                                                                                  (rule "andLeft" (formula "136"))
                                                                                                                  (rule "replace_known_left" (formula "138") (term "0") (ifseqformula "135"))
                                                                                                                   (builtin "One Step Simplification" (formula "138"))
                                                                                                                  (rule "true_left" (formula "138"))
                                                                                                                  (rule "inEqSimp_commuteLeq" (formula "137"))
                                                                                                                  (rule "elim_double_block_2" (formula "167") (term "1"))
                                                                                                                  (rule "ifUnfold" (formula "167") (term "1") (inst "#boolv=x_2"))
                                                                                                                  (rule "variableDeclaration" (formula "167") (term "1") (newnames "x_17"))
                                                                                                                  (rule "inequality_comparison_simple" (formula "167") (term "1"))
                                                                                                                   (builtin "One Step Simplification" (formula "167"))
                                                                                                                  (rule "replace_known_left" (formula "167") (term "0,0,1,0") (ifseqformula "135"))
                                                                                                                   (builtin "One Step Simplification" (formula "167"))
                                                                                                                  (rule "ifSplit" (formula "167"))
                                                                                                                  (branch "if x_17 true"
                                                                                                                      (builtin "One Step Simplification" (formula "168"))
                                                                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                                                                     (rule "closeFalse" (formula "1"))
                                                                                                                  )
                                                                                                                  (branch "if x_17 false"
                                                                                                                      (builtin "One Step Simplification" (formula "168"))
                                                                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                                                                     (rule "true_left" (formula "1"))
                                                                                                                     (rule "blockEmpty" (formula "167") (term "1"))
                                                                                                                     (rule "ifUnfold" (formula "167") (term "1") (inst "#boolv=x_2"))
                                                                                                                     (rule "variableDeclaration" (formula "167") (term "1") (newnames "x_18"))
                                                                                                                     (rule "inequality_comparison_simple" (formula "167") (term "1"))
                                                                                                                      (builtin "One Step Simplification" (formula "167"))
                                                                                                                     (rule "eqSymm" (formula "167") (term "0,0,1,0"))
                                                                                                                      (builtin "Use Dependency Contract" (formula "11") (ifInst ""  (formula "167") (term "0,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                                     (rule "wellFormedAnon" (formula "139") (term "1,1,0,0,0"))
                                                                                                                     (rule "replace_known_left" (formula "139") (term "0,1,0,0,0") (ifseqformula "14"))
                                                                                                                      (builtin "One Step Simplification" (formula "139") (ifInst ""  (formula "165")) (ifInst ""  (formula "23")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "28")) (ifInst ""  (formula "11")) (ifInst ""  (formula "28")))
                                                                                                                     (rule "true_left" (formula "139"))
                                                                                                                     (rule "ifSplit" (formula "167"))
                                                                                                                     (branch "if x_18 true"
                                                                                                                         (builtin "One Step Simplification" (formula "168"))
                                                                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                                                                        (rule "notLeft" (formula "1"))
                                                                                                                        (rule "variableDeclarationGhostAssign" (formula "168") (term "1"))
                                                                                                                        (rule "variableDeclarationGhost" (formula "168") (term "1") (newnames "heapBeforeWrite"))
                                                                                                                        (rule "assignment" (formula "168") (term "1"))
                                                                                                                         (builtin "One Step Simplification" (formula "168"))
                                                                                                                         (builtin "Use Operation Contract" (formula "168") (newnames "heapBefore_copy_nonoverlapping,exc_16,heapAfter_copy_nonoverlapping,anon_heap_copy_nonoverlapping") (contract "de.wiesler.Functions[de.wiesler.Functions::copy_nonoverlapping([I,int,[I,int,int)].JML normal_behavior operation contract.0"))
                                                                                                                        (branch "Post (copy_nonoverlapping)"
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                            (builtin "One Step Simplification" (formula "170"))
                                                                                                                            (builtin "Block Contract (Internal)" (formula "170") (newnames "result_16,exc_17,heap_Before_BLOCK_14,savedHeap_Before_BLOCK_14,o,f"))
                                                                                                                           (branch "Validity"
                                                                                                                               (builtin "One Step Simplification" (formula "141") (ifInst ""  (formula "27")))
                                                                                                                               (builtin "One Step Simplification" (formula "171"))
                                                                                                                              (rule "expand_inInt" (formula "140") (term "1,0,0,0,1,0,1"))
                                                                                                                              (rule "expand_inInt" (formula "140") (term "0,0,1,1,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "140") (term "1,0,1,0,0,0,1,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "140") (term "0,1,1,0,0,0,1,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "140") (term "0,1,0,0,1,1,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "140") (term "1,0,0,0,1,1,0,1"))
                                                                                                                              (rule "andLeft" (formula "140"))
                                                                                                                              (rule "andLeft" (formula "141"))
                                                                                                                              (rule "andLeft" (formula "141"))
                                                                                                                              (rule "andLeft" (formula "141"))
                                                                                                                              (rule "eqSymm" (formula "174") (term "0,0,1,0,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "140") (term "2,1,0"))
                                                                                                                              (rule "eqSymm" (formula "141") (term "1,0"))
                                                                                                                              (rule "eqSymm" (formula "142") (term "1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "140") (term "0,2,1,0"))
                                                                                                                              (rule "add_zero_left" (formula "140") (term "0,2,1,0"))
                                                                                                                              (rule "sub_literals" (formula "140") (term "2,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "141") (term "0,2,1,1,0"))
                                                                                                                              (rule "add_zero_left" (formula "141") (term "0,2,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "141") (term "0,2,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "142") (term "3,1,1,0"))
                                                                                                                              (rule "add_zero_left" (formula "142") (term "3,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "142") (term "3,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "142") (term "3,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "142") (term "0,3,0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "141") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "142") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "141") (term "0,0,0,0"))
                                                                                                                              (rule "variableDeclarationAssign" (formula "174") (term "1"))
                                                                                                                              (rule "variableDeclaration" (formula "174") (term "1") (newnames "exc_17_1"))
                                                                                                                              (rule "assignment" (formula "174") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "174"))
                                                                                                                              (rule "emptyStatement" (formula "174") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "174"))
                                                                                                                              (rule "emptyStatement" (formula "174") (term "1"))
                                                                                                                              (rule "commute_and" (formula "142") (term "0,0"))
                                                                                                                              (rule "commute_and" (formula "141") (term "1,0,0"))
                                                                                                                              (rule "commute_and" (formula "141") (term "0,0,0"))
                                                                                                                              (rule "shift_paren_and" (formula "141") (term "0,0"))
                                                                                                                              (rule "commute_and_2" (formula "141") (term "0,0,0"))
                                                                                                                              (rule "tryEmpty" (formula "174") (term "1"))
                                                                                                                              (rule "blockEmptyLabel" (formula "174") (term "1"))
                                                                                                                              (rule "blockEmpty" (formula "174") (term "1"))
                                                                                                                              (rule "methodCallEmpty" (formula "174") (term "1"))
                                                                                                                              (rule "emptyModality" (formula "174") (term "1"))
                                                                                                                              (rule "andRight" (formula "174"))
                                                                                                                              (branch
                                                                                                                                  (builtin "One Step Simplification" (formula "174"))
                                                                                                                                 (rule "closeTrue" (formula "174"))
                                                                                                                              )
                                                                                                                              (branch
                                                                                                                                  (builtin "One Step Simplification" (formula "174"))
                                                                                                                                 (rule "closeTrue" (formula "174"))
                                                                                                                              )
                                                                                                                           )
                                                                                                                           (branch "Precondition"
                                                                                                                              (rule "andRight" (formula "170"))
                                                                                                                              (branch
                                                                                                                                  (builtin "One Step Simplification" (formula "170") (ifInst ""  (formula "27")))
                                                                                                                                 (rule "closeTrue" (formula "170"))
                                                                                                                              )
                                                                                                                              (branch
                                                                                                                                  (builtin "One Step Simplification" (formula "170"))
                                                                                                                                 (rule "expand_inInt" (formula "140") (term "1,0,0,0,1,0,1"))
                                                                                                                                 (rule "expand_inInt" (formula "140") (term "0,0,1,1,0,1"))
                                                                                                                                 (rule "replace_int_MAX" (formula "140") (term "1,0,1,0,0,0,1,0,1"))
                                                                                                                                 (rule "replace_int_MIN" (formula "140") (term "0,1,1,0,0,0,1,0,1"))
                                                                                                                                 (rule "replace_int_MAX" (formula "140") (term "1,0,0,0,1,1,0,1"))
                                                                                                                                 (rule "replace_int_MIN" (formula "140") (term "0,1,0,0,1,1,0,1"))
                                                                                                                                 (rule "andLeft" (formula "140"))
                                                                                                                                 (rule "wellFormedAnonEQ" (formula "171") (ifseqformula "140"))
                                                                                                                                 (rule "wellFormedAnonEQ" (formula "171") (term "0") (ifseqformula "59"))
                                                                                                                                 (rule "wellFormedAnon" (formula "171") (term "0,0"))
                                                                                                                                 (rule "andLeft" (formula "141"))
                                                                                                                                 (rule "andLeft" (formula "141"))
                                                                                                                                 (rule "andLeft" (formula "141"))
                                                                                                                                 (rule "translateJavaSubInt" (formula "140") (term "2,1,0"))
                                                                                                                                 (rule "eqSymm" (formula "141") (term "1,0"))
                                                                                                                                 (rule "eqSymm" (formula "142") (term "1,0"))
                                                                                                                                 (rule "translateJavaAddInt" (formula "140") (term "0,2,1,0"))
                                                                                                                                 (rule "add_zero_left" (formula "140") (term "0,2,1,0"))
                                                                                                                                 (rule "sub_literals" (formula "140") (term "2,1,0"))
                                                                                                                                 (rule "translateJavaAddInt" (formula "141") (term "0,2,0,1,0"))
                                                                                                                                 (rule "translateJavaAddInt" (formula "141") (term "0,2,1,1,0"))
                                                                                                                                 (rule "add_zero_left" (formula "141") (term "0,2,1,1,0"))
                                                                                                                                 (rule "translateJavaAddInt" (formula "142") (term "3,0,1,0"))
                                                                                                                                 (rule "translateJavaAddInt" (formula "142") (term "3,1,1,0"))
                                                                                                                                 (rule "add_zero_left" (formula "142") (term "3,1,1,0"))
                                                                                                                                 (rule "replace_known_left" (formula "173") (term "1,0,0") (ifseqformula "13"))
                                                                                                                                  (builtin "One Step Simplification" (formula "173") (ifInst ""  (formula "14")) (ifInst ""  (formula "58")) (ifInst ""  (formula "139")))
                                                                                                                                 (rule "closeTrue" (formula "173"))
                                                                                                                              )
                                                                                                                           )
                                                                                                                           (branch "Usage"
                                                                                                                               (builtin "One Step Simplification" (formula "141"))
                                                                                                                               (builtin "One Step Simplification" (formula "171"))
                                                                                                                              (rule "expand_inInt" (formula "140") (term "1,0,0,0,1,0,1"))
                                                                                                                              (rule "expand_inInt" (formula "140") (term "0,0,1,1,0,1"))
                                                                                                                              (rule "expand_inInt" (formula "141") (term "0,1,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "140") (term "0,1,1,0,0,0,1,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "140") (term "1,0,1,0,0,0,1,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "140") (term "0,1,0,0,1,1,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "140") (term "1,0,0,0,1,1,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "141") (term "1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "141") (term "0,1,0,1,0"))
                                                                                                                              (rule "andLeft" (formula "140"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "142") (term "1,1,1,0") (ifseqformula "140"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "142") (term "0,1,1,1,0") (ifseqformula "59"))
                                                                                                                               (builtin "One Step Simplification" (formula "142"))
                                                                                                                              (rule "andLeft" (formula "141"))
                                                                                                                              (rule "andLeft" (formula "143"))
                                                                                                                              (rule "andLeft" (formula "141"))
                                                                                                                              (rule "andLeft" (formula "143"))
                                                                                                                              (rule "andLeft" (formula "141"))
                                                                                                                              (rule "andLeft" (formula "145"))
                                                                                                                              (rule "andLeft" (formula "145"))
                                                                                                                              (rule "translateJavaSubInt" (formula "140") (term "2,1,0"))
                                                                                                                              (rule "eqSymm" (formula "142") (term "1,0"))
                                                                                                                              (rule "eqSymm" (formula "141") (term "1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "140") (term "0,2,1,0"))
                                                                                                                              (rule "add_zero_left" (formula "140") (term "0,2,1,0"))
                                                                                                                              (rule "sub_literals" (formula "140") (term "2,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "142") (term "3,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "142") (term "3,1,1,0"))
                                                                                                                              (rule "add_literals" (formula "142") (term "3,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "141") (term "0,2,1,1,0"))
                                                                                                                              (rule "add_zero_left" (formula "141") (term "0,2,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "141") (term "0,2,0,1,0"))
                                                                                                                              (rule "replace_known_left" (formula "147") (term "0") (ifseqformula "144"))
                                                                                                                               (builtin "One Step Simplification" (formula "147"))
                                                                                                                              (rule "true_left" (formula "147"))
                                                                                                                              (rule "polySimp_addComm1" (formula "142") (term "3,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "142") (term "0,3,0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "141") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "141") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "142") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "146"))
                                                                                                                              (rule "commute_and" (formula "142") (term "0,0"))
                                                                                                                              (rule "commute_and" (formula "141") (term "1,0,0"))
                                                                                                                              (rule "commute_and" (formula "141") (term "0,0,0"))
                                                                                                                              (rule "elim_double_block_2" (formula "177") (term "1"))
                                                                                                                              (rule "shift_paren_and" (formula "141") (term "0,0"))
                                                                                                                              (rule "commute_and_2" (formula "141") (term "0,0,0"))
                                                                                                                              (rule "ifUnfold" (formula "177") (term "1") (inst "#boolv=x_2"))
                                                                                                                              (rule "variableDeclaration" (formula "177") (term "1") (newnames "x_19"))
                                                                                                                              (rule "inequality_comparison_simple" (formula "177") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "177"))
                                                                                                                              (rule "replace_known_left" (formula "177") (term "0,0,1,0") (ifseqformula "144"))
                                                                                                                               (builtin "One Step Simplification" (formula "177"))
                                                                                                                              (rule "ifSplit" (formula "177"))
                                                                                                                              (branch "if x_19 true"
                                                                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                                                                 (rule "closeFalse" (formula "1"))
                                                                                                                              )
                                                                                                                              (branch "if x_19 false"
                                                                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                                                                  (builtin "One Step Simplification" (formula "178"))
                                                                                                                                 (rule "true_left" (formula "1"))
                                                                                                                                 (rule "blockEmpty" (formula "177") (term "1"))
                                                                                                                                  (builtin "Block Contract (Internal)" (formula "177") (newnames "result_17,exc_18,heap_Before_BLOCK_15,savedHeap_Before_BLOCK_15,o,f"))
                                                                                                                                 (branch "Validity"
                                                                                                                                     (builtin "One Step Simplification" (formula "178"))
                                                                                                                                     (builtin "One Step Simplification" (formula "148") (ifInst ""  (formula "27")))
                                                                                                                                    (rule "eqSymm" (formula "178") (term "0,0,1,0,1"))
                                                                                                                                    (rule "variableDeclarationAssign" (formula "178") (term "1"))
                                                                                                                                    (rule "variableDeclaration" (formula "178") (term "1") (newnames "exc_18_1"))
                                                                                                                                    (rule "assignment" (formula "178") (term "1"))
                                                                                                                                     (builtin "One Step Simplification" (formula "178"))
                                                                                                                                    (rule "emptyStatement" (formula "178") (term "1"))
                                                                                                                                     (builtin "One Step Simplification" (formula "178"))
                                                                                                                                    (rule "emptyStatement" (formula "178") (term "1"))
                                                                                                                                    (rule "tryEmpty" (formula "178") (term "1"))
                                                                                                                                    (rule "blockEmptyLabel" (formula "178") (term "1"))
                                                                                                                                    (rule "blockEmpty" (formula "178") (term "1"))
                                                                                                                                    (rule "methodCallEmpty" (formula "178") (term "1"))
                                                                                                                                    (rule "emptyModality" (formula "178") (term "1"))
                                                                                                                                    (rule "andRight" (formula "178"))
                                                                                                                                    (branch
                                                                                                                                        (builtin "One Step Simplification" (formula "178"))
                                                                                                                                       (rule "closeTrue" (formula "178"))
                                                                                                                                    )
                                                                                                                                    (branch
                                                                                                                                        (builtin "One Step Simplification" (formula "178"))
                                                                                                                                       (rule "closeTrue" (formula "178"))
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                                 (branch "Precondition"
                                                                                                                                    (rule "andRight" (formula "177"))
                                                                                                                                    (branch
                                                                                                                                        (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "27")))
                                                                                                                                       (rule "closeTrue" (formula "177"))
                                                                                                                                    )
                                                                                                                                    (branch
                                                                                                                                        (builtin "One Step Simplification" (formula "177"))
                                                                                                                                       (rule "wellFormedAnonEQ" (formula "177") (ifseqformula "140"))
                                                                                                                                       (rule "wellFormedAnonEQ" (formula "177") (term "0") (ifseqformula "59"))
                                                                                                                                       (rule "wellFormedAnon" (formula "177") (term "0,0"))
                                                                                                                                       (rule "replace_known_left" (formula "177") (term "1") (ifseqformula "139"))
                                                                                                                                        (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")))
                                                                                                                                       (rule "closeTrue" (formula "177"))
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                                 (branch "Usage"
                                                                                                                                     (builtin "One Step Simplification" (formula "178"))
                                                                                                                                     (builtin "One Step Simplification" (formula "148"))
                                                                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "148") (term "1,1,1,0") (ifseqformula "140"))
                                                                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "148") (term "0,1,1,1,0") (ifseqformula "59"))
                                                                                                                                     (builtin "One Step Simplification" (formula "148"))
                                                                                                                                    (rule "expand_inInt" (formula "148") (term "0,1,0"))
                                                                                                                                    (rule "replace_int_MIN" (formula "148") (term "0,1,0,1,0"))
                                                                                                                                    (rule "replace_int_MAX" (formula "148") (term "1,0,0,1,0"))
                                                                                                                                    (rule "andLeft" (formula "148"))
                                                                                                                                    (rule "andLeft" (formula "148"))
                                                                                                                                    (rule "andLeft" (formula "149"))
                                                                                                                                    (rule "andLeft" (formula "149"))
                                                                                                                                    (rule "replace_known_left" (formula "151") (term "0") (ifseqformula "148"))
                                                                                                                                     (builtin "One Step Simplification" (formula "151"))
                                                                                                                                    (rule "true_left" (formula "151"))
                                                                                                                                    (rule "inEqSimp_commuteLeq" (formula "150"))
                                                                                                                                    (rule "elim_double_block_2" (formula "181") (term "1"))
                                                                                                                                    (rule "ifUnfold" (formula "181") (term "1") (inst "#boolv=x_2"))
                                                                                                                                    (rule "variableDeclaration" (formula "181") (term "1") (newnames "x_20"))
                                                                                                                                    (rule "inequality_comparison_simple" (formula "181") (term "1"))
                                                                                                                                     (builtin "One Step Simplification" (formula "181"))
                                                                                                                                    (rule "replace_known_left" (formula "181") (term "0,0,1,0") (ifseqformula "148"))
                                                                                                                                     (builtin "One Step Simplification" (formula "181"))
                                                                                                                                    (rule "ifSplit" (formula "181"))
                                                                                                                                    (branch "if x_20 true"
                                                                                                                                        (builtin "One Step Simplification" (formula "182"))
                                                                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                                                                       (rule "closeFalse" (formula "1"))
                                                                                                                                    )
                                                                                                                                    (branch "if x_20 false"
                                                                                                                                        (builtin "One Step Simplification" (formula "182"))
                                                                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                                                                       (rule "true_left" (formula "1"))
                                                                                                                                       (rule "blockEmpty" (formula "181") (term "1"))
                                                                                                                                        (builtin "Use Operation Contract" (formula "181") (newnames "heapBefore_copy_nonoverlapping_0,exc_19,heapAfter_copy_nonoverlapping_0,anon_heap_copy_nonoverlapping_0") (contract "de.wiesler.Functions[de.wiesler.Functions::copy_nonoverlapping([I,int,[I,int,int)].JML normal_behavior operation contract.0"))
                                                                                                                                       (branch "Post (copy_nonoverlapping)"
                                                                                                                                           (builtin "One Step Simplification" (formula "183"))
                                                                                                                                           (builtin "Block Contract (Internal)" (formula "183") (newnames "result_18,exc_20,heap_Before_BLOCK_16,savedHeap_Before_BLOCK_16,o,f"))
                                                                                                                                          (branch "Validity"
                                                                                                                                              (builtin "One Step Simplification" (formula "153"))
                                                                                                                                              (builtin "One Step Simplification" (formula "184"))
                                                                                                                                              (builtin "One Step Simplification" (formula "154") (ifInst ""  (formula "27")))
                                                                                                                                             (rule "expand_inInt" (formula "153") (term "1,0,0,0,1,0,1"))
                                                                                                                                             (rule "expand_inInt" (formula "153") (term "0,0,1,1,0,1"))
                                                                                                                                             (rule "replace_int_MAX" (formula "153") (term "1,0,1,0,0,0,1,0,1"))
                                                                                                                                             (rule "replace_int_MIN" (formula "153") (term "0,1,1,0,0,0,1,0,1"))
                                                                                                                                             (rule "replace_int_MAX" (formula "153") (term "1,0,0,0,1,1,0,1"))
                                                                                                                                             (rule "replace_int_MIN" (formula "153") (term "0,1,0,0,1,1,0,1"))
                                                                                                                                             (rule "andLeft" (formula "153"))
                                                                                                                                             (rule "andLeft" (formula "154"))
                                                                                                                                             (rule "andLeft" (formula "154"))
                                                                                                                                             (rule "andLeft" (formula "154"))
                                                                                                                                             (rule "eqSymm" (formula "187") (term "0,0,1,0,1"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "153") (term "0,2,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "154") (term "0,2,0,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "155") (term "3,1,1,0"))
                                                                                                                                             (rule "add_zero_left" (formula "155") (term "3,1,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "155") (term "3,0,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "154") (term "0,2,1,1,0"))
                                                                                                                                             (rule "add_zero_left" (formula "154") (term "0,2,1,1,0"))
                                                                                                                                             (rule "translateJavaSubInt" (formula "153") (term "2,1,0"))
                                                                                                                                             (rule "polySimp_elimSub" (formula "153") (term "2,1,0"))
                                                                                                                                             (rule "mul_literals" (formula "153") (term "1,2,1,0"))
                                                                                                                                             (rule "polySimp_addLiterals" (formula "153") (term "2,1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "155") (term "3,0,1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "153") (term "2,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "155") (term "0,3,0,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "153") (term "0,2,1,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "154") (term "0,0,0,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "155") (term "1,0,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "154") (term "1,1,0,0"))
                                                                                                                                             (rule "variableDeclarationAssign" (formula "187") (term "1"))
                                                                                                                                             (rule "variableDeclaration" (formula "187") (term "1") (newnames "exc_20_1"))
                                                                                                                                             (rule "assignment" (formula "187") (term "1"))
                                                                                                                                              (builtin "One Step Simplification" (formula "187"))
                                                                                                                                             (rule "emptyStatement" (formula "187") (term "1"))
                                                                                                                                              (builtin "One Step Simplification" (formula "187"))
                                                                                                                                             (rule "emptyStatement" (formula "187") (term "1"))
                                                                                                                                             (rule "commute_and" (formula "155") (term "0,0"))
                                                                                                                                             (rule "commute_and" (formula "154") (term "0,0,0"))
                                                                                                                                             (rule "commute_and" (formula "154") (term "1,0,0"))
                                                                                                                                             (rule "shift_paren_and" (formula "154") (term "0,0"))
                                                                                                                                             (rule "commute_and_2" (formula "154") (term "0,0,0"))
                                                                                                                                             (rule "tryEmpty" (formula "187") (term "1"))
                                                                                                                                             (rule "blockEmptyLabel" (formula "187") (term "1"))
                                                                                                                                             (rule "blockEmpty" (formula "187") (term "1"))
                                                                                                                                             (rule "methodCallEmpty" (formula "187") (term "1"))
                                                                                                                                             (rule "emptyModality" (formula "187") (term "1"))
                                                                                                                                             (rule "andRight" (formula "187"))
                                                                                                                                             (branch
                                                                                                                                                 (builtin "One Step Simplification" (formula "187"))
                                                                                                                                                (rule "closeTrue" (formula "187"))
                                                                                                                                             )
                                                                                                                                             (branch
                                                                                                                                                 (builtin "One Step Simplification" (formula "187"))
                                                                                                                                                (rule "closeTrue" (formula "187"))
                                                                                                                                             )
                                                                                                                                          )
                                                                                                                                          (branch "Precondition"
                                                                                                                                             (rule "andRight" (formula "183"))
                                                                                                                                             (branch
                                                                                                                                                 (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "183") (ifInst ""  (formula "27")))
                                                                                                                                                (rule "closeTrue" (formula "183"))
                                                                                                                                             )
                                                                                                                                             (branch
                                                                                                                                                 (builtin "One Step Simplification" (formula "153"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "183"))
                                                                                                                                                (rule "expand_inInt" (formula "153") (term "0,0,1,1,0,1"))
                                                                                                                                                (rule "expand_inInt" (formula "153") (term "1,0,0,0,1,0,1"))
                                                                                                                                                (rule "replace_int_MAX" (formula "153") (term "1,0,0,0,1,1,0,1"))
                                                                                                                                                (rule "replace_int_MIN" (formula "153") (term "0,1,0,0,1,1,0,1"))
                                                                                                                                                (rule "replace_int_MAX" (formula "153") (term "1,0,1,0,0,0,1,0,1"))
                                                                                                                                                (rule "replace_int_MIN" (formula "153") (term "0,1,1,0,0,0,1,0,1"))
                                                                                                                                                (rule "andLeft" (formula "153"))
                                                                                                                                                (rule "wellFormedAnonEQ" (formula "184") (ifseqformula "153"))
                                                                                                                                                (rule "wellFormedAnonEQ" (formula "184") (term "0") (ifseqformula "140"))
                                                                                                                                                (rule "wellFormedAnonEQ" (formula "184") (term "0,0") (ifseqformula "59"))
                                                                                                                                                (rule "wellFormedAnon" (formula "184") (term "0,0,0"))
                                                                                                                                                (rule "andLeft" (formula "154"))
                                                                                                                                                (rule "andLeft" (formula "154"))
                                                                                                                                                (rule "andLeft" (formula "154"))
                                                                                                                                                (rule "translateJavaSubInt" (formula "153") (term "2,1,0"))
                                                                                                                                                (rule "translateJavaAddInt" (formula "155") (term "3,1,1,0"))
                                                                                                                                                (rule "add_zero_left" (formula "155") (term "3,1,1,0"))
                                                                                                                                                (rule "translateJavaAddInt" (formula "154") (term "0,2,0,1,0"))
                                                                                                                                                (rule "translateJavaAddInt" (formula "155") (term "3,0,1,0"))
                                                                                                                                                (rule "translateJavaAddInt" (formula "154") (term "0,2,1,1,0"))
                                                                                                                                                (rule "add_zero_left" (formula "154") (term "0,2,1,1,0"))
                                                                                                                                                (rule "translateJavaAddInt" (formula "153") (term "0,2,1,0"))
                                                                                                                                                (rule "replace_known_left" (formula "186") (term "1,0") (ifseqformula "139"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "186") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "152")))
                                                                                                                                                (rule "closeTrue" (formula "186"))
                                                                                                                                             )
                                                                                                                                          )
                                                                                                                                          (branch "Usage"
                                                                                                                                              (builtin "One Step Simplification" (formula "153"))
                                                                                                                                              (builtin "One Step Simplification" (formula "154"))
                                                                                                                                              (builtin "One Step Simplification" (formula "184"))
                                                                                                                                             (rule "expand_inInt" (formula "153") (term "0,0,1,1,0,1"))
                                                                                                                                             (rule "expand_inInt" (formula "153") (term "1,0,0,0,1,0,1"))
                                                                                                                                             (rule "expand_inInt" (formula "154") (term "0,1,0"))
                                                                                                                                             (rule "replace_int_MAX" (formula "153") (term "1,0,0,0,1,1,0,1"))
                                                                                                                                             (rule "replace_int_MIN" (formula "153") (term "0,1,0,0,1,1,0,1"))
                                                                                                                                             (rule "replace_int_MAX" (formula "153") (term "1,0,1,0,0,0,1,0,1"))
                                                                                                                                             (rule "replace_int_MIN" (formula "153") (term "0,1,1,0,0,0,1,0,1"))
                                                                                                                                             (rule "replace_int_MAX" (formula "154") (term "1,0,0,1,0"))
                                                                                                                                             (rule "replace_int_MIN" (formula "154") (term "0,1,0,1,0"))
                                                                                                                                             (rule "andLeft" (formula "153"))
                                                                                                                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "1,1,1,0") (ifseqformula "153"))
                                                                                                                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "0,1,1,1,0") (ifseqformula "140"))
                                                                                                                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "0,0,1,1,1,0") (ifseqformula "59"))
                                                                                                                                              (builtin "One Step Simplification" (formula "155"))
                                                                                                                                             (rule "andLeft" (formula "154"))
                                                                                                                                             (rule "andLeft" (formula "156"))
                                                                                                                                             (rule "andLeft" (formula "154"))
                                                                                                                                             (rule "andLeft" (formula "157"))
                                                                                                                                             (rule "andLeft" (formula "156"))
                                                                                                                                             (rule "andLeft" (formula "154"))
                                                                                                                                             (rule "andLeft" (formula "159"))
                                                                                                                                             (rule "andLeft" (formula "158"))
                                                                                                                                             (rule "andLeft" (formula "160"))
                                                                                                                                             (rule "andLeft" (formula "158"))
                                                                                                                                             (rule "translateJavaSubInt" (formula "153") (term "2,1,0"))
                                                                                                                                             (rule "eqSymm" (formula "164"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "155") (term "3,1,1,0"))
                                                                                                                                             (rule "add_zero_left" (formula "155") (term "3,1,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "154") (term "0,2,1,1,0"))
                                                                                                                                             (rule "add_zero_left" (formula "154") (term "0,2,1,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "155") (term "3,0,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "154") (term "0,2,0,1,0"))
                                                                                                                                             (rule "eqSymm" (formula "163"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "153") (term "0,2,1,0"))
                                                                                                                                             (rule "replace_known_left" (formula "160") (term "0") (ifseqformula "157"))
                                                                                                                                              (builtin "One Step Simplification" (formula "160"))
                                                                                                                                             (rule "true_left" (formula "160"))
                                                                                                                                             (rule "polySimp_elimSub" (formula "153") (term "2,1,0"))
                                                                                                                                             (rule "mul_literals" (formula "153") (term "1,2,1,0"))
                                                                                                                                             (rule "polySimp_addLiterals" (formula "153") (term "2,1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "155") (term "3,0,1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "153") (term "2,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "155") (term "0,3,0,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "153") (term "0,2,1,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "154") (term "0,0,0,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "155") (term "1,0,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "154") (term "1,1,0,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "159"))
                                                                                                                                             (rule "applyEq" (formula "62") (term "0") (ifseqformula "163"))
                                                                                                                                             (rule "applyEq" (formula "86") (term "1,0") (ifseqformula "162"))
                                                                                                                                             (rule "applyEq" (formula "97") (term "1,0,0") (ifseqformula "162"))
                                                                                                                                             (rule "applyEq" (formula "119") (term "1,5,0") (ifseqformula "162"))
                                                                                                                                             (rule "applyEq" (formula "92") (term "1,0") (ifseqformula "162"))
                                                                                                                                             (rule "applyEq" (formula "115") (term "1,4,0") (ifseqformula "162"))
                                                                                                                                             (rule "applyEq" (formula "65") (term "1") (ifseqformula "162"))
                                                                                                                                             (rule "applyEq" (formula "163") (term "1") (ifseqformula "62"))
                                                                                                                                             (rule "commute_and" (formula "155") (term "0,0"))
                                                                                                                                             (rule "commute_and" (formula "154") (term "0,0,0"))
                                                                                                                                             (rule "commute_and" (formula "154") (term "1,0,0"))
                                                                                                                                             (rule "elim_double_block_2" (formula "193") (term "1"))
                                                                                                                                             (rule "shift_paren_and" (formula "154") (term "0,0"))
                                                                                                                                             (rule "commute_and_2" (formula "154") (term "0,0,0"))
                                                                                                                                             (rule "ifUnfold" (formula "193") (term "1") (inst "#boolv=x_2"))
                                                                                                                                             (rule "variableDeclaration" (formula "193") (term "1") (newnames "x_21"))
                                                                                                                                             (rule "inequality_comparison_simple" (formula "193") (term "1"))
                                                                                                                                              (builtin "One Step Simplification" (formula "193"))
                                                                                                                                             (rule "replace_known_left" (formula "193") (term "0,0,1,0") (ifseqformula "157"))
                                                                                                                                              (builtin "One Step Simplification" (formula "193"))
                                                                                                                                              (builtin "Use Dependency Contract" (formula "134") (term "0") (ifInst ""  (formula "134") (term "1")) (ifInst ""  (formula "59")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164") (ifInst ""  (formula "191")) (ifInst ""  (formula "23")) (ifInst ""  (formula "14")) (ifInst ""  (formula "44")) (ifInst ""  (formula "28")))
                                                                                                                                             (rule "wellFormedAnonEQ" (formula "164") (term "0,0,0,0") (ifseqformula "59"))
                                                                                                                                             (rule "wellFormedAnon" (formula "164") (term "0,0,0,0,0"))
                                                                                                                                             (rule "expand_inInt" (formula "164") (term "1,0,0,0"))
                                                                                                                                             (rule "replace_int_MIN" (formula "164") (term "0,1,1,0,0,0"))
                                                                                                                                             (rule "replace_int_MAX" (formula "164") (term "1,0,1,0,0,0"))
                                                                                                                                             (rule "translateJavaMulInt" (formula "164") (term "0,0,1,1,1,1,0"))
                                                                                                                                             (rule "translateJavaMulInt" (formula "164") (term "0,1,0,1,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "164") (term "0,1,1,1,1,0"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "0,0,0,0,0,0") (ifseqformula "14"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164") (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "15")))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "164") (term "0,1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "164") (term "0,0,1,1,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "164") (term "0,1,1,1,1,0"))
                                                                                                                                             (rule "disjointDefinition" (formula "164") (term "1,0"))
                                                                                                                                             (rule "disjointWithSingleton2" (formula "164") (term "1,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "164") (term "0,0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "0,0,0") (ifseqformula "16"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "164") (term "0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "0,0") (ifseqformula "43"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164"))
                                                                                                                                             (rule "elementOfUnion" (formula "164") (term "0,0"))
                                                                                                                                             (rule "elementOfSingleton" (formula "164") (term "1,0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164"))
                                                                                                                                             (rule "true_left" (formula "164"))
                                                                                                                                              (builtin "Use Dependency Contract" (formula "12") (ifInst ""  (formula "193") (term "1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                                                             (rule "wellFormedAnon" (formula "164") (term "1,1,0,0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "1,0,0") (ifseqformula "29"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164") (ifInst ""  (formula "192")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "29")))
                                                                                                                                             (rule "true_left" (formula "164"))
                                                                                                                                              (builtin "Use Dependency Contract" (formula "138") (term "0") (ifInst ""  (formula "7") (term "0")) (ifInst ""  (formula "59")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::elementsToReadOfBucketBlockClassified(de.wiesler.Classifier,[I,int,int,int)].JML accessible clause.0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164") (ifInst ""  (formula "191")) (ifInst ""  (formula "192")) (ifInst ""  (formula "193")) (ifInst ""  (formula "44")) (ifInst ""  (formula "12")) (ifInst ""  (formula "11")) (ifInst ""  (formula "192")) (ifInst ""  (formula "193")) (ifInst ""  (formula "23")) (ifInst ""  (formula "22")) (ifInst ""  (formula "17")))
                                                                                                                                             (rule "wellFormedAnon" (formula "164") (term "0,0,0,0,0,0,0"))
                                                                                                                                             (rule "wellFormedAnonEQ" (formula "164") (term "1,0,0,0,0,0,0") (ifseqformula "59"))
                                                                                                                                             (rule "wellFormedAnon" (formula "164") (term "0,1,0,0,0,0,0,0"))
                                                                                                                                             (rule "expand_inInt" (formula "164") (term "1,0,0,0,0"))
                                                                                                                                             (rule "expand_inInt" (formula "164") (term "1,0,0,0,0,0"))
                                                                                                                                             (rule "expand_inInt" (formula "164") (term "1,0,0,0"))
                                                                                                                                             (rule "replace_int_MIN" (formula "164") (term "0,1,1,0,0,0,0"))
                                                                                                                                             (rule "replace_int_MAX" (formula "164") (term "1,0,1,0,0,0,0"))
                                                                                                                                             (rule "replace_int_MIN" (formula "164") (term "0,1,1,0,0,0,0,0"))
                                                                                                                                             (rule "replace_int_MAX" (formula "164") (term "1,0,1,0,0,0,0,0"))
                                                                                                                                             (rule "replace_int_MAX" (formula "164") (term "1,0,1,0,0,0"))
                                                                                                                                             (rule "replace_int_MIN" (formula "164") (term "0,1,1,0,0,0"))
                                                                                                                                             (rule "eqSymm" (formula "164") (term "1"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "164") (term "1,0,0,0,1,1,0"))
                                                                                                                                             (rule "translateJavaSubInt" (formula "164") (term "2,0,0,0,1,1,0"))
                                                                                                                                             (rule "translateJavaMulInt" (formula "164") (term "1,1,0,0,1,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "164") (term "2,1,0,0,1,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "164") (term "0,2,0,0,0,1,1,0"))
                                                                                                                                             (rule "translateJavaMulInt" (formula "164") (term "0,2,1,0,0,1,1,0"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "0,0,0,0,0,0,0,0") (ifseqformula "14"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164") (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "18")) (ifInst ""  (formula "20")) (ifInst ""  (formula "15")))
                                                                                                                                             (rule "polySimp_elimSub" (formula "164") (term "2,0,0,0,1,1,0"))
                                                                                                                                             (rule "mul_literals" (formula "164") (term "1,2,0,0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "164") (term "1,1,0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "164") (term "0,2,1,0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "164") (term "2,0,0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "164") (term "2,1,0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "164") (term "0,2,0,0,0,1,1,0"))
                                                                                                                                             (rule "disjointDefinition" (formula "164") (term "1,0"))
                                                                                                                                             (rule "disjointWithSingleton2" (formula "164") (term "1,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "164") (term "1,0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "1,0,0") (ifseqformula "43"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "164") (term "0,0,0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "0,0,0,0") (ifseqformula "19"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "164") (term "0,0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "0,0,0") (ifseqformula "21"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "164") (term "0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "0,0") (ifseqformula "16"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164"))
                                                                                                                                             (rule "applyEq" (formula "164") (term "1,2,0,0,0,2,0,0") (ifseqformula "65"))
                                                                                                                                             (rule "applyEq" (formula "164") (term "1,1,0,0,0,2,0,0") (ifseqformula "67"))
                                                                                                                                             (rule "applyEq" (formula "164") (term "0,1") (ifseqformula "7"))
                                                                                                                                             (rule "eqSymm" (formula "164") (term "1"))
                                                                                                                                             (rule "replace_known_left" (formula "164") (term "1") (ifseqformula "138"))
                                                                                                                                              (builtin "One Step Simplification" (formula "164"))
                                                                                                                                             (rule "true_left" (formula "164"))
                                                                                                                                             (rule "ifSplit" (formula "193"))
                                                                                                                                             (branch "if x_21 true"
                                                                                                                                                 (builtin "One Step Simplification" (formula "194"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                (rule "closeFalse" (formula "1"))
                                                                                                                                             )
                                                                                                                                             (branch "if x_21 false"
                                                                                                                                                 (builtin "One Step Simplification" (formula "194"))
                                                                                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                (rule "true_left" (formula "1"))
                                                                                                                                                (rule "blockEmpty" (formula "193") (term "1"))
                                                                                                                                                 (builtin "Block Contract (Internal)" (formula "193") (newnames "result_19,exc_21,heap_Before_BLOCK_17,savedHeap_Before_BLOCK_17,o,f"))
                                                                                                                                                (branch "Validity"
                                                                                                                                                    (builtin "One Step Simplification" (formula "164") (ifInst ""  (formula "27")))
                                                                                                                                                    (builtin "One Step Simplification" (formula "194"))
                                                                                                                                                   (rule "eqSymm" (formula "194") (term "0,0,1,0,1"))
                                                                                                                                                   (rule "variableDeclarationAssign" (formula "194") (term "1"))
                                                                                                                                                   (rule "variableDeclaration" (formula "194") (term "1") (newnames "exc_21_1"))
                                                                                                                                                   (rule "assignment" (formula "194") (term "1"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "194"))
                                                                                                                                                   (rule "emptyStatement" (formula "194") (term "1"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "194"))
                                                                                                                                                   (rule "emptyStatement" (formula "194") (term "1"))
                                                                                                                                                   (rule "tryEmpty" (formula "194") (term "1"))
                                                                                                                                                   (rule "blockEmptyLabel" (formula "194") (term "1"))
                                                                                                                                                   (rule "blockEmpty" (formula "194") (term "1"))
                                                                                                                                                   (rule "methodCallEmpty" (formula "194") (term "1"))
                                                                                                                                                   (rule "emptyModality" (formula "194") (term "1"))
                                                                                                                                                   (rule "andRight" (formula "194"))
                                                                                                                                                   (branch
                                                                                                                                                       (builtin "One Step Simplification" (formula "194"))
                                                                                                                                                      (rule "closeTrue" (formula "194"))
                                                                                                                                                   )
                                                                                                                                                   (branch
                                                                                                                                                       (builtin "One Step Simplification" (formula "194"))
                                                                                                                                                      (rule "closeTrue" (formula "194"))
                                                                                                                                                   )
                                                                                                                                                )
                                                                                                                                                (branch "Precondition"
                                                                                                                                                   (rule "andRight" (formula "193"))
                                                                                                                                                   (branch
                                                                                                                                                       (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "27")))
                                                                                                                                                      (rule "closeTrue" (formula "193"))
                                                                                                                                                   )
                                                                                                                                                   (branch
                                                                                                                                                       (builtin "One Step Simplification" (formula "193"))
                                                                                                                                                      (rule "wellFormedAnonEQ" (formula "193") (ifseqformula "153"))
                                                                                                                                                      (rule "wellFormedAnonEQ" (formula "193") (term "0") (ifseqformula "140"))
                                                                                                                                                      (rule "wellFormedAnonEQ" (formula "193") (term "0,0") (ifseqformula "59"))
                                                                                                                                                      (rule "wellFormedAnon" (formula "193") (term "0,0,0"))
                                                                                                                                                      (rule "replace_known_left" (formula "193") (term "1") (ifseqformula "152"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "139")))
                                                                                                                                                      (rule "closeTrue" (formula "193"))
                                                                                                                                                   )
                                                                                                                                                )
                                                                                                                                                (branch "Usage"
                                                                                                                                                    (builtin "One Step Simplification" (formula "164"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "194"))
                                                                                                                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "164") (term "1,1,1,0") (ifseqformula "153"))
                                                                                                                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "164") (term "0,1,1,1,0") (ifseqformula "140"))
                                                                                                                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "164") (term "0,0,1,1,1,0") (ifseqformula "59"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "164"))
                                                                                                                                                   (rule "expand_inInt" (formula "164") (term "0,1,0"))
                                                                                                                                                   (rule "replace_int_MIN" (formula "164") (term "0,1,0,1,0"))
                                                                                                                                                   (rule "replace_int_MAX" (formula "164") (term "1,0,0,1,0"))
                                                                                                                                                   (rule "andLeft" (formula "164"))
                                                                                                                                                   (rule "andLeft" (formula "164"))
                                                                                                                                                   (rule "andLeft" (formula "165"))
                                                                                                                                                   (rule "andLeft" (formula "165"))
                                                                                                                                                   (rule "replace_known_left" (formula "167") (term "0") (ifseqformula "164"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "167"))
                                                                                                                                                   (rule "true_left" (formula "167"))
                                                                                                                                                   (rule "inEqSimp_commuteLeq" (formula "166"))
                                                                                                                                                   (rule "elim_double_block_2" (formula "197") (term "1"))
                                                                                                                                                    (builtin "Use Dependency Contract" (formula "11") (ifInst ""  (formula "197") (term "0,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                                                                   (rule "wellFormedAnon" (formula "168") (term "1,1,0,0,0"))
                                                                                                                                                   (rule "replace_known_left" (formula "168") (term "0,1,0,0,0") (ifseqformula "14"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "168") (ifInst ""  (formula "195")) (ifInst ""  (formula "23")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "28")) (ifInst ""  (formula "11")) (ifInst ""  (formula "28")))
                                                                                                                                                   (rule "true_left" (formula "168"))
                                                                                                                                                   (rule "ifUnfold" (formula "197") (term "1") (inst "#boolv=x_2"))
                                                                                                                                                   (rule "variableDeclaration" (formula "197") (term "1") (newnames "x_22"))
                                                                                                                                                   (rule "inequality_comparison_simple" (formula "197") (term "1"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "197"))
                                                                                                                                                   (rule "replace_known_left" (formula "197") (term "0,0,1,0") (ifseqformula "164"))
                                                                                                                                                    (builtin "One Step Simplification" (formula "197"))
                                                                                                                                                   (rule "ifSplit" (formula "197"))
                                                                                                                                                   (branch "if x_22 true"
                                                                                                                                                       (builtin "One Step Simplification" (formula "198"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                      (rule "closeFalse" (formula "1"))
                                                                                                                                                   )
                                                                                                                                                   (branch "if x_22 false"
                                                                                                                                                       (builtin "One Step Simplification" (formula "198"))
                                                                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                      (rule "true_left" (formula "1"))
                                                                                                                                                      (rule "blockEmpty" (formula "197") (term "1"))
                                                                                                                                                       (builtin "Block Contract (Internal)" (formula "197") (newnames "result_20,exc_22,heap_Before_BLOCK_18,savedHeap_Before_BLOCK_18,o,f"))
                                                                                                                                                      (branch "Validity"
                                                                                                                                                          (builtin "One Step Simplification" (formula "168") (ifInst ""  (formula "27")))
                                                                                                                                                          (builtin "One Step Simplification" (formula "198"))
                                                                                                                                                         (rule "eqSymm" (formula "198") (term "0,0,1,0,1"))
                                                                                                                                                         (rule "variableDeclarationAssign" (formula "198") (term "1"))
                                                                                                                                                         (rule "variableDeclaration" (formula "198") (term "1") (newnames "exc_22_1"))
                                                                                                                                                         (rule "assignment" (formula "198") (term "1"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "198"))
                                                                                                                                                         (rule "emptyStatement" (formula "198") (term "1"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "198"))
                                                                                                                                                         (rule "emptyStatement" (formula "198") (term "1"))
                                                                                                                                                         (rule "tryEmpty" (formula "198") (term "1"))
                                                                                                                                                         (rule "blockEmptyLabel" (formula "198") (term "1"))
                                                                                                                                                         (rule "blockEmpty" (formula "198") (term "1"))
                                                                                                                                                         (rule "methodCallEmpty" (formula "198") (term "1"))
                                                                                                                                                         (rule "emptyModality" (formula "198") (term "1"))
                                                                                                                                                         (rule "andRight" (formula "198"))
                                                                                                                                                         (branch
                                                                                                                                                             (builtin "One Step Simplification" (formula "198"))
                                                                                                                                                            (rule "closeTrue" (formula "198"))
                                                                                                                                                         )
                                                                                                                                                         (branch
                                                                                                                                                             (builtin "One Step Simplification" (formula "198"))
                                                                                                                                                            (rule "closeTrue" (formula "198"))
                                                                                                                                                         )
                                                                                                                                                      )
                                                                                                                                                      (branch "Precondition"
                                                                                                                                                         (rule "andRight" (formula "197"))
                                                                                                                                                         (branch
                                                                                                                                                             (builtin "One Step Simplification" (formula "197") (ifInst ""  (formula "27")))
                                                                                                                                                            (rule "closeTrue" (formula "197"))
                                                                                                                                                         )
                                                                                                                                                         (branch
                                                                                                                                                             (builtin "One Step Simplification" (formula "197"))
                                                                                                                                                            (rule "wellFormedAnonEQ" (formula "197") (ifseqformula "153"))
                                                                                                                                                            (rule "wellFormedAnonEQ" (formula "197") (term "0") (ifseqformula "140"))
                                                                                                                                                            (rule "wellFormedAnonEQ" (formula "197") (term "0,0") (ifseqformula "59"))
                                                                                                                                                            (rule "wellFormedAnon" (formula "197") (term "0,0,0"))
                                                                                                                                                            (rule "replace_known_left" (formula "197") (term "1,0") (ifseqformula "139"))
                                                                                                                                                             (builtin "One Step Simplification" (formula "197") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "152")))
                                                                                                                                                            (rule "closeTrue" (formula "197"))
                                                                                                                                                         )
                                                                                                                                                      )
                                                                                                                                                      (branch "Usage"
                                                                                                                                                          (builtin "One Step Simplification" (formula "198"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "168"))
                                                                                                                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "168") (term "1,1,1,0") (ifseqformula "153"))
                                                                                                                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "168") (term "0,1,1,1,0") (ifseqformula "140"))
                                                                                                                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "168") (term "0,0,1,1,1,0") (ifseqformula "59"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "168"))
                                                                                                                                                         (rule "expand_inInt" (formula "168") (term "0,1,0"))
                                                                                                                                                         (rule "replace_int_MIN" (formula "168") (term "0,1,0,1,0"))
                                                                                                                                                         (rule "replace_int_MAX" (formula "168") (term "1,0,0,1,0"))
                                                                                                                                                         (rule "andLeft" (formula "168"))
                                                                                                                                                         (rule "andLeft" (formula "168"))
                                                                                                                                                         (rule "andLeft" (formula "170"))
                                                                                                                                                         (rule "andLeft" (formula "169"))
                                                                                                                                                         (rule "andLeft" (formula "169"))
                                                                                                                                                         (rule "translateJavaAddInt" (formula "172") (term "5,0"))
                                                                                                                                                         (rule "translateJavaAddInt" (formula "172") (term "3,0"))
                                                                                                                                                         (rule "replace_known_left" (formula "171") (term "0") (ifseqformula "168"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "171"))
                                                                                                                                                         (rule "true_left" (formula "171"))
                                                                                                                                                         (rule "polySimp_addComm1" (formula "171") (term "5,0"))
                                                                                                                                                         (rule "polySimp_addComm0" (formula "171") (term "0,5,0"))
                                                                                                                                                         (rule "inEqSimp_commuteLeq" (formula "170"))
                                                                                                                                                         (rule "elim_double_block_2" (formula "202") (term "1"))
                                                                                                                                                         (rule "ifUnfold" (formula "202") (term "1") (inst "#boolv=x_2"))
                                                                                                                                                         (rule "variableDeclaration" (formula "202") (term "1") (newnames "x_23"))
                                                                                                                                                         (rule "inequality_comparison_simple" (formula "202") (term "1"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "202"))
                                                                                                                                                         (rule "replace_known_left" (formula "202") (term "0,0,1,0") (ifseqformula "168"))
                                                                                                                                                          (builtin "One Step Simplification" (formula "202"))
                                                                                                                                                         (rule "ifSplit" (formula "202"))
                                                                                                                                                         (branch "if x_23 true"
                                                                                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                            (rule "closeFalse" (formula "1"))
                                                                                                                                                         )
                                                                                                                                                         (branch "if x_23 false"
                                                                                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                             (builtin "One Step Simplification" (formula "203"))
                                                                                                                                                            (rule "true_left" (formula "1"))
                                                                                                                                                            (rule "blockEmpty" (formula "202") (term "1"))
                                                                                                                                                             (builtin "Block Contract (Internal)" (formula "202") (newnames "result_22,exc_23,heap_Before_BLOCK_19,savedHeap_Before_BLOCK_19,o,f"))
                                                                                                                                                            (branch "Validity"
                                                                                                                                                                (builtin "One Step Simplification" (formula "203"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "173") (ifInst ""  (formula "27")))
                                                                                                                                                               (rule "eqSymm" (formula "203") (term "0,0,1,0,1"))
                                                                                                                                                               (rule "variableDeclarationAssign" (formula "203") (term "1"))
                                                                                                                                                               (rule "variableDeclaration" (formula "203") (term "1") (newnames "exc_23_1"))
                                                                                                                                                               (rule "assignment" (formula "203") (term "1"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "203"))
                                                                                                                                                               (rule "emptyStatement" (formula "203") (term "1"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "203"))
                                                                                                                                                               (rule "emptyStatement" (formula "203") (term "1"))
                                                                                                                                                               (rule "tryEmpty" (formula "203") (term "1"))
                                                                                                                                                               (rule "blockEmptyLabel" (formula "203") (term "1"))
                                                                                                                                                               (rule "blockEmpty" (formula "203") (term "1"))
                                                                                                                                                               (rule "methodCallEmpty" (formula "203") (term "1"))
                                                                                                                                                               (rule "emptyModality" (formula "203") (term "1"))
                                                                                                                                                               (rule "andRight" (formula "203"))
                                                                                                                                                               (branch
                                                                                                                                                                   (builtin "One Step Simplification" (formula "203"))
                                                                                                                                                                  (rule "closeTrue" (formula "203"))
                                                                                                                                                               )
                                                                                                                                                               (branch
                                                                                                                                                                   (builtin "One Step Simplification" (formula "203"))
                                                                                                                                                                  (rule "closeTrue" (formula "203"))
                                                                                                                                                               )
                                                                                                                                                            )
                                                                                                                                                            (branch "Precondition"
                                                                                                                                                               (rule "andRight" (formula "202"))
                                                                                                                                                               (branch
                                                                                                                                                                   (builtin "One Step Simplification" (formula "202") (ifInst ""  (formula "27")))
                                                                                                                                                                  (rule "closeTrue" (formula "202"))
                                                                                                                                                               )
                                                                                                                                                               (branch
                                                                                                                                                                   (builtin "One Step Simplification" (formula "202"))
                                                                                                                                                                  (rule "wellFormedAnonEQ" (formula "202") (ifseqformula "153"))
                                                                                                                                                                  (rule "wellFormedAnonEQ" (formula "202") (term "0") (ifseqformula "140"))
                                                                                                                                                                  (rule "wellFormedAnonEQ" (formula "202") (term "0,0") (ifseqformula "59"))
                                                                                                                                                                  (rule "wellFormedAnon" (formula "202") (term "0,0,0"))
                                                                                                                                                                  (rule "replace_known_left" (formula "202") (term "1") (ifseqformula "152"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "202") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "139")))
                                                                                                                                                                  (rule "closeTrue" (formula "202"))
                                                                                                                                                               )
                                                                                                                                                            )
                                                                                                                                                            (branch "Usage"
                                                                                                                                                                (builtin "One Step Simplification" (formula "203"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "173"))
                                                                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "1,1,1,0") (ifseqformula "153"))
                                                                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,1,1,1,0") (ifseqformula "140"))
                                                                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,1,1,1,0") (ifseqformula "59"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "173"))
                                                                                                                                                               (rule "expand_inInt" (formula "173") (term "0,1,0"))
                                                                                                                                                               (rule "expand_inInt" (formula "173") (term "1,0,0,1"))
                                                                                                                                                               (rule "replace_int_MIN" (formula "173") (term "0,1,0,1,0"))
                                                                                                                                                               (rule "replace_int_MAX" (formula "173") (term "1,0,0,1,0"))
                                                                                                                                                               (rule "replace_int_MAX" (formula "173") (term "1,0,1,0,0,1"))
                                                                                                                                                               (rule "replace_int_MIN" (formula "173") (term "0,1,1,0,0,1"))
                                                                                                                                                               (rule "andLeft" (formula "173"))
                                                                                                                                                               (rule "andLeft" (formula "173"))
                                                                                                                                                               (rule "andLeft" (formula "174"))
                                                                                                                                                               (rule "andLeft" (formula "174"))
                                                                                                                                                               (rule "eqSymm" (formula "177") (term "1,1,0"))
                                                                                                                                                               (rule "translateJavaAddInt" (formula "177") (term "0,0,1,0"))
                                                                                                                                                               (rule "translateJavaAddInt" (formula "177") (term "0,1,1,0"))
                                                                                                                                                               (rule "replace_known_left" (formula "176") (term "0") (ifseqformula "173"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "176"))
                                                                                                                                                               (rule "true_left" (formula "176"))
                                                                                                                                                               (rule "inEqSimp_commuteLeq" (formula "176") (term "1,1,0,0"))
                                                                                                                                                               (rule "inEqSimp_commuteLeq" (formula "176") (term "0,0,0,0"))
                                                                                                                                                               (rule "inEqSimp_commuteLeq" (formula "175"))
                                                                                                                                                               (rule "applyEq" (formula "176") (term "1,1,0,0,0") (ifseqformula "32"))
                                                                                                                                                               (rule "commute_and" (formula "176") (term "1,0,0"))
                                                                                                                                                               (rule "commute_and" (formula "176") (term "0,0,0"))
                                                                                                                                                               (rule "elim_double_block_2" (formula "206") (term "1"))
                                                                                                                                                               (rule "shift_paren_and" (formula "176") (term "0,0"))
                                                                                                                                                               (rule "commute_and_2" (formula "176") (term "0,0,0"))
                                                                                                                                                               (rule "ifUnfold" (formula "206") (term "1") (inst "#boolv=x_2"))
                                                                                                                                                               (rule "variableDeclaration" (formula "206") (term "1") (newnames "x_24"))
                                                                                                                                                               (rule "inequality_comparison_simple" (formula "206") (term "1"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "206"))
                                                                                                                                                               (rule "replace_known_left" (formula "206") (term "0,0,1,0") (ifseqformula "173"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "206"))
                                                                                                                                                                (builtin "Use Dependency Contract" (formula "162") (term "0") (ifInst ""  (formula "65") (term "0")) (ifInst ""  (formula "59")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::lastReadOf(int)].JML accessible clause.0"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "204")) (ifInst ""  (formula "44")) (ifInst ""  (formula "11")) (ifInst ""  (formula "23")))
                                                                                                                                                               (rule "wellFormedAnon" (formula "177") (term "0,0,0,0,0"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "1,0,0,0,0") (ifseqformula "59"))
                                                                                                                                                               (rule "wellFormedAnon" (formula "177") (term "0,1,0,0,0,0"))
                                                                                                                                                               (rule "expand_inInt" (formula "177") (term "1,0,0,0"))
                                                                                                                                                               (rule "replace_int_MAX" (formula "177") (term "1,0,1,0,0,0"))
                                                                                                                                                               (rule "replace_int_MIN" (formula "177") (term "0,1,1,0,0,0"))
                                                                                                                                                               (rule "translateJavaMulInt" (formula "177") (term "0,1,1,1,0"))
                                                                                                                                                               (rule "eqSymm" (formula "177") (term "1"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "1,0,0,0,0,0") (ifseqformula "13"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "15")))
                                                                                                                                                               (rule "polySimp_mulComm0" (formula "177") (term "0,1,1,1,0"))
                                                                                                                                                               (rule "disjointDefinition" (formula "177") (term "1,0"))
                                                                                                                                                               (rule "disjointWithSingleton1" (formula "177") (term "1,0"))
                                                                                                                                                               (rule "elementOfSingleton" (formula "177") (term "0,1,0"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177"))
                                                                                                                                                               (rule "inEqSimp_commuteLeq" (formula "177") (term "0,0,0"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "0,0,0") (ifseqformula "16"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177"))
                                                                                                                                                               (rule "inEqSimp_commuteLeq" (formula "177") (term "0,0"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "0,0") (ifseqformula "43"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177"))
                                                                                                                                                               (rule "applyEq" (formula "177") (term "0,1") (ifseqformula "65"))
                                                                                                                                                               (rule "eqSymm" (formula "177") (term "1"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "1") (ifseqformula "162"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177"))
                                                                                                                                                               (rule "true_left" (formula "177"))
                                                                                                                                                                (builtin "Use Dependency Contract" (formula "162") (term "1") (ifInst ""  (formula "162") (term "0")) (ifInst ""  (formula "153")) (ifInst ""  (formula "140")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::lastReadOf(int)].JML accessible clause.0"))
                                                                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "177") (term "1,0,0,0,0,0") (ifseqformula "59"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "204")) (ifInst ""  (formula "44")) (ifInst ""  (formula "70")) (ifInst ""  (formula "23")))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "0,0,0,0,0") (ifseqformula "59"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "1,0,0,0,0") (ifseqformula "153"))
                                                                                                                                                               (rule "wellFormedAnon" (formula "177") (term "0,0,0,0,0,0"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "0,1,0,0,0,0") (ifseqformula "140"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "0,0,1,0,0,0,0") (ifseqformula "59"))
                                                                                                                                                               (rule "wellFormedAnon" (formula "177") (term "0,0,0,1,0,0,0,0"))
                                                                                                                                                               (rule "expand_inInt" (formula "177") (term "1,0,0,0"))
                                                                                                                                                               (rule "replace_int_MIN" (formula "177") (term "0,1,1,0,0,0"))
                                                                                                                                                               (rule "replace_int_MAX" (formula "177") (term "1,0,1,0,0,0"))
                                                                                                                                                               (rule "eqSymm" (formula "177") (term "1"))
                                                                                                                                                               (rule "translateJavaMulInt" (formula "177") (term "0,1,1,1,0"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "0,0,0,0,0,0,0") (ifseqformula "14"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "139")) (ifInst ""  (formula "152")) (ifInst ""  (formula "15")) (ifInst ""  (formula "162")))
                                                                                                                                                               (rule "true_left" (formula "177"))
                                                                                                                                                                (builtin "Use Dependency Contract" (formula "62") (term "0") (ifInst ""  (formula "163") (term "0")) (ifInst ""  (formula "153")) (ifInst ""  (formula "140")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::nextWriteOf(int)].JML accessible clause.0"))
                                                                                                                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "177") (term "1,0,0,0,0,0") (ifseqformula "59"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "204")) (ifInst ""  (formula "44")) (ifInst ""  (formula "70")) (ifInst ""  (formula "23")))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "0,0,0,0,0") (ifseqformula "59"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "1,0,0,0,0") (ifseqformula "153"))
                                                                                                                                                               (rule "wellFormedAnon" (formula "177") (term "0,0,0,0,0,0"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "0,1,0,0,0,0") (ifseqformula "140"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "0,0,1,0,0,0,0") (ifseqformula "59"))
                                                                                                                                                               (rule "wellFormedAnon" (formula "177") (term "0,0,0,1,0,0,0,0"))
                                                                                                                                                               (rule "expand_inInt" (formula "177") (term "1,0,0,0"))
                                                                                                                                                               (rule "replace_int_MIN" (formula "177") (term "0,1,1,0,0,0"))
                                                                                                                                                               (rule "replace_int_MAX" (formula "177") (term "1,0,1,0,0,0"))
                                                                                                                                                               (rule "translateJavaAddInt" (formula "177") (term "0,1,1,1,0"))
                                                                                                                                                               (rule "eqSymm" (formula "177") (term "1"))
                                                                                                                                                               (rule "translateJavaMulInt" (formula "177") (term "0,0,1,1,1,0"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "1,1,0,0,0,0") (ifseqformula "152"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "139")) (ifInst ""  (formula "15")))
                                                                                                                                                               (rule "polySimp_mulComm0" (formula "177") (term "0,0,1,1,1,0"))
                                                                                                                                                               (rule "polySimp_addComm0" (formula "177") (term "0,1,1,1,0"))
                                                                                                                                                               (rule "disjointDefinition" (formula "177") (term "1,0"))
                                                                                                                                                               (rule "disjointWithSingleton1" (formula "177") (term "1,0"))
                                                                                                                                                               (rule "inEqSimp_commuteLeq" (formula "177") (term "1,0,0"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "1,0,0") (ifseqformula "43"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177"))
                                                                                                                                                               (rule "inEqSimp_commuteLeq" (formula "177") (term "0,0"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "0,0") (ifseqformula "16"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177"))
                                                                                                                                                               (rule "applyEq" (formula "177") (term "0,1") (ifseqformula "163"))
                                                                                                                                                               (rule "eqSymm" (formula "177") (term "1"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "1") (ifseqformula "62"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177"))
                                                                                                                                                               (rule "true_left" (formula "177"))
                                                                                                                                                                (builtin "Use Dependency Contract" (formula "86") (term "1,0") (ifInst ""  (formula "65") (term "0")) (ifInst ""  (formula "153")) (ifInst ""  (formula "140")) (ifInst ""  (formula "59")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::lastReadOf(int)].JML accessible clause.0"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "204")) (ifInst ""  (formula "44")) (ifInst ""  (formula "11")) (ifInst ""  (formula "23")))
                                                                                                                                                               (rule "wellFormedAnon" (formula "177") (term "0,0,0,0,0"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "1,0,0,0,0") (ifseqformula "153"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "0,1,0,0,0,0") (ifseqformula "140"))
                                                                                                                                                               (rule "wellFormedAnonEQ" (formula "177") (term "0,0,1,0,0,0,0") (ifseqformula "59"))
                                                                                                                                                               (rule "wellFormedAnon" (formula "177") (term "0,0,0,1,0,0,0,0"))
                                                                                                                                                               (rule "expand_inInt" (formula "177") (term "1,0,0,0"))
                                                                                                                                                               (rule "replace_int_MAX" (formula "177") (term "1,0,1,0,0,0"))
                                                                                                                                                               (rule "replace_int_MIN" (formula "177") (term "0,1,1,0,0,0"))
                                                                                                                                                               (rule "eqSymm" (formula "177") (term "1"))
                                                                                                                                                               (rule "translateJavaMulInt" (formula "177") (term "0,1,1,1,0"))
                                                                                                                                                               (rule "replace_known_left" (formula "177") (term "1,0,0,0,0,0") (ifseqformula "13"))
                                                                                                                                                                (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "139")) (ifInst ""  (formula "152")) (ifInst ""  (formula "15")) (ifInst ""  (formula "65")))
                                                                                                                                                               (rule "true_left" (formula "177"))
                                                                                                                                                               (rule "ifSplit" (formula "206"))
                                                                                                                                                               (branch "if x_24 true"
                                                                                                                                                                   (builtin "One Step Simplification" (formula "207"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                                  (rule "closeFalse" (formula "1"))
                                                                                                                                                               )
                                                                                                                                                               (branch "if x_24 false"
                                                                                                                                                                   (builtin "One Step Simplification" (formula "207"))
                                                                                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                                  (rule "true_left" (formula "1"))
                                                                                                                                                                  (rule "blockEmpty" (formula "206") (term "1"))
                                                                                                                                                                   (builtin "Block Contract (Internal)" (formula "206") (newnames "result_23,exc_24,heap_Before_BLOCK_20,savedHeap_Before_BLOCK_20,o,f"))
                                                                                                                                                                  (branch "Validity"
                                                                                                                                                                      (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "27")))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "207"))
                                                                                                                                                                     (rule "eqSymm" (formula "207") (term "0,0,1,0,1"))
                                                                                                                                                                     (rule "variableDeclarationAssign" (formula "207") (term "1"))
                                                                                                                                                                     (rule "variableDeclaration" (formula "207") (term "1") (newnames "exc_24_1"))
                                                                                                                                                                     (rule "assignment" (formula "207") (term "1"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "207"))
                                                                                                                                                                     (rule "emptyStatement" (formula "207") (term "1"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "207"))
                                                                                                                                                                     (rule "emptyStatement" (formula "207") (term "1"))
                                                                                                                                                                     (rule "tryEmpty" (formula "207") (term "1"))
                                                                                                                                                                     (rule "blockEmptyLabel" (formula "207") (term "1"))
                                                                                                                                                                     (rule "blockEmpty" (formula "207") (term "1"))
                                                                                                                                                                     (rule "methodCallEmpty" (formula "207") (term "1"))
                                                                                                                                                                     (rule "emptyModality" (formula "207") (term "1"))
                                                                                                                                                                     (rule "andRight" (formula "207"))
                                                                                                                                                                     (branch
                                                                                                                                                                         (builtin "One Step Simplification" (formula "207"))
                                                                                                                                                                        (rule "closeTrue" (formula "207"))
                                                                                                                                                                     )
                                                                                                                                                                     (branch
                                                                                                                                                                         (builtin "One Step Simplification" (formula "207"))
                                                                                                                                                                        (rule "closeTrue" (formula "207"))
                                                                                                                                                                     )
                                                                                                                                                                  )
                                                                                                                                                                  (branch "Precondition"
                                                                                                                                                                     (rule "andRight" (formula "206"))
                                                                                                                                                                     (branch
                                                                                                                                                                         (builtin "One Step Simplification" (formula "206") (ifInst ""  (formula "27")))
                                                                                                                                                                        (rule "closeTrue" (formula "206"))
                                                                                                                                                                     )
                                                                                                                                                                     (branch
                                                                                                                                                                         (builtin "One Step Simplification" (formula "206"))
                                                                                                                                                                        (rule "wellFormedAnonEQ" (formula "206") (ifseqformula "153"))
                                                                                                                                                                        (rule "wellFormedAnonEQ" (formula "206") (term "0") (ifseqformula "140"))
                                                                                                                                                                        (rule "wellFormedAnonEQ" (formula "206") (term "0,0") (ifseqformula "59"))
                                                                                                                                                                        (rule "wellFormedAnon" (formula "206") (term "0,0,0"))
                                                                                                                                                                        (rule "replace_known_left" (formula "206") (term "1") (ifseqformula "152"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "206") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")) (ifInst ""  (formula "139")))
                                                                                                                                                                        (rule "closeTrue" (formula "206"))
                                                                                                                                                                     )
                                                                                                                                                                  )
                                                                                                                                                                  (branch "Usage"
                                                                                                                                                                      (builtin "One Step Simplification" (formula "177"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "207"))
                                                                                                                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "177") (term "1,1,1,0") (ifseqformula "153"))
                                                                                                                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "177") (term "0,1,1,1,0") (ifseqformula "140"))
                                                                                                                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "177") (term "0,0,1,1,1,0") (ifseqformula "59"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "177"))
                                                                                                                                                                     (rule "expand_inInt" (formula "177") (term "0,0,1"))
                                                                                                                                                                     (rule "expand_inInt" (formula "177") (term "0,1,0"))
                                                                                                                                                                     (rule "replace_int_MAX" (formula "177") (term "1,0,0,0,1"))
                                                                                                                                                                     (rule "replace_int_MIN" (formula "177") (term "0,1,0,0,1"))
                                                                                                                                                                     (rule "replace_int_MIN" (formula "177") (term "0,1,0,1,0"))
                                                                                                                                                                     (rule "replace_int_MAX" (formula "177") (term "1,0,0,1,0"))
                                                                                                                                                                     (rule "andLeft" (formula "177"))
                                                                                                                                                                     (rule "andLeft" (formula "177"))
                                                                                                                                                                     (rule "andLeft" (formula "178"))
                                                                                                                                                                     (rule "andLeft" (formula "178"))
                                                                                                                                                                     (rule "eqSymm" (formula "181") (term "0,1,0"))
                                                                                                                                                                     (rule "eqSymm" (formula "181") (term "1,1,0"))
                                                                                                                                                                     (rule "translateJavaAddInt" (formula "181") (term "1,0,1,0"))
                                                                                                                                                                     (rule "translateJavaAddInt" (formula "181") (term "0,1,1,0"))
                                                                                                                                                                     (rule "replace_known_left" (formula "180") (term "0") (ifseqformula "177"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "180"))
                                                                                                                                                                     (rule "true_left" (formula "180"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "180") (term "1,0,1,0"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "180") (term "0,1,1,0"))
                                                                                                                                                                     (rule "inEqSimp_commuteLeq" (formula "180") (term "1,0,0"))
                                                                                                                                                                     (rule "inEqSimp_commuteLeq" (formula "179"))
                                                                                                                                                                     (rule "commute_and" (formula "180") (term "0,0"))
                                                                                                                                                                     (rule "elim_double_block_2" (formula "210") (term "1"))
                                                                                                                                                                      (builtin "Use Dependency Contract" (formula "12") (ifInst ""  (formula "210") (term "1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                                                                                     (rule "wellFormedAnon" (formula "181") (term "1,1,0,0,0"))
                                                                                                                                                                     (rule "replace_known_left" (formula "181") (term "1,1") (ifseqformula "29"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181") (ifInst ""  (formula "209")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "29")) (ifInst ""  (formula "12")))
                                                                                                                                                                     (rule "true_left" (formula "181"))
                                                                                                                                                                      (builtin "Use Dependency Contract" (formula "138") (term "0") (ifInst ""  (formula "82") (term "0,1")) (ifInst ""  (formula "59")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::elementsToReadOfBucketBlockClassified(de.wiesler.Classifier,[I,int,int,int)].JML accessible clause.0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181") (ifInst ""  (formula "208")) (ifInst ""  (formula "23")) (ifInst ""  (formula "14")) (ifInst ""  (formula "209")) (ifInst ""  (formula "22")) (ifInst ""  (formula "210")) (ifInst ""  (formula "17")) (ifInst ""  (formula "44")) (ifInst ""  (formula "29")) (ifInst ""  (formula "28")) (ifInst ""  (formula "209")) (ifInst ""  (formula "210")))
                                                                                                                                                                     (rule "wellFormedAnonEQ" (formula "181") (term "0,0,0,0,0,0") (ifseqformula "59"))
                                                                                                                                                                     (rule "wellFormedAnon" (formula "181") (term "0,0,0,0,0,0,0"))
                                                                                                                                                                     (rule "expand_inInt" (formula "181") (term "1,0,0,0,0"))
                                                                                                                                                                     (rule "expand_inInt" (formula "181") (term "1,0,0,0"))
                                                                                                                                                                     (rule "expand_inInt" (formula "181") (term "1,0,0,0,0,0"))
                                                                                                                                                                     (rule "replace_int_MIN" (formula "181") (term "0,1,1,0,0,0,0"))
                                                                                                                                                                     (rule "replace_int_MAX" (formula "181") (term "1,0,1,0,0,0,0"))
                                                                                                                                                                     (rule "replace_int_MIN" (formula "181") (term "0,1,1,0,0,0"))
                                                                                                                                                                     (rule "replace_int_MAX" (formula "181") (term "1,0,1,0,0,0"))
                                                                                                                                                                     (rule "replace_int_MAX" (formula "181") (term "1,0,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "replace_int_MIN" (formula "181") (term "0,1,1,0,0,0,0,0"))
                                                                                                                                                                     (rule "translateJavaSubInt" (formula "181") (term "2,0,0,0,1,1,0"))
                                                                                                                                                                     (rule "translateJavaAddInt" (formula "181") (term "1,0,0,0,1,1,0"))
                                                                                                                                                                     (rule "translateJavaMulInt" (formula "181") (term "1,1,0,0,1,1,0"))
                                                                                                                                                                     (rule "translateJavaAddInt" (formula "181") (term "2,1,0,0,1,1,0"))
                                                                                                                                                                     (rule "translateJavaAddInt" (formula "181") (term "0,2,0,0,0,1,1,0"))
                                                                                                                                                                     (rule "translateJavaMulInt" (formula "181") (term "0,2,1,0,0,1,1,0"))
                                                                                                                                                                     (rule "replace_known_left" (formula "181") (term "1,0,0,0,0,0,0,0") (ifseqformula "13"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181") (ifInst ""  (formula "14")) (ifInst ""  (formula "58")) (ifInst ""  (formula "18")) (ifInst ""  (formula "20")) (ifInst ""  (formula "15")))
                                                                                                                                                                     (rule "polySimp_elimSub" (formula "181") (term "2,0,0,0,1,1,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "181") (term "1,2,0,0,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "181") (term "0,2,1,0,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "181") (term "1,1,0,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_addComm1" (formula "181") (term "2,0,0,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "181") (term "2,1,0,0,1,1,0"))
                                                                                                                                                                     (rule "polySimp_addComm0" (formula "181") (term "0,2,0,0,0,1,1,0"))
                                                                                                                                                                     (rule "disjointDefinition" (formula "181") (term "1,0"))
                                                                                                                                                                     (rule "disjointWithSingleton2" (formula "181") (term "1,0"))
                                                                                                                                                                     (rule "inEqSimp_commuteLeq" (formula "181") (term "1,0,0,0"))
                                                                                                                                                                     (rule "replace_known_left" (formula "181") (term "1,0,0,0") (ifseqformula "16"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181"))
                                                                                                                                                                     (rule "inEqSimp_commuteLeq" (formula "181") (term "1,0,0,0"))
                                                                                                                                                                     (rule "replace_known_left" (formula "181") (term "1,0,0,0") (ifseqformula "21"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181"))
                                                                                                                                                                     (rule "inEqSimp_commuteLeq" (formula "181") (term "1,0,0"))
                                                                                                                                                                     (rule "replace_known_left" (formula "181") (term "1,0,0") (ifseqformula "43"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181"))
                                                                                                                                                                     (rule "inEqSimp_commuteLeq" (formula "181") (term "0,0"))
                                                                                                                                                                     (rule "replace_known_left" (formula "181") (term "0,0") (ifseqformula "19"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181"))
                                                                                                                                                                     (rule "applyEq" (formula "181") (term "0,1") (ifseqformula "138"))
                                                                                                                                                                     (rule "eqSymm" (formula "181") (term "1"))
                                                                                                                                                                     (rule "elementOfUnion" (formula "181") (term "0,0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181"))
                                                                                                                                                                     (rule "eqSymm" (formula "181") (term "1,0,0"))
                                                                                                                                                                     (rule "replace_known_right" (formula "181") (term "1,0,0") (ifseqformula "203"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181"))
                                                                                                                                                                     (rule "elementOfUnion" (formula "181") (term "0,0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181"))
                                                                                                                                                                     (rule "eqSymm" (formula "181") (term "1,0,0"))
                                                                                                                                                                     (rule "replace_known_right" (formula "181") (term "1,0,0") (ifseqformula "202"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181"))
                                                                                                                                                                     (rule "elementOfUnion" (formula "181") (term "0,0"))
                                                                                                                                                                     (rule "elementOfArrayRangeConcrete" (formula "181") (term "0,0,0"))
                                                                                                                                                                     (rule "replace_known_right" (formula "181") (term "0,0,0,0,0") (ifseqformula "187"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181"))
                                                                                                                                                                     (rule "elementOfArrayRangeConcrete" (formula "181") (term "0,0"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181") (ifInst ""  (formula "82")))
                                                                                                                                                                     (rule "true_left" (formula "181"))
                                                                                                                                                                     (rule "ifUnfold" (formula "210") (term "1") (inst "#boolv=x_2"))
                                                                                                                                                                     (rule "variableDeclaration" (formula "210") (term "1") (newnames "x_25"))
                                                                                                                                                                     (rule "inequality_comparison_simple" (formula "210") (term "1"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "210"))
                                                                                                                                                                     (rule "replace_known_left" (formula "210") (term "0,0,1,0") (ifseqformula "177"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "210"))
                                                                                                                                                                      (builtin "Use Dependency Contract" (formula "11") (ifInst ""  (formula "210") (term "0,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                                                                                                     (rule "wellFormedAnon" (formula "181") (term "1,1,0,0,0"))
                                                                                                                                                                     (rule "replace_known_left" (formula "181") (term "1,0,0") (ifseqformula "28"))
                                                                                                                                                                      (builtin "One Step Simplification" (formula "181") (ifInst ""  (formula "208")) (ifInst ""  (formula "23")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "28")))
                                                                                                                                                                     (rule "true_left" (formula "181"))
                                                                                                                                                                     (rule "ifSplit" (formula "210"))
                                                                                                                                                                     (branch "if x_25 true"
                                                                                                                                                                         (builtin "One Step Simplification" (formula "211"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                                        (rule "closeFalse" (formula "1"))
                                                                                                                                                                     )
                                                                                                                                                                     (branch "if x_25 false"
                                                                                                                                                                         (builtin "One Step Simplification" (formula "211"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                                        (rule "true_left" (formula "1"))
                                                                                                                                                                        (rule "blockEmpty" (formula "210") (term "1"))
                                                                                                                                                                        (rule "blockReturn" (formula "210") (term "1"))
                                                                                                                                                                        (rule "blockReturn" (formula "210") (term "1"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "210"))
                                                                                                                                                                        (rule "lsReturnNonVoid" (formula "210") (term "1"))
                                                                                                                                                                        (rule "assignment" (formula "210") (term "1"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "210"))
                                                                                                                                                                        (rule "methodCallReturn" (formula "210") (term "1"))
                                                                                                                                                                        (rule "assignment" (formula "210") (term "1"))
                                                                                                                                                                         (builtin "One Step Simplification" (formula "210"))
                                                                                                                                                                        (rule "methodCallEmpty" (formula "210") (term "1"))
                                                                                                                                                                        (rule "tryEmpty" (formula "210") (term "1"))
                                                                                                                                                                        (rule "emptyModality" (formula "210") (term "1"))
                                                                                                                                                                        (rule "andRight" (formula "210"))
                                                                                                                                                                        (branch
                                                                                                                                                                           (rule "impRight" (formula "210"))
                                                                                                                                                                           (rule "andRight" (formula "211"))
                                                                                                                                                                           (branch
                                                                                                                                                                              (rule "andRight" (formula "211"))
                                                                                                                                                                              (branch
                                                                                                                                                                                  (builtin "One Step Simplification" (formula "211") (ifInst ""  (formula "162")))
                                                                                                                                                                                 (rule "closeTrue" (formula "211"))
                                                                                                                                                                              )
                                                                                                                                                                              (branch
                                                                                                                                                                                  (builtin "One Step Simplification" (formula "211") (ifInst ""  (formula "161")))
                                                                                                                                                                                 (rule "closeTrue" (formula "211"))
                                                                                                                                                                              )
                                                                                                                                                                           )
                                                                                                                                                                           (branch
                                                                                                                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                                               (builtin "One Step Simplification" (formula "211"))
                                                                                                                                                                              (rule "closeTrue" (formula "211"))
                                                                                                                                                                           )
                                                                                                                                                                        )
                                                                                                                                                                        (branch
                                                                                                                                                                           (rule "impRight" (formula "210"))
                                                                                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                                                                                           (rule "closeFalse" (formula "1"))
                                                                                                                                                                        )
                                                                                                                                                                     )
                                                                                                                                                                  )
                                                                                                                                                               )
                                                                                                                                                            )
                                                                                                                                                         )
                                                                                                                                                      )
                                                                                                                                                   )
                                                                                                                                                )
                                                                                                                                             )
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                       (branch "Exceptional Post (copy_nonoverlapping)"
                                                                                                                                           (builtin "One Step Simplification" (formula "153"))
                                                                                                                                           (builtin "One Step Simplification" (formula "183"))
                                                                                                                                          (rule "andLeft" (formula "153"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "154") (term "1,0") (ifseqformula "153"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "154") (term "0,1,0") (ifseqformula "140"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "154") (term "0,0,1,0") (ifseqformula "59"))
                                                                                                                                           (builtin "One Step Simplification" (formula "154"))
                                                                                                                                          (rule "andLeft" (formula "154"))
                                                                                                                                          (rule "andLeft" (formula "154"))
                                                                                                                                          (rule "notLeft" (formula "154"))
                                                                                                                                          (rule "close" (formula "156") (ifseqformula "155"))
                                                                                                                                       )
                                                                                                                                       (branch "Pre (copy_nonoverlapping)"
                                                                                                                                           (builtin "One Step Simplification" (formula "181") (ifInst ""  (formula "177")) (ifInst ""  (formula "180")) (ifInst ""  (formula "177")) (ifInst ""  (formula "180")))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "181") (term "1,0,0") (ifseqformula "140"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "181") (term "0,1,0,0") (ifseqformula "59"))
                                                                                                                                           (builtin "One Step Simplification" (formula "181") (ifInst ""  (formula "17")))
                                                                                                                                          (rule "wellFormedAnonEQ" (formula "181") (term "0,0,0,0") (ifseqformula "140"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "181") (term "1,0,0,0") (ifseqformula "140"))
                                                                                                                                          (rule "wellFormedAnonEQ" (formula "181") (term "0,0,0,0,0") (ifseqformula "59"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "181") (term "0,1,0,0,0") (ifseqformula "59"))
                                                                                                                                           (builtin "One Step Simplification" (formula "181") (ifInst ""  (formula "58")) (ifInst ""  (formula "139")) (ifInst ""  (formula "24")))
                                                                                                                                          (rule "wellFormedAnon" (formula "181") (term "0,0,0"))
                                                                                                                                          (rule "expand_inInt" (formula "181") (term "1,0,0"))
                                                                                                                                          (rule "expand_inInt" (formula "181") (term "1"))
                                                                                                                                          (rule "expand_inInt" (formula "181") (term "1,0"))
                                                                                                                                          (rule "replace_int_MIN" (formula "181") (term "0,1,1,0,0"))
                                                                                                                                          (rule "replace_int_MAX" (formula "181") (term "1,0,1,0,0"))
                                                                                                                                          (rule "replace_int_MAX" (formula "181") (term "1,0,1"))
                                                                                                                                          (rule "replace_int_MIN" (formula "181") (term "0,1,1"))
                                                                                                                                          (rule "replace_int_MAX" (formula "181") (term "1,0,1,0"))
                                                                                                                                          (rule "replace_int_MIN" (formula "181") (term "0,1,1,0"))
                                                                                                                                          (rule "leq_literals" (formula "181") (term "1,1,0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "181") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                                          (rule "leq_literals" (formula "181") (term "0,1"))
                                                                                                                                           (builtin "One Step Simplification" (formula "181"))
                                                                                                                                          (rule "leq_literals" (formula "181") (term "0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "181"))
                                                                                                                                          (rule "leq_literals" (formula "181") (term "1"))
                                                                                                                                           (builtin "One Step Simplification" (formula "181"))
                                                                                                                                          (rule "polySimp_homoEq" (formula "64"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                                                                                                                          (rule "mul_literals" (formula "64") (term "0,1,0"))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "141") (term "0,0,0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "141") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                          (rule "add_literals" (formula "141") (term "0,0,0,0,0,0,0"))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "44"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "66"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "66") (term "0"))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "106"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "106") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "106") (term "0"))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "64") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "75"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1" (formula "75") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "75") (term "1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "75") (term "0,0"))
                                                                                                                                          (rule "add_zero_left" (formula "75") (term "0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "96"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "96") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "96") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "96") (term "0,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "96") (term "0,0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "96") (term "0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "96") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "82") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1" (formula "82") (term "0,1,0,0"))
                                                                                                                                          (rule "add_literals" (formula "82") (term "1,0,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "82") (term "0,1,0,0"))
                                                                                                                                          (rule "qeq_literals" (formula "82") (term "1,0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "82"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "48") (term "1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq1" (formula "86"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "86") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "86") (term "1,0"))
                                                                                                                                          (rule "polySimp_mulAssoc" (formula "86") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "86") (term "0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "86") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "86") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "86") (term "0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                                                                                          (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                                                                                          (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "42"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                                                                                                          (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "76"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "76") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "76") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "181") (term "1"))
                                                                                                                                          (rule "mul_literals" (formula "181") (term "1,0,1"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "181") (term "0,1"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "181") (term "0,0,1"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "181") (term "0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "181") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "181") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "181") (term "0,1,0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "181") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,0,0"))
                                                                                                                                          (rule "add_literals" (formula "82") (term "1,1,0,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "82") (term "1,0,0,0"))
                                                                                                                                          (rule "add_zero_right" (formula "82") (term "0,0,0"))
                                                                                                                                          (rule "qeq_literals" (formula "82") (term "0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "82"))
                                                                                                                                          (rule "true_left" (formula "82"))
                                                                                                                                          (rule "polySimp_sepNegMonomial" (formula "64"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                                                                                                          (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "64"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                                                                                          (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "57") (term "0,0,0"))
                                                                                                                                          (rule "add_zero_left" (formula "57") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "140") (term "0,0,0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "140") (term "1,0,0,0,0,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "66") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "105"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "105") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "95"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "95") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "85") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "76") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "180") (term "1"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "180") (term "1,1"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "180") (term "1,1"))
                                                                                                                                          (rule "mul_literals" (formula "180") (term "0,1,1"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "180") (term "0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "180") (term "0,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "180") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "57") (term "1"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "57") (term "1"))
                                                                                                                                          (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                                                                                                          (rule "leq_literals" (formula "39") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                                                                                          (rule "true_left" (formula "39"))
                                                                                                                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "42"))
                                                                                                                                          (rule "leq_literals" (formula "16") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "16"))
                                                                                                                                          (rule "true_left" (formula "16"))
                                                                                                                                          (rule "inEqSimp_subsumption1" (formula "101") (ifseqformula "102"))
                                                                                                                                          (rule "leq_literals" (formula "101") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "101"))
                                                                                                                                          (rule "true_left" (formula "101"))
                                                                                                                                          (rule "inEqSimp_subsumption0" (formula "74") (ifseqformula "93"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "74") (term "0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "74") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "74") (term "0,1,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "74") (term "0,0,1,0,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "74") (term "1,0,1,0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                                                                                                          (rule "add_zero_right" (formula "74") (term "0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "74") (term "0,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor2b" (formula "74") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                                                                                                          (rule "add_zero_right" (formula "74") (term "0,0"))
                                                                                                                                          (rule "qeq_literals" (formula "74") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "74"))
                                                                                                                                          (rule "true_left" (formula "74"))
                                                                                                                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "35"))
                                                                                                                                          (rule "leq_literals" (formula "18") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                                                                                          (rule "true_left" (formula "18"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "36"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                                                                          (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "38"))
                                                                                                                                          (rule "leq_literals" (formula "18") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                                                                                          (rule "true_left" (formula "18"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "9"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                                                                                                                                          (rule "mul_literals" (formula "63") (term "0,0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "63") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "63") (term "0"))
                                                                                                                                          (rule "inEqSimp_subsumption0" (formula "129") (ifseqformula "63"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "129") (term "0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "129") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "129") (term "1,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "129") (term "0,1,0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "129") (term "0,0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "129") (term "0,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "129") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "129") (term "1,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "129") (term "1,0,0"))
                                                                                                                                          (rule "add_zero_right" (formula "129") (term "0,0"))
                                                                                                                                          (rule "qeq_literals" (formula "129") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "129"))
                                                                                                                                          (rule "true_left" (formula "129"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "39"))
                                                                                                                                          (rule "mul_literals" (formula "18") (term "0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                                                                                          (rule "add_literals" (formula "18") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                                                                                          (rule "mul_literals" (formula "18") (term "1"))
                                                                                                                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "34"))
                                                                                                                                          (rule "leq_literals" (formula "18") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                                                                                          (rule "true_left" (formula "18"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "92"))
                                                                                                                                          (rule "times_zero_1" (formula "73") (term "0,0"))
                                                                                                                                          (rule "add_zero_left" (formula "73") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "73") (term "1"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                                                                                                                          (rule "mul_literals" (formula "73") (term "0,1"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "73") (term "1,1"))
                                                                                                                                          (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "73"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                                                                                                          (rule "add_zero_right" (formula "34") (term "0,0"))
                                                                                                                                          (rule "qeq_literals" (formula "34") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "34"))
                                                                                                                                          (rule "true_left" (formula "34"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "9"))
                                                                                                                                          (rule "mul_literals" (formula "65") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                                                                                                          (rule "mul_literals" (formula "65") (term "1"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "36"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                                                                                                                                          (rule "mul_literals" (formula "73") (term "0,0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                                                                                                          (rule "add_literals" (formula "73") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "73") (term "0"))
                                                                                                                                          (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "73"))
                                                                                                                                          (rule "leq_literals" (formula "17") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "17"))
                                                                                                                                          (rule "true_left" (formula "17"))
                                                                                                                                          (rule "inEqSimp_and_subsumption3" (formula "136") (term "0,0,0"))
                                                                                                                                          (rule "leq_literals" (formula "136") (term "0,1,0,0,0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "136"))
                                                                                                                                          (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                                                                                                                                          (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "5"))
                                                                                                                                          (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                                                                                                                                          (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                                                                                          (rule "nnf_imp2or" (formula "137") (term "0"))
                                                                                                                                          (rule "nnf_imp2or" (formula "6") (term "0"))
                                                                                                                                          (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "142"))
                                                                                                                                          (rule "andLeft" (formula "142"))
                                                                                                                                          (rule "notLeft" (formula "142"))
                                                                                                                                          (rule "notLeft" (formula "142"))
                                                                                                                                          (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "147"))
                                                                                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                                                                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "146"))
                                                                                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                                                                                          (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "25"))
                                                                                                                                          (rule "andLeft" (formula "25"))
                                                                                                                                          (rule "notLeft" (formula "25"))
                                                                                                                                          (rule "notLeft" (formula "25"))
                                                                                                                                          (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "65") (inst "b=b"))
                                                                                                                                           (builtin "One Step Simplification" (formula "65"))
                                                                                                                                          (rule "expand_inInt" (formula "65") (term "1,0,0,1"))
                                                                                                                                          (rule "replace_int_MAX" (formula "65") (term "1,0,1,0,0,1"))
                                                                                                                                          (rule "replace_int_MIN" (formula "65") (term "0,1,1,0,0,1"))
                                                                                                                                          (rule "andLeft" (formula "65"))
                                                                                                                                          (rule "andLeft" (formula "65"))
                                                                                                                                          (rule "andLeft" (formula "65"))
                                                                                                                                          (rule "andLeft" (formula "67"))
                                                                                                                                          (rule "andLeft" (formula "65"))
                                                                                                                                          (rule "andLeft" (formula "65"))
                                                                                                                                          (rule "andLeft" (formula "67"))
                                                                                                                                          (rule "andLeft" (formula "67"))
                                                                                                                                          (rule "andLeft" (formula "67"))
                                                                                                                                          (rule "translateJavaAddInt" (formula "71") (term "1"))
                                                                                                                                          (rule "translateJavaCastInt" (formula "72") (term "0"))
                                                                                                                                          (rule "translateJavaMulInt" (formula "65") (term "1"))
                                                                                                                                          (rule "translateJavaMulInt" (formula "66") (term "0"))
                                                                                                                                          (rule "translateJavaCastInt" (formula "69") (term "0"))
                                                                                                                                          (rule "translateJavaCastInt" (formula "68") (term "1"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "65") (term "1"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "66") (term "0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "71") (term "1"))
                                                                                                                                          (rule "castedGetAny" (formula "72") (term "0"))
                                                                                                                                          (rule "castedGetAny" (formula "69") (term "0"))
                                                                                                                                          (rule "castedGetAny" (formula "68") (term "1"))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "74") (term "1,1,0,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "67"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "65"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "68"))
                                                                                                                                          (rule "applyEq" (formula "68") (term "0") (ifseqformula "39"))
                                                                                                                                          (rule "inEqSimp_commuteGeq" (formula "68"))
                                                                                                                                          (rule "applyEq" (formula "68") (term "0") (ifseqformula "39"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "68"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                                                                                                                                          (rule "polySimp_mulAssoc" (formula "68") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "68") (term "0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "68") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "68") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "68"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                                                                                          (rule "elimGcdGeq_antec" (formula "65") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=int::final(bucket_pointers,
           de.wiesler.BucketPointers::$num_buckets)") (inst "elimGcd=Z(2(#))"))
                                                                                                                                          (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,1,0"))
                                                                                                                                          (rule "leq_literals" (formula "65") (term "0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "65"))
                                                                                                                                          (rule "add_zero_right" (formula "65") (term "0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0"))
                                                                                                                                          (rule "add_literals" (formula "65") (term "0,0,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                                                                                                          (rule "add_zero_right" (formula "65") (term "0,0"))
                                                                                                                                          (rule "leq_literals" (formula "65") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "65"))
                                                                                                                                          (rule "inEqSimp_exactShadow2" (formula "65") (ifseqformula "66"))
                                                                                                                                          (rule "mul_literals" (formula "65") (term "1,0,0,1"))
                                                                                                                                          (rule "greater_literals" (formula "65") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "65"))
                                                                                                                                          (rule "mul_literals" (formula "65") (term "0,0"))
                                                                                                                                          (rule "add_zero_left" (formula "65") (term "0"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "40"))
                                                                                                                                          (rule "mul_literals" (formula "68") (term "0,0"))
                                                                                                                                          (rule "add_zero_left" (formula "68") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "68") (term "1"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "68") (term "1"))
                                                                                                                                          (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "81"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "68") (term "0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                                                                                                          (rule "add_zero_right" (formula "68") (term "0,0"))
                                                                                                                                          (rule "qeq_literals" (formula "68") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "68"))
                                                                                                                                          (rule "true_left" (formula "68"))
                                                                                                                                          (rule "inEqSimp_exactShadow2" (formula "109") (ifseqformula "67"))
                                                                                                                                          (rule "greater_literals" (formula "109") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "109"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "109") (term "1,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "109") (term "0,1,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "109") (term "0,0"))
                                                                                                                                          (rule "mul_literals" (formula "109") (term "0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "109") (term "1,0,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "109"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "109") (term "1"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "109") (term "1"))
                                                                                                                                          (rule "mul_literals" (formula "109") (term "0,1"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "109") (term "1,1"))
                                                                                                                                          (rule "inEqSimp_exactShadow2" (formula "38") (ifseqformula "67"))
                                                                                                                                          (rule "greater_literals" (formula "38") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "38"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                                                                                                          (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                                                                                                          (rule "mul_literals" (formula "38") (term "0,1"))
                                                                                                                                          (rule "Contract_axiom_for_isClassifiedBlocksRangeSplit_in_Classifier" (formula "124") (term "0"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "1,0,0") (ifseqformula "54"))
                                                                                                                                           (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "115")) (ifInst ""  (formula "186")) (ifInst ""  (formula "185")) (ifInst ""  (formula "115")) (ifInst ""  (formula "125")) (ifInst ""  (formula "114")) (ifInst ""  (formula "18")))
                                                                                                                                          (rule "true_left" (formula "124"))
                                                                                                                                          (rule "Contract_axiom_for_isClassifiedBlocksRange_in_Classifier" (formula "120") (term "0"))
                                                                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "1,0,0") (ifseqformula "54"))
                                                                                                                                           (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "115")) (ifInst ""  (formula "186")) (ifInst ""  (formula "185")) (ifInst ""  (formula "115")) (ifInst ""  (formula "114")) (ifInst ""  (formula "18")))
                                                                                                                                          (rule "true_left" (formula "120"))
                                                                                                                                          (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "25") (inst "b=b"))
                                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "70")) (ifInst ""  (formula "73")))
                                                                                                                                          (rule "expand_inInt" (formula "25") (term "1,0,0,1"))
                                                                                                                                          (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,1"))
                                                                                                                                          (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,1"))
                                                                                                                                          (rule "andLeft" (formula "25"))
                                                                                                                                          (rule "andLeft" (formula "25"))
                                                                                                                                          (rule "andLeft" (formula "25"))
                                                                                                                                          (rule "andLeft" (formula "25"))
                                                                                                                                          (rule "andLeft" (formula "25"))
                                                                                                                                          (rule "andLeft" (formula "27"))
                                                                                                                                          (rule "andLeft" (formula "27"))
                                                                                                                                          (rule "translateJavaCastInt" (formula "31") (term "0"))
                                                                                                                                          (rule "translateJavaAddInt" (formula "30") (term "1"))
                                                                                                                                          (rule "translateJavaMulInt" (formula "26") (term "0"))
                                                                                                                                          (rule "translateJavaMulInt" (formula "25") (term "1"))
                                                                                                                                          (rule "translateJavaCastInt" (formula "29") (term "0"))
                                                                                                                                          (rule "translateJavaCastInt" (formula "28") (term "1"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "26") (term "0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                                                                                                          (rule "castedGetAny" (formula "29") (term "0"))
                                                                                                                                          (rule "castedGetAny" (formula "28") (term "0"))
                                                                                                                                          (rule "castedGetAny" (formula "27") (term "1"))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "26"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "25"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "26"))
                                                                                                                                          (rule "applyEq" (formula "27") (term "0") (ifseqformula "43"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "27"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                                                                          (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                                                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "43"))
                                                                                                                                          (rule "inEqSimp_commuteGeq" (formula "26"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                                                                                                          (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "68"))
                                                                                                                                          (rule "times_zero_1" (formula "25") (term "1,1,0"))
                                                                                                                                          (rule "greater_literals" (formula "25") (term "0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                                          (rule "leq_literals" (formula "25") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                                          (rule "true_left" (formula "25"))
                                                                                                                                          (rule "Definition_axiom_for_disjointBucketsAreaLemma_in_de_wiesler_BucketPointers" (formula "87") (term "0") (inst "b=b"))
                                                                                                                                           (builtin "One Step Simplification" (formula "87"))
                                                                                                                                          (rule "expand_inInt" (formula "87") (term "1,0,0"))
                                                                                                                                          (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0"))
                                                                                                                                          (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0"))
                                                                                                                                          (rule "translateJavaSubInt" (formula "87") (term "2,0,1,1,0"))
                                                                                                                                          (rule "translateJavaSubInt" (formula "87") (term "2,1,1,1,0"))
                                                                                                                                          (rule "translateJavaAddInt" (formula "87") (term "1,0,0,1,0"))
                                                                                                                                          (rule "translateJavaAddInt" (formula "87") (term "1,0,1,1,0"))
                                                                                                                                          (rule "translateJavaSubInt" (formula "87") (term "2,0,0,1,0"))
                                                                                                                                          (rule "translateJavaSubInt" (formula "87") (term "2,1,0,1,0"))
                                                                                                                                          (rule "translateJavaAddInt" (formula "87") (term "0,2,0,1,1,0"))
                                                                                                                                          (rule "translateJavaAddInt" (formula "87") (term "0,2,0,0,1,0"))
                                                                                                                                          (rule "polySimp_elimSub" (formula "87") (term "2,1,1,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "87") (term "1,2,1,1,1,0"))
                                                                                                                                          (rule "polySimp_elimSub" (formula "87") (term "2,1,0,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "87") (term "1,2,1,0,1,0"))
                                                                                                                                          (rule "polySimp_elimSub" (formula "87") (term "2,0,1,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "87") (term "1,2,0,1,1,0"))
                                                                                                                                          (rule "polySimp_elimSub" (formula "87") (term "2,0,0,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "87") (term "1,2,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "2,1,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "2,1,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "2,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "2,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,2,1,1,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "0,0,2,1,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,2,1,0,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "0,0,2,1,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "87") (term "0,2,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "87") (term "0,2,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,0,0"))
                                                                                                                                          (rule "disjointDefinition" (formula "87") (term "1,1,0"))
                                                                                                                                          (rule "disjointDefinition" (formula "87") (term "0,1,0"))
                                                                                                                                          (rule "disjointArrayRanges" (formula "87") (term "1,1,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "87"))
                                                                                                                                          (rule "disjointArrayRanges" (formula "87") (term "0,1,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "87"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "87") (term "1,1,0,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0,0,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "0,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1" (formula "87") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "add_zero_left" (formula "87") (term "0,0,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "0,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1" (formula "87") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,0,0,0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "add_zero_left" (formula "87") (term "0,0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "0,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,0,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0,0,0,0,0,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,0,0,0,0,0,0,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,0,0,0,0,0,0,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,0,0,0,0,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "0,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1" (formula "87") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,0,0,0,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "add_zero_left" (formula "87") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "1,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,0,0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,0,0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "0,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1" (formula "87") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,0,0,0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "add_zero_left" (formula "87") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "1,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,1,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,1,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,1,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,1,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,1,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,1,0,0,1,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,1,0,0,1,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,1,0,0,1,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,1,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,1,0,0,1,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,1,0,0,1,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,1,0,0,1,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,1,0,0,1,1,0"))
                                                                                                                                          (rule "qeq_literals" (formula "87") (term "1,0,0,1,1,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "87"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0,0,0,1,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,0,0,0,0,1,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,0,0,0,0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,0,0,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,0,0,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "1,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,0,0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,0,0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,0,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,0,0,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "87") (term "1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "87") (term "0,1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "87") (term "0,0,1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,1,0,0,0,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,1,0,0,0,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,1,0,0,0,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,1,0,0,0,1,0"))
                                                                                                                                          (rule "add_literals" (formula "87") (term "1,1,0,1,0,0,0,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "87") (term "1,0,1,0,0,0,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "87") (term "0,1,0,0,0,1,0"))
                                                                                                                                          (rule "qeq_literals" (formula "87") (term "1,0,0,0,1,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "87"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,1,0,0,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,1,0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,1,1,0,0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "87") (term "0,1,1,0,0,0,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "1,1,1,0,0,0,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "87") (term "0,1,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,1,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "1,1,1,0,1,0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "87") (term "0,1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "87") (term "1,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "0,1,1,1,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "87") (term "0,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "0,0,0,1,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "1,0,1,1,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "87") (term "0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "0,0,0,1,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "0,0,0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "1,0,1,1,0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "87") (term "1,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "87") (term "0,1,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,1,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "1,1,1,0,1,0,0,1,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "87") (term "1,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "0,1,1,1,0,1,1,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "87") (term "0,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "87") (term "0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "87") (term "0,0,0,1,0,1,1,0"))
                                                                                                                                          (rule "Contract_axiom_for_elementsToReadOfBucketBlockClassified_in_BucketPointers" (formula "7") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "185")) (ifInst ""  (formula "186")) (ifInst ""  (formula "184")) (ifInst ""  (formula "12")) (ifInst ""  (formula "20")))
                                                                                                                                          (rule "wellFormedAnon" (formula "7") (term "1,0"))
                                                                                                                                          (rule "replace_known_left" (formula "7") (term "1,1,0") (ifseqformula "14"))
                                                                                                                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "15")))
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
                                                                                                                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0"))
                                                                                                                                          (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "38"))
                                                                                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                                                                                                                          (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "40"))
                                                                                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                                                                                          (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "80") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "80"))
                                                                                                                                          (rule "translateJavaMod" (formula "80") (term "0"))
                                                                                                                                          (rule "jmod_axiom" (formula "80") (term "0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "80") (term "1,0"))
                                                                                                                                          (rule "polySimp_sepNegMonomial" (formula "80"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                                                                                                                                          (rule "newSym_eq" (formula "80") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_1,
               de.wiesler.Increment::$position),
    Z(0(#)))"))
                                                                                                                                          (rule "times_zero_1" (formula "80") (term "1,1"))
                                                                                                                                          (rule "add_zero_right" (formula "80") (term "1"))
                                                                                                                                          (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "80"))
                                                                                                                                          (rule "eqSymm" (formula "81"))
                                                                                                                                          (rule "applyEq" (formula "122") (term "1,3,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "122") (term "3,0"))
                                                                                                                                          (rule "applyEq" (formula "98") (term "1,4,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "98") (term "4,0"))
                                                                                                                                          (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "126") (term "1,3,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "126") (term "3,0"))
                                                                                                                                          (rule "applyEq" (formula "130") (term "1,3,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "130") (term "3,0"))
                                                                                                                                          (rule "applyEq" (formula "103") (term "0") (ifseqformula "81"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "103"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "103") (term "1,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "103") (term "0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "103") (term "0,0"))
                                                                                                                                          (rule "applyEq" (formula "108") (term "1,0,2,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "108") (term "0,2,0"))
                                                                                                                                          (rule "applyEq" (formula "115") (term "1,0,2,2,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "115") (term "0,2,2,0"))
                                                                                                                                          (rule "applyEq" (formula "97") (term "1,5,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "97") (term "5,0"))
                                                                                                                                          (rule "applyEq" (formula "148") (term "1,3,0,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "148") (term "3,0,1,0"))
                                                                                                                                          (rule "applyEq" (formula "89") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "188") (term "0,0") (ifseqformula "81"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "188") (term "0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "188") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "188") (term "0,0"))
                                                                                                                                          (rule "applyEq" (formula "89") (term "1,0,0,1,0,0,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "137") (term "1,3,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "137") (term "3,0"))
                                                                                                                                          (rule "applyEq" (formula "89") (term "1,1,1,1,1,0,1,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "109") (term "1,0,2,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "109") (term "0,2,0"))
                                                                                                                                          (rule "applyEq" (formula "130") (term "1,4,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "130") (term "4,0"))
                                                                                                                                          (rule "applyEq" (formula "89") (term "1,1,1,0,1,0,0,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "84") (term "0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "89") (term "1,0,0,1,0,1,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "126") (term "1,4,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "126") (term "4,0"))
                                                                                                                                          (rule "applyEq" (formula "188") (term "0,1") (ifseqformula "81"))
                                                                                                                                          (rule "inEqSimp_homoInEq1" (formula "188") (term "1"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "188") (term "1,0,1"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "188") (term "0,1"))
                                                                                                                                          (rule "applyEq" (formula "114") (term "1,0,2,2,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "114") (term "0,2,2,0"))
                                                                                                                                          (rule "applyEq" (formula "93") (term "1,1") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "99") (term "2,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "88") (term "1,6,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "88") (term "6,0"))
                                                                                                                                          (rule "applyEq" (formula "89") (term "1,0,1,1,0,0,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "156") (term "1,3,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "156") (term "3,0"))
                                                                                                                                          (rule "applyEq" (formula "88") (term "1,7,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "88") (term "7,0"))
                                                                                                                                          (rule "applyEq" (formula "89") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "148") (term "1,2,0,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "148") (term "2,0,1,0"))
                                                                                                                                          (rule "applyEq" (formula "137") (term "1,4,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "137") (term "4,0"))
                                                                                                                                          (rule "applyEq" (formula "89") (term "1,0,1,1,0,1,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "104") (term "0,0,0,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "104") (term "0,0,0"))
                                                                                                                                          (rule "applyEq" (formula "64") (term "1") (ifseqformula "81"))
                                                                                                                                          (rule "applyEq" (formula "147") (term "1,0,0,2,0,1,0") (ifseqformula "81"))
                                                                                                                                          (rule "polySimp_addComm0" (formula "147") (term "0,0,2,0,1,0"))
                                                                                                                                          (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "81"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "103"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "103") (term "1"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "103") (term "1"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "103") (term "1,1"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "103") (term "1,1"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "103") (term "0,1"))
                                                                                                                                          (rule "mul_literals" (formula "103") (term "0,0,1"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "103") (term "1,0,1"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "188") (term "0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "188") (term "0,0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "188") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "188") (term "1"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "188") (term "0,1"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "188") (term "0,1"))
                                                                                                                                          (rule "elimGcdGeq_antec" (formula "84") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "84") (term "1,0,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "84") (term "0,1,0,0,0,0,1,0"))
                                                                                                                                          (rule "leq_literals" (formula "84") (term "0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "84"))
                                                                                                                                          (rule "times_zero_1" (formula "84") (term "1,0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_addLiterals" (formula "84") (term "0,0,0,0"))
                                                                                                                                          (rule "add_literals" (formula "84") (term "0,0,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor0b" (formula "84") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "84") (term "1,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "84") (term "1,0,0"))
                                                                                                                                          (rule "add_zero_right" (formula "84") (term "0,0"))
                                                                                                                                          (rule "leq_literals" (formula "84") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "84"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "103") (ifseqformula "35"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "103") (term "0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "103") (term "0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "103") (term "0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "103") (term "0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "103") (term "1,0,0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "103") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "103") (term "0,0,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "103"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "103") (term "0"))
                                                                                                                                          (rule "polySimp_elimOne" (formula "103") (term "0"))
                                                                                                                                          (rule "inEqSimp_subsumption0" (formula "189") (term "0") (ifseqformula "103"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "189") (term "0,0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "189") (term "1,0,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "189") (term "1,0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "189") (term "1,1,0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "189") (term "0,1,0,0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "189") (term "0,0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "189") (term "0,0,0,0"))
                                                                                                                                          (rule "add_literals" (formula "189") (term "0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor0b" (formula "189") (term "0,0,0"))
                                                                                                                                          (rule "add_literals" (formula "189") (term "1,1,0,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "189") (term "1,0,0,0"))
                                                                                                                                          (rule "add_literals" (formula "189") (term "0,0,0"))
                                                                                                                                          (rule "qeq_literals" (formula "189") (term "0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "189"))
                                                                                                                                          (rule "inEqSimp_geqRight" (formula "189"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                                                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                                                                          (rule "inEqSimp_subsumption0" (formula "104") (ifseqformula "1"))
                                                                                                                                          (rule "inEqSimp_homoInEq0" (formula "104") (term "0"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "104") (term "1,0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "104") (term "1,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "104") (term "0,1,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "104") (term "1,1,0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "104") (term "0,0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "104") (term "0,0,0"))
                                                                                                                                          (rule "add_literals" (formula "104") (term "0,0,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor0b" (formula "104") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "104") (term "1,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "104") (term "1,0,0"))
                                                                                                                                          (rule "add_literals" (formula "104") (term "0,0"))
                                                                                                                                          (rule "qeq_literals" (formula "104") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "104"))
                                                                                                                                          (rule "true_left" (formula "104"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "38"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "104") (term "0,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "104") (term "0,0,0"))
                                                                                                                                          (rule "mul_literals" (formula "104") (term "0,0,0,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "104") (term "1,0,0,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "104") (term "0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "104") (term "0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor2b" (formula "104") (term "0"))
                                                                                                                                          (rule "add_literals" (formula "104") (term "1,1,0"))
                                                                                                                                          (rule "times_zero_1" (formula "104") (term "1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "104") (term "0"))
                                                                                                                                          (rule "polySimp_addComm1" (formula "104") (term "0"))
                                                                                                                                          (rule "add_literals" (formula "104") (term "0,0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "104"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "104") (term "0"))
                                                                                                                                          (rule "elimGcdLeq_antec" (formula "104") (inst "elimGcdRightDiv=Z(6(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "104") (term "1,0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "104") (term "1,0,0,0,0,1,0"))
                                                                                                                                          (rule "neg_literal" (formula "104") (term "0,0,0,0,0,1,0"))
                                                                                                                                          (rule "leq_literals" (formula "104") (term "0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "104"))
                                                                                                                                          (rule "mul_literals" (formula "104") (term "1,0,0,0,0,0"))
                                                                                                                                          (rule "polySimp_addLiterals" (formula "104") (term "0,0,0,0"))
                                                                                                                                          (rule "add_zero_right" (formula "104") (term "0,0,0,0"))
                                                                                                                                          (rule "polySimp_pullOutFactor0b" (formula "104") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "104") (term "1,1,0,0"))
                                                                                                                                          (rule "times_zero_1" (formula "104") (term "1,0,0"))
                                                                                                                                          (rule "add_literals" (formula "104") (term "0,0"))
                                                                                                                                          (rule "qeq_literals" (formula "104") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "104"))
                                                                                                                                          (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                                                                                                                          (rule "mul_literals" (formula "33") (term "0,0"))
                                                                                                                                          (rule "add_zero_left" (formula "33") (term "0"))
                                                                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                                                                                          (rule "inEqSimp_contradInEq5" (formula "33") (ifseqformula "86"))
                                                                                                                                          (rule "greater_literals" (formula "33") (term "0,0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                                                                                          (rule "times_zero_1" (formula "33") (term "1,0"))
                                                                                                                                          (rule "qeq_literals" (formula "33") (term "0"))
                                                                                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                                                                                          (rule "closeFalse" (formula "33"))
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                              )
                                                                                                                           )
                                                                                                                        )
                                                                                                                        (branch "Exceptional Post (copy_nonoverlapping)"
                                                                                                                            (builtin "One Step Simplification" (formula "170"))
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                           (rule "andLeft" (formula "140"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "141") (term "1,0") (ifseqformula "140"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "141") (term "0,1,0") (ifseqformula "59"))
                                                                                                                            (builtin "One Step Simplification" (formula "141"))
                                                                                                                           (rule "andLeft" (formula "141"))
                                                                                                                           (rule "andLeft" (formula "141"))
                                                                                                                           (rule "notLeft" (formula "141"))
                                                                                                                           (rule "close" (formula "143") (ifseqformula "142"))
                                                                                                                        )
                                                                                                                        (branch "Pre (copy_nonoverlapping)"
                                                                                                                            (builtin "One Step Simplification" (formula "168") (ifInst ""  (formula "167")) (ifInst ""  (formula "163")) (ifInst ""  (formula "167")) (ifInst ""  (formula "163")))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "168") (term "1,0,0") (ifseqformula "59"))
                                                                                                                            (builtin "One Step Simplification" (formula "168") (ifInst ""  (formula "25")))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "168") (term "0,0,0,0") (ifseqformula "59"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "168") (term "1,0,0,0") (ifseqformula "59"))
                                                                                                                            (builtin "One Step Simplification" (formula "168") (ifInst ""  (formula "58")) (ifInst ""  (formula "17")))
                                                                                                                           (rule "wellFormedAnon" (formula "168") (term "0,0,0"))
                                                                                                                           (rule "expand_inInt" (formula "168") (term "1"))
                                                                                                                           (rule "expand_inInt" (formula "168") (term "1,0,0"))
                                                                                                                           (rule "expand_inInt" (formula "168") (term "1,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "168") (term "1,0,1"))
                                                                                                                           (rule "replace_int_MIN" (formula "168") (term "0,1,1"))
                                                                                                                           (rule "replace_int_MIN" (formula "168") (term "0,1,1,0,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "168") (term "1,0,1,0,0"))
                                                                                                                           (rule "replace_int_MIN" (formula "168") (term "0,1,1,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "168") (term "1,0,1,0"))
                                                                                                                           (rule "leq_literals" (formula "168") (term "0,1"))
                                                                                                                            (builtin "One Step Simplification" (formula "168") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                           (rule "leq_literals" (formula "168") (term "0,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "168"))
                                                                                                                           (rule "leq_literals" (formula "168") (term "1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "168"))
                                                                                                                           (rule "leq_literals" (formula "168") (term "1"))
                                                                                                                            (builtin "One Step Simplification" (formula "168"))
                                                                                                                           (rule "polySimp_homoEq" (formula "64"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "64") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "64") (term "0,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "66"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "66") (term "0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "106"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "106") (term "1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "106") (term "0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "44"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "82") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "82") (term "1,0,0,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "82") (term "0,0,0,0"))
                                                                                                                           (rule "qeq_literals" (formula "82") (term "0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "82"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "48") (term "1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "42"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                                                                                           (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "76"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "76") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "76") (term "0,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "96"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "96") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "96") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "96") (term "0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "96") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "96") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "96") (term "0,0"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "86"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "86") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "86") (term "1,0"))
                                                                                                                           (rule "polySimp_mulAssoc" (formula "86") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "86") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "86") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "86") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "86") (term "0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "75"))
                                                                                                                           (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "75") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "75") (term "1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "75") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "75") (term "0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "168") (term "0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "168") (term "1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "168") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "168") (term "0,1,0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "168") (term "0,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "168") (term "1"))
                                                                                                                           (rule "mul_literals" (formula "168") (term "1,0,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "168") (term "0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "168") (term "0,0,1"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "82") (term "0,0,0"))
                                                                                                                           (rule "add_literals" (formula "82") (term "1,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "82") (term "0,0,0"))
                                                                                                                           (rule "qeq_literals" (formula "82") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "82"))
                                                                                                                           (rule "true_left" (formula "82"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "64"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                                                                                           (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "64"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "57") (term "0,0,0"))
                                                                                                                           (rule "add_zero_left" (formula "57") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "66") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "105"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "105") (term "0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "76") (term "0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "95"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "95") (term "0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "85") (term "0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "167") (term "0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "167") (term "0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "167") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "167") (term "1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "167") (term "1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "167") (term "1,1"))
                                                                                                                           (rule "mul_literals" (formula "167") (term "0,1,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "57") (term "1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "57") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "36"))
                                                                                                                           (rule "leq_literals" (formula "19") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "19"))
                                                                                                                           (rule "true_left" (formula "19"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "102") (ifseqformula "103"))
                                                                                                                           (rule "leq_literals" (formula "102") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "102"))
                                                                                                                           (rule "true_left" (formula "102"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "42"))
                                                                                                                           (rule "leq_literals" (formula "16") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "16"))
                                                                                                                           (rule "true_left" (formula "16"))
                                                                                                                           (rule "inEqSimp_subsumption0" (formula "74") (ifseqformula "93"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "74") (term "0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "74") (term "0,1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "74") (term "0,0,1,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "74") (term "1,0,1,0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "74") (term "0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "74") (term "0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor2b" (formula "74") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "74") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "74") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "74"))
                                                                                                                           (rule "true_left" (formula "74"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "38"))
                                                                                                                           (rule "leq_literals" (formula "37") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "37"))
                                                                                                                           (rule "true_left" (formula "37"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "39"))
                                                                                                                           (rule "mul_literals" (formula "19") (term "0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                                                                           (rule "add_literals" (formula "19") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                                                                           (rule "mul_literals" (formula "19") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "35"))
                                                                                                                           (rule "leq_literals" (formula "19") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "19"))
                                                                                                                           (rule "true_left" (formula "19"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "36"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                                                           (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "38"))
                                                                                                                           (rule "leq_literals" (formula "18") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "18"))
                                                                                                                           (rule "true_left" (formula "18"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "9"))
                                                                                                                           (rule "mul_literals" (formula "65") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                                                                                           (rule "mul_literals" (formula "65") (term "1"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "92"))
                                                                                                                           (rule "times_zero_1" (formula "73") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "73") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "73") (term "1"))
                                                                                                                           (rule "mul_literals" (formula "73") (term "0,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "73") (term "1,1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "73"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "34") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "34") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                                                                           (rule "true_left" (formula "34"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "9"))
                                                                                                                           (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                                                                                           (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "62") (term "0"))
                                                                                                                           (rule "inEqSimp_subsumption0" (formula "130") (ifseqformula "62"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "130") (term "0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "130") (term "1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "130") (term "1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "130") (term "0,1,0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "130") (term "0,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "130") (term "0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "130") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "130") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "130") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "130") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "130") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "130"))
                                                                                                                           (rule "true_left" (formula "130"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "36"))
                                                                                                                           (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                                                                                                                           (rule "mul_literals" (formula "73") (term "0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                                                                                           (rule "add_literals" (formula "73") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "73") (term "0"))
                                                                                                                           (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "73"))
                                                                                                                           (rule "leq_literals" (formula "17") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                                                                           (rule "true_left" (formula "17"))
                                                                                                                           (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                                                                                                                           (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                                                                           (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                                                                                                                           (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                                                                           (rule "nnf_imp2or" (formula "6") (term "0"))
                                                                                                                           (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "7") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                                                                           (rule "translateJavaAddInt" (formula "7") (term "4,0,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "7") (term "3,0,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "7") (term "0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                                                                                           (rule "applyEq" (formula "7") (term "1,3,0,1") (ifseqformula "63"))
                                                                                                                           (rule "applyEq" (formula "7") (term "1,4,0,1") (ifseqformula "60"))
                                                                                                                           (rule "applyEq" (formula "7") (term "1,0,0") (ifseqformula "63"))
                                                                                                                           (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                                                                           (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "60"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "83"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                                                                                           (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                                                                                                           (rule "qeq_literals" (formula "7") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                                                                           (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "111") (term "1,4,0"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (term "1,0,0") (ifseqformula "54"))
                                                                                                                            (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "67")) (ifInst ""  (formula "161")) (ifInst ""  (formula "67")) (ifInst ""  (formula "66")) (ifInst ""  (formula "19")))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "111") (term "1,0") (ifseqformula "54"))
                                                                                                                           (rule "wellFormedAnon" (formula "111") (term "0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "111") (term "2,1,1,0,0,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "111") (term "2,0,1,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "111") (term "1,1,0") (ifseqformula "53"))
                                                                                                                            (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                           (rule "polySimp_addComm0" (formula "111") (term "2,1,1,0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "111") (term "2,0,1,0,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "111") (term "0,1,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "111") (term "0,1,1,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "111") (term "1,0,0,0,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0"))
                                                                                                                           (rule "replace_known_left" (formula "111") (term "0,0") (ifseqformula "38"))
                                                                                                                            (builtin "One Step Simplification" (formula "111"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "111") (term "1,0,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0,0,0,1"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "111") (term "0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "111") (term "0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "111") (term "0,0"))
                                                                                                                           (rule "replace_known_left" (formula "111") (term "0") (ifseqformula "39"))
                                                                                                                            (builtin "One Step Simplification" (formula "111"))
                                                                                                                           (rule "andLeft" (formula "111"))
                                                                                                                           (rule "andLeft" (formula "112"))
                                                                                                                           (rule "andLeft" (formula "111"))
                                                                                                                           (rule "andLeft" (formula "114"))
                                                                                                                           (rule "andLeft" (formula "111"))
                                                                                                                           (rule "andLeft" (formula "111"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "83") (ifseqformula "113"))
                                                                                                                           (rule "polySimp_rightDist" (formula "83") (term "0,0"))
                                                                                                                           (rule "mul_literals" (formula "83") (term "0,0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "83"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "83") (term "1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,1"))
                                                                                                                           (rule "mul_literals" (formula "83") (term "0,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "83") (term "1,1"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "113") (ifseqformula "114"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "113") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "113"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "113") (term "1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "113") (term "1"))
                                                                                                                           (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "120") (term "1,4,0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "120") (term "0,2,1,4,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "120") (term "0,2,1,4,0"))
                                                                                                                           (rule "pullOutSelect" (formula "120") (term "1,4,0") (inst "selectSK=arr_1"))
                                                                                                                           (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "54"))
                                                                                                                            (builtin "One Step Simplification" (formula "120"))
                                                                                                                           (rule "polySimp_addComm0" (formula "121") (term "4,0"))
                                                                                                                           (rule "elementOfSingleton" (formula "120") (term "0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "120"))
                                                                                                                           (rule "polySimp_homoEq" (formula "120") (term "0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor0b" (formula "120") (term "0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "120") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "120") (term "1,0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "120") (term "0,0,0,0"))
                                                                                                                           (rule "equal_literals" (formula "120") (term "0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "120"))
                                                                                                                           (rule "pullOutSelect" (formula "120") (term "2,0") (inst "selectSK=arr_2"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "120"))
                                                                                                                            (builtin "One Step Simplification" (formula "120"))
                                                                                                                           (rule "elementOfSingleton" (formula "120") (term "0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "120"))
                                                                                                                           (rule "polySimp_homoEq" (formula "120") (term "0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor0b" (formula "120") (term "0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "120") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "120") (term "1,0,0,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "120") (term "0,0,0,0"))
                                                                                                                           (rule "equal_literals" (formula "120") (term "0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "120"))
                                                                                                                           (rule "Definition_axiom_for_disjointBucketsAreaLemma_in_de_wiesler_BucketPointers" (formula "78") (term "0") (inst "b=b"))
                                                                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                                                                           (rule "expand_inInt" (formula "78") (term "1,0,0"))
                                                                                                                           (rule "replace_int_MIN" (formula "78") (term "0,1,1,0,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "78") (term "1,0,1,0,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "78") (term "1,0,0,1,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "78") (term "2,0,0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "78") (term "1,0,1,1,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "78") (term "2,0,1,1,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "78") (term "2,1,0,1,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "78") (term "2,1,1,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "78") (term "0,2,0,0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "78") (term "0,2,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "78") (term "2,1,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "78") (term "1,2,1,0,1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "78") (term "2,1,1,1,0"))
                                                                                                                           (rule "mul_literals" (formula "78") (term "1,2,1,1,1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "78") (term "2,0,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "78") (term "1,2,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "78") (term "2,0,1,1,0"))
                                                                                                                           (rule "mul_literals" (formula "78") (term "1,2,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "2,1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "2,1,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "2,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "2,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,2,1,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "0,0,2,1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,2,1,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "0,0,2,1,1,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "78") (term "0,2,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "78") (term "0,2,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "78") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,0"))
                                                                                                                           (rule "disjointDefinition" (formula "78") (term "0,1,0"))
                                                                                                                           (rule "disjointDefinition" (formula "78") (term "1,1,0"))
                                                                                                                           (rule "disjointArrayRanges" (formula "78") (term "0,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                                                                           (rule "disjointArrayRanges" (formula "78") (term "1,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "78") (term "1,1,0,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "78") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "add_zero_left" (formula "78") (term "0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "78") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,0,0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "add_zero_left" (formula "78") (term "0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "qeq_literals" (formula "78") (term "1,0,0,0,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "78") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "78") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "qeq_literals" (formula "78") (term "1,0,0,1,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,0,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,0,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,0,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "78") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,0,0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "add_zero_left" (formula "78") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,0,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,0,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,0,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "78") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "78") (term "1,0,0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "78") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "add_zero_left" (formula "78") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "78") (term "0,1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,0,1,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "mul_literals" (formula "78") (term "0,1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "78") (term "0,1,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,0,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,0,1,1,0,0,1,0"))
                                                                                                                           (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "26") (inst "b=b"))
                                                                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "expand_inInt" (formula "26") (term "1,0,0,1"))
                                                                                                                           (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,0,1"))
                                                                                                                           (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,0,1"))
                                                                                                                           (rule "andLeft" (formula "26"))
                                                                                                                           (rule "andLeft" (formula "26"))
                                                                                                                           (rule "andLeft" (formula "26"))
                                                                                                                           (rule "andLeft" (formula "28"))
                                                                                                                           (rule "andLeft" (formula "26"))
                                                                                                                           (rule "andLeft" (formula "26"))
                                                                                                                           (rule "andLeft" (formula "28"))
                                                                                                                           (rule "andLeft" (formula "28"))
                                                                                                                           (rule "andLeft" (formula "28"))
                                                                                                                           (rule "translateJavaAddInt" (formula "32") (term "1"))
                                                                                                                           (rule "translateJavaCastInt" (formula "33") (term "0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "26") (term "1"))
                                                                                                                           (rule "translateJavaMulInt" (formula "27") (term "0"))
                                                                                                                           (rule "translateJavaCastInt" (formula "30") (term "0"))
                                                                                                                           (rule "translateJavaCastInt" (formula "29") (term "1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "27") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                                                                                           (rule "castedGetAny" (formula "33") (term "0"))
                                                                                                                           (rule "castedGetAny" (formula "30") (term "0"))
                                                                                                                           (rule "castedGetAny" (formula "29") (term "1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "28"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "26"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "29"))
                                                                                                                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "49"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "29"))
                                                                                                                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "48"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                                                           (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                                           (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=int::final(bucket_pointers,
           de.wiesler.BucketPointers::$num_buckets)") (inst "elimGcd=Z(2(#))"))
                                                                                                                           (rule "leq_literals" (formula "26") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                                                                           (rule "add_literals" (formula "26") (term "0,0"))
                                                                                                                           (rule "leq_literals" (formula "26") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "inEqSimp_exactShadow2" (formula "46") (ifseqformula "27"))
                                                                                                                           (rule "greater_literals" (formula "46") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "46"))
                                                                                                                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "46") (term "0,0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                                                                                           (rule "mul_literals" (formula "46") (term "0,1"))
                                                                                                                           (rule "inEqSimp_exactShadow2" (formula "111") (ifseqformula "27"))
                                                                                                                           (rule "greater_literals" (formula "111") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "111"))
                                                                                                                           (rule "polySimp_rightDist" (formula "111") (term "1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "111") (term "0,1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "111") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "111") (term "1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "111") (term "0,0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "111"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "111") (term "1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "111") (term "1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "111") (term "1,1"))
                                                                                                                           (rule "mul_literals" (formula "111") (term "0,1"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "49"))
                                                                                                                           (rule "mul_literals" (formula "28") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "28") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "28") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "82"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                                                                                           (rule "add_literals" (formula "28") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "28") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "28"))
                                                                                                                           (rule "true_left" (formula "28"))
                                                                                                                           (rule "inEqSimp_exactShadow2" (formula "26") (ifseqformula "27"))
                                                                                                                           (rule "mul_literals" (formula "26") (term "1,0,0,1"))
                                                                                                                           (rule "greater_literals" (formula "26") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "times_zero_1" (formula "26") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "26") (term "0"))
                                                                                                                           (rule "Contract_axiom_for_elementsToReadCountClassEqSplitBucket_in_BucketPointers" (formula "97") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "11")) (ifInst ""  (formula "183")) (ifInst ""  (formula "184")) (ifInst ""  (formula "182")) (ifInst ""  (formula "11")) (ifInst ""  (formula "98")) (ifInst ""  (formula "19")))
                                                                                                                           (rule "wellFormedAnon" (formula "97") (term "1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "97") (term "1,1,1,1,0,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "97") (term "0,0,1,1,0,0"))
                                                                                                                           (rule "eqSymm" (formula "97") (term "0,1,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "97") (term "1,1,0") (ifseqformula "13"))
                                                                                                                            (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "36")) (ifInst ""  (formula "14")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "97") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "97") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "97") (term "0,0,0") (ifseqformula "46"))
                                                                                                                            (builtin "One Step Simplification" (formula "97"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "97") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "97") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "97") (term "0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "97") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "97") (term "0,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "97") (term "0,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "97") (term "1,1,0,0,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "97") (term "1,0,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "97") (term "0,0,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "97") (term "1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "97") (term "1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "97") (term "0,1,0,1,1,0"))
                                                                                                                           (rule "mul_literals" (formula "97") (term "0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "97") (term "0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "97") (term "0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "97") (term "0,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "97") (term "0,0,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "97") (term "1,1,0,0,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "97") (term "1,0,0,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "97") (term "0,0,0,1,1,0"))
                                                                                                                           (rule "applyEq" (formula "97") (term "0,1,0,0,1,0") (ifseqformula "72"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "97") (term "0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "97") (term "1,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "97") (term "1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "97") (term "0,0,1,0"))
                                                                                                                           (rule "qeq_literals" (formula "97") (term "0,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "97"))
                                                                                                                           (rule "applyEq" (formula "97") (term "1,0,1,0") (ifseqformula "69"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "97") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "97") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "97") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "97") (term "0,0") (ifseqformula "48"))
                                                                                                                            (builtin "One Step Simplification" (formula "97"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "97") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "97") (term "1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0"))
                                                                                                                           (rule "mul_literals" (formula "97") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "97") (term "1,1,0"))
                                                                                                                           (rule "replace_known_left" (formula "97") (term "0") (ifseqformula "93"))
                                                                                                                            (builtin "One Step Simplification" (formula "97"))
                                                                                                                           (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "35"))
                                                                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                                                                           (rule "andLeft" (formula "35"))
                                                                                                                           (rule "andLeft" (formula "35"))
                                                                                                                           (rule "andLeft" (formula "35"))
                                                                                                                           (rule "andLeft" (formula "35"))
                                                                                                                           (rule "andLeft" (formula "35"))
                                                                                                                           (rule "andLeft" (formula "35"))
                                                                                                                           (rule "translateJavaSubInt" (formula "40") (term "0,2,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "40") (term "0,2,1"))
                                                                                                                           (rule "translateJavaMulInt" (formula "37") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "40"))
                                                                                                                           (rule "eqSymm" (formula "37"))
                                                                                                                           (rule "polySimp_elimSub" (formula "40") (term "0,2,0"))
                                                                                                                           (rule "mul_literals" (formula "40") (term "1,0,2,0"))
                                                                                                                           (rule "eqSymm" (formula "40"))
                                                                                                                           (rule "polySimp_elimSub" (formula "40") (term "0,2,0"))
                                                                                                                           (rule "mul_literals" (formula "40") (term "1,0,2,0"))
                                                                                                                           (rule "eqSymm" (formula "40"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "40") (term "0,2,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "40") (term "0,2,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "35"))
                                                                                                                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "42"))
                                                                                                                           (rule "applyEq" (formula "35") (term "0") (ifseqformula "42"))
                                                                                                                           (rule "applyEq" (formula "37") (term "1") (ifseqformula "42"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "35"))
                                                                                                                           (rule "leq_literals" (formula "27") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "true_left" (formula "27"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "119") (ifseqformula "35"))
                                                                                                                           (rule "polySimp_rightDist" (formula "119") (term "0,0"))
                                                                                                                           (rule "mul_literals" (formula "119") (term "0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "119") (term "0"))
                                                                                                                           (rule "add_literals" (formula "119") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "119"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "119") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "119") (term "0"))
                                                                                                                           (rule "inEqSimp_subsumption0" (formula "116") (ifseqformula "119"))
                                                                                                                           (rule "leq_literals" (formula "116") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "116"))
                                                                                                                           (rule "true_left" (formula "116"))
                                                                                                                           (rule "inEqSimp_exactShadow2" (formula "34") (ifseqformula "27"))
                                                                                                                           (rule "greater_literals" (formula "34") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                                                                           (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "34") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                                                                                           (rule "mul_literals" (formula "34") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "34"))
                                                                                                                           (rule "leq_literals" (formula "26") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "true_left" (formula "26"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "35"))
                                                                                                                           (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                                                                                                           (rule "mul_literals" (formula "53") (term "0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                                                                           (rule "add_literals" (formula "53") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                                                           (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "53"))
                                                                                                                           (rule "leq_literals" (formula "15") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "15"))
                                                                                                                           (rule "true_left" (formula "15"))
                                                                                                                           (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "11"))
                                                                                                                           (rule "notLeft" (formula "11"))
                                                                                                                           (rule "replace_known_right" (formula "136") (term "0,0,0,0") (ifseqformula "160"))
                                                                                                                            (builtin "One Step Simplification" (formula "136"))
                                                                                                                           (rule "replace_known_right" (formula "135") (term "0,0,0,0") (ifseqformula "160"))
                                                                                                                            (builtin "One Step Simplification" (formula "135"))
                                                                                                                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "160"))
                                                                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                                                                           (rule "replace_known_left" (formula "135") (term "0,0,0") (ifseqformula "4"))
                                                                                                                            (builtin "One Step Simplification" (formula "135"))
                                                                                                                           (rule "applyEqReverse" (formula "136") (term "2,0") (ifseqformula "135"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "135"))
                                                                                                                           (rule "replace_known_left" (formula "135") (term "0,0,0,0") (ifseqformula "4"))
                                                                                                                            (builtin "One Step Simplification" (formula "135"))
                                                                                                                           (rule "applyEqReverse" (formula "136") (term "0,4,0") (ifseqformula "135"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "135"))
                                                                                                                           (rule "polySimp_addComm0" (formula "135") (term "4,0"))
                                                                                                                           (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "9") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "9") (term "0,1,0") (ifseqformula "186"))
                                                                                                                            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "23")) (ifInst ""  (formula "14")) (ifInst ""  (formula "18")) (ifInst ""  (formula "23")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0"))
                                                                                                                           (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "9"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "9") (term "0,0"))
                                                                                                                           (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "53"))
                                                                                                                            (builtin "One Step Simplification" (formula "9"))
                                                                                                                           (rule "andLeft" (formula "9"))
                                                                                                                           (rule "andLeft" (formula "10"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "80"))
                                                                                                                           (rule "leq_literals" (formula "9") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "9"))
                                                                                                                           (rule "true_left" (formula "9"))
                                                                                                                           (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "81") (inst "b=b"))
                                                                                                                            (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "28")) (ifInst ""  (formula "31")))
                                                                                                                           (rule "expand_inInt" (formula "81") (term "1,0,0,1"))
                                                                                                                           (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,0,1"))
                                                                                                                           (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,0,1"))
                                                                                                                           (rule "andLeft" (formula "81"))
                                                                                                                           (rule "andLeft" (formula "81"))
                                                                                                                           (rule "andLeft" (formula "81"))
                                                                                                                           (rule "andLeft" (formula "81"))
                                                                                                                           (rule "andLeft" (formula "82"))
                                                                                                                           (rule "andLeft" (formula "81"))
                                                                                                                           (rule "andLeft" (formula "83"))
                                                                                                                           (rule "translateJavaCastInt" (formula "87") (term "0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "86") (term "1"))
                                                                                                                           (rule "translateJavaCastInt" (formula "85") (term "0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "81") (term "1"))
                                                                                                                           (rule "translateJavaMulInt" (formula "82") (term "0"))
                                                                                                                           (rule "translateJavaCastInt" (formula "84") (term "1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "81") (term "1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "82") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "85") (term "1"))
                                                                                                                           (rule "castedGetAny" (formula "85") (term "0"))
                                                                                                                           (rule "castedGetAny" (formula "84") (term "0"))
                                                                                                                           (rule "castedGetAny" (formula "83") (term "1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "85") (term "1,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "82"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "81"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "82"))
                                                                                                                           (rule "applyEq" (formula "83") (term "0") (ifseqformula "55"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "83"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "83") (term "1,0"))
                                                                                                                           (rule "polySimp_mulAssoc" (formula "83") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "83") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "83") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "83") (term "0"))
                                                                                                                           (rule "applyEq" (formula "82") (term "0") (ifseqformula "55"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "82"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1,1,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "83") (term "1,1,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "83") (term "0,1,1,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0,0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "82"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "82") (term "0"))
                                                                                                                           (rule "inEqSimp_subsumption6" (formula "81") (ifseqformula "34"))
                                                                                                                           (rule "greater_literals" (formula "81") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "81"))
                                                                                                                           (rule "mul_literals" (formula "81") (term "1,0"))
                                                                                                                           (rule "leq_literals" (formula "81") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "81"))
                                                                                                                           (rule "true_left" (formula "81"))
                                                                                                                           (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "11") (term "1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "11") (term "1,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "11") (term "1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "11"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                                                                                                           (rule "Contract_axiom_for_elementsToReadCountElementSplitBucket_in_BucketPointers" (formula "105") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "190")) (ifInst ""  (formula "188")) (ifInst ""  (formula "106")) (ifInst ""  (formula "103")) (ifInst ""  (formula "19")))
                                                                                                                           (rule "wellFormedAnon" (formula "105") (term "1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "105") (term "0,0,0,1,0,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "105") (term "1,1,0,1,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "105") (term "0,1,0") (ifseqformula "15"))
                                                                                                                            (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "14")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "105") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "105") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "105") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "105") (term "0,0,0") (ifseqformula "51"))
                                                                                                                            (builtin "One Step Simplification" (formula "105"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "105") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "105") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "105") (term "0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "105") (term "0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "105") (term "0,0,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "105") (term "1,1,0,0,0,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "105") (term "1,0,0,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "105") (term "0,0,0,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "105") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "105") (term "1,0,1,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "105") (term "1,0,1,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "105") (term "0,1,0,1,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "105") (term "0,0,1,0,1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "105") (term "0,1,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "105") (term "0,0,1,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "105") (term "0,0,0,1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "105") (term "0,0,0,0,1,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "105") (term "0,0,0,1,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "105") (term "1,1,0,0,0,1,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "105") (term "1,0,0,0,1,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "105") (term "0,0,0,1,0,1,0"))
                                                                                                                           (rule "applyEq" (formula "105") (term "1,0,1,0,1,0") (ifseqformula "75"))
                                                                                                                           (rule "applyEq" (formula "105") (term "0,1,0,0,0,1,0") (ifseqformula "78"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "105") (term "0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "105") (term "1,1,0,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "105") (term "1,0,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "105") (term "0,0,0,1,0"))
                                                                                                                           (rule "qeq_literals" (formula "105") (term "0,0,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "105"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "105") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "105") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "105") (term "0,0") (ifseqformula "54"))
                                                                                                                            (builtin "One Step Simplification" (formula "105"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "105") (term "0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "105") (term "1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "105") (term "1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "105") (term "0,1,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "105") (term "0,0") (ifseqformula "99"))
                                                                                                                            (builtin "One Step Simplification" (formula "105"))
                                                                                                                           (rule "true_left" (formula "105"))
                                                                                                                           (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "124"))
                                                                                                                           (rule "andLeft" (formula "124"))
                                                                                                                           (rule "notLeft" (formula "124"))
                                                                                                                           (rule "notLeft" (formula "124"))
                                                                                                                           (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "159"))
                                                                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                                                                           (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "160"))
                                                                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                                                                           (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "75") (term "1"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "1,0,0") (ifseqformula "69"))
                                                                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "83")) (ifInst ""  (formula "189")) (ifInst ""  (formula "83")) (ifInst ""  (formula "134")) (ifInst ""  (formula "136")) (ifInst ""  (formula "19")))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "75") (term "1,0") (ifseqformula "69"))
                                                                                                                           (rule "wellFormedAnon" (formula "75") (term "0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "75") (term "2,0,1,0,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "75") (term "2,1,1,0,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "1,1,0") (ifseqformula "68"))
                                                                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                                                                                                                           (rule "polySimp_addComm0" (formula "75") (term "2,1,1,0,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "1,0,0,1") (ifseqformula "132"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "polySimp_addComm0" (formula "75") (term "2,0,1,0,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "75") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "75") (term "0,1,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "75") (term "0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "0,1,1") (ifseqformula "135"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "0,0") (ifseqformula "51"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "75") (term "1,0,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "1,0,0,1") (ifseqformula "131"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "75") (term "1,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "1,0,1") (ifseqformula "133"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "75") (term "0,1"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "0,1") (ifseqformula "129"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "75") (term "0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "75") (term "0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "75") (term "0,0"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "0") (ifseqformula "54"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "Contract_axiom_for_disjointBucketsLemma_in_BucketPointers" (formula "63") (term "0"))
                                                                                                                           (rule "replace_known_left" (formula "63") (term "1,0,0,0") (ifseqformula "15"))
                                                                                                                            (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "24")) (ifInst ""  (formula "19")) (ifInst ""  (formula "190")) (ifInst ""  (formula "24")) (ifInst ""  (formula "64")) (ifInst ""  (formula "10")))
                                                                                                                           (rule "true_left" (formula "63"))
                                                                                                                           (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "13"))
                                                                                                                           (rule "andLeft" (formula "13"))
                                                                                                                           (rule "notLeft" (formula "14"))
                                                                                                                           (rule "notLeft" (formula "13"))
                                                                                                                           (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "72") (term "1,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "72") (term "1,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "72") (term "2,0,1,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "72") (term "1,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "72") (term "2,0,1,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "72") (term "1"))
                                                                                                                           (rule "applyEq" (formula "72") (term "0,1,1") (ifseqformula "71"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "72") (term "1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "72") (term "1,1"))
                                                                                                                           (rule "mul_literals" (formula "72") (term "0,1,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "72") (term "1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "72") (term "0,1"))
                                                                                                                           (rule "add_literals" (formula "72") (term "0,0,1"))
                                                                                                                           (rule "add_zero_left" (formula "72") (term "0,1"))
                                                                                                                           (rule "Definition_axiom_for_disjointBucketsAreaLemma_in_de_wiesler_BucketPointers" (formula "94") (term "0") (inst "b=b"))
                                                                                                                            (builtin "One Step Simplification" (formula "94"))
                                                                                                                           (rule "expand_inInt" (formula "94") (term "1,0,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "94") (term "1,0,1,0,0"))
                                                                                                                           (rule "replace_int_MIN" (formula "94") (term "0,1,1,0,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "94") (term "2,0,1,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "94") (term "1,0,0,1,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "94") (term "2,1,1,1,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "94") (term "2,0,0,1,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "94") (term "2,1,0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "94") (term "1,0,1,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "94") (term "0,2,0,1,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "94") (term "0,2,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "94") (term "2,1,1,1,0"))
                                                                                                                           (rule "mul_literals" (formula "94") (term "1,2,1,1,1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "94") (term "2,1,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "94") (term "1,2,1,0,1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "94") (term "2,0,1,1,0"))
                                                                                                                           (rule "mul_literals" (formula "94") (term "1,2,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "94") (term "2,0,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "94") (term "1,2,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "2,1,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "2,1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "2,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "2,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,2,1,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "0,0,2,1,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,2,1,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "0,0,2,1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "94") (term "0,2,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "94") (term "0,2,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,0,0"))
                                                                                                                           (rule "disjointDefinition" (formula "94") (term "1,1,0"))
                                                                                                                           (rule "disjointDefinition" (formula "94") (term "0,1,0"))
                                                                                                                           (rule "disjointArrayRanges" (formula "94") (term "1,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "94"))
                                                                                                                           (rule "disjointArrayRanges" (formula "94") (term "0,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "94"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "94") (term "1,1,0,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "94") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,0,0,0,0,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,0,0,0,0,0,1,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "94") (term "0,0,0,0,0,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "94") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "add_zero_left" (formula "94") (term "0,0,0,1,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "94") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,1,0,0,1,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "94") (term "0,1,0,0,1,1,0"))
                                                                                                                           (rule "qeq_literals" (formula "94") (term "1,0,0,1,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "94"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "94") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,0,0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "add_zero_left" (formula "94") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,0,0,0,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,0,0,0,0,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,0,0,0,0,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "94") (term "0,0,0,0,0,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "94") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,0,0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "add_zero_left" (formula "94") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "94") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,1,0,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "94") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "qeq_literals" (formula "94") (term "1,0,0,0,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "94"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "94") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,0,0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "add_zero_left" (formula "94") (term "0,0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "94") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "94") (term "1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "0,1,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "94") (term "0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "94") (term "1,1,0,0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "94") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "94") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "mul_literals" (formula "94") (term "0,1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "94") (term "1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "0,1,1,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "1,0,1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "1,0,1,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "94") (term "0,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "0,0,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "0,0,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "94") (term "0,1,0,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "94") (term "0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "0,0,0,1,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "1,0,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "1,0,1,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "94") (term "0,1,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "94") (term "0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "0,0,0,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "94") (term "1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "0,1,1,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "94") (term "1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "94") (term "0,1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,1,0,0,1,0"))
                                                                                                                           (rule "Definition_axiom_for_isClassifiedAs_in_de_wiesler_Classifier" (formula "121") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "121"))
                                                                                                                           (rule "translateJavaMod" (formula "121") (term "0,0,0,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "121") (term "1,0,1,2"))
                                                                                                                           (rule "translateJavaDivInt" (formula "121") (term "0,2,0,0,2,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "121") (term "1,0,1,1,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "121") (term "1,1,0,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "121") (term "0,2,0,1,0,1,1"))
                                                                                                                           (rule "translateJavaDivInt" (formula "121") (term "0,2,1,1,1,1,1"))
                                                                                                                           (rule "translateJavaDivInt" (formula "121") (term "1,0,1,2,1"))
                                                                                                                           (rule "translateJavaDivInt" (formula "121") (term "0,0,2,0,1,1,2,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "121") (term "0,2,0,1,0,2"))
                                                                                                                           (rule "eqSymm" (formula "121") (term "1,0,1"))
                                                                                                                           (rule "translateJavaDivInt" (formula "121") (term "0,0,2,0,1,0,1,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "121") (term "0,2,0,1,1,2,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "121") (term "1,0,1,2"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "1,1,0,1,2"))
                                                                                                                           (rule "polySimp_elimSub" (formula "121") (term "1,0,1,1,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "1,1,0,1,1,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "121") (term "0,2,0,1,0,2"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "1,0,2,0,1,0,2"))
                                                                                                                           (rule "polySimp_elimSub" (formula "121") (term "0,1,0,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "1,0,1,0,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "121") (term "0,2,0,1,0,1,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "1,0,2,0,1,0,1,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "121") (term "0,2,0,1,1,2,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "1,0,2,0,1,1,2,1"))
                                                                                                                           (rule "polySimp_homoEq" (formula "121") (term "1,0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,0,1,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "121") (term "1,0,1,2"))
                                                                                                                           (rule "polySimp_addComm0" (formula "121") (term "1,0,1,1,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "121") (term "0,2,0,1,0,2"))
                                                                                                                           (rule "polySimp_addComm0" (formula "121") (term "0,2,0,1,0,1,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "121") (term "0,2,0,1,1,2,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "121") (term "1,1,0,1,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,0,1,0,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,0,1,0,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "121") (term "0,0,1,1"))
                                                                                                                           (rule "add_zero_right" (formula "121") (term "0,0,0,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,0,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "121") (term "0,0,2"))
                                                                                                                           (rule "add_zero_right" (formula "121") (term "0,0,0,2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,0,2"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "121") (term "0,1,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "121") (term "0,0,1,0,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "121") (term "1,1,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,1,1,1,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "121") (term "0,1,1,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "121") (term "0,1,2,1"))
                                                                                                                           (rule "add_zero_right" (formula "121") (term "0,0,1,2,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,1,2,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "121") (term "0,1,2"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,0,0,0,1,2"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,0,0,0,1,2"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "121") (term "0,0,0,1,2"))
                                                                                                                           (rule "add_literals" (formula "121") (term "0,0,0,0,1,2"))
                                                                                                                           (rule "polySimp_addComm1" (formula "121") (term "0,0,1,2"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "121") (term "0,1,1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,0,0,0,1,1,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,0,0,0,1,1,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "121") (term "0,0,0,1,1,1"))
                                                                                                                           (rule "add_literals" (formula "121") (term "0,0,0,0,1,1,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "121") (term "0,0,1,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "121") (term "1,0,2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,1,0,2"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "121") (term "1,0,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,1,0,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "121") (term "1,1,2,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,1,1,2,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "121") (term "1,1,2"))
                                                                                                                           (rule "applyEq" (formula "121") (term "0,1,0,0,1,1,1") (ifseqformula "40"))
                                                                                                                           (rule "applyEq" (formula "121") (term "0,1,0,1,0,1") (ifseqformula "40"))
                                                                                                                           (rule "applyEq" (formula "121") (term "0,1,0,0,1,2") (ifseqformula "40"))
                                                                                                                           (rule "jmod_axiom" (formula "121") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "1,0,0,0,1"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "121") (term "1,0,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "0,1,0,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "0,1,0,1"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "121") (term "0,0,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "0,0,0,1"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "121") (term "0,0,1,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "0,0,0,1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "0,0,0,1,1"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "121") (term "0,0,2"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "0,0,0,2"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "0,0,0,2"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "121") (term "1,1,1,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "0,1,1,1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "0,1,1,1,1"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "121") (term "0,1,2,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "0,0,1,2,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "0,0,1,2,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "121") (term "1,0,2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,1,0,2"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,1,0,2"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,0,2"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,1,0,2"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "1,1,1,0,2"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "121") (term "1,0,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,1,0,1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,1,0,1,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,0,1,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,1,0,1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "1,1,1,0,1,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "121") (term "1,1,2,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,1,1,2,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,1,1,2,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,1,2,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,1,1,2,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "1,1,1,1,2,1"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "121") (term "0,1,1,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "0,0,1,1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "0,0,1,1,1"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "121") (term "0,1,2"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "0,0,1,2"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "0,0,1,2"))
                                                                                                                           (rule "pullOutSelect" (formula "121") (term "0,0,2,1") (inst "selectSK=arr_3"))
                                                                                                                           (rule "applyEq" (formula "122") (term "0,1,1,1,1") (ifseqformula "121"))
                                                                                                                           (rule "simplifySelectOfAnonEQ" (formula "121") (ifseqformula "68"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "160")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "eqSymm" (formula "122") (term "0,2,1"))
                                                                                                                           (rule "elementOfSingleton" (formula "121") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "183")))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "121"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "160")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "121") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "183")))
                                                                                                                           (rule "applyEqReverse" (formula "122") (term "0,1,1,1,1") (ifseqformula "121"))
                                                                                                                           (rule "applyEqReverse" (formula "122") (term "1,0,2,1") (ifseqformula "121"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "121"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "121") (term "1,1,1,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "121") (term "0,1,1,1,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "121") (term "1,1,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,1,1,1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,1,1,1,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,1,1,1,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,1,1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "1,1,1,1,1,1"))
                                                                                                                           (rule "pullOutSelect" (formula "121") (term "0,1,1,2") (inst "selectSK=arr_4"))
                                                                                                                           (rule "simplifySelectOfAnonEQ" (formula "121") (ifseqformula "68"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "160")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "121") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "183")))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "121"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "160")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "121") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "183")))
                                                                                                                           (rule "applyEqReverse" (formula "122") (term "0,1,1,2") (ifseqformula "121"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "121"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "121") (term "1,1,2"))
                                                                                                                           (rule "pullOutSelect" (formula "121") (term "0,1,0,2") (inst "selectSK=arr_5"))
                                                                                                                           (rule "simplifySelectOfAnonEQ" (formula "121") (ifseqformula "68"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "160")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "121") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "183")))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "121"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "160")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "121") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "183")))
                                                                                                                           (rule "applyEqReverse" (formula "122") (term "0,1,0,2") (ifseqformula "121"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "121"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "121") (term "1,0,2"))
                                                                                                                           (rule "polySimp_addComm1" (formula "121") (term "0,1,0,2"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "121") (term "1,0,2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,1,0,2"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,1,0,2"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,0,2"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,1,0,2"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "1,1,1,0,2"))
                                                                                                                           (rule "pullOutSelect" (formula "121") (term "0,1,0,1,1") (inst "selectSK=arr_6"))
                                                                                                                           (rule "applyEq" (formula "122") (term "0,1,1,2,1") (ifseqformula "121"))
                                                                                                                           (rule "simplifySelectOfAnonEQ" (formula "121") (ifseqformula "68"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "160")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "121") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "183")))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "121"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "160")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "121") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "183")))
                                                                                                                           (rule "applyEqReverse" (formula "122") (term "0,1,1,2,1") (ifseqformula "121"))
                                                                                                                           (rule "applyEqReverse" (formula "122") (term "0,1,0,1,1") (ifseqformula "121"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "121"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "121") (term "1,1,2,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "121") (term "0,1,1,2,1"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "121") (term "1,0,1,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "121") (term "0,1,0,1,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "121") (term "1,1,2,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,1,1,2,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,1,1,2,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,1,2,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,1,1,2,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "1,1,1,1,2,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "121") (term "1,0,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "121") (term "1,1,0,1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "121") (term "1,1,0,1,1"))
                                                                                                                           (rule "mul_literals" (formula "121") (term "0,1,1,0,1,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,0,1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "121") (term "1,1,1,0,1,1"))
                                                                                                                           (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "56") (term "0") (inst "i=i"))
                                                                                                                            (builtin "One Step Simplification" (formula "56"))
                                                                                                                           (rule "expand_inInt" (formula "56") (term "1,0,0"))
                                                                                                                           (rule "replace_int_MIN" (formula "56") (term "0,1,1,0,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "56") (term "1,0,1,0,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "56") (term "0,0,1,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "56") (term "1,1,0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "56") (term "1,1,0,0,0"))
                                                                                                                           (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "61") (term "1"))
                                                                                                                            (builtin "One Step Simplification" (formula "61"))
                                                                                                                           (rule "translateJavaUnaryMinusInt" (formula "61") (term "1,1"))
                                                                                                                           (rule "neg_literal" (formula "61") (term "1,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "61") (term "0,0,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "61") (term "0,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "61") (term "0,1"))
                                                                                                                           (rule "mul_literals" (formula "61") (term "1,0,1"))
                                                                                                                           (rule "polySimp_addLiterals" (formula "61") (term "0,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "61") (term "0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "61") (term "0,0,1"))
                                                                                                                           (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "106") (term "1,0"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "1,0,0") (ifseqformula "68"))
                                                                                                                            (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "82")) (ifInst ""  (formula "189")) (ifInst ""  (formula "82")) (ifInst ""  (formula "134")) (ifInst ""  (formula "136")) (ifInst ""  (formula "74")) (ifInst ""  (formula "18")))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "106") (term "1,0") (ifseqformula "68"))
                                                                                                                           (rule "wellFormedAnon" (formula "106") (term "0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "106") (term "2,1,1,0,0,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "106") (term "2,0,1,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "106") (term "1,1,0") (ifseqformula "67"))
                                                                                                                            (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                           (rule "polySimp_addComm0" (formula "106") (term "2,0,1,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "106") (term "2,1,1,0,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "106") (term "1,0,0,1") (ifseqformula "132"))
                                                                                                                            (builtin "One Step Simplification" (formula "106"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "106") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "106") (term "0,1,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "106") (term "0,0,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "106") (term "0,0,0,1") (ifseqformula "129"))
                                                                                                                            (builtin "One Step Simplification" (formula "106"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "106") (term "1,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "106") (term "1,0,1") (ifseqformula "133"))
                                                                                                                            (builtin "One Step Simplification" (formula "106"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "106") (term "0,0"))
                                                                                                                           (rule "replace_known_left" (formula "106") (term "0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "106"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "106") (term "0,1"))
                                                                                                                           (rule "replace_known_left" (formula "106") (term "0,1") (ifseqformula "131"))
                                                                                                                            (builtin "One Step Simplification" (formula "106"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "106") (term "1"))
                                                                                                                           (rule "replace_known_left" (formula "106") (term "1") (ifseqformula "135"))
                                                                                                                            (builtin "One Step Simplification" (formula "106"))
                                                                                                                           (rule "true_left" (formula "106"))
                                                                                                                           (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "106") (term "1,0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "106") (term "0,2,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "106") (term "0,2,1,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "106") (term "1,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "106") (term "1,0"))
                                                                                                                           (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "158") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "158"))
                                                                                                                           (rule "translateJavaAddInt" (formula "158") (term "4,0,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "158") (term "3,0,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "158") (term "0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "158") (term "1,0,0,0"))
                                                                                                                           (rule "applyEq" (formula "158") (term "1,0,0") (ifseqformula "71"))
                                                                                                                           (rule "polySimp_addComm1" (formula "158") (term "0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "158") (term "0,0,0"))
                                                                                                                           (rule "add_literals" (formula "158") (term "0,0,0,0"))
                                                                                                                           (rule "applyEq" (formula "158") (term "1,3,0,1") (ifseqformula "71"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "158") (term "3,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "158") (term "0,3,0,1"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "158") (term "0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "158") (term "0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "158") (term "0,0"))
                                                                                                                           (rule "Contract_axiom_for_countClassOfSliceEqLemma_in_Classifier" (formula "151") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "151") (ifInst ""  (formula "191")) (ifInst ""  (formula "190")) (ifInst ""  (formula "152")) (ifInst ""  (formula "17")))
                                                                                                                           (rule "wellFormedAnon" (formula "151") (term "1,0"))
                                                                                                                           (rule "replace_known_left" (formula "151") (term "1,1,0") (ifseqformula "13"))
                                                                                                                            (builtin "One Step Simplification" (formula "151") (ifInst ""  (formula "14")))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "151") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "151") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "151") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "151") (term "0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "151") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "151") (term "0,0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "151") (term "0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "151") (term "1,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "151") (term "1,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "151") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "151") (term "0,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "151") (term "1,1,0,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "151") (term "1,0,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "151") (term "0,0,1,0"))
                                                                                                                           (rule "qeq_literals" (formula "151") (term "0,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "151"))
                                                                                                                           (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "111") (term "1,0,0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "111") (term "0,2,1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "111") (term "0,2,1,0,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "111") (term "1,0,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "111") (term "1,0,0"))
                                                                                                                           (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "140") (term "1,5,0"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "140") (term "1,0,0") (ifseqformula "68"))
                                                                                                                            (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "82")) (ifInst ""  (formula "190")) (ifInst ""  (formula "82")) (ifInst ""  (formula "133")) (ifInst ""  (formula "135")) (ifInst ""  (formula "74")) (ifInst ""  (formula "18")))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "140") (term "1,0") (ifseqformula "68"))
                                                                                                                           (rule "wellFormedAnon" (formula "140") (term "0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "140") (term "2,1,1,0,0,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "140") (term "2,0,1,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "140") (term "1,0,1,0") (ifseqformula "13"))
                                                                                                                            (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "14")) (ifInst ""  (formula "67")))
                                                                                                                           (rule "polySimp_addComm0" (formula "140") (term "2,1,1,0,0,1"))
                                                                                                                           (rule "replace_known_left" (formula "140") (term "1,0,0,1") (ifseqformula "131"))
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                           (rule "polySimp_addComm0" (formula "140") (term "2,0,1,0,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "140") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "140") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "140") (term "0,1,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "140") (term "1,1"))
                                                                                                                           (rule "replace_known_left" (formula "140") (term "1,1") (ifseqformula "134"))
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "140") (term "1,1"))
                                                                                                                           (rule "replace_known_left" (formula "140") (term "1,1") (ifseqformula "132"))
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "140") (term "0,0"))
                                                                                                                           (rule "replace_known_left" (formula "140") (term "0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "140") (term "0,1"))
                                                                                                                           (rule "replace_known_left" (formula "140") (term "0,1") (ifseqformula "128"))
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "140") (term "1"))
                                                                                                                           (rule "replace_known_left" (formula "140") (term "1") (ifseqformula "130"))
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                           (rule "true_left" (formula "140"))
                                                                                                                           (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "140") (term "1,5,0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "140") (term "0,2,1,5,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "140") (term "0,2,1,5,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "140") (term "1,5,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "140") (term "1,5,0"))
                                                                                                                           (rule "Definition_axiom_for_disjointBucketsLemma_in_de_wiesler_BucketPointers" (formula "62") (term "0") (inst "b=b"))
                                                                                                                            (builtin "One Step Simplification" (formula "62"))
                                                                                                                           (rule "expand_inInt" (formula "62") (term "1,0,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "62") (term "1,0,1,0,0"))
                                                                                                                           (rule "replace_int_MIN" (formula "62") (term "0,1,1,0,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "62") (term "2,0,1,0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "62") (term "2,0,1,1,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "62") (term "2,0,1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "62") (term "2,0,1,1,1,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_gtToGeq" (formula "62") (term "0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,1,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "62") (term "1,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "62") (term "1,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "62") (term "1,0,1,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,1,1,0"))
                                                                                                                           (rule "mul_literals" (formula "62") (term "0,1,0,1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "62") (term "1,1,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,1,0"))
                                                                                                                           (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "75") (term "1"))
                                                                                                                           (rule "translateJavaMulInt" (formula "75") (term "0,2,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "75") (term "0,2,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "75") (term "1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "75") (term "1"))
                                                                                                                           (rule "Contract_axiom_for_remainingWriteCountOfBucket_in_BucketPointers" (formula "72") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "190")) (ifInst ""  (formula "104")) (ifInst ""  (formula "18")))
                                                                                                                           (rule "wellFormedAnon" (formula "72") (term "1,0"))
                                                                                                                           (rule "replace_known_left" (formula "72") (term "1,1,0") (ifseqformula "13"))
                                                                                                                            (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "14")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "72") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "72") (term "0,0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "72") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "72") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "72") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "53"))
                                                                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                                                                           (rule "true_left" (formula "72"))
                                                                                                                           (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "72") (term "0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "72") (term "2,0,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "72") (term "0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "72") (term "0"))
                                                                                                                           (rule "polySimp_homoEq" (formula "72"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "72") (term "1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "72") (term "2,0,1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "72") (term "1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "72") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "72") (term "0"))
                                                                                                                           (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "78"))
                                                                                                                           (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor2" (formula "72") (term "0,0,0"))
                                                                                                                           (rule "add_literals" (formula "72") (term "1,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "72") (term "0,0,0"))
                                                                                                                           (rule "add_zero_left" (formula "72") (term "0,0"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "72"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                                                                           (rule "Definition_axiom_for_elementsToReadCountClassEqSplitBucket_in_de_wiesler_BucketPointers" (formula "104") (term "0") (inst "bucket=bucket") (inst "b=b"))
                                                                                                                            (builtin "One Step Simplification" (formula "104"))
                                                                                                                           (rule "expand_inInt" (formula "104") (term "1,0,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "104") (term "1,0,1,0,0"))
                                                                                                                           (rule "replace_int_MIN" (formula "104") (term "0,1,1,0,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "104") (term "4,1,2,0,0,1,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "104") (term "3,1,1,1,0"))
                                                                                                                           (rule "translateJavaCastInt" (formula "104") (term "0,1,1,0"))
                                                                                                                           (rule "eqSymm" (formula "104") (term "1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "104") (term "0,1,0"))
                                                                                                                           (rule "polySimp_homoEq" (formula "104") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "104") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "104") (term "1,1,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "104") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "104") (term "0,1,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "104") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "104") (term "0,0,1,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "104") (term "1,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "104") (term "0,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "104") (term "1,1,0,0"))
                                                                                                                           (rule "applyEq" (formula "104") (term "1,3,0,0,0,0,1,0") (ifseqformula "78"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "104") (term "1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "104") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "104") (term "0,1,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "1,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "104") (term "1,1,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "104") (term "1,1,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "104") (term "1,1,1,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "104") (term "0,1,1,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "104") (term "1,1,1,0,0,0"))
                                                                                                                           (rule "Definition_axiom_for_classOfClassifiedBlockFromFirst_in_de_wiesler_Classifier" (formula "144") (term "0"))
                                                                                                                           (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "80") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "190")) (ifInst ""  (formula "104")) (ifInst ""  (formula "18")))
                                                                                                                           (rule "wellFormedAnon" (formula "80") (term "1,0"))
                                                                                                                           (rule "replace_known_left" (formula "80") (term "1,1,0") (ifseqformula "13"))
                                                                                                                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "14")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "80") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "80") (term "0,0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "80"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "80") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "80") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "80") (term "0,0") (ifseqformula "53"))
                                                                                                                            (builtin "One Step Simplification" (formula "80"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "80") (term "0,1,1") (ifseqformula "81"))
                                                                                                                           (rule "leq_literals" (formula "80") (term "0,0,1,1"))
                                                                                                                            (builtin "One Step Simplification" (formula "80"))
                                                                                                                           (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "81") (term "0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "81") (term "1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "81") (term "1,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0"))
                                                                                                                           (rule "applyEq" (formula "81") (term "0,1,1,0") (ifseqformula "78"))
                                                                                                                           (rule "polySimp_addComm0" (formula "81") (term "1,0"))
                                                                                                                           (rule "applyEq" (formula "81") (term "1,0,0,0") (ifseqformula "78"))
                                                                                                                           (rule "polySimp_addComm1" (formula "81") (term "0,0,0"))
                                                                                                                           (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "75"))
                                                                                                                           (rule "applyEq" (formula "81") (term "0,1,0,0,0") (ifseqformula "75"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "81") (term "0,0,0"))
                                                                                                                           (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "83"))
                                                                                                                           (rule "notLeft" (formula "83"))
                                                                                                                           (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "71") (term "0"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "1,0,0") (ifseqformula "68"))
                                                                                                                            (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "190")) (ifInst ""  (formula "75")) (ifInst ""  (formula "18")))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "71") (term "1,0") (ifseqformula "68"))
                                                                                                                           (rule "wellFormedAnon" (formula "71") (term "0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "71") (term "2,0,1,0,1,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "71") (term "2,1,1,0,0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "71") (term "1,1,0") (ifseqformula "67"))
                                                                                                                            (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                           (rule "polySimp_addComm0" (formula "71") (term "2,1,1,0,0,1,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "71") (term "2,0,1,0,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0,0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "71") (term "0,0,0,0,1,1") (ifseqformula "129"))
                                                                                                                            (builtin "One Step Simplification" (formula "71"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0,1,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "71") (term "1,0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "71") (term "1,0,1,1") (ifseqformula "133"))
                                                                                                                            (builtin "One Step Simplification" (formula "71"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "71") (term "0,0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "71"))
                                                                                                                           (rule "applyEq" (formula "71") (term "0,0,0,1,1") (ifseqformula "72"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "71") (term "0,0,1,1"))
                                                                                                                           (rule "applyEq" (formula "71") (term "0,0,1,1,1") (ifseqformula "72"))
                                                                                                                           (rule "applyEq" (formula "71") (term "0,1,0,1,1") (ifseqformula "72"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "71") (term "1,0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "71") (term "1,0,1,1") (ifseqformula "99"))
                                                                                                                            (builtin "One Step Simplification" (formula "71"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "71") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "71") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "71") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "71") (term "0,0") (ifseqformula "53"))
                                                                                                                            (builtin "One Step Simplification" (formula "71"))
                                                                                                                           (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "87") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "87"))
                                                                                                                           (rule "translateJavaMod" (formula "87") (term "0"))
                                                                                                                           (rule "jmod_axiom" (formula "87") (term "0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "87") (term "1,0"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "87"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "87") (term "0"))
                                                                                                                           (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "8") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                                                                           (rule "translateJavaAddInt" (formula "8") (term "0,4,0,0,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "8") (term "3,0,0,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "8") (term "0,0,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "8") (term "3,0,2"))
                                                                                                                           (rule "translateJavaAddInt" (formula "8") (term "4,0,2"))
                                                                                                                           (rule "translateJavaSubInt" (formula "8") (term "4,0,0,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "8") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "8") (term "4,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "8") (term "1,4,0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "8") (term "4,0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "8") (term "0,4,0,0,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0"))
                                                                                                                           (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "74"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "8") (term "0,1,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "8") (term "0,1,0"))
                                                                                                                           (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                                                                                           (rule "applyEq" (formula "8") (term "1,4,0,0,1") (ifseqformula "79"))
                                                                                                                           (rule "applyEq" (formula "8") (term "1,4,0,2") (ifseqformula "79"))
                                                                                                                           (rule "applyEq" (formula "8") (term "0,1,0,0,0") (ifseqformula "79"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "8") (term "0,0") (ifseqformula "111"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                                                                           (rule "leq_literals" (formula "8") (term "0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                                                                           (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "23"))
                                                                                                                           (rule "notLeft" (formula "23"))
                                                                                                                           (rule "Definition_axiom_for_elementsToReadCountElementSplitBucket_in_de_wiesler_BucketPointers" (formula "105") (term "0") (inst "element=element") (inst "b=b"))
                                                                                                                            (builtin "One Step Simplification" (formula "105"))
                                                                                                                           (rule "expand_inInt" (formula "105") (term "0,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "105") (term "1,0,0,0"))
                                                                                                                           (rule "replace_int_MIN" (formula "105") (term "0,1,0,0"))
                                                                                                                           (rule "eqSymm" (formula "105") (term "1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "105") (term "0,1,0"))
                                                                                                                           (rule "translateJavaCastInt" (formula "105") (term "0,0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "105") (term "2,1,0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "105") (term "3,1,2,0,0,1,0"))
                                                                                                                           (rule "polySimp_homoEq" (formula "105") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "105") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "105") (term "1,1,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "105") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "105") (term "0,1,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "105") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "105") (term "0,0,1,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "105") (term "1,0,0"))
                                                                                                                           (rule "applyEq" (formula "105") (term "1,2,0,0,0,0,1,0") (ifseqformula "78"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "105") (term "1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "105") (term "0,1,0"))
                                                                                                                           (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "71") (term "0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "71") (term "0,0,2,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "71") (term "0,2,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "71") (term "0,0,2,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "71") (term "0,2,0"))
                                                                                                                           (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "123"))
                                                                                                                            (builtin "One Step Simplification" (formula "123") (ifInst ""  (formula "35")))
                                                                                                                           (rule "andLeft" (formula "123"))
                                                                                                                           (rule "andLeft" (formula "123"))
                                                                                                                           (rule "andLeft" (formula "123"))
                                                                                                                           (rule "andLeft" (formula "123"))
                                                                                                                           (rule "andLeft" (formula "123"))
                                                                                                                           (rule "translateJavaSubInt" (formula "127") (term "0,2,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "127") (term "0,2,0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "125") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "127"))
                                                                                                                           (rule "eqSymm" (formula "125"))
                                                                                                                           (rule "polySimp_elimSub" (formula "127") (term "0,2,1"))
                                                                                                                           (rule "mul_literals" (formula "127") (term "1,0,2,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "127") (term "0,2,0"))
                                                                                                                           (rule "mul_literals" (formula "127") (term "1,0,2,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "125") (term "1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "127") (term "0,2,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "127") (term "0,2,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "123"))
                                                                                                                           (rule "applyEq" (formula "124") (term "0") (ifseqformula "39"))
                                                                                                                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "124"))
                                                                                                                           (rule "applyEq" (formula "122") (term "0") (ifseqformula "38"))
                                                                                                                           (rule "applyEq" (formula "122") (term "1") (ifseqformula "38"))
                                                                                                                           (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "23"))
                                                                                                                           (rule "andLeft" (formula "23"))
                                                                                                                           (rule "notLeft" (formula "24"))
                                                                                                                           (rule "notLeft" (formula "23"))
                                                                                                                           (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "76") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "191")) (ifInst ""  (formula "102")) (ifInst ""  (formula "18")))
                                                                                                                           (rule "wellFormedAnon" (formula "76") (term "1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "76") (term "2,1,1,0,0,1,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "76") (term "2,0,1,0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "76") (term "1,1,0") (ifseqformula "13"))
                                                                                                                            (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "14")))
                                                                                                                           (rule "polySimp_addComm0" (formula "76") (term "2,1,1,0,0,1,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "76") (term "2,0,1,0,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "76") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "1,0,0,0,1,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "47"))
                                                                                                                            (builtin "One Step Simplification" (formula "76"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "1,0,1,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0,0,1,1"))
                                                                                                                           (rule "applyEq" (formula "76") (term "0,1,0,0,1,1") (ifseqformula "77"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "1,0,0,1,1"))
                                                                                                                           (rule "applyEq" (formula "76") (term "0,0,1,1,1") (ifseqformula "77"))
                                                                                                                           (rule "applyEq" (formula "76") (term "0,1,0,0,0,1,1") (ifseqformula "77"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "76") (term "1,0,0,0,1,1"))
                                                                                                                           (rule "applyEq" (formula "76") (term "1,1,0,1,1") (ifseqformula "70"))
                                                                                                                           (rule "applyEq" (formula "76") (term "0,1,0,0,1,1") (ifseqformula "70"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "76") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "76") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "76") (term "0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "76"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "76") (term "1,0,0,1,1") (ifseqformula "97"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "76") (term "0,1,0,0,1,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1,0,0,1,1"))
                                                                                                                           (rule "add_literals" (formula "76") (term "1,1,0,0,1,0,0,1,1"))
                                                                                                                           (rule "times_zero_1" (formula "76") (term "1,0,0,1,0,0,1,1"))
                                                                                                                           (rule "add_literals" (formula "76") (term "0,0,1,0,0,1,1"))
                                                                                                                           (rule "qeq_literals" (formula "76") (term "0,1,0,0,1,1"))
                                                                                                                            (builtin "One Step Simplification" (formula "76"))
                                                                                                                           (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "77") (term "0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "77") (term "0,0,2,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "77") (term "0,2,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "77") (term "0,0,2,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "77") (term "0,2,0"))
                                                                                                                           (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "73") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "192")) (ifInst ""  (formula "103")) (ifInst ""  (formula "18")))
                                                                                                                           (rule "wellFormedAnon" (formula "73") (term "1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "73") (term "2,1,1,0,0,1,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "73") (term "2,0,1,0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "73") (term "1,1,0") (ifseqformula "13"))
                                                                                                                            (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "14")))
                                                                                                                           (rule "polySimp_addComm0" (formula "73") (term "2,0,1,0,1,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "73") (term "2,1,1,0,0,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "73") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "47"))
                                                                                                                            (builtin "One Step Simplification" (formula "73"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "73") (term "1,0,1,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "73") (term "1,0,0,0,1,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0,1,1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "73") (term "0,1,1,1,1"))
                                                                                                                           (rule "applyEq" (formula "73") (term "1,1,0,0,1,1") (ifseqformula "70"))
                                                                                                                           (rule "applyEq" (formula "73") (term "0,1,0,0,1,1") (ifseqformula "74"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "73") (term "1,0,0,1,1"))
                                                                                                                           (rule "applyEq" (formula "73") (term "0,0,0,1,1,1") (ifseqformula "74"))
                                                                                                                           (rule "applyEq" (formula "73") (term "0,1,0,0,0,1,1") (ifseqformula "74"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "73") (term "1,0,0,0,1,1"))
                                                                                                                           (rule "applyEq" (formula "73") (term "1,1,0,1,1") (ifseqformula "70"))
                                                                                                                           (rule "applyEq" (formula "73") (term "0,0,1,1,1,1,1") (ifseqformula "74"))
                                                                                                                           (rule "applyEq" (formula "73") (term "0,1,0,1,1,1") (ifseqformula "74"))
                                                                                                                           (rule "eqSymm" (formula "73") (term "1,0,1,1,1"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "73") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "73") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "73"))
                                                                                                                           (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "74") (term "0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "74") (term "0,2,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "74") (term "0,2,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_4" (formula "74") (term "0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_5" (formula "74") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "74"))
                                                                                                                           (rule "true_left" (formula "74"))
                                                                                                                           (rule "Definition_axiom_for_countClassOfSliceEqLemma_in_de_wiesler_Classifier" (formula "154") (term "0") (inst "b=b"))
                                                                                                                            (builtin "One Step Simplification" (formula "154"))
                                                                                                                           (rule "expand_inInt" (formula "154") (term "1,0,0"))
                                                                                                                           (rule "replace_int_MIN" (formula "154") (term "0,1,1,0,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "154") (term "1,0,1,0,0"))
                                                                                                                           (rule "eqSymm" (formula "154") (term "1,0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "154") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "154") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "154") (term "1,1,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "154") (term "1,1,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "154") (term "0,1,1,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "154") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "154") (term "0,1,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "154") (term "0,0,1,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "154") (term "1,1,0,0,1,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "154") (term "1,0,0,1,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "154") (term "0,0,1,0,1,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "154") (term "1,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "154") (term "1,1,1,0,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "154") (term "1,1,0,1,0"))
                                                                                                                           (rule "add_literals" (formula "154") (term "1,0,1,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "154") (term "1,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "154") (term "1,0,0,1,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "154") (term "0,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "154") (term "1,1,0,0"))
                                                                                                                           (rule "applyEq" (formula "154") (term "0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "154") (term "1,0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "154") (term "1,1,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "154") (term "1,1,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "154") (term "0,1,1,0,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "154") (term "1,1,1,0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "154") (term "1,1,1,0,0,0"))
                                                                                                                           (rule "nnf_imp2or" (formula "5") (term "0"))
                                                                                                                           (rule "nnf_imp2or" (formula "54") (term "0"))
                                                                                                                           (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                                                                                           (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "71") (term "1,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "71") (term "1,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "71") (term "1,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "71") (term "1,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "71") (term "1"))
                                                                                                                           (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "71") (term "0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "71") (term "0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "71") (term "0"))
                                                                                                                           (rule "polySimp_homoEq" (formula "71"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "71") (term "1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "71") (term "1,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "71") (term "1,0"))
                                                                                                                           (rule "polySimp_mulAssoc" (formula "71") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "71") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "71") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "71") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "71") (term "0"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "71"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "71") (term "0"))
                                                                                                                           (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "75") (term "1,1"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "1,0,0") (ifseqformula "65"))
                                                                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "192")) (ifInst ""  (formula "72")) (ifInst ""  (formula "18")))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "75") (term "1,0") (ifseqformula "65"))
                                                                                                                           (rule "wellFormedAnon" (formula "75") (term "0,1,0"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "1,1,0") (ifseqformula "64"))
                                                                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "75") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "75") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "0,0,0") (ifseqformula "47"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "75") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "75") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "75") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "76") (term "1,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "76") (term "1,1,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "76") (term "1,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "76") (term "0,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,1,1"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "76"))
                                                                                                                           (rule "polySimp_addComm1" (formula "76") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "76"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                                                                                           (rule "mul_literals" (formula "76") (term "0,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "76") (term "1,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0"))
                                                                                                                           (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "99") (term "0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "99") (term "0,2,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "99") (term "0,2,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "99") (term "0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "99") (term "0"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "81") (term "0,0") (ifseqformula "99"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "81") (term "0,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0"))
                                                                                                                           (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "81") (term "0,0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "81") (term "0,0,0,0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "81") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "81") (term "1,0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "81") (term "0,0,0,0"))
                                                                                                                           (rule "qeq_literals" (formula "81") (term "0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "81"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "81"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "81") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "81") (term "1,0"))
                                                                                                                           (rule "polySimp_mulAssoc" (formula "81") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "81") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "81") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "81") (term "0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "81"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "81") (term "0"))
                                                                                                                           (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "12") (term "1,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "12") (term "2,0,1,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "12") (term "1,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "12") (term "1,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "12") (term "2,0,1,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "12") (term "1"))
                                                                                                                           (rule "Contract_axiom_for_remainingWriteCountOfBucket_in_BucketPointers" (formula "12") (term "0"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0,0") (ifseqformula "66"))
                                                                                                                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "192")) (ifInst ""  (formula "73")) (ifInst ""  (formula "19")))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "12") (term "1,0") (ifseqformula "66"))
                                                                                                                           (rule "wellFormedAnon" (formula "12") (term "0,1,0"))
                                                                                                                           (rule "replace_known_left" (formula "12") (term "1,1,0") (ifseqformula "65"))
                                                                                                                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "48"))
                                                                                                                            (builtin "One Step Simplification" (formula "12"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "51"))
                                                                                                                            (builtin "One Step Simplification" (formula "12"))
                                                                                                                           (rule "true_left" (formula "12"))
                                                                                                                           (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "12") (term "0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "12") (term "0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "12") (term "2,0,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "12") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "12") (term "2,0,0"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "12") (term "0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "12") (term "0,0,0,1"))
                                                                                                                           (rule "Contract_axiom_for_bucketSize_in_BucketPointers" (formula "63") (term "0"))
                                                                                                                            (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "192")) (ifInst ""  (formula "103")) (ifInst ""  (formula "18")))
                                                                                                                           (rule "wellFormedAnon" (formula "63") (term "1,0"))
                                                                                                                           (rule "replace_known_left" (formula "63") (term "1,1,0") (ifseqformula "13"))
                                                                                                                            (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "14")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "63") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "63") (term "0,0,0") (ifseqformula "47"))
                                                                                                                            (builtin "One Step Simplification" (formula "63"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "63") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "63"))
                                                                                                                           (rule "Definition_axiom_for_bucketSize_in_de_wiesler_BucketPointers" (formula "64") (term "0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "64") (term "0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "64") (term "2,0,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "64") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "64") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "64") (term "2,1,0"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "64"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                                                                                                           (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                                                                                           (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "71"))
                                                                                                                           (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "64") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "64"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "64") (term "1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "64") (term "1"))
                                                                                                                           (rule "polySimp_mulAssoc" (formula "64") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "64") (term "0,0,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "64") (term "0,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "64") (term "0,1"))
                                                                                                                           (rule "commute_and" (formula "195"))
                                                                                                                           (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "80") (term "0"))
                                                                                                                           (rule "replace_known_left" (formula "80") (term "1,0,0,0") (ifseqformula "14"))
                                                                                                                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "18")) (ifInst ""  (formula "193")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "80") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "80") (term "0,0,0") (ifseqformula "47"))
                                                                                                                            (builtin "One Step Simplification" (formula "80"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "80") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "80") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "80") (term "0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "80"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "80") (term "1,1") (ifseqformula "81"))
                                                                                                                           (rule "leq_literals" (formula "80") (term "0,1,1"))
                                                                                                                            (builtin "One Step Simplification" (formula "80"))
                                                                                                                           (rule "true_left" (formula "80"))
                                                                                                                           (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "80") (term "0"))
                                                                                                                           (rule "translateJavaSubInt" (formula "80") (term "1,0"))
                                                                                                                           (rule "polySimp_elimSub" (formula "80") (term "1,0"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "80") (term "1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "80") (term "0,1,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0"))
                                                                                                                           (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "75") (term "1,1"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "1,0,0,0") (ifseqformula "14"))
                                                                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "18")) (ifInst ""  (formula "193")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "75") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "75") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "0,0,0") (ifseqformula "47"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "75") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "75") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "75") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "75") (term "0,0") (ifseqformula "50"))
                                                                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                                                                           (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "76") (term "1,1"))
                                                                                                                           (rule "translateJavaSubInt" (formula "76") (term "1,1,1"))
                                                                                                                           (rule "polySimp_elimSub" (formula "76") (term "1,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "76") (term "0,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,1,1"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "76"))
                                                                                                                           (rule "polySimp_addComm1" (formula "76") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                                                                                                           (rule "mul_literals" (formula "76") (term "0,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "76") (term "1,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                                                                                                                           (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0"))
                                                                                                                           (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=arr_7"))
                                                                                                                           (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "66"))
                                                                                                                            (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "167")) (ifInst ""  (formula "4")))
                                                                                                                           (rule "polySimp_homoEq" (formula "71"))
                                                                                                                           (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                                                                           (rule "elementOfSingleton" (formula "70") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "70"))
                                                                                                                           (rule "applyEqReverse" (formula "71") (term "0,1,0,0") (ifseqformula "70"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "70"))
                                                                                                                           (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "70"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "70") (term "0"))
                                                                                                                           (rule "pullOutSelect" (formula "126") (term "1") (inst "selectSK=arr_8"))
                                                                                                                           (rule "simplifySelectOfAnonEQ" (formula "127") (ifseqformula "66"))
                                                                                                                            (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "165")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "simplifySelectOfAnonEQ" (formula "126") (ifseqformula "66"))
                                                                                                                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "165")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "127") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "188")))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "127"))
                                                                                                                            (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "165")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "126") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "188")))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "126"))
                                                                                                                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "165")) (ifInst ""  (formula "3")))
                                                                                                                           (rule "elementOfSingleton" (formula "127") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "188")))
                                                                                                                           (rule "applyEqReverse" (formula "126") (term "1") (ifseqformula "127"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "127"))
                                                                                                                           (rule "elementOfSingleton" (formula "126") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "187")))
                                                                                                                           (rule "eqSymm" (formula "126"))
                                                                                                                           (rule "Contract_axiom_for_countElement_in_BucketPointers" (formula "6") (term "0,1,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "195")) (ifInst ""  (formula "190")) (ifInst ""  (formula "193")) (ifInst ""  (formula "105")) (ifInst ""  (formula "41")) (ifInst ""  (formula "19")))
                                                                                                                           (rule "wellFormedAnon" (formula "6") (term "1,0"))
                                                                                                                           (rule "replace_known_left" (formula "6") (term "1,1,0") (ifseqformula "14"))
                                                                                                                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "15")))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "46"))
                                                                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "42"))
                                                                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "6") (term "0,0") (ifseqformula "90"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                                                                                           (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                                                                           (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                                                                           (rule "true_left" (formula "6"))
                                                                                                                           (rule "Definition_axiom_for_countElement_in_de_wiesler_BucketPointers" (formula "6") (term "0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
                                                                                                                           (rule "polySimp_homoEq" (formula "6") (term "1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0"))
                                                                                                                           (rule "polySimp_sepNegMonomial" (formula "6") (term "1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                                                                                           (rule "newSym_eq" (formula "87") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_1,
               de.wiesler.Increment::$position),
    Z(0(#)))"))
                                                                                                                           (rule "times_zero_1" (formula "87") (term "1,1"))
                                                                                                                           (rule "add_zero_right" (formula "87") (term "1"))
                                                                                                                           (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "87"))
                                                                                                                           (rule "eqSymm" (formula "88"))
                                                                                                                           (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "163") (term "1,3,0,1") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm1" (formula "163") (term "3,0,1"))
                                                                                                                           (rule "applyEq" (formula "148") (term "1,3,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "148") (term "3,0"))
                                                                                                                           (rule "applyEq" (formula "196") (term "0,0") (ifseqformula "88"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "196") (term "0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "196") (term "1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "196") (term "0,0"))
                                                                                                                           (rule "applyEq" (formula "118") (term "1,0,2,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "118") (term "0,2,0"))
                                                                                                                           (rule "applyEq" (formula "96") (term "1,0,0,1,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "69") (term "1,0,0,1,1,1") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "155") (term "1,4,0,0,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm1" (formula "155") (term "4,0,0,0"))
                                                                                                                           (rule "applyEq" (formula "95") (term "1,0,1,1,0,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "123") (term "1,0,2,0,1,0,2") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "123") (term "0,2,0,1,0,2"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "123") (term "1,0,2"))
                                                                                                                           (rule "polySimp_addComm1" (formula "123") (term "0,1,0,2"))
                                                                                                                           (rule "applyEq" (formula "96") (term "1,1,1,0,1,0,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "8") (term "1,4,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "8") (term "4,0"))
                                                                                                                           (rule "applyEq" (formula "123") (term "1,0,2,0,1,1,1,1") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "123") (term "0,2,0,1,1,1,1"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "123") (term "1,1,1,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "123") (term "0,1,1,1,1"))
                                                                                                                           (rule "applyEq" (formula "163") (term "1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "95") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "96") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "79") (term "1,1,0,0,1,1") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "123") (term "1,0,2,0,0,2,1") (ifseqformula "88"))
                                                                                                                           (rule "eqSymm" (formula "123") (term "0,2,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "123") (term "0,2,1,0,2,1"))
                                                                                                                           (rule "applyEq" (formula "107") (term "1,2,1,2,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm1" (formula "107") (term "2,1,2,0,1,0"))
                                                                                                                           (rule "applyEq" (formula "112") (term "0") (ifseqformula "88"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "112"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "112") (term "1,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "112") (term "0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "112") (term "0,0"))
                                                                                                                           (rule "applyEq" (formula "96") (term "1,0,1,1,0,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "100") (term "1,1") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "144") (term "1,4,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm1" (formula "144") (term "4,0"))
                                                                                                                           (rule "applyEq" (formula "96") (term "1,0,0,1,0,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "140") (term "1,3,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "140") (term "3,0"))
                                                                                                                           (rule "applyEq" (formula "7") (term "1,3,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "7") (term "3,0"))
                                                                                                                           (rule "applyEq" (formula "144") (term "1,3,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "144") (term "3,0"))
                                                                                                                           (rule "applyEq" (formula "79") (term "0,0,1,1,1") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "96") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "95") (term "1,0,0,1,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "123") (term "1,0,2,0,1,1,2,1") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "123") (term "0,2,0,1,1,2,1"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "123") (term "1,1,2,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "123") (term "0,1,1,2,1"))
                                                                                                                           (rule "applyEq" (formula "69") (term "1,1,0,1,1") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "123") (term "1,0,2,0,1,1,2") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "123") (term "0,2,0,1,1,2"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "123") (term "1,1,2"))
                                                                                                                           (rule "applyEq" (formula "96") (term "1,0,1,1,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "95") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "117") (term "1,0,2,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "117") (term "0,2,0"))
                                                                                                                           (rule "applyEq" (formula "96") (term "1,1,1,1,1,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "148") (term "1,4,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm1" (formula "148") (term "4,0"))
                                                                                                                           (rule "applyEq" (formula "95") (term "1,0,1,1,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "196") (term "0,1") (ifseqformula "88"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "196") (term "1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "196") (term "1,0,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "196") (term "0,1"))
                                                                                                                           (rule "applyEq" (formula "95") (term "1,1,1,0,1,0,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "95") (term "1,1,1,1,1,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "101") (term "1,1") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "108") (term "2,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "91") (term "0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "123") (term "1,0,2,0,1,0,1,1") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "123") (term "0,2,0,1,0,1,1"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "123") (term "1,0,1,1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "123") (term "0,1,0,1,1"))
                                                                                                                           (rule "applyEq" (formula "124") (term "1,0,2,2,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "124") (term "0,2,2,0"))
                                                                                                                           (rule "applyEq" (formula "155") (term "1,3,0,0,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "155") (term "3,0,0,0"))
                                                                                                                           (rule "applyEq" (formula "106") (term "1,3,1,2,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm1" (formula "106") (term "3,1,2,0,1,0"))
                                                                                                                           (rule "applyEq" (formula "95") (term "1,0,0,1,0,0,1,0") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "156") (term "1,4,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm1" (formula "156") (term "4,1,1,0"))
                                                                                                                           (rule "applyEq" (formula "113") (term "0,0,0,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "113") (term "0,0,0"))
                                                                                                                           (rule "applyEq" (formula "80") (term "1") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "156") (term "1,3,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "156") (term "3,1,1,0"))
                                                                                                                           (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "88"))
                                                                                                                           (rule "applyEq" (formula "107") (term "1,3,0,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm1" (formula "107") (term "3,0,0,1,1,0"))
                                                                                                                           (rule "applyEq" (formula "106") (term "1,3,0,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "106") (term "3,0,0,1,1,0"))
                                                                                                                           (rule "applyEq" (formula "106") (term "1,4,0,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm1" (formula "106") (term "4,0,0,1,1,0"))
                                                                                                                           (rule "applyEq" (formula "107") (term "1,2,0,0,1,1,0") (ifseqformula "88"))
                                                                                                                           (rule "polySimp_addComm0" (formula "107") (term "2,0,0,1,1,0"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "196") (term "0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "196") (term "0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "196") (term "0,0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "123") (term "1,1,0,2"))
                                                                                                                           (rule "polySimp_rightDist" (formula "123") (term "1,1,0,2"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "123") (term "1,1,1,0,2"))
                                                                                                                           (rule "mul_literals" (formula "123") (term "0,1,1,0,2"))
                                                                                                                           (rule "polySimp_elimOne" (formula "123") (term "1,1,1,0,2"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,1,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "123") (term "1,1,1,1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "123") (term "1,1,1,1,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "123") (term "1,1,1,1,1,1"))
                                                                                                                           (rule "mul_literals" (formula "123") (term "0,1,1,1,1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "123") (term "1,1,1,1,1,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "112"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "112") (term "1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "112") (term "1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "112") (term "1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "112") (term "1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "112") (term "0,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "112") (term "1,0,1"))
                                                                                                                           (rule "mul_literals" (formula "112") (term "0,0,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,1,2,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "123") (term "1,1,1,2,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "123") (term "1,1,1,2,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "123") (term "1,1,1,1,2,1"))
                                                                                                                           (rule "mul_literals" (formula "123") (term "0,1,1,1,2,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "123") (term "1,1,1,1,2,1"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "196") (term "1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "196") (term "0,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "196") (term "0,1"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,1,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "123") (term "1,1,0,1,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "123") (term "1,1,0,1,1"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "123") (term "1,1,1,0,1,1"))
                                                                                                                           (rule "mul_literals" (formula "123") (term "0,1,1,0,1,1"))
                                                                                                                           (rule "polySimp_elimOne" (formula "123") (term "1,1,1,0,1,1"))
                                                                                                                           (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "7") (term "1,4,0"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,0,0") (ifseqformula "67"))
                                                                                                                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "194")) (ifInst ""  (formula "138")) (ifInst ""  (formula "140")) (ifInst ""  (formula "74")) (ifInst ""  (formula "19")))
                                                                                                                           (rule "wellFormedAnonEQ" (formula "7") (term "1,0") (ifseqformula "67"))
                                                                                                                           (rule "wellFormedAnon" (formula "7") (term "0,1,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "7") (term "2,0,1,0,1,1"))
                                                                                                                           (rule "translateJavaAddInt" (formula "7") (term "2,1,1,0,0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "7") (term "1,1,0") (ifseqformula "66"))
                                                                                                                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                                                                                                                           (rule "polySimp_addComm0" (formula "7") (term "2,1,1,0,0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "7") (term "1,0,0,1,1") (ifseqformula "136"))
                                                                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                                                                           (rule "polySimp_addComm0" (formula "7") (term "2,0,1,0,1,1"))
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                                                                                           (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "7") (term "1,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "7") (term "1,1,1") (ifseqformula "139"))
                                                                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "48"))
                                                                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "7") (term "1,0,1,1") (ifseqformula "135"))
                                                                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "7") (term "0,1,1"))
                                                                                                                           (rule "replace_known_left" (formula "7") (term "0,1,1") (ifseqformula "133"))
                                                                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "7") (term "1,1"))
                                                                                                                           (rule "replace_known_left" (formula "7") (term "1,1") (ifseqformula "137"))
                                                                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                                                                                                                           (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
                                                                                                                           (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "51"))
                                                                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                                                                           (rule "true_left" (formula "7"))
                                                                                                                           (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "7") (term "1,4,0"))
                                                                                                                           (rule "translateJavaMulInt" (formula "7") (term "0,2,1,4,0"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,4,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "7") (term "1,4,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "7") (term "1,4,0"))
                                                                                                                           (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=arr_9"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "80"))
                                                                                                                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "167")) (ifInst ""  (formula "4")))
                                                                                                                           (rule "elementOfSingleton" (formula "80") (term "0,0"))
                                                                                                                            (builtin "One Step Simplification" (formula "80"))
                                                                                                                           (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "80"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "80"))
                                                                                                                           (rule "cut_direct" (formula "68") (term "0,0"))
                                                                                                                           (branch "CUT: result_1.<created> = TRUE TRUE"
                                                                                                                               (builtin "One Step Simplification" (formula "69"))
                                                                                                                              (rule "true_left" (formula "69"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "137") (term "0,1"))
                                                                                                                              (rule "translateJavaMulInt" (formula "137") (term "0,2,0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "137") (term "0,2,0,1"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "137") (term "0,1"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "137") (term "0,1"))
                                                                                                                              (rule "eqSymm" (formula "137") (term "1"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "137") (term "0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "137") (term "0,2,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "137") (term "0,2,0,0"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "137") (term "0,0"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "137") (term "0,0"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "136") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "194")) (ifInst ""  (formula "73")))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "136") (term "1,0") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "18")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "136") (term "1,0") (ifseqformula "66"))
                                                                                                                              (rule "wellFormedAnon" (formula "136") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "136") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "136") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "136") (term "1,1,0") (ifseqformula "65"))
                                                                                                                               (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                              (rule "polySimp_elimSub" (formula "136") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "136") (term "1,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "136") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "136") (term "0,2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "136") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "136") (term "0,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "136") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "136") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "136") (term "0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "136") (term "0,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "136") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "136") (term "1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "136") (term "0,1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "136") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "136") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "136") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "136") (term "1,0,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "136") (term "1,0,0,1,1") (ifseqformula "137"))
                                                                                                                               (builtin "One Step Simplification" (formula "136"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "136") (term "1,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "136") (term "1,1,1,1,1,1") (ifseqformula "133"))
                                                                                                                               (builtin "One Step Simplification" (formula "136"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "136") (term "1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "136") (term "0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "136") (term "1,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "136") (term "1,0,0") (ifseqformula "50"))
                                                                                                                               (builtin "One Step Simplification" (formula "136"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "136") (term "0,0"))
                                                                                                                              (rule "mul_literals" (formula "136") (term "1,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "136") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "136") (term "0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "136") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "136") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "136") (term "0,0"))
                                                                                                                              (rule "mul_literals" (formula "136") (term "1,0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "137") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "137") (term "0,1"))
                                                                                                                              (rule "castedGetAny" (formula "137") (term "0,1"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "137"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "139") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "139") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "139") (term "0,0"))
                                                                                                                              (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "51"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "139"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "140") (term "0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "140") (term "0,2,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "140") (term "0,2,0,0"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "140") (term "0,0"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "140") (term "0,0"))
                                                                                                                              (rule "replace_known_left" (formula "74") (term "1,1,1,1,1") (ifseqformula "140"))
                                                                                                                               (builtin "One Step Simplification" (formula "74"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "135") (term "0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "135") (term "0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "135") (term "0,2,0"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "135") (term "0"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "135") (term "0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "135"))
                                                                                                                              (rule "replace_known_left" (formula "74") (term "1,0,0,1,1") (ifseqformula "135"))
                                                                                                                               (builtin "One Step Simplification" (formula "74"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "134") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "195")) (ifInst ""  (formula "73")))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "134") (term "1,0") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "18")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "134") (term "1,0") (ifseqformula "66"))
                                                                                                                              (rule "wellFormedAnon" (formula "134") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "134") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "134") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "134") (term "0,0,1,0") (ifseqformula "14"))
                                                                                                                               (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "13")) (ifInst ""  (formula "65")))
                                                                                                                              (rule "polySimp_elimSub" (formula "134") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "134") (term "1,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "134") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "134") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "134") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "134") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "134") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "134") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "134") (term "1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "134") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "134") (term "0,0,0") (ifseqformula "47"))
                                                                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "134") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "134") (term "1,0,1,1,1,1") (ifseqformula "133"))
                                                                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "134") (term "0,0,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "134") (term "0,0,0,1,1") (ifseqformula "132"))
                                                                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "134") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "134") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "134") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "135") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "135") (term "0,1"))
                                                                                                                              (rule "castedGetAny" (formula "135") (term "0,1"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "135"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "132") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "196")) (ifInst ""  (formula "73")))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "1,0") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "18")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "132") (term "1,0") (ifseqformula "66"))
                                                                                                                              (rule "wellFormedAnon" (formula "132") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "132") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "132") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "132") (term "1,1,0") (ifseqformula "65"))
                                                                                                                               (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                              (rule "polySimp_elimSub" (formula "132") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "132") (term "1,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "132") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "132") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "132") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "132") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "132") (term "0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "132") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "132") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "132") (term "0,0,0") (ifseqformula "47"))
                                                                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "132") (term "0,0,0,1,1") (ifseqformula "133"))
                                                                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "132") (term "1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "132") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "132") (term "1,0,1,1,1,1") (ifseqformula "134"))
                                                                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "132") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "132") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "132") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "132") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "132") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "132") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "100") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "100") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "100") (term "0,0"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "133") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "196")) (ifInst ""  (formula "73")))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "133") (term "1,0") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "18")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "133") (term "1,0") (ifseqformula "66"))
                                                                                                                              (rule "wellFormedAnon" (formula "133") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "133") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "133") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "133") (term "1,1,0") (ifseqformula "65"))
                                                                                                                               (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                              (rule "polySimp_elimSub" (formula "133") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "133") (term "1,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "133") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "133") (term "0,2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "133") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "133") (term "0,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "133") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "133") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "133") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "133") (term "0,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "133") (term "0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "133") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "133") (term "0,1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "133") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "133") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "133") (term "1,0,0") (ifseqformula "50"))
                                                                                                                               (builtin "One Step Simplification" (formula "133"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,0,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "133") (term "1,0,1,1,1,1,1") (ifseqformula "50"))
                                                                                                                               (builtin "One Step Simplification" (formula "133"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "133") (term "1,1,1,1,1,1") (ifseqformula "134"))
                                                                                                                               (builtin "One Step Simplification" (formula "133"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "133") (term "0,0"))
                                                                                                                              (rule "mul_literals" (formula "133") (term "1,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "133") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "133") (term "0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "133") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "133") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "133") (term "0,0"))
                                                                                                                              (rule "mul_literals" (formula "133") (term "1,0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "134") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "134") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "134") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "134") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "134") (term "0,1"))
                                                                                                                              (rule "castedGetAny" (formula "134") (term "0,1"))
                                                                                                                              (rule "nnf_imp2or" (formula "29") (term "0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,2,0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,2,0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "95") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "95") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "95") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,2,1,1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,2,1,1,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "95") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "95") (term "0,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "95") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "95") (term "0,1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "95") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "95") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "1,1,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "95") (term "0,1,1,0,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "95") (term "0,1,1,0,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "95") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "95") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "commute_and" (formula "95") (term "1,0,0"))
                                                                                                                              (rule "Definition_axiom_for_isSortedSeqTransitive_in_de_wiesler_Functions" (formula "28") (term "0") (inst "i=i") (inst "j=j"))
                                                                                                                               (builtin "One Step Simplification" (formula "28"))
                                                                                                                              (rule "expand_inInt" (formula "28") (term "1,0,0"))
                                                                                                                              (rule "expand_inInt" (formula "28") (term "1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "28") (term "0,1,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "28") (term "1,1,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "28") (term "0,1,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "28") (term "1,1,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
                                                                                                                              (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "26"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0") (ifseqformula "26"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                                                                                                                              (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                                                                                                              (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "25") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "25"))
                                                                                                                              (rule "translateJavaMod" (formula "25") (term "0"))
                                                                                                                              (rule "jmod_axiom" (formula "25") (term "0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "25"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "135") (term "1,0,1,1,1,1") (ifseqformula "50"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "135") (term "0,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "135") (term "0,0,1,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "135") (term "1,1,0,0,1,0,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "135") (term "1,0,0,1,0,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "135") (term "0,0,1,0,1,1,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "135") (term "0,1,0,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "135"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "138") (term "0,0") (ifseqformula "47"))
                                                                                                                              (rule "leq_literals" (formula "138") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "138"))
                                                                                                                              (rule "nnf_imp2or" (formula "83") (term "0"))
                                                                                                                              (rule "commute_and_2" (formula "95") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "133") (term "0,0") (ifseqformula "47"))
                                                                                                                              (rule "leq_literals" (formula "133") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "133"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "135") (term "0,0") (ifseqformula "50"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "135") (term "0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "135") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "135") (term "1,1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "135") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "135") (term "0,0,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "135") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "135"))
                                                                                                                              (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "105") (inst "b=b"))
                                                                                                                               (builtin "One Step Simplification" (formula "105"))
                                                                                                                              (rule "expand_inInt" (formula "105") (term "1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "105") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "105") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "106"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "106"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "107"))
                                                                                                                              (rule "andLeft" (formula "107"))
                                                                                                                              (rule "translateJavaCastInt" (formula "112") (term "0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "111") (term "1"))
                                                                                                                              (rule "translateJavaMulInt" (formula "105") (term "1"))
                                                                                                                              (rule "translateJavaMulInt" (formula "106") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "109") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "108") (term "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "105") (term "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "106") (term "0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "110") (term "1"))
                                                                                                                              (rule "castedGetAny" (formula "110") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "108") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "107") (term "1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "111") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "106"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "105"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "106"))
                                                                                                                              (rule "applyEq" (formula "107") (term "0") (ifseqformula "51"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "107"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "107") (term "1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "107") (term "0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "107") (term "0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "107") (term "0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "107") (term "0"))
                                                                                                                              (rule "applyEq" (formula "106") (term "0") (ifseqformula "51"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "106"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "109") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "109") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "109") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "109") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "106"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "106") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "106") (term "0"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "36") (inst "i=i") (inst "i_0=i_0"))
                                                                                                                               (builtin "One Step Simplification" (formula "36"))
                                                                                                                              (rule "expand_inInt" (formula "36") (term "1,0,0,1"))
                                                                                                                              (rule "expand_inInt" (formula "36") (term "1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0,1,0"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "37"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "37"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "notLeft" (formula "36"))
                                                                                                                              (rule "notLeft" (formula "36"))
                                                                                                                              (rule "translateJavaSubInt" (formula "44") (term "0,2,1,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "42") (term "3,0"))
                                                                                                                              (rule "translateJavaShiftLeftInt" (formula "38") (term "1"))
                                                                                                                              (rule "eqSymm" (formula "44") (term "1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "42") (term "3,0"))
                                                                                                                              (rule "mul_literals" (formula "42") (term "1,3,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "44") (term "0,2,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "44") (term "1,0,2,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "42") (term "3,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "43") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "43") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "40"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "39"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "36"))
                                                                                                                              (rule "applyEq" (formula "40") (term "1") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "39") (term "0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "33"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "41"))
                                                                                                                              (rule "applyEq" (formula "179") (term "0") (ifseqformula "33"))
                                                                                                                              (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "33"))
                                                                                                                              (rule "applyEq" (formula "42") (term "1,3,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "44") (term "1,0,1,0") (ifseqformula "33"))
                                                                                                                              (rule "applyEq" (formula "136") (term "0,1,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "35") (term "1,0,2,0") (ifseqformula "38"))
                                                                                                                              (rule "eqSymm" (formula "35"))
                                                                                                                              (rule "applyEq" (formula "34") (term "3,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "137") (term "3,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "136") (term "2,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "43") (term "0,1,0,0,1,1,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "41") (term "0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "35") (term "1,0,2,0") (ifseqformula "38"))
                                                                                                                              (rule "eqSymm" (formula "35"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "43") (term "1,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "43") (term "0,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "43") (term "1,1,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_subsumption6" (formula "113") (ifseqformula "31"))
                                                                                                                              (rule "greater_literals" (formula "113") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "113"))
                                                                                                                              (rule "mul_literals" (formula "113") (term "1,0"))
                                                                                                                              (rule "leq_literals" (formula "113") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "113"))
                                                                                                                              (rule "true_left" (formula "113"))
                                                                                                                              (rule "elimGcdGeq_antec" (formula "99") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "99") (term "1,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "99") (term "1,0,1,0"))
                                                                                                                              (rule "leq_literals" (formula "99") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "99"))
                                                                                                                              (rule "mul_literals" (formula "99") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "99") (term "0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "99") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "99") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "99") (term "1,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "99") (term "1,0,0"))
                                                                                                                              (rule "add_literals" (formula "99") (term "0,0"))
                                                                                                                              (rule "leq_literals" (formula "99") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "99"))
                                                                                                                              (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "9") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "translateJavaMod" (formula "9") (term "0"))
                                                                                                                              (rule "jmod_axiom" (formula "9") (term "0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "9"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                                                                              (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "10") (inst "b=b"))
                                                                                                                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "113")) (ifInst ""  (formula "114")))
                                                                                                                              (rule "expand_inInt" (formula "10") (term "1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "11"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "12"))
                                                                                                                              (rule "translateJavaCastInt" (formula "16") (term "0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "15") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "14") (term "0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "10") (term "1"))
                                                                                                                              (rule "translateJavaMulInt" (formula "11") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "13") (term "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "14") (term "1"))
                                                                                                                              (rule "castedGetAny" (formula "14") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "13") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "12") (term "1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "11"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "10"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "11"))
                                                                                                                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "62"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                                                                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "62"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "11"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "12") (term "0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "12") (term "0,2,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "12") (term "0,2,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                                                                                                                              (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "12") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "209")) (ifInst ""  (formula "20")))
                                                                                                                              (rule "wellFormedAnon" (formula "12") (term "1,0"))
                                                                                                                              (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "16"))
                                                                                                                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "57"))
                                                                                                                               (builtin "One Step Simplification" (formula "12"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "60"))
                                                                                                                               (builtin "One Step Simplification" (formula "12"))
                                                                                                                              (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "13") (term "1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "13") (term "1,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "13") (term "1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "13"))
                                                                                                                              (rule "applyEq" (formula "13") (term "1,0,0,0") (ifseqformula "82"))
                                                                                                                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "82"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "13") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "13") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "13") (term "0,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "13") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "13"))
                                                                                                                              (rule "lenNonNegative" (formula "28") (term "0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28"))
                                                                                                                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                                                                                              (rule "mul_literals" (formula "28") (term "1"))
                                                                                                                              (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "34"))
                                                                                                                              (rule "greater_literals" (formula "10") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "10"))
                                                                                                                              (rule "mul_literals" (formula "10") (term "1,0"))
                                                                                                                              (rule "leq_literals" (formula "10") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "10"))
                                                                                                                              (rule "true_left" (formula "10"))
                                                                                                                              (rule "arrayLengthIsAShort" (formula "24") (term "1"))
                                                                                                                              (rule "expand_inShort" (formula "24"))
                                                                                                                              (rule "replace_short_MAX" (formula "24") (term "1,0"))
                                                                                                                              (rule "replace_short_MIN" (formula "24") (term "0,1"))
                                                                                                                              (rule "andLeft" (formula "24"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "25"))
                                                                                                                              (rule "arrayLengthNotNegative" (formula "26") (term "1"))
                                                                                                                              (rule "seqGetAlphaCast" (formula "32") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "32") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                                                                              (rule "true_left" (formula "32"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "36"))
                                                                                                                              (rule "leq_literals" (formula "30") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                                                                              (rule "true_left" (formula "30"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "34"))
                                                                                                                              (rule "leq_literals" (formula "25") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "25"))
                                                                                                                              (rule "true_left" (formula "25"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "33"))
                                                                                                                              (rule "leq_literals" (formula "25") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "25"))
                                                                                                                              (rule "true_left" (formula "25"))
                                                                                                                              (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "83") (inst "b=b"))
                                                                                                                               (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "115")) (ifInst ""  (formula "116")))
                                                                                                                              (rule "expand_inInt" (formula "83") (term "1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "83") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "83") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "andLeft" (formula "83"))
                                                                                                                              (rule "andLeft" (formula "83"))
                                                                                                                              (rule "andLeft" (formula "83"))
                                                                                                                              (rule "andLeft" (formula "83"))
                                                                                                                              (rule "andLeft" (formula "83"))
                                                                                                                              (rule "andLeft" (formula "85"))
                                                                                                                              (rule "andLeft" (formula "85"))
                                                                                                                              (rule "translateJavaCastInt" (formula "89") (term "0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "88") (term "1"))
                                                                                                                              (rule "translateJavaMulInt" (formula "84") (term "0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "83") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "87") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "86") (term "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "84") (term "0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "83") (term "1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "87") (term "1"))
                                                                                                                              (rule "castedGetAny" (formula "87") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "86") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "85") (term "1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "87") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "84"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "83"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "84"))
                                                                                                                              (rule "applyEq" (formula "84") (term "0") (ifseqformula "61"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "84"))
                                                                                                                              (rule "applyEq" (formula "84") (term "0") (ifseqformula "61"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "84"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "84") (term "1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "84") (term "1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "84") (term "0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "84") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "84") (term "0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "84") (term "0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "85") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "84"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "84") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption6" (formula "83") (ifseqformula "33"))
                                                                                                                              (rule "greater_literals" (formula "83") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "83"))
                                                                                                                              (rule "mul_literals" (formula "83") (term "1,0"))
                                                                                                                              (rule "leq_literals" (formula "83") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "83"))
                                                                                                                              (rule "true_left" (formula "83"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "153"))
                                                                                                                              (rule "times_zero_1" (formula "26") (term "0,0"))
                                                                                                                              (rule "add_zero_left" (formula "26") (term "0"))
                                                                                                                              (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "41") (term "1"))
                                                                                                                              (rule "mod_axiom" (formula "41") (term "1,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "107") (term "0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "107") (term "0,2,0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "0,2,0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "43") (term "1"))
                                                                                                                              (rule "mod_axiom" (formula "43") (term "1,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "42") (term "0"))
                                                                                                                              (rule "mod_axiom" (formula "42") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "45") (term "1,3,0"))
                                                                                                                              (rule "mod_axiom" (formula "45") (term "1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "107") (term "0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "107") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "107") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "138") (term "0,1,0"))
                                                                                                                              (rule "mod_axiom" (formula "138") (term "1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "107") (term "0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "107") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "107") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "37") (term "3,0"))
                                                                                                                              (rule "mod_axiom" (formula "37") (term "1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,3,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "107") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "107") (term "0,2,1,1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "0,2,1,1,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "107") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "107") (term "0,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "107") (term "0,1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "139") (term "3,0"))
                                                                                                                              (rule "mod_axiom" (formula "139") (term "1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "139") (term "1,1,0,3,0"))
                                                                                                                              (rule "nnf_imp2or" (formula "64") (term "0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "138") (term "2,0"))
                                                                                                                              (rule "mod_axiom" (formula "138") (term "1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,2,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "107") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "107") (term "0,0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "107") (term "0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "0,0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "107") (term "0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "44") (term "0"))
                                                                                                                              (rule "mod_axiom" (formula "44") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "107") (term "1,1,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "107") (term "0,1,1,0,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "107") (term "0,1,1,0,0,0,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "38") (term "1,0,2,1"))
                                                                                                                              (rule "mod_axiom" (formula "38") (term "1,0,1,0,2,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0,2,1"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "38") (term "1,0,2,0"))
                                                                                                                              (rule "mod_axiom" (formula "38") (term "1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "107") (term "0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "107") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "107") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "107") (term "0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "107") (term "0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "107") (term "0,0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "0,0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "107") (term "0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "46") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mod_axiom" (formula "46") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "46") (term "1,1,1,1,0"))
                                                                                                                              (rule "mod_axiom" (formula "46") (term "1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "107") (term "0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "107") (term "0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "107") (term "0,0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "0,0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "107") (term "0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "107") (term "0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "107") (term "0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "107") (term "0,0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "0,0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "107") (term "0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "47") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mod_axiom" (formula "47") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "107") (term "0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "107") (term "0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "107") (term "0,0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "107") (term "0,0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "107") (term "0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "commute_and" (formula "107") (term "1,0,0"))
                                                                                                                              (rule "commute_and_2" (formula "107") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "125") (ifseqformula "55"))
                                                                                                                              (rule "polySimp_rightDist" (formula "125") (term "0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "125") (term "0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "125") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "125") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "125") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "125") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "125"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "125") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "125") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption0" (formula "214") (term "1") (ifseqformula "125"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "214") (term "0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "214") (term "1,0,0,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "214") (term "1,0,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "214") (term "1,1,0,0,1"))
                                                                                                                              (rule "mul_literals" (formula "214") (term "0,1,0,0,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "214") (term "0,0,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "214") (term "0,0,0,1"))
                                                                                                                              (rule "add_literals" (formula "214") (term "0,0,0,0,1"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "214") (term "0,0,1"))
                                                                                                                              (rule "add_literals" (formula "214") (term "1,1,0,0,1"))
                                                                                                                              (rule "times_zero_1" (formula "214") (term "1,0,0,1"))
                                                                                                                              (rule "add_zero_right" (formula "214") (term "0,0,1"))
                                                                                                                              (rule "qeq_literals" (formula "214") (term "0,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "214"))
                                                                                                                              (rule "inEqSimp_geqRight" (formula "214"))
                                                                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                                                              (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                                                              (rule "inEqSimp_subsumption0" (formula "126") (ifseqformula "1"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "126") (term "0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "126") (term "1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "126") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "126") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "126") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "126") (term "0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "126") (term "0,0,0"))
                                                                                                                              (rule "add_literals" (formula "126") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "126") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "126") (term "1,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "126") (term "1,0,0"))
                                                                                                                              (rule "add_literals" (formula "126") (term "0,0"))
                                                                                                                              (rule "qeq_literals" (formula "126") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "126"))
                                                                                                                              (rule "true_left" (formula "126"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "126") (ifseqformula "58"))
                                                                                                                              (rule "polySimp_rightDist" (formula "126") (term "0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "126") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "126") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "126") (term "0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "126") (term "0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor2b" (formula "126") (term "0"))
                                                                                                                              (rule "add_literals" (formula "126") (term "1,1,0"))
                                                                                                                              (rule "times_zero_1" (formula "126") (term "1,0"))
                                                                                                                              (rule "polySimp_addLiterals" (formula "126") (term "0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "126") (term "0"))
                                                                                                                              (rule "add_literals" (formula "126") (term "0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "126"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "126") (term "0"))
                                                                                                                              (rule "nnf_imp2or" (formula "71") (term "0"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "70") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "16")) (ifInst ""  (formula "20")) (ifInst ""  (formula "213")))
                                                                                                                              (rule "translateJavaSubInt" (formula "70") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "70") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "70") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "70") (term "1,2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "70") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "70") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor2b" (formula "70") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "70") (term "1,1,0,0,0,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "70") (term "1,0,0,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "70") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "leq_literals" (formula "70") (term "0,0,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "70"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "70") (term "0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "70") (term "1,0,0,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1" (formula "70") (term "0,1,0,0,1,1"))
                                                                                                                              (rule "add_literals" (formula "70") (term "1,0,1,0,0,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "70") (term "0,1,0,0,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "70") (term "1,0,0,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "70"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "70") (term "1,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1" (formula "70") (term "0,1,0,0"))
                                                                                                                              (rule "add_literals" (formula "70") (term "1,0,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "70") (term "0,1,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "70") (term "1,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "70"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "70") (term "1,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1" (formula "70") (term "0,1,0,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "70") (term "1,0,1,0,0,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "70") (term "0,1,0,0,1,1,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "70") (term "1,0,0,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "70"))
                                                                                                                              (rule "applyEq" (formula "70") (term "0,0,0,1,1") (ifseqformula "71"))
                                                                                                                              (rule "applyEq" (formula "70") (term "0,1,0,1,1") (ifseqformula "71"))
                                                                                                                              (rule "applyEq" (formula "70") (term "0,0,0,1,1,1") (ifseqformula "71"))
                                                                                                                              (rule "applyEq" (formula "70") (term "1,1,0,1,1,1,1") (ifseqformula "71"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "70") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "70") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "70") (term "0,0") (ifseqformula "35"))
                                                                                                                              (rule "leq_literals" (formula "70") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "70"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "70") (term "0,0,1,1,1,1") (ifseqformula "35"))
                                                                                                                              (rule "leq_literals" (formula "70") (term "0,0,0,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "70"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "71") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "71") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "71") (term "0,0"))
                                                                                                                              (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "63"))
                                                                                                                              (rule "eqSymm" (formula "71"))
                                                                                                                              (rule "applyEq" (formula "70") (term "1,0,1,1,1,1") (ifseqformula "71"))
                                                                                                                              (rule "applyEq" (formula "70") (term "0,0,0,1,1") (ifseqformula "71"))
                                                                                                                              (rule "replace_known_left" (formula "70") (term "0,0,1,1") (ifseqformula "27"))
                                                                                                                               (builtin "One Step Simplification" (formula "70"))
                                                                                                                              (rule "applyEq" (formula "70") (term "0,0,0,1,1,1") (ifseqformula "71"))
                                                                                                                              (rule "applyEq" (formula "70") (term "0,0,1,1") (ifseqformula "71"))
                                                                                                                              (rule "newSym_eq" (formula "29") (inst "l=l_1") (inst "newSymDef=mul(int::final(bucket_pointers,
               de.wiesler.BucketPointers::$first_empty_position),
    Z(0(#)))"))
                                                                                                                              (rule "times_zero_1" (formula "29") (term "1,1"))
                                                                                                                              (rule "add_zero_right" (formula "29") (term "1"))
                                                                                                                              (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "29"))
                                                                                                                              (rule "eqSymm" (formula "30"))
                                                                                                                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                                                                                              (rule "applyEq" (formula "119") (term "0,0") (ifseqformula "30"))
                                                                                                                              (rule "applyEq" (formula "88") (term "1,0,0,1,1,1") (ifseqformula "30"))
                                                                                                                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                                                                                                              (rule "applyEq" (formula "65") (term "0") (ifseqformula "30"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "65"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "65") (term "0,0"))
                                                                                                                              (rule "applyEq" (formula "157") (term "1,0") (ifseqformula "30"))
                                                                                                                              (rule "applyEq" (formula "88") (term "1,1,1,1,1") (ifseqformula "30"))
                                                                                                                              (rule "applyEq" (formula "158") (term "0") (ifseqformula "30"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "158"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "65") (term "1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "65") (term "1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "65") (term "0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "0,1"))
                                                                                                                              (rule "shiftLeftDef" (formula "43") (term "0,1"))
                                                                                                                              (rule "eqSymm" (formula "43"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0"))
                                                                                                                              (rule "shiftLeftDef" (formula "45") (term "0,1"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "45") (term "1,1,0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "45") (term "1,1,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,0,1"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "45") (term "2,0,1"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "45") (term "2,0,1"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "45") (term "1,0,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1"))
                                                                                                                              (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1"))
                                                                                                                              (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "45"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "45") (term "0") (ifseqformula "43"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                                                                              (rule "shiftLeftDef" (formula "44") (term "0,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "44") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "44") (term "2,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "44") (term "2,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "44") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "44") (term "0") (ifseqformula "43"))
                                                                                                                              (rule "shiftLeftDef" (formula "47") (term "0,1,3,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "47") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "47") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "47") (term "0,1,1,0,1,3,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "47") (term "2,0,1,3,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "47") (term "2,0,1,3,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "47") (term "1,0,1,3,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,3,0"))
                                                                                                                              (rule "mul_literals" (formula "47") (term "1,0,0,0,0,1,3,0"))
                                                                                                                              (rule "add_literals" (formula "47") (term "0,0,0,0,1,3,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,3,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,1,3,0"))
                                                                                                                              (rule "applyEq" (formula "47") (term "1,3,0") (ifseqformula "43"))
                                                                                                                              (rule "shiftLeftDef" (formula "142") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "142") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "142") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "142") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "142") (term "1,1,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "142") (term "0,1,1,0,0,1,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "142") (term "2,0,0,1,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "142") (term "2,0,0,1,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "142") (term "1,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "142") (term "0,0,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "142") (term "1,0,0,0,0,0,1,0"))
                                                                                                                              (rule "add_zero_right" (formula "142") (term "0,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "142") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "142") (term "0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "142") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "applyEq" (formula "142") (term "0,1,0") (ifseqformula "43"))
                                                                                                                              (rule "shiftLeftDef" (formula "39") (term "0,3,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "39") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,3,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,3,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,3,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,3,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,3,0"))
                                                                                                                              (rule "mul_literals" (formula "39") (term "1,0,0,0,0,3,0"))
                                                                                                                              (rule "add_literals" (formula "39") (term "0,0,0,0,3,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,3,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,3,0"))
                                                                                                                              (rule "applyEq" (formula "39") (term "3,0") (ifseqformula "43"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "183") (term "1,4,0,1"))
                                                                                                                              (rule "translateJavaMulInt" (formula "183") (term "0,2,1,4,0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "183") (term "0,2,1,4,0,1"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "183") (term "1,4,0,1"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "183") (term "1,4,0,1"))
                                                                                                                              (rule "shiftLeftDef" (formula "143") (term "0,3,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "143") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "143") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "143") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "143") (term "1,1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "143") (term "0,1,1,0,3,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "143") (term "2,0,3,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "143") (term "2,0,3,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "143") (term "1,0,3,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "143") (term "0,0,3,0"))
                                                                                                                              (rule "mul_literals" (formula "143") (term "1,0,0,0,0,3,0"))
                                                                                                                              (rule "add_zero_right" (formula "143") (term "0,0,0,0,3,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "143") (term "0,0,0,3,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "143") (term "0,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "143") (term "0,0,0,3,0"))
                                                                                                                              (rule "applyEq" (formula "143") (term "3,0") (ifseqformula "43"))
                                                                                                                              (rule "shiftLeftDef" (formula "142") (term "0,2,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "142") (term "1,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "142") (term "1,1,0,2,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "142") (term "1,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "142") (term "1,1,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "142") (term "0,1,1,0,2,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "142") (term "2,0,2,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "142") (term "2,0,2,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "142") (term "1,0,2,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "142") (term "0,0,2,0"))
                                                                                                                              (rule "mul_literals" (formula "142") (term "1,0,0,0,0,2,0"))
                                                                                                                              (rule "add_zero_right" (formula "142") (term "0,0,0,0,2,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "142") (term "0,0,0,2,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "142") (term "0,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "142") (term "0,0,0,2,0"))
                                                                                                                              (rule "applyEq" (formula "142") (term "2,0") (ifseqformula "43"))
                                                                                                                              (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "183") (term "0,0"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "183") (term "1,0,0") (ifseqformula "80"))
                                                                                                                               (builtin "One Step Simplification" (formula "183") (ifInst ""  (formula "215")) (ifInst ""  (formula "20")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "183") (term "1,0") (ifseqformula "80"))
                                                                                                                              (rule "wellFormedAnon" (formula "183") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "183") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "183") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "183") (term "1,0,1,0") (ifseqformula "15"))
                                                                                                                               (builtin "One Step Simplification" (formula "183") (ifInst ""  (formula "16")) (ifInst ""  (formula "79")))
                                                                                                                              (rule "polySimp_addComm0" (formula "183") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "183") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "183") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "183") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "183") (term "0,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "183") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "183") (term "0,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "183") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "183") (term "0,0,0") (ifseqformula "60"))
                                                                                                                               (builtin "One Step Simplification" (formula "183"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "183") (term "0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "183") (term "1,0,1,1"))
                                                                                                                              (rule "applyEq" (formula "183") (term "1,0,0,1,1,1") (ifseqformula "30"))
                                                                                                                              (rule "applyEq" (formula "183") (term "1,0,1,1,1,1") (ifseqformula "30"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "183") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "183") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "183") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "183") (term "0,0") (ifseqformula "63"))
                                                                                                                               (builtin "One Step Simplification" (formula "183"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "184") (term "0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "184") (term "0,2,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "184") (term "0,2,0,0"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "184") (term "0,0"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "184") (term "0,0"))
                                                                                                                              (rule "shiftLeftDef" (formula "46") (term "0,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "46") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "46") (term "0,1,1,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "46") (term "2,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "46") (term "2,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "46") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "43"))
                                                                                                                              (rule "shiftLeftDef" (formula "40") (term "0,1,0,2,1"))
                                                                                                                              (rule "eqSymm" (formula "40"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,1,0,2,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,1,0,2,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,1,0,2,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,2,0"))
                                                                                                                              (rule "mul_literals" (formula "40") (term "1,0,0,0,0,1,0,2,0"))
                                                                                                                              (rule "add_zero_right" (formula "40") (term "0,0,0,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,2,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,0,2,0"))
                                                                                                                              (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "43"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "175") (term "1,0"))
                                                                                                                              (rule "replace_known_right" (formula "175") (term "0,1,1,0") (ifseqformula "186"))
                                                                                                                               (builtin "One Step Simplification" (formula "175") (ifInst ""  (formula "187")))
                                                                                                                              (rule "shiftLeftDef" (formula "48") (term "0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "48") (term "0,1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "48") (term "2,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "48") (term "2,0,1,1,1,0,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "48") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "48") (term "0,0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "48") (term "1,1,1,0,0,0") (ifseqformula "43"))
                                                                                                                              (rule "shiftLeftDef" (formula "48") (term "0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "48") (term "1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "48") (term "1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "48") (term "0,1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "48") (term "2,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "48") (term "2,0,1,1,1,1,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "48") (term "1,0,1,1,1,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,1,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,1,1,0"))
                                                                                                                              (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,1,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,1,1,1,1,0"))
                                                                                                                              (rule "applyEq" (formula "48") (term "1,1,1,1,0") (ifseqformula "43"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "149") (ifseqformula "153"))
                                                                                                                              (rule "mul_literals" (formula "149") (term "0,0"))
                                                                                                                              (rule "add_zero_left" (formula "149") (term "0"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "114") (ifseqformula "157"))
                                                                                                                              (rule "polySimp_rightDist" (formula "114") (term "0,0"))
                                                                                                                              (rule "mul_literals" (formula "114") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "114") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "114"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "114") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "114") (term "1"))
                                                                                                                              (rule "mul_literals" (formula "114") (term "0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "114") (term "1,1"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "25"))
                                                                                                                              (rule "polySimp_rightDist" (formula "61") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "61") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "61") (term "0"))
                                                                                                                              (rule "add_literals" (formula "61") (term "0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "154") (ifseqformula "159"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "154") (term "0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "154") (term "0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "154"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "154") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "154") (term "0"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "139") (ifseqformula "25"))
                                                                                                                              (rule "polySimp_rightDist" (formula "139") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "139") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "139") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "139") (term "0"))
                                                                                                                              (rule "add_literals" (formula "139") (term "0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "139"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                                                                                                              (rule "shiftLeftDef" (formula "49") (term "0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "49") (term "0,1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "49") (term "2,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "49") (term "2,0,1,1,1,0,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "49") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "49") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "49") (term "0,0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "49") (term "1,1,1,0,0,0") (ifseqformula "43"))
                                                                                                                              (rule "newSym_eq" (formula "10") (inst "l=l_2") (inst "newSymDef=mul(de.wiesler.BucketPointers::toReadCountOfBucket(heap,
                                                   bucket_pointers,
                                                   target_bucket),
    Z(0(#)))"))
                                                                                                                              (rule "times_zero_1" (formula "10") (term "1,1"))
                                                                                                                              (rule "add_zero_right" (formula "10") (term "1"))
                                                                                                                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                                                                                                                              (rule "eqSymm" (formula "11"))
                                                                                                                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                                                                                                                              (rule "applyEq" (formula "91") (term "0,1,1") (ifseqformula "11"))
                                                                                                                              (rule "jdiv_axiom" (formula "144") (term "0,0,0,0,1"))
                                                                                                                              (rule "eqSymm" (formula "144"))
                                                                                                                              (rule "replace_known_left" (formula "144") (term "0,0") (ifseqformula "139"))
                                                                                                                               (builtin "One Step Simplification" (formula "144"))
                                                                                                                              (rule "eqSymm" (formula "144"))
                                                                                                                              (rule "applyEq" (formula "145") (term "0,2,0,1,1,1,1") (ifseqformula "144"))
                                                                                                                              (rule "applyEq" (formula "145") (term "1,0,2,0,1,0,1,1") (ifseqformula "144"))
                                                                                                                              (rule "applyEq" (formula "145") (term "0,0,0,0,1") (ifseqformula "144"))
                                                                                                                              (rule "applyEq" (formula "145") (term "1,0,2,0,1,1,2,1") (ifseqformula "144"))
                                                                                                                              (rule "applyEq" (formula "145") (term "0,2,0,0,2,1") (ifseqformula "144"))
                                                                                                                              (rule "applyEq" (formula "145") (term "0,0,1,2,1") (ifseqformula "144"))
                                                                                                                              (rule "elimGcdLeq_antec" (formula "131") (inst "elimGcdRightDiv=Z(6(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "131") (term "1,0,1,0"))
                                                                                                                              (rule "leq_literals" (formula "131") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "131"))
                                                                                                                              (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                                                                                                              (rule "neg_literal" (formula "131") (term "0,0,0,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "131") (term "0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "131") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "131") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "131") (term "1,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "131") (term "1,0,0"))
                                                                                                                              (rule "add_literals" (formula "131") (term "0,0"))
                                                                                                                              (rule "qeq_literals" (formula "131") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "131"))
                                                                                                                              (rule "inEqSimp_subsumption4" (formula "62") (ifseqformula "64"))
                                                                                                                              (rule "greater_literals" (formula "62") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "62"))
                                                                                                                              (rule "mul_literals" (formula "62") (term "0,0"))
                                                                                                                              (rule "leq_literals" (formula "62") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "62"))
                                                                                                                              (rule "true_left" (formula "62"))
                                                                                                                              (rule "inEqSimp_subsumption4" (formula "139") (ifseqformula "141"))
                                                                                                                              (rule "mul_literals" (formula "139") (term "0,1,0"))
                                                                                                                              (rule "greater_literals" (formula "139") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "139"))
                                                                                                                              (rule "leq_literals" (formula "139") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "139"))
                                                                                                                              (rule "true_left" (formula "139"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "86") (term "1"))
                                                                                                                              (rule "eqSymm" (formula "86"))
                                                                                                                              (rule "translateJavaCastInt" (formula "86") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "86") (term "0,0"))
                                                                                                                              (rule "eqSymm" (formula "86"))
                                                                                                                              (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "124") (term "1,1,1,0") (inst "b=b"))
                                                                                                                              (rule "translateJavaCastInt" (formula "124") (term "1,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_elementsToReadOfBucketCountClassEq_in_de_wiesler_BucketPointers" (formula "124") (term "2,2,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "124") (term "3,2,2,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "124") (term "4,2,2,0,1,0"))
                                                                                                                              (rule "polySimp_homoEq" (formula "124") (term "1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "124") (term "0,1,0"))
                                                                                                                              (rule "polySimp_sepPosMonomial" (formula "124") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "124") (term "1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "124") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "124") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "124") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "124") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "124") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "124") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "124") (term "0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "97") (term "0,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "97"))
                                                                                                                              (rule "translateJavaMod" (formula "97") (term "0,1,1"))
                                                                                                                              (rule "jmod_axiom" (formula "97") (term "0,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "97") (term "1,0,1,1"))
                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "97") (term "1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "97") (term "0,1,1"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "84") (term "0,0,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "221")))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1,0") (ifseqformula "81"))
                                                                                                                               (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "21")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "84") (term "1,0") (ifseqformula "81"))
                                                                                                                              (rule "wellFormedAnon" (formula "84") (term "0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "84") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "84") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "84") (term "1,1,0") (ifseqformula "80"))
                                                                                                                               (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")))
                                                                                                                              (rule "polySimp_elimSub" (formula "84") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "84") (term "1,2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "84") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "84") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "84") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "84") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "84") (term "0,0,0") (ifseqformula "61"))
                                                                                                                               (builtin "One Step Simplification" (formula "84"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "84") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "84") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "84") (term "0,0,1,1,1,1") (ifseqformula "64"))
                                                                                                                               (builtin "One Step Simplification" (formula "84"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "84") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "84") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "84") (term "1,0,0,1,1,1,1,1") (ifseqformula "64"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "84") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "84") (term "1,1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "84") (term "1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "84") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "84") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "84"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "84") (term "0,0") (ifseqformula "64"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "84") (term "0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "84") (term "1,1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "84") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "84") (term "0,0,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "84") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "84"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "85") (term "0,0,1,1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "85") (term "0,0,0,1,1"))
                                                                                                                              (rule "castedGetAny" (formula "85") (term "0,0,0,1,1"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "85") (term "0"))
                                                                                                                              (rule "replace_known_right" (formula "85") (term "0,0") (ifseqformula "194"))
                                                                                                                               (builtin "One Step Simplification" (formula "85"))
                                                                                                                              (rule "andLeft" (formula "85"))
                                                                                                                              (rule "andLeft" (formula "86"))
                                                                                                                              (rule "replace_known_left" (formula "95") (term "0") (ifseqformula "85"))
                                                                                                                               (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "85")))
                                                                                                                              (rule "andLeft" (formula "95"))
                                                                                                                              (rule "replace_known_left" (formula "161") (term "0,1") (ifseqformula "85"))
                                                                                                                               (builtin "One Step Simplification" (formula "161") (ifInst ""  (formula "85")))
                                                                                                                              (rule "andLeft" (formula "161"))
                                                                                                                              (rule "andLeft" (formula "161"))
                                                                                                                              (rule "andLeft" (formula "163"))
                                                                                                                              (rule "replace_known_left" (formula "158") (term "0") (ifseqformula "85"))
                                                                                                                               (builtin "One Step Simplification" (formula "158") (ifInst ""  (formula "85")) (ifInst ""  (formula "162")))
                                                                                                                              (rule "andLeft" (formula "158"))
                                                                                                                              (rule "andLeft" (formula "159"))
                                                                                                                              (rule "andLeft" (formula "158"))
                                                                                                                              (rule "replace_known_left" (formula "84") (term "0,1") (ifseqformula "85"))
                                                                                                                               (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "85")) (ifInst ""  (formula "164")) (ifInst ""  (formula "165")) (ifInst ""  (formula "166")) (ifInst ""  (formula "167")))
                                                                                                                              (rule "andLeft" (formula "84"))
                                                                                                                              (rule "andLeft" (formula "85"))
                                                                                                                              (rule "replace_known_left" (formula "172") (term "0,1") (ifseqformula "87"))
                                                                                                                               (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "87")) (ifInst ""  (formula "160")) (ifInst ""  (formula "167")) (ifInst ""  (formula "162")) (ifInst ""  (formula "163")))
                                                                                                                              (rule "true_left" (formula "172"))
                                                                                                                              (rule "replace_known_left" (formula "199") (term "0") (ifseqformula "87"))
                                                                                                                               (builtin "One Step Simplification" (formula "199") (ifInst ""  (formula "87")) (ifInst ""  (formula "84")) (ifInst ""  (formula "161")) (ifInst ""  (formula "86")))
                                                                                                                              (rule "andLeft" (formula "199"))
                                                                                                                              (rule "andLeft" (formula "199"))
                                                                                                                              (rule "andLeft" (formula "201"))
                                                                                                                              (rule "andLeft" (formula "202"))
                                                                                                                              (rule "commute_and_2" (formula "130") (term "0,0"))
                                                                                                                              (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                                                                                              (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                                                                                                              (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,1,0"))
                                                                                                                              (rule "leq_literals" (formula "29") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "29"))
                                                                                                                              (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "29") (term "0,0"))
                                                                                                                              (rule "leq_literals" (formula "29") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "29"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "9") (term "1,3,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "236")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "wellFormedAnon" (formula "9") (term "1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "9") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "9") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "1,1,0") (ifseqformula "17"))
                                                                                                                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "18")))
                                                                                                                              (rule "polySimp_elimSub" (formula "9") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "9") (term "1,2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "9") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "9") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "62"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "9") (term "0,1,0,1,1,1,1") (ifseqformula "92"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "0,0,1,1,1,1") (ifseqformula "65"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "9") (term "0,0") (ifseqformula "65"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "9") (term "1,0,0,1,1,1,1,1") (ifseqformula "65"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "9") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "10") (term "1,3,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "10") (term "0,1,3,0"))
                                                                                                                              (rule "castedGetAny" (formula "10") (term "0,1,3,0"))
                                                                                                                              (rule "Contract_axiom_for_elementsToReadCountElement_in_BucketPointers" (formula "132") (term "1,1,1,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "239")) (ifInst ""  (formula "237")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "wellFormedAnon" (formula "132") (term "1,0"))
                                                                                                                              (rule "replace_known_left" (formula "132") (term "1,1,0") (ifseqformula "17"))
                                                                                                                               (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "18")))
                                                                                                                              (rule "Definition_axiom_for_elementsToReadCountElement_in_de_wiesler_BucketPointers" (formula "133") (term "1,1,1,0") (inst "b=b"))
                                                                                                                              (rule "translateJavaCastInt" (formula "133") (term "1,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "133") (term "1,3,1,2,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "133") (term "0,2,1,3,1,2,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "133") (term "0,2,1,3,1,2,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_elementsToReadOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "133") (term "2,2,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "133") (term "3,2,2,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "133") (term "2,2,2,0,1,0"))
                                                                                                                              (rule "polySimp_homoEq" (formula "133") (term "1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "133") (term "0,1,0"))
                                                                                                                              (rule "polySimp_sepPosMonomial" (formula "133") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "133") (term "1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "133") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "133") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "133") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "133") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "133") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "133") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "133") (term "0,1,1,0"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "155") (inst "i=i") (inst "i_0=i_0"))
                                                                                                                               (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "207")) (ifInst ""  (formula "44")))
                                                                                                                              (rule "expand_inInt" (formula "155") (term "1,0,0,1"))
                                                                                                                              (rule "expand_inInt" (formula "155") (term "1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "155") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "155") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "155") (term "1,0,1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "155") (term "0,1,1,0,0,1,0"))
                                                                                                                              (rule "andLeft" (formula "155"))
                                                                                                                              (rule "andLeft" (formula "155"))
                                                                                                                              (rule "andLeft" (formula "155"))
                                                                                                                              (rule "andLeft" (formula "155"))
                                                                                                                              (rule "andLeft" (formula "155"))
                                                                                                                              (rule "andLeft" (formula "156"))
                                                                                                                              (rule "andLeft" (formula "155"))
                                                                                                                              (rule "andLeft" (formula "155"))
                                                                                                                              (rule "notLeft" (formula "155"))
                                                                                                                              (rule "eqSymm" (formula "162") (term "1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "160") (term "3,0"))
                                                                                                                              (rule "translateJavaShiftLeftInt" (formula "156") (term "1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "162") (term "0,2,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "160") (term "3,0"))
                                                                                                                              (rule "mul_literals" (formula "160") (term "1,3,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "162") (term "0,2,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "162") (term "1,0,2,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "160") (term "3,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "162") (term "0,2,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "162") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "162") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "161") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "161") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "161") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "161") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "162") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "162") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "161") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "161") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "161") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "159"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "158"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "157"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "155"))
                                                                                                                              (rule "applyEq" (formula "157") (term "1,0") (ifseqformula "40"))
                                                                                                                              (rule "applyEq" (formula "41") (term "3,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "153") (term "0,1,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "47") (term "1") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "153") (term "2,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "49") (term "1,3,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "154") (term "3,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "48") (term "0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "157") (term "1,3,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "156") (term "0,0") (ifseqformula "40"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "156"))
                                                                                                                              (rule "applyEq" (formula "42") (term "1,0,2,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "50") (term "1,1,1,0,0,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "159") (term "1,0,1,0") (ifseqformula "40"))
                                                                                                                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "51") (term "1,1,1,0,0,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "50") (term "1,1,1,1,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "211") (term "0") (ifseqformula "40"))
                                                                                                                              (rule "applyEq" (formula "158") (term "0,1,0,0,1,1,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "158") (term "0,1,0,0,1,0,0,0") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "45") (term "1") (ifseqformula "155"))
                                                                                                                              (rule "applyEq" (formula "159") (term "0,1,0,0,1,0,0,0") (ifseqformula "155"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "158") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "158") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "158") (term "1,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "158") (term "0,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "158") (term "1,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "158") (term "1,1,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "158") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "158") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "158") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "158") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "158") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "158") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "158") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "158") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "158") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "158") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "158") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "158") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "shiftLeftDef" (formula "42") (term "0,1,0,2,1"))
                                                                                                                              (rule "eqSymm" (formula "42"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "42") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,1,0,2,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "42") (term "2,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "42") (term "2,0,1,0,2,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "42") (term "1,0,1,0,2,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1,0,2,0"))
                                                                                                                              (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,0,2,0"))
                                                                                                                              (rule "add_zero_right" (formula "42") (term "0,0,0,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,0,2,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,1,0,2,0"))
                                                                                                                              (rule "applyEq" (formula "42") (term "1,0,2,0") (ifseqformula "45"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "101") (term "0,1"))
                                                                                                                              (rule "replace_known_right" (formula "101") (term "0,0,1") (ifseqformula "213"))
                                                                                                                               (builtin "One Step Simplification" (formula "101"))
                                                                                                                              (rule "commute_and" (formula "133") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "6") (term "1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "6") (term "1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "6") (term "1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "6") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
                                                                                                                              (rule "polySimp_homoEq" (formula "6") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "6") (term "1,1,0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "6") (term "1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "69") (term "0,1,0,1,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "69"))
                                                                                                                              (rule "translateJavaAddInt" (formula "69") (term "0,4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "69") (term "3,0,2,1,0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "69") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "69") (term "4,0,2,1,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "69") (term "3,0,0,1,1,0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "69") (term "4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "69") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "69") (term "4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "69") (term "1,4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "69") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "69") (term "4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "69") (term "0,4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "69") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,1,0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "69") (term "1,0,1,0,1,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "69") (term "0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "69") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "69") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "93") (term "1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "241")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "wellFormedAnon" (formula "93") (term "1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "93") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "93") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "93") (term "1,1,0") (ifseqformula "17"))
                                                                                                                               (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "18")))
                                                                                                                              (rule "polySimp_elimSub" (formula "93") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "93") (term "1,2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "93") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "93") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "93") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "93") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "93") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "93") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "93") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "93") (term "0,0,0") (ifseqformula "62"))
                                                                                                                               (builtin "One Step Simplification" (formula "93"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "93") (term "1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "93") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "93") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "93") (term "0,1,0,1,1,1,1") (ifseqformula "92"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "93") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "93") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "93") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "93") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "93") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "93") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "93") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "93") (term "0,0,1,1,1,1") (ifseqformula "65"))
                                                                                                                               (builtin "One Step Simplification" (formula "93"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "94") (term "0,1,0,0,1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "94") (term "0,0,1,0,0,1"))
                                                                                                                              (rule "polySimp_homoEq" (formula "94"))
                                                                                                                              (rule "polySimp_addComm1" (formula "94") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "94") (term "0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "94") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "94") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "94") (term "0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "94") (term "0,0"))
                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "94"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "94") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "94") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "93") (term "1,0,0,1,1,1,1,1") (ifseqformula "65"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "93") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "93") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "93") (term "1,1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "93") (term "1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "93") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "93") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "93"))
                                                                                                                              (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "101") (term "0,1,1,0"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,0,0") (ifseqformula "82"))
                                                                                                                               (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "88")) (ifInst ""  (formula "242")) (ifInst ""  (formula "88")) (ifInst ""  (formula "87")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "101") (term "1,0") (ifseqformula "82"))
                                                                                                                              (rule "wellFormedAnon" (formula "101") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "101") (term "2,1,1,0,0,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "101") (term "2,0,1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "101") (term "1,1,0") (ifseqformula "81"))
                                                                                                                               (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
                                                                                                                              (rule "polySimp_addComm0" (formula "101") (term "2,1,1,0,0,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "101") (term "2,0,1,0,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "101") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "101") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "101") (term "0,0,0,0,1") (ifseqformula "85"))
                                                                                                                               (builtin "One Step Simplification" (formula "101"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "101") (term "1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "101") (term "1,0,1") (ifseqformula "168"))
                                                                                                                               (builtin "One Step Simplification" (formula "101"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0"))
                                                                                                                              (rule "replace_known_left" (formula "101") (term "0,0") (ifseqformula "62"))
                                                                                                                               (builtin "One Step Simplification" (formula "101"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "101") (term "0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "101") (term "0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "101") (term "0,0"))
                                                                                                                              (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "65"))
                                                                                                                               (builtin "One Step Simplification" (formula "101"))
                                                                                                                              (rule "andLeft" (formula "101"))
                                                                                                                              (rule "andLeft" (formula "101"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "104") (term "0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "104") (term "0,0,2,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "104") (term "0,2,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "104") (term "0,0,2,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "104") (term "0,2,0,1,1,0"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_19" (formula "104") (term "0,1,1,0"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_20" (formula "104") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "104") (term "1,0"))
                                                                                                                              (rule "applyEq" (formula "104") (term "0,0,1,0") (ifseqformula "91"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "104") (term "0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "104") (term "0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "104") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "104") (term "1,0,1,0"))
                                                                                                                              (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "104") (term "1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "245")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "wellFormedAnon" (formula "104") (term "1,0"))
                                                                                                                              (rule "replace_known_left" (formula "104") (term "1,1,0") (ifseqformula "17"))
                                                                                                                               (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "18")))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "104") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "104") (term "0,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "104") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "104") (term "0,0,0") (ifseqformula "62"))
                                                                                                                               (builtin "One Step Simplification" (formula "104"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "104") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "104") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "104") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "104") (term "0,0") (ifseqformula "65"))
                                                                                                                               (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "14")))
                                                                                                                              (rule "true_left" (formula "104"))
                                                                                                                              (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "104") (term "1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "104") (term "1,1,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "104") (term "1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "104") (term "0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "104"))
                                                                                                                              (rule "polySimp_addComm1" (formula "104") (term "0"))
                                                                                                                              (rule "applyEq" (formula "104") (term "1,0,0,1,0") (ifseqformula "94"))
                                                                                                                              (rule "polySimp_addComm1" (formula "104") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "104") (term "0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "104") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "104") (term "0,0,0,0,0,1,0"))
                                                                                                                              (rule "add_literals" (formula "104") (term "0,0,0,0,0,0,1,0"))
                                                                                                                              (rule "applyEq" (formula "104") (term "0,1,1,1,0") (ifseqformula "94"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "104") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "104") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "104") (term "0,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "104") (term "1,0,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "104") (term "1,0,1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "104") (term "0,0,1,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "104") (term "0,0,0,1,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "104") (term "1,1,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "104") (term "0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "104") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "104") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "104") (term "0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "104"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "104") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "104") (term "0"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "1"))
                                                                                                                              (rule "mul_literals" (formula "56") (term "0,0"))
                                                                                                                              (rule "add_zero_left" (formula "56") (term "0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                                                                                              (rule "commute_and_2" (formula "202") (term "0,0"))
                                                                                                                              (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "16") (term "0"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0,0") (ifseqformula "84"))
                                                                                                                               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "90")) (ifInst ""  (formula "246")) (ifInst ""  (formula "90")) (ifInst ""  (formula "105")) (ifInst ""  (formula "89")) (ifInst ""  (formula "23")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "16") (term "1,0") (ifseqformula "84"))
                                                                                                                              (rule "wellFormedAnon" (formula "16") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "16") (term "2,0,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "16") (term "2,1,1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "16") (term "1,1,0") (ifseqformula "83"))
                                                                                                                               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")) (ifInst ""  (formula "18")))
                                                                                                                              (rule "polySimp_addComm0" (formula "16") (term "2,0,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "16") (term "2,1,1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "16") (term "1,0,1") (ifseqformula "104"))
                                                                                                                               (builtin "One Step Simplification" (formula "16"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "16") (term "0,0,1") (ifseqformula "87"))
                                                                                                                               (builtin "One Step Simplification" (formula "16"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1"))
                                                                                                                              (rule "replace_known_left" (formula "16") (term "1,1") (ifseqformula "172"))
                                                                                                                               (builtin "One Step Simplification" (formula "16"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
                                                                                                                              (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "103"))
                                                                                                                               (builtin "One Step Simplification" (formula "16"))
                                                                                                                              (rule "true_left" (formula "16"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "16") (term "0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "16") (term "0,0,2,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "16") (term "0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,2,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "16") (term "0,2,0"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_19" (formula "16") (term "0"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_20" (formula "16") (term "0"))
                                                                                                                              (rule "inEqSimp_homoInEq1" (formula "16"))
                                                                                                                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                                                                              (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "92"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                                                                                              (rule "add_zero_left" (formula "16") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "16") (term "1,0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "94") (term "0,0") (ifseqformula "66"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "94") (term "0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "94") (term "1,1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "94") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "94") (term "0,0,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "94") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "9")))
                                                                                                                              (rule "true_left" (formula "94"))
                                                                                                                              (rule "applyEq" (formula "160") (term "0") (ifseqformula "159"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "80") (term "0,1"))
                                                                                                                              (rule "replace_known_right" (formula "80") (term "0,0,1") (ifseqformula "216"))
                                                                                                                               (builtin "One Step Simplification" (formula "80"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "81") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "244")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "wellFormedAnon" (formula "81") (term "1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "81") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "81") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "81") (term "0,1,0") (ifseqformula "18"))
                                                                                                                               (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "17")))
                                                                                                                              (rule "polySimp_elimSub" (formula "81") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "81") (term "1,2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "81") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "81") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "81") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "81") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "63"))
                                                                                                                               (builtin "One Step Simplification" (formula "81"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "81") (term "1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "81") (term "0,1,0,1,1,1,1") (ifseqformula "94"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "81") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "81") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "81") (term "0,0,1,1,1,1") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "81"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "81") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "82") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "82") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "82") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "82") (term "0,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "82") (term "0,1,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "82") (term "0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "82") (term "1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "82") (term "1,1,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "82") (term "1,1"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "82") (term "0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "82") (term "0,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "82") (term "0,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "82") (term "1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "82") (term "0,1"))
                                                                                                                              (rule "elimGcdGeq" (formula "98") (term "1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                              (rule "times_zero_1" (formula "98") (term "1,0,0,0,0,0,0,1,1"))
                                                                                                                              (rule "sub_literals" (formula "98") (term "0,0,0,0,0,0,0,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "98") (term "1,0,1,0,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "98") (term "0,0,0,1,0,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "98") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "polySimp_addLiterals" (formula "98") (term "0,0,0,0,0,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "98") (term "0,0,0,1,0,1,1"))
                                                                                                                              (rule "add_literals" (formula "98") (term "0,0,0,0,0,1,1"))
                                                                                                                              (rule "mul_literals" (formula "98") (term "0,0,0,1,0,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "98") (term "0,0,1,0,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "98") (term "0,0,0,1,1"))
                                                                                                                              (rule "add_literals" (formula "98") (term "1,1,0,0,0,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "98") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "98") (term "0,0,0,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "98") (term "0,0,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "polySimp_pullOutFactor0" (formula "98") (term "0,0,1,1"))
                                                                                                                              (rule "add_literals" (formula "98") (term "1,0,0,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "98") (term "0,0,1,1"))
                                                                                                                              (rule "leq_literals" (formula "98") (term "0,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "108") (term "0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "108") (term "0,0,2,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "108") (term "0,2,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "108") (term "0,0,2,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "108") (term "0,2,0,1,1,0"))
                                                                                                                              (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "108") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "108") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "108") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "108") (term "1,0,0,0") (ifseqformula "18"))
                                                                                                                               (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "22")) (ifInst ""  (formula "245")))
                                                                                                                              (rule "polySimp_addComm0" (formula "108") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "108") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "108") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "108") (term "0,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "108") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "108") (term "0,0,0") (ifseqformula "63"))
                                                                                                                               (builtin "One Step Simplification" (formula "108"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "108") (term "0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "108") (term "1,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "108") (term "0,0,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "108") (term "0,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "108") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "applyEq" (formula "108") (term "0,0,0,1,1,1") (ifseqformula "32"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "108") (term "0,0,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "108") (term "1,0,1,1,1,1") (ifseqformula "32"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "108") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "108") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "108") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "108") (term "0,0") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "108"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "109") (term "0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,2,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,2,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "109") (term "0,0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,0,2,0,0,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "109") (term "0,2,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,0,2,0,0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "109") (term "0,2,0,0,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "109") (term "1,1,0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,2,1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,2,1,1,0,0"))
                                                                                                                              (rule "inEqSimp_contradInEq5" (formula "56") (ifseqformula "119"))
                                                                                                                              (rule "mul_literals" (formula "56") (term "1,1,0"))
                                                                                                                              (rule "greater_literals" (formula "56") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "56"))
                                                                                                                              (rule "qeq_literals" (formula "56") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "56"))
                                                                                                                              (rule "closeFalse" (formula "56"))
                                                                                                                           )
                                                                                                                           (branch "CUT: result_1.<created> = TRUE FALSE"
                                                                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "137") (term "1,1"))
                                                                                                                              (rule "eqSymm" (formula "137") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "137") (term "0,0,1"))
                                                                                                                              (rule "castedGetAny" (formula "137") (term "0,0,1"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "137") (term "0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "137") (term "0,2,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "137") (term "0,2,0,0"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_3" (formula "137") (term "0,0"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_6" (formula "137") (term "0,0"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "136") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "195")) (ifInst ""  (formula "73")))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "136") (term "1,0") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "18")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "136") (term "1,0") (ifseqformula "66"))
                                                                                                                              (rule "wellFormedAnon" (formula "136") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "136") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "136") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "136") (term "1,1,0") (ifseqformula "65"))
                                                                                                                               (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                              (rule "polySimp_elimSub" (formula "136") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "136") (term "1,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "136") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "136") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor2b" (formula "136") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "136") (term "1,1,0,0,0,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "136") (term "1,0,0,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "136") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "leq_literals" (formula "136") (term "0,0,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "136"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "136") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "136") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "136") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "136") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1" (formula "136") (term "0,1,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "136") (term "1,0,1,0,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "136") (term "0,1,0,1,1,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "136") (term "1,0,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "136"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "136") (term "1,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1" (formula "136") (term "0,1,0,0"))
                                                                                                                              (rule "add_literals" (formula "136") (term "1,0,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "136") (term "0,1,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "136") (term "1,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "136"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "136") (term "1,0,0,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1" (formula "136") (term "0,1,0,0,1,1"))
                                                                                                                              (rule "add_literals" (formula "136") (term "1,0,1,0,0,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "136") (term "0,1,0,0,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "136") (term "1,0,0,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "136"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "136") (term "0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "136") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "136") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "137") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "196")) (ifInst ""  (formula "73")))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "137") (term "1,0") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "18")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "137") (term "1,0") (ifseqformula "66"))
                                                                                                                              (rule "wellFormedAnon" (formula "137") (term "0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "137") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "137") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "137") (term "0,0,1,0") (ifseqformula "14"))
                                                                                                                               (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "13")) (ifInst ""  (formula "65")))
                                                                                                                              (rule "polySimp_elimSub" (formula "137") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "137") (term "1,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "137") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "137") (term "0,2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "137") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "137") (term "0,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "137") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "137") (term "0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "137") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "137") (term "1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "137") (term "0,1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "137") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "137") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "137") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "137") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "137") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "137") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "137") (term "0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "137") (term "0,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "137") (term "1,0,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "137") (term "1,0,0,1,1") (ifseqformula "138"))
                                                                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "137") (term "1,0,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "137") (term "1,0,1,1,1,1,1") (ifseqformula "50"))
                                                                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "137") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "137") (term "0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "137") (term "1,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "137") (term "1,1,1,1,1,1") (ifseqformula "133"))
                                                                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "137") (term "1,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "137") (term "1,0,0") (ifseqformula "50"))
                                                                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "137") (term "0,0"))
                                                                                                                              (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "137") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "137") (term "0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "137") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "137") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "0,0"))
                                                                                                                              (rule "mul_literals" (formula "137") (term "1,0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "138") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "138") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "138") (term "0,0"))
                                                                                                                              (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "51"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "138"))
                                                                                                                              (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "141") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "141"))
                                                                                                                              (rule "translateJavaMod" (formula "141") (term "0"))
                                                                                                                              (rule "jmod_axiom" (formula "141") (term "0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "141") (term "1,0"))
                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "141"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "141") (term "0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "140") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "140") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "140") (term "0,0"))
                                                                                                                              (rule "applyEq" (formula "140") (term "0,0") (ifseqformula "51"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "140"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "135") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "135") (term "0,1"))
                                                                                                                              (rule "castedGetAny" (formula "135") (term "0,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "135"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "134") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "134") (term "0,1"))
                                                                                                                              (rule "castedGetAny" (formula "134") (term "0,1"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "134"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "132") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "132") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "132") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "100") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "100") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "100") (term "0,0"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "133") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "197")) (ifInst ""  (formula "73")))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "133") (term "1,0") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "18")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "133") (term "1,0") (ifseqformula "66"))
                                                                                                                              (rule "wellFormedAnon" (formula "133") (term "0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "133") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "133") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "133") (term "1,1,0") (ifseqformula "65"))
                                                                                                                               (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                                                                              (rule "polySimp_elimSub" (formula "133") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "133") (term "1,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "133") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "133") (term "0,2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "133") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "133") (term "0,2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "133") (term "2,0,1,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "133") (term "0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "133") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "133") (term "0,1,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "133") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "133") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "133") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "133") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "133") (term "0,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,0,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "133") (term "1,0,1,1,1,1,1") (ifseqformula "50"))
                                                                                                                               (builtin "One Step Simplification" (formula "133"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "133") (term "1,0,0") (ifseqformula "50"))
                                                                                                                               (builtin "One Step Simplification" (formula "133"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "133") (term "1,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "133") (term "1,1,1,1,1,1") (ifseqformula "134"))
                                                                                                                               (builtin "One Step Simplification" (formula "133"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "133") (term "0,0"))
                                                                                                                              (rule "mul_literals" (formula "133") (term "1,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "133") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "133") (term "0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "133") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "133") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "133") (term "0,0"))
                                                                                                                              (rule "mul_literals" (formula "133") (term "1,0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "134") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "134") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "134") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "134") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "134") (term "0,1"))
                                                                                                                              (rule "castedGetAny" (formula "134") (term "0,1"))
                                                                                                                              (rule "nnf_imp2or" (formula "29") (term "0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,2,0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,2,0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "95") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "95") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "95") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,2,1,1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,2,1,1,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "95") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "95") (term "0,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "95") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "95") (term "0,1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "95") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "95") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "95") (term "0,0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "95") (term "0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "95") (term "0,0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "95") (term "0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "138") (term "0,0") (ifseqformula "47"))
                                                                                                                              (rule "leq_literals" (formula "138") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "138"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "137") (term "0,1,1,1,1") (ifseqformula "31"))
                                                                                                                              (rule "leq_literals" (formula "137") (term "0,0,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "1,1,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "95") (term "0,1,1,0,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "95") (term "0,1,1,0,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "95") (term "0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "95") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "95") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "commute_and" (formula "95") (term "1,0,0"))
                                                                                                                              (rule "Definition_axiom_for_isSortedSeqTransitive_in_de_wiesler_Functions" (formula "28") (term "0") (inst "i=i") (inst "j=j"))
                                                                                                                               (builtin "One Step Simplification" (formula "28"))
                                                                                                                              (rule "expand_inInt" (formula "28") (term "1,0,0"))
                                                                                                                              (rule "expand_inInt" (formula "28") (term "1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "28") (term "1,1,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "28") (term "0,1,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "28") (term "1,1,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "28") (term "0,1,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
                                                                                                                              (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0") (ifseqformula "26"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                                                                                                                              (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "26"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "25") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "25"))
                                                                                                                              (rule "translateJavaMod" (formula "25") (term "0"))
                                                                                                                              (rule "jmod_axiom" (formula "25") (term "0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "25"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "133") (term "0,0") (ifseqformula "47"))
                                                                                                                              (rule "leq_literals" (formula "133") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "133"))
                                                                                                                              (rule "nnf_imp2or" (formula "83") (term "0"))
                                                                                                                              (rule "commute_and_2" (formula "95") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "137") (term "0,0") (ifseqformula "31"))
                                                                                                                              (rule "leq_literals" (formula "137") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                                                                              (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "105") (inst "b=b"))
                                                                                                                               (builtin "One Step Simplification" (formula "105"))
                                                                                                                              (rule "expand_inInt" (formula "105") (term "1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "105") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "105") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "107"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "105"))
                                                                                                                              (rule "andLeft" (formula "107"))
                                                                                                                              (rule "andLeft" (formula "107"))
                                                                                                                              (rule "andLeft" (formula "107"))
                                                                                                                              (rule "translateJavaAddInt" (formula "111") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "112") (term "0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "106") (term "0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "105") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "109") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "108") (term "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "106") (term "0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "105") (term "1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "110") (term "1"))
                                                                                                                              (rule "castedGetAny" (formula "110") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "108") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "107") (term "1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "111") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "106"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "105"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "106"))
                                                                                                                              (rule "applyEq" (formula "106") (term "0") (ifseqformula "51"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "106"))
                                                                                                                              (rule "applyEq" (formula "106") (term "0") (ifseqformula "51"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "106"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "106") (term "1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "106") (term "1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "106") (term "0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "106") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "106") (term "0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "106") (term "0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "106") (term "0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "109") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "109") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "109") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "109") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "106"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "106") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "106") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption6" (formula "105") (ifseqformula "31"))
                                                                                                                              (rule "mul_literals" (formula "105") (term "1,1,0"))
                                                                                                                              (rule "greater_literals" (formula "105") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "105"))
                                                                                                                              (rule "leq_literals" (formula "105") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "105"))
                                                                                                                              (rule "true_left" (formula "105"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "36") (inst "i=i") (inst "i_0=i_0"))
                                                                                                                               (builtin "One Step Simplification" (formula "36"))
                                                                                                                              (rule "expand_inInt" (formula "36") (term "1,0,0,1"))
                                                                                                                              (rule "expand_inInt" (formula "36") (term "1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0,1,0"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "38"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "36"))
                                                                                                                              (rule "andLeft" (formula "38"))
                                                                                                                              (rule "notLeft" (formula "36"))
                                                                                                                              (rule "notLeft" (formula "36"))
                                                                                                                              (rule "eqSymm" (formula "44") (term "1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "42") (term "3,0"))
                                                                                                                              (rule "translateJavaShiftLeftInt" (formula "38") (term "1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "44") (term "0,2,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "42") (term "3,0"))
                                                                                                                              (rule "mul_literals" (formula "42") (term "1,3,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "44") (term "0,2,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "44") (term "1,0,2,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "42") (term "3,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "44") (term "0,2,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "43") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "43") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "39"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "40"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "36"))
                                                                                                                              (rule "applyEq" (formula "41") (term "1") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "35") (term "1,0,2,0") (ifseqformula "38"))
                                                                                                                              (rule "eqSymm" (formula "35"))
                                                                                                                              (rule "applyEq" (formula "135") (term "0,1,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "34") (term "3,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "44") (term "1,0,1,0") (ifseqformula "33"))
                                                                                                                              (rule "applyEq" (formula "42") (term "1,3,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "136") (term "3,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "39") (term "0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "40") (term "1") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "33"))
                                                                                                                              (rule "applyEq" (formula "178") (term "0") (ifseqformula "33"))
                                                                                                                              (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "33"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "41"))
                                                                                                                              (rule "applyEq" (formula "135") (term "2,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "43") (term "0,1,0,0,1,1,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                                                                                                              (rule "applyEq" (formula "35") (term "1,0,2,0") (ifseqformula "38"))
                                                                                                                              (rule "eqSymm" (formula "35"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "43") (term "1,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "43") (term "0,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "43") (term "1,1,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "elimGcdGeq_antec" (formula "99") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                              (rule "leq_literals" (formula "99") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "99"))
                                                                                                                              (rule "mul_literals" (formula "99") (term "0,1,0,0,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "99") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "99") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addLiterals" (formula "99") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "99") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "99") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "99") (term "1,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "99") (term "1,0,0"))
                                                                                                                              (rule "add_literals" (formula "99") (term "0,0"))
                                                                                                                              (rule "leq_literals" (formula "99") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "99"))
                                                                                                                              (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "9") (term "0,0"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "0,1,1,1") (ifseqformula "10"))
                                                                                                                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "15")) (ifInst ""  (formula "19")) (ifInst ""  (formula "209")) (ifInst ""  (formula "11")))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "56"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "59"))
                                                                                                                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "84")))
                                                                                                                              (rule "true_left" (formula "9"))
                                                                                                                              (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "10") (inst "b=b"))
                                                                                                                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "113")) (ifInst ""  (formula "114")))
                                                                                                                              (rule "expand_inInt" (formula "10") (term "1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "12"))
                                                                                                                              (rule "andLeft" (formula "12"))
                                                                                                                              (rule "translateJavaCastInt" (formula "16") (term "0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "15") (term "1"))
                                                                                                                              (rule "translateJavaMulInt" (formula "11") (term "0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "10") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "14") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "13") (term "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "14") (term "1"))
                                                                                                                              (rule "castedGetAny" (formula "14") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "13") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "12") (term "1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "11"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "10"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "11"))
                                                                                                                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "62"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                                                                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "62"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "11"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                                                              (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "9") (term "0,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "9") (term "1,0,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                                                                                                              (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "12") (term "0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "12") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "12") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "replace_known_right" (formula "12") (term "0,1,0") (ifseqformula "210"))
                                                                                                                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "20")))
                                                                                                                              (rule "polySimp_addComm0" (formula "12") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "12") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "57"))
                                                                                                                               (builtin "One Step Simplification" (formula "12"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,1"))
                                                                                                                              (rule "applyEq" (formula "12") (term "0,1,0,1,1") (ifseqformula "68"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "60"))
                                                                                                                               (builtin "One Step Simplification" (formula "12"))
                                                                                                                              (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "13") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "13") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "13") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "13") (term "1,0,0,0") (ifseqformula "17"))
                                                                                                                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "21")) (ifInst ""  (formula "211")))
                                                                                                                              (rule "polySimp_addComm0" (formula "13") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "13") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "58"))
                                                                                                                               (builtin "One Step Simplification" (formula "13"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "13") (term "0,0,1,1,1,1") (ifseqformula "69"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "13") (term "0,1,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "13") (term "0,1,0,1,1") (ifseqformula "69"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "61"))
                                                                                                                               (builtin "One Step Simplification" (formula "13"))
                                                                                                                              (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "14") (term "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "212")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "wellFormedAnon" (formula "14") (term "1,0"))
                                                                                                                              (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "18"))
                                                                                                                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "59"))
                                                                                                                               (builtin "One Step Simplification" (formula "14"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "62"))
                                                                                                                               (builtin "One Step Simplification" (formula "14"))
                                                                                                                              (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "15") (term "1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "15") (term "1,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "15"))
                                                                                                                              (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "84"))
                                                                                                                              (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "84"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "15") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "15") (term "0,0,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "15") (term "0,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "15") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "15") (term "1,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "15"))
                                                                                                                              (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "35"))
                                                                                                                              (rule "greater_literals" (formula "10") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "10"))
                                                                                                                              (rule "mul_literals" (formula "10") (term "1,0"))
                                                                                                                              (rule "leq_literals" (formula "10") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "10"))
                                                                                                                              (rule "true_left" (formula "10"))
                                                                                                                              (rule "lenNonNegative" (formula "29") (term "0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "29"))
                                                                                                                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                                                                              (rule "mul_literals" (formula "29") (term "1"))
                                                                                                                              (rule "arrayLengthNotNegative" (formula "26") (term "1"))
                                                                                                                              (rule "arrayLengthIsAShort" (formula "27") (term "1"))
                                                                                                                              (rule "expand_inShort" (formula "27"))
                                                                                                                              (rule "replace_short_MIN" (formula "27") (term "0,1"))
                                                                                                                              (rule "replace_short_MAX" (formula "27") (term "1,0"))
                                                                                                                              (rule "andLeft" (formula "27"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "28"))
                                                                                                                              (rule "seqGetAlphaCast" (formula "34") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "34") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                                                                              (rule "true_left" (formula "34"))
                                                                                                                              (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "88") (inst "b=b"))
                                                                                                                               (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "120")) (ifInst ""  (formula "121")))
                                                                                                                              (rule "expand_inInt" (formula "88") (term "1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "andLeft" (formula "88"))
                                                                                                                              (rule "andLeft" (formula "88"))
                                                                                                                              (rule "andLeft" (formula "88"))
                                                                                                                              (rule "andLeft" (formula "88"))
                                                                                                                              (rule "andLeft" (formula "88"))
                                                                                                                              (rule "andLeft" (formula "90"))
                                                                                                                              (rule "andLeft" (formula "90"))
                                                                                                                              (rule "translateJavaCastInt" (formula "94") (term "0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "93") (term "1"))
                                                                                                                              (rule "translateJavaMulInt" (formula "89") (term "0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "88") (term "1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "92") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "91") (term "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "89") (term "0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "88") (term "1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "92") (term "1"))
                                                                                                                              (rule "castedGetAny" (formula "92") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "91") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "90") (term "1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "92") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "92") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "92") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "89"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "88"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "89"))
                                                                                                                              (rule "applyEq" (formula "89") (term "0") (ifseqformula "66"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "89"))
                                                                                                                              (rule "applyEq" (formula "89") (term "0") (ifseqformula "66"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "89"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "89") (term "0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "89") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "89") (term "0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "89") (term "0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "89") (term "0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "90") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "90") (term "1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "90") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "90") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "90") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "89"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "89") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "89") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "38"))
                                                                                                                              (rule "leq_literals" (formula "32") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                                                                              (rule "true_left" (formula "32"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "158"))
                                                                                                                              (rule "mul_literals" (formula "30") (term "0,0"))
                                                                                                                              (rule "add_zero_left" (formula "30") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                                                                                                              (rule "leq_literals" (formula "28") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "28"))
                                                                                                                              (rule "true_left" (formula "28"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "36"))
                                                                                                                              (rule "leq_literals" (formula "26") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "26"))
                                                                                                                              (rule "true_left" (formula "26"))
                                                                                                                              (rule "inEqSimp_subsumption6" (formula "86") (ifseqformula "36"))
                                                                                                                              (rule "mul_literals" (formula "86") (term "1,1,0"))
                                                                                                                              (rule "greater_literals" (formula "86") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "86"))
                                                                                                                              (rule "leq_literals" (formula "86") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "86"))
                                                                                                                              (rule "true_left" (formula "86"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "43") (term "1"))
                                                                                                                              (rule "mod_axiom" (formula "43") (term "1,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1"))
                                                                                                                              (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                                                                                              (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "140") (term "0,1,0"))
                                                                                                                              (rule "mod_axiom" (formula "140") (term "1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "140") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "39") (term "3,0"))
                                                                                                                              (rule "mod_axiom" (formula "39") (term "1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,3,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "47") (term "1,3,0"))
                                                                                                                              (rule "mod_axiom" (formula "47") (term "1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "141") (term "3,0"))
                                                                                                                              (rule "mod_axiom" (formula "141") (term "1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "141") (term "1,1,0,3,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "44") (term "0"))
                                                                                                                              (rule "mod_axiom" (formula "44") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "45") (term "1"))
                                                                                                                              (rule "mod_axiom" (formula "45") (term "1,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "46") (term "0"))
                                                                                                                              (rule "mod_axiom" (formula "46") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "140") (term "2,0"))
                                                                                                                              (rule "mod_axiom" (formula "140") (term "1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "140") (term "1,1,0,2,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "40") (term "1,0,2,0"))
                                                                                                                              (rule "eqSymm" (formula "40"))
                                                                                                                              (rule "mod_axiom" (formula "40") (term "1,0,1,0,2,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,2,1"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "48") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mod_axiom" (formula "48") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "109") (term "0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,2,0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,2,0,1,0,1,0,1,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "48") (term "1,1,1,1,0"))
                                                                                                                              (rule "mod_axiom" (formula "48") (term "1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "109") (term "0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "109") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "109") (term "0,0,1,1,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "109") (term "0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "109") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "109") (term "0,0,0,1,1,0,0,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "49") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mod_axiom" (formula "49") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "109") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,2,1,1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,2,1,1,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "109") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "109") (term "0,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "109") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "109") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "109") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "109") (term "0,1,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "109") (term "1,1,0,0,1,1,0"))
                                                                                                                              (rule "nnf_imp2or" (formula "66") (term "0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "109") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "109") (term "0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "109") (term "0,2,0,0,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "109") (term "1,1,0,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "109") (term "0,1,1,0,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "109") (term "0,1,1,0,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "109") (term "0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "109") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "castedGetAny" (formula "109") (term "0,0,0,0,1,0,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "109") (term "0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "109") (term "0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "109") (term "0,2,0,0,1,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "109") (term "0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "109") (term "0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "109") (term "0,2,0,0,0,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "109") (term "0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "109") (term "0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "109") (term "0,2,0,1,1,1,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "109") (term "0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "109") (term "0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "109") (term "0,0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "109") (term "0,0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "109") (term "0,2,0,1,0,1,0,0,1,0"))
                                                                                                                              (rule "commute_and" (formula "109") (term "1,0,0"))
                                                                                                                              (rule "newSym_eq" (formula "157") (inst "l=l_1") (inst "newSymDef=mul(de.wiesler.BucketPointers::lastReadOf(heapAfter_increment_write,
                                          bucket_pointers,
                                          target_bucket),
    Z(0(#)))"))
                                                                                                                              (rule "times_zero_1" (formula "157") (term "1,1"))
                                                                                                                              (rule "add_zero_right" (formula "157") (term "1"))
                                                                                                                              (rule "applyEq" (formula "158") (term "0,0") (ifseqformula "157"))
                                                                                                                              (rule "eqSymm" (formula "158"))
                                                                                                                              (rule "applyEq" (formula "150") (term "1") (ifseqformula "158"))
                                                                                                                              (rule "applyEq" (formula "157") (term "0,0") (ifseqformula "158"))
                                                                                                                              (rule "applyEq" (formula "151") (term "1") (ifseqformula "158"))
                                                                                                                              (rule "applyEq" (formula "182") (term "1,4,0,1") (ifseqformula "158"))
                                                                                                                              (rule "polySimp_addComm0" (formula "182") (term "4,0,1"))
                                                                                                                              (rule "applyEq" (formula "182") (term "0,0") (ifseqformula "158"))
                                                                                                                              (rule "inEqSimp_homoInEq1" (formula "182") (term "0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "182") (term "1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "182") (term "0,0"))
                                                                                                                              (rule "applyEq" (formula "91") (term "1,1,0,0") (ifseqformula "158"))
                                                                                                                              (rule "applyEq" (formula "155") (term "1,1") (ifseqformula "158"))
                                                                                                                              (rule "applyEq" (formula "91") (term "0,1,0") (ifseqformula "158"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "182") (term "0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "182") (term "1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "182") (term "1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "182") (term "1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "182") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "127") (ifseqformula "57"))
                                                                                                                              (rule "polySimp_rightDist" (formula "127") (term "0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "127") (term "0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "127") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "127") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "127") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "127") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "127"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "127") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption0" (formula "218") (term "1") (ifseqformula "127"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "218") (term "0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "218") (term "1,0,0,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "218") (term "1,0,0,1"))
                                                                                                                              (rule "mul_literals" (formula "218") (term "0,1,0,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "218") (term "1,1,0,0,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "218") (term "0,0,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "218") (term "0,0,0,1"))
                                                                                                                              (rule "add_literals" (formula "218") (term "0,0,0,0,1"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "218") (term "0,0,1"))
                                                                                                                              (rule "add_literals" (formula "218") (term "1,1,0,0,1"))
                                                                                                                              (rule "times_zero_1" (formula "218") (term "1,0,0,1"))
                                                                                                                              (rule "add_zero_right" (formula "218") (term "0,0,1"))
                                                                                                                              (rule "qeq_literals" (formula "218") (term "0,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "218"))
                                                                                                                              (rule "inEqSimp_geqRight" (formula "218"))
                                                                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                                                              (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                                                              (rule "inEqSimp_subsumption0" (formula "128") (ifseqformula "1"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "128") (term "0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "128") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "128") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "128") (term "0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "128") (term "0,0,0"))
                                                                                                                              (rule "add_literals" (formula "128") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "128") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "128") (term "1,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "128") (term "1,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "128") (term "0,0"))
                                                                                                                              (rule "qeq_literals" (formula "128") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "128"))
                                                                                                                              (rule "true_left" (formula "128"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "128") (ifseqformula "60"))
                                                                                                                              (rule "polySimp_rightDist" (formula "128") (term "0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "128") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "128") (term "1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "128") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "128") (term "0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "128") (term "0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor2b" (formula "128") (term "0"))
                                                                                                                              (rule "add_literals" (formula "128") (term "1,1,0"))
                                                                                                                              (rule "times_zero_1" (formula "128") (term "1,0"))
                                                                                                                              (rule "polySimp_addLiterals" (formula "128") (term "0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "128") (term "0"))
                                                                                                                              (rule "add_literals" (formula "128") (term "0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "128"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "128") (term "0"))
                                                                                                                              (rule "commute_and_2" (formula "110") (term "0,0,0"))
                                                                                                                              (rule "nnf_imp2or" (formula "73") (term "0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "72") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "72") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "72") (term "0,0"))
                                                                                                                              (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "65"))
                                                                                                                              (rule "eqSymm" (formula "72"))
                                                                                                                              (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "72"))
                                                                                                                              (rule "applyEq" (formula "12") (term "1,1,0,1,1") (ifseqformula "72"))
                                                                                                                              (rule "applyEq" (formula "13") (term "1,0,1,1,1,1") (ifseqformula "72"))
                                                                                                                              (rule "replace_known_left" (formula "13") (term "0,1,1,1,1") (ifseqformula "158"))
                                                                                                                               (builtin "One Step Simplification" (formula "13"))
                                                                                                                              (rule "newSym_eq" (formula "31") (inst "l=l_2") (inst "newSymDef=mul(int::final(bucket_pointers,
               de.wiesler.BucketPointers::$first_empty_position),
    Z(0(#)))"))
                                                                                                                              (rule "times_zero_1" (formula "31") (term "1,1"))
                                                                                                                              (rule "add_zero_right" (formula "31") (term "1"))
                                                                                                                              (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                                                                                              (rule "eqSymm" (formula "32"))
                                                                                                                              (rule "applyEq" (formula "13") (term "0,0,0,1,1,1") (ifseqformula "32"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "13") (term "0,0,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "67") (term "0") (ifseqformula "32"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "67"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "67") (term "1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "67") (term "0,0"))
                                                                                                                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                                                                                                                              (rule "applyEq" (formula "159") (term "0") (ifseqformula "32"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "159"))
                                                                                                                              (rule "applyEq" (formula "89") (term "1,0,0,1,1,1") (ifseqformula "32"))
                                                                                                                              (rule "applyEq" (formula "120") (term "0,0") (ifseqformula "32"))
                                                                                                                              (rule "applyEq" (formula "158") (term "1,0") (ifseqformula "32"))
                                                                                                                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                                                                                              (rule "applyEq" (formula "89") (term "1,0,1,1,1,1") (ifseqformula "32"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "67") (term "0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "67") (term "0,1"))
                                                                                                                              (rule "shiftLeftDef" (formula "45") (term "0,1"))
                                                                                                                              (rule "eqSymm" (formula "45"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "45") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "45") (term "2,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "45") (term "2,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "45") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,0"))
                                                                                                                              (rule "shiftLeftDef" (formula "143") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "143") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "143") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "143") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "143") (term "1,1,1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "143") (term "0,1,1,0,0,1,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "143") (term "2,0,0,1,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "143") (term "2,0,0,1,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "143") (term "1,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "143") (term "0,0,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "143") (term "1,0,0,0,0,0,1,0"))
                                                                                                                              (rule "add_literals" (formula "143") (term "0,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "143") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "143") (term "0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "143") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "applyEq" (formula "143") (term "0,1,0") (ifseqformula "45"))
                                                                                                                              (rule "shiftLeftDef" (formula "41") (term "0,3,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "41") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "41") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,3,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "41") (term "2,0,3,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "41") (term "2,0,3,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "41") (term "1,0,3,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,3,0"))
                                                                                                                              (rule "mul_literals" (formula "41") (term "1,0,0,0,0,3,0"))
                                                                                                                              (rule "add_literals" (formula "41") (term "0,0,0,0,3,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,3,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,3,0"))
                                                                                                                              (rule "applyEq" (formula "41") (term "3,0") (ifseqformula "45"))
                                                                                                                              (rule "shiftLeftDef" (formula "49") (term "0,1,3,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "49") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "49") (term "0,1,1,0,1,3,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "49") (term "2,0,1,3,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "49") (term "2,0,1,3,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "49") (term "1,0,1,3,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,3,0"))
                                                                                                                              (rule "mul_literals" (formula "49") (term "1,0,0,0,0,1,3,0"))
                                                                                                                              (rule "add_literals" (formula "49") (term "0,0,0,0,1,3,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,3,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0,1,3,0"))
                                                                                                                              (rule "applyEq" (formula "49") (term "1,3,0") (ifseqformula "45"))
                                                                                                                              (rule "shiftLeftDef" (formula "144") (term "0,3,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "144") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "144") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "144") (term "1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "144") (term "1,1,1,0,3,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "144") (term "0,1,1,0,3,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "144") (term "2,0,3,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "144") (term "2,0,3,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "144") (term "1,0,3,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "144") (term "0,0,3,0"))
                                                                                                                              (rule "mul_literals" (formula "144") (term "1,0,0,0,0,3,0"))
                                                                                                                              (rule "add_zero_right" (formula "144") (term "0,0,0,0,3,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "144") (term "0,0,0,3,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "144") (term "0,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "144") (term "0,0,0,3,0"))
                                                                                                                              (rule "applyEq" (formula "144") (term "3,0") (ifseqformula "45"))
                                                                                                                              (rule "shiftLeftDef" (formula "46") (term "0,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "46") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "46") (term "0,1,1,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "46") (term "2,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "46") (term "2,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "46") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "46") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "45"))
                                                                                                                              (rule "shiftLeftDef" (formula "47") (term "0,1"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "47") (term "1,1,0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "47") (term "1,1,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "47") (term "0,1,1,0,1"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "47") (term "2,0,1"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "47") (term "2,0,1"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "47") (term "1,0,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1"))
                                                                                                                              (rule "mul_literals" (formula "47") (term "1,0,0,0,0,1"))
                                                                                                                              (rule "add_zero_right" (formula "47") (term "0,0,0,0,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "47"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "47") (term "0") (ifseqformula "45"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "47"))
                                                                                                                              (rule "shiftLeftDef" (formula "48") (term "0,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "48") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "48") (term "0,1,1,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "48") (term "2,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "48") (term "2,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "48") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "48") (term "0") (ifseqformula "45"))
                                                                                                                              (rule "shiftLeftDef" (formula "143") (term "0,2,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "143") (term "1,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "143") (term "1,1,0,2,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "143") (term "1,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "143") (term "1,1,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "143") (term "0,1,1,0,2,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "143") (term "2,0,2,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "143") (term "2,0,2,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "143") (term "1,0,2,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "143") (term "0,0,2,0"))
                                                                                                                              (rule "mul_literals" (formula "143") (term "1,0,0,0,0,2,0"))
                                                                                                                              (rule "add_zero_right" (formula "143") (term "0,0,0,0,2,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "143") (term "0,0,0,2,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "143") (term "0,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "143") (term "0,0,0,2,0"))
                                                                                                                              (rule "applyEq" (formula "143") (term "2,0") (ifseqformula "45"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "42") (term "1,0,2,0"))
                                                                                                                              (rule "mod_axiom" (formula "42") (term "1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "eqSymm" (formula "42"))
                                                                                                                              (rule "shiftLeftDef" (formula "50") (term "0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "50") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "50") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "50") (term "0,1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "50") (term "2,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "50") (term "2,0,1,1,1,0,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "50") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "50") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "50") (term "0,0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "50") (term "1,1,1,0,0,0") (ifseqformula "45"))
                                                                                                                              (rule "shiftLeftDef" (formula "50") (term "0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "50") (term "1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "50") (term "1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "50") (term "0,1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "50") (term "2,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "50") (term "2,0,1,1,1,1,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "50") (term "1,0,1,1,1,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,1,1,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "50") (term "1,0,0,0,0,1,1,1,1,0"))
                                                                                                                              (rule "add_literals" (formula "50") (term "0,0,0,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,1,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0,1,1,1,1,0"))
                                                                                                                              (rule "applyEq" (formula "50") (term "1,1,1,1,0") (ifseqformula "45"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "177") (term "1,0"))
                                                                                                                              (rule "replace_known_right" (formula "177") (term "0,0,1,0") (ifseqformula "189"))
                                                                                                                               (builtin "One Step Simplification" (formula "177") (ifInst ""  (formula "188")))
                                                                                                                              (rule "elimGcdLeq" (formula "185") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(2(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "185") (term "1,0,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "185") (term "0,1,0,0,0,0,0,0,0"))
                                                                                                                              (rule "sub_literals" (formula "185") (term "0,0,0,0,0,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "185") (term "1,0,1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "185") (term "0,0,0,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "185") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "185") (term "1,1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "185") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "185") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "185") (term "0,1,0,0"))
                                                                                                                              (rule "add_literals" (formula "185") (term "1,1,0,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "185") (term "1,0,1,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "185") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "185") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "185") (term "0,1,0,0,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "185") (term "0,0,1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "185") (term "0,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "185") (term "0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "185") (term "0,0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "185") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "185") (term "0,0,1,0,0"))
                                                                                                                              (rule "add_literals" (formula "185") (term "0,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "185") (term "0,1,0,0"))
                                                                                                                              (rule "add_literals" (formula "185") (term "1,1,0,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "185") (term "1,0,1,0,0"))
                                                                                                                              (rule "add_literals" (formula "185") (term "0,1,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "185") (term "1,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "185"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "185") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "185") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "185") (term "0,0,0,0,0"))
                                                                                                                              (rule "add_zero_left" (formula "185") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0" (formula "185") (term "0,0,0"))
                                                                                                                              (rule "add_literals" (formula "185") (term "1,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "185") (term "0,0,0"))
                                                                                                                              (rule "leq_literals" (formula "185") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "185"))
                                                                                                                              (rule "shiftLeftDef" (formula "51") (term "0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "51") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "51") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "51") (term "2,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "51") (term "2,0,1,1,1,0,0,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "51") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "51") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "51") (term "0,0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0,1,1,1,0,0,0"))
                                                                                                                              (rule "applyEq" (formula "51") (term "1,1,1,0,0,0") (ifseqformula "45"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "138") (ifseqformula "27"))
                                                                                                                              (rule "polySimp_rightDist" (formula "138") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "138") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "138") (term "0"))
                                                                                                                              (rule "add_literals" (formula "138") (term "0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "138"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "138") (term "0"))
                                                                                                                              (rule "inEqSimp_subsumption4" (formula "138") (ifseqformula "140"))
                                                                                                                              (rule "mul_literals" (formula "138") (term "0,1,0"))
                                                                                                                              (rule "greater_literals" (formula "138") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "138"))
                                                                                                                              (rule "leq_literals" (formula "138") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "138"))
                                                                                                                              (rule "true_left" (formula "138"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "27"))
                                                                                                                              (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "63") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "63") (term "0"))
                                                                                                                              (rule "add_literals" (formula "63") (term "0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                                                                                                              (rule "jdiv_axiom" (formula "142") (term "0,0,0,0,1"))
                                                                                                                              (rule "eqSymm" (formula "142"))
                                                                                                                              (rule "replace_known_left" (formula "142") (term "0,0") (ifseqformula "138"))
                                                                                                                               (builtin "One Step Simplification" (formula "142"))
                                                                                                                              (rule "eqSymm" (formula "142"))
                                                                                                                              (rule "applyEq" (formula "143") (term "0,0,1,2,1") (ifseqformula "142"))
                                                                                                                              (rule "applyEq" (formula "143") (term "0,2,0,1,1,1,1") (ifseqformula "142"))
                                                                                                                              (rule "applyEq" (formula "143") (term "0,2,0,0,2,1") (ifseqformula "142"))
                                                                                                                              (rule "applyEq" (formula "143") (term "0,0,0,0,1") (ifseqformula "142"))
                                                                                                                              (rule "applyEq" (formula "143") (term "1,0,2,0,1,0,1,1") (ifseqformula "142"))
                                                                                                                              (rule "applyEq" (formula "143") (term "1,0,2,0,1,1,2,1") (ifseqformula "142"))
                                                                                                                              (rule "inEqSimp_subsumption4" (formula "63") (ifseqformula "65"))
                                                                                                                              (rule "mul_literals" (formula "63") (term "0,1,0"))
                                                                                                                              (rule "greater_literals" (formula "63") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "63"))
                                                                                                                              (rule "leq_literals" (formula "63") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "63"))
                                                                                                                              (rule "true_left" (formula "63"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "86") (term "1"))
                                                                                                                              (rule "eqSymm" (formula "86"))
                                                                                                                              (rule "translateJavaCastInt" (formula "86") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "86") (term "0,0"))
                                                                                                                              (rule "eqSymm" (formula "86"))
                                                                                                                              (rule "elimGcdLeq_antec" (formula "129") (inst "elimGcdRightDiv=Z(6(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "129") (term "1,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "129") (term "1,0,0,0,0,1,0"))
                                                                                                                              (rule "neg_literal" (formula "129") (term "0,0,0,0,0,1,0"))
                                                                                                                              (rule "leq_literals" (formula "129") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "129"))
                                                                                                                              (rule "mul_literals" (formula "129") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "129") (term "0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "129") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "129") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "129") (term "1,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "129") (term "1,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "129") (term "0,0"))
                                                                                                                              (rule "qeq_literals" (formula "129") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "129"))
                                                                                                                              (rule "Definition_axiom_for_elementsToReadCountClassEq_in_de_wiesler_BucketPointers" (formula "123") (term "1,1,1,0") (inst "b=b"))
                                                                                                                              (rule "translateJavaCastInt" (formula "123") (term "1,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "123") (term "1,4,1,2,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "123") (term "0,2,1,4,1,2,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "123") (term "0,2,1,4,1,2,0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_elementsToReadOfBucketCountClassEq_in_de_wiesler_BucketPointers" (formula "123") (term "2,2,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "123") (term "4,2,2,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "123") (term "3,2,2,0,1,0"))
                                                                                                                              (rule "polySimp_homoEq" (formula "123") (term "1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "123") (term "0,1,0"))
                                                                                                                              (rule "polySimp_sepPosMonomial" (formula "123") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "123") (term "1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "123") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "123") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "123") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "123") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "123") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "123") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "123") (term "0,1,1,0"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "97") (term "0,1"))
                                                                                                                              (rule "replace_known_right" (formula "97") (term "0,0,1") (ifseqformula "191"))
                                                                                                                               (builtin "One Step Simplification" (formula "97"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "84") (term "0"))
                                                                                                                              (rule "replace_known_right" (formula "84") (term "0,0") (ifseqformula "191"))
                                                                                                                               (builtin "One Step Simplification" (formula "84"))
                                                                                                                              (rule "andLeft" (formula "84"))
                                                                                                                              (rule "andLeft" (formula "85"))
                                                                                                                              (rule "replace_known_left" (formula "158") (term "0") (ifseqformula "84"))
                                                                                                                               (builtin "One Step Simplification" (formula "158") (ifInst ""  (formula "84")))
                                                                                                                              (rule "andLeft" (formula "158"))
                                                                                                                              (rule "andLeft" (formula "158"))
                                                                                                                              (rule "andLeft" (formula "160"))
                                                                                                                              (rule "replace_known_left" (formula "94") (term "0,1") (ifseqformula "84"))
                                                                                                                               (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "84")))
                                                                                                                              (rule "andLeft" (formula "94"))
                                                                                                                              (rule "replace_known_left" (formula "155") (term "0,1") (ifseqformula "84"))
                                                                                                                               (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "84")) (ifInst ""  (formula "160")))
                                                                                                                              (rule "andLeft" (formula "155"))
                                                                                                                              (rule "andLeft" (formula "155"))
                                                                                                                              (rule "andLeft" (formula "157"))
                                                                                                                              (rule "replace_known_left" (formula "166") (term "0,1") (ifseqformula "84"))
                                                                                                                               (builtin "One Step Simplification" (formula "166") (ifInst ""  (formula "84")) (ifInst ""  (formula "155")) (ifInst ""  (formula "163")) (ifInst ""  (formula "157")) (ifInst ""  (formula "158")))
                                                                                                                              (rule "true_left" (formula "166"))
                                                                                                                              (rule "commute_and_2" (formula "126") (term "0,0"))
                                                                                                                              (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                                                                                              (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                                                                                                              (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                              (rule "leq_literals" (formula "30") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                                                                              (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "30") (term "0,0"))
                                                                                                                              (rule "leq_literals" (formula "30") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "9") (term "1,3,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "227")) (ifInst ""  (formula "23")))
                                                                                                                              (rule "wellFormedAnon" (formula "9") (term "1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "9") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "9") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "19"))
                                                                                                                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "18")))
                                                                                                                              (rule "polySimp_elimSub" (formula "9") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "9") (term "1,2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "9") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "9") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "63"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "9") (term "0,1,0,1,1,1,1") (ifseqformula "89"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "0,0,1,1,1,1") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "9") (term "1,0,0,1,1,1,1,1") (ifseqformula "66"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "9") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "9") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "9") (term "0,0") (ifseqformula "66"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "10") (term "1,3,0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "10") (term "0,1,3,0"))
                                                                                                                              (rule "castedGetAny" (formula "10") (term "0,1,3,0"))
                                                                                                                              (rule "Definition_axiom_for_elementsToReadCountElement_in_de_wiesler_BucketPointers" (formula "128") (term "1,1,1,0") (inst "b=b"))
                                                                                                                              (rule "translateJavaCastInt" (formula "128") (term "1,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_elementsToReadOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "128") (term "2,2,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "128") (term "3,2,2,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "128") (term "2,2,2,0,1,0"))
                                                                                                                              (rule "polySimp_homoEq" (formula "128") (term "1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "128") (term "0,1,0"))
                                                                                                                              (rule "polySimp_sepPosMonomial" (formula "128") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "128") (term "1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "128") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "128") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "128") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "128") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "128") (term "0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "128") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "128") (term "0,1,1,0"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "150") (inst "i=i") (inst "i_0=i_0"))
                                                                                                                               (builtin "One Step Simplification" (formula "150") (ifInst ""  (formula "196")) (ifInst ""  (formula "45")))
                                                                                                                              (rule "expand_inInt" (formula "150") (term "1,0,0,1,0"))
                                                                                                                              (rule "expand_inInt" (formula "150") (term "1,0,0,1"))
                                                                                                                              (rule "replace_int_MAX" (formula "150") (term "1,0,1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "150") (term "0,1,1,0,0,1,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "150") (term "1,0,1,0,0,1"))
                                                                                                                              (rule "replace_int_MIN" (formula "150") (term "0,1,1,0,0,1"))
                                                                                                                              (rule "andLeft" (formula "150"))
                                                                                                                              (rule "andLeft" (formula "150"))
                                                                                                                              (rule "andLeft" (formula "150"))
                                                                                                                              (rule "andLeft" (formula "150"))
                                                                                                                              (rule "andLeft" (formula "150"))
                                                                                                                              (rule "andLeft" (formula "150"))
                                                                                                                              (rule "andLeft" (formula "152"))
                                                                                                                              (rule "andLeft" (formula "150"))
                                                                                                                              (rule "notLeft" (formula "150"))
                                                                                                                              (rule "eqSymm" (formula "157") (term "1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "155") (term "3,0"))
                                                                                                                              (rule "translateJavaShiftLeftInt" (formula "151") (term "1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "157") (term "0,2,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "155") (term "3,0"))
                                                                                                                              (rule "mul_literals" (formula "155") (term "1,3,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "157") (term "0,2,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "157") (term "1,0,2,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "155") (term "3,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "157") (term "0,2,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "157") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "157") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "156") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "156") (term "1,0,0,1,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "156") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "156") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "157") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "157") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "156") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "156") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "156") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "154"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "153"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "152"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "150"))
                                                                                                                              (rule "applyEq" (formula "51") (term "1,1,1,1,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "200") (term "0") (ifseqformula "41"))
                                                                                                                              (rule "applyEq" (formula "152") (term "1,3,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "52") (term "1,1,1,0,0,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "49") (term "0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "151") (term "0,0") (ifseqformula "41"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "151"))
                                                                                                                              (rule "applyEq" (formula "148") (term "2,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "152") (term "1,0") (ifseqformula "41"))
                                                                                                                              (rule "applyEq" (formula "48") (term "1") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "154") (term "1,0,1,0") (ifseqformula "41"))
                                                                                                                              (rule "applyEq" (formula "148") (term "0,1,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "51") (term "1,1,1,0,0,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "50") (term "1,3,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "149") (term "3,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "47") (term "0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "42") (term "3,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "153") (term "0,1,0,0,1,0,0,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "153") (term "0,1,0,0,1,1,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "154") (term "0,1,0,0,1,0,0,0") (ifseqformula "150"))
                                                                                                                              (rule "applyEq" (formula "46") (term "1") (ifseqformula "150"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "153") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "153") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "153") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "153") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "153") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "153") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "153") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "153") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "153") (term "1,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "153") (term "0,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "153") (term "1,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "153") (term "1,1,1,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "153") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "153") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "153") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "153") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "153") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "153") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "shiftLeftDef" (formula "43") (term "0,1,0,2,0"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "43") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,1,0,2,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,1,0,2,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,1,0,2,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,0,2,0"))
                                                                                                                              (rule "mul_literals" (formula "43") (term "1,0,0,0,0,1,0,2,0"))
                                                                                                                              (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,2,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,0,2,0"))
                                                                                                                              (rule "applyEq" (formula "43") (term "1,0,2,0") (ifseqformula "46"))
                                                                                                                              (rule "shiftLeftDef" (formula "43") (term "0,1,0,2,1"))
                                                                                                                              (rule "eqSymm" (formula "43"))
                                                                                                                              (rule "polySimp_elimNeg" (formula "43") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "43") (term "1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,1,0,2,0"))
                                                                                                                              (rule "shiftLeftPositiveShiftDef" (formula "43") (term "2,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_elimOneLeft0" (formula "43") (term "2,0,1,0,2,0"))
                                                                                                                              (rule "shiftRightPositiveShiftDef" (formula "43") (term "1,0,1,0,2,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,0,2,0"))
                                                                                                                              (rule "mul_literals" (formula "43") (term "1,0,0,0,0,1,0,2,0"))
                                                                                                                              (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,2,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,0,2,0"))
                                                                                                                              (rule "applyEq" (formula "43") (term "1,0,2,0") (ifseqformula "46"))
                                                                                                                              (rule "eqSymm" (formula "43"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "158") (ifseqformula "164"))
                                                                                                                              (rule "mul_literals" (formula "158") (term "0,0"))
                                                                                                                              (rule "add_zero_left" (formula "158") (term "0"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "98") (term "0,1,0,0,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "232")) (ifInst ""  (formula "23")))
                                                                                                                              (rule "wellFormedAnon" (formula "98") (term "1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "98") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "98") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "0,1,0") (ifseqformula "19"))
                                                                                                                               (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "18")))
                                                                                                                              (rule "polySimp_elimSub" (formula "98") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "98") (term "1,2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "98") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "98") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "98") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "98") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "0,0,0") (ifseqformula "63"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "98") (term "0,1,0,1,1,1,1") (ifseqformula "89"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "98") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "98") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "98") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "98") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "0,0,1,1,1,1") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "98") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "98") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "98") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "98") (term "1,0,0,1,1,1,1,1") (ifseqformula "66"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "98") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "98") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "98") (term "1,1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "times_zero_1" (formula "98") (term "1,0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "98") (term "0,0,1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "qeq_literals" (formula "98") (term "0,1,0,0,1,1,1,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "98") (term "0,0") (ifseqformula "66"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "98") (term "0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "98") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "98") (term "1,1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "98") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "98") (term "0,0,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "98") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "9")))
                                                                                                                              (rule "true_left" (formula "98"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "98") (term "1,1,0,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "85")) (ifInst ""  (formula "85")) (ifInst ""  (formula "232")) (ifInst ""  (formula "85")) (ifInst ""  (formula "163")) (ifInst ""  (formula "169")))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,0") (ifseqformula "82"))
                                                                                                                               (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "23")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "98") (term "1,0") (ifseqformula "82"))
                                                                                                                              (rule "wellFormedAnon" (formula "98") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "98") (term "2,1,1,0,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "98") (term "2,0,1,0,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "0,0,1,0") (ifseqformula "19"))
                                                                                                                               (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "18")) (ifInst ""  (formula "81")))
                                                                                                                              (rule "polySimp_elimSub" (formula "98") (term "2,0,1,0,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "98") (term "1,2,0,1,0,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "98") (term "2,1,1,0,1,1"))
                                                                                                                              (rule "add_literals" (formula "98") (term "0,2,1,1,0,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "98") (term "2,0,1,0,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "98") (term "0,2,0,1,0,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "98") (term "2,0,1,0,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "98") (term "0,0,0,0,1,1,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0,0,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "98") (term "0,1,0,0,0,0,1,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "98") (term "0,0,0,0,1,1,1"))
                                                                                                                              (rule "add_literals" (formula "98") (term "0,0,0,0,0,1,1,1"))
                                                                                                                              (rule "add_zero_left" (formula "98") (term "0,0,0,0,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "98") (term "0,0,0,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "98") (term "0,0,0,0,1,1"))
                                                                                                                              (rule "add_literals" (formula "98") (term "0,0,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "1,0,1") (ifseqformula "162"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "1,0") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,0,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "1,0,0,1,1,1") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "0,1"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "0,1") (ifseqformula "161"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,1,1"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "98") (term "0"))
                                                                                                                              (rule "mul_literals" (formula "98") (term "1,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "98") (term "0,0"))
                                                                                                                              (rule "inEqSimp_invertInEq0" (formula "98") (term "0,0,1,1"))
                                                                                                                              (rule "times_zero_2" (formula "98") (term "1,0,0,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "98") (term "0,0,0,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "98") (term "0,0,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "0,0,1,1") (ifseqformula "63"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "98") (term "0,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "98") (term "0,0,0,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "98") (term "0,0,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "98") (term "0,1") (ifseqformula "164"))
                                                                                                                               (builtin "One Step Simplification" (formula "98"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "98") (term "0"))
                                                                                                                              (rule "mul_literals" (formula "98") (term "1,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "99") (term "0,1,0,0,1,1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "99") (term "0,0,1,0,0,1,1"))
                                                                                                                              (rule "castedGetAny" (formula "99") (term "0,0,1,0,0,1,1"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "99") (term "0,0,0,0,1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "233")) (ifInst ""  (formula "23")))
                                                                                                                              (rule "wellFormedAnon" (formula "99") (term "1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "99") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "99") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "99") (term "0,1,0") (ifseqformula "19"))
                                                                                                                               (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "18")))
                                                                                                                              (rule "polySimp_elimSub" (formula "99") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "99") (term "1,2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "99") (term "2,1,1,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "99") (term "2,0,1,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "99") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "99") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "99") (term "1,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "99") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "99") (term "1,0,0,1,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "99") (term "1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "99") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "99") (term "0,0,0") (ifseqformula "63"))
                                                                                                                               (builtin "One Step Simplification" (formula "99"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "99") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "99") (term "0,1,0,1,1,1,1") (ifseqformula "89"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "99") (term "1,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "99") (term "0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "99") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "99") (term "0,0,0,1,1,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "99") (term "0,0,1,1,1,1") (ifseqformula "66"))
                                                                                                                               (builtin "One Step Simplification" (formula "99"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "99") (term "0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "99") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "99") (term "0,0,0,0,1,1,1,1,1"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "100") (term "0"))
                                                                                                                              (rule "replace_known_right" (formula "100") (term "0,0") (ifseqformula "206"))
                                                                                                                               (builtin "One Step Simplification" (formula "100"))
                                                                                                                              (rule "andLeft" (formula "100"))
                                                                                                                              (rule "andLeft" (formula "101"))
                                                                                                                              (rule "andLeft" (formula "101"))
                                                                                                                              (rule "andLeft" (formula "101"))
                                                                                                                              (rule "replace_known_left" (formula "79") (term "0,1") (ifseqformula "100"))
                                                                                                                               (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "100")))
                                                                                                                              (rule "andLeft" (formula "79"))
                                                                                                                              (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "101"))
                                                                                                                               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "101")))
                                                                                                                              (rule "andLeft" (formula "15"))
                                                                                                                              (rule "andLeft" (formula "16"))
                                                                                                                              (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "103"))
                                                                                                                               (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "16")))
                                                                                                                              (rule "true_left" (formula "110"))
                                                                                                                              (rule "replace_known_left" (formula "95") (term "1,0,1,1") (ifseqformula "106"))
                                                                                                                               (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "103")) (ifInst ""  (formula "103")) (ifInst ""  (formula "104")))
                                                                                                                              (rule "andLeft" (formula "95"))
                                                                                                                              (rule "andLeft" (formula "95"))
                                                                                                                              (rule "andLeft" (formula "97"))
                                                                                                                              (rule "andLeft" (formula "98"))
                                                                                                                              (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "107"))
                                                                                                                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "17")))
                                                                                                                              (rule "andLeft" (formula "9"))
                                                                                                                              (rule "andLeft" (formula "10"))
                                                                                                                              (rule "andLeft" (formula "9"))
                                                                                                                              (rule "andLeft" (formula "12"))
                                                                                                                              (rule "replace_known_left" (formula "110") (term "1,0,0,1,1") (ifseqformula "9"))
                                                                                                                               (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "111")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")))
                                                                                                                              (rule "commute_and" (formula "144") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_countBucketElementsEverywhere_in_de_wiesler_Permute" (formula "6") (term "0,1,0"))
                                                                                                                              (rule "eqSymm" (formula "6") (term "1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "6") (term "1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "6") (term "1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "76") (term "0,1,0,1,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                                                                              (rule "translateJavaAddInt" (formula "76") (term "3,0,2,1,0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "76") (term "4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "76") (term "3,0,0,1,1,0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "76") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "76") (term "4,0,2,1,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "76") (term "0,4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "76") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "76") (term "4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "76") (term "1,4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "76") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "76") (term "4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "76") (term "0,4,0,0,1,1,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "76") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,1,0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "76") (term "1,0,1,0,1,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "76") (term "0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "76") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "76") (term "0,0,0,1,0,1,0"))
                                                                                                                              (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "97") (term "1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "112")) (ifInst ""  (formula "112")) (ifInst ""  (formula "248")) (ifInst ""  (formula "112")) (ifInst ""  (formula "11")) (ifInst ""  (formula "21")) (ifInst ""  (formula "29")) (ifInst ""  (formula "10")))
                                                                                                                              (rule "wellFormedAnon" (formula "97") (term "1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "97") (term "2,0,1,1,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "97") (term "2,1,1,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "97") (term "0,1,0") (ifseqformula "25"))
                                                                                                                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "24")))
                                                                                                                              (rule "polySimp_elimSub" (formula "97") (term "2,0,1,1,1,1"))
                                                                                                                              (rule "mul_literals" (formula "97") (term "1,2,0,1,1,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "97") (term "2,1,1,0,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "97") (term "2,0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,1,1"))
                                                                                                                              (rule "polySimp_addComm1" (formula "97") (term "0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,1,1,1"))
                                                                                                                              (rule "add_zero_right" (formula "97") (term "0,0,0,1,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "97") (term "0,0,1") (ifseqformula "113"))
                                                                                                                               (builtin "One Step Simplification" (formula "97"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "0,1"))
                                                                                                                              (rule "replace_known_left" (formula "97") (term "0,1") (ifseqformula "9"))
                                                                                                                               (builtin "One Step Simplification" (formula "97"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0"))
                                                                                                                              (rule "replace_known_left" (formula "97") (term "0,0") (ifseqformula "69"))
                                                                                                                               (builtin "One Step Simplification" (formula "97"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,1,1"))
                                                                                                                              (rule "applyEq" (formula "97") (term "0,1,0,1") (ifseqformula "96"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "97") (term "1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "97") (term "1,0,1") (ifseqformula "12"))
                                                                                                                               (builtin "One Step Simplification" (formula "97"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "97") (term "0,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "97") (term "0,0,0,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "97") (term "0,0,0,1"))
                                                                                                                              (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "97") (term "1,0,1"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "1,0,0") (ifseqformula "89"))
                                                                                                                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "92")) (ifInst ""  (formula "248")) (ifInst ""  (formula "92")) (ifInst ""  (formula "29")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "97") (term "1,0") (ifseqformula "89"))
                                                                                                                              (rule "wellFormedAnon" (formula "97") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "97") (term "2,0,1,0,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "97") (term "2,1,1,0,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "97") (term "1,1,0") (ifseqformula "88"))
                                                                                                                               (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "25")) (ifInst ""  (formula "24")))
                                                                                                                              (rule "polySimp_addComm0" (formula "97") (term "2,1,1,0,0,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "97") (term "2,0,1,0,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "97") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "97") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0,0,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0"))
                                                                                                                              (rule "replace_known_left" (formula "97") (term "0,0") (ifseqformula "69"))
                                                                                                                               (builtin "One Step Simplification" (formula "97"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "97") (term "1,0,1") (ifseqformula "178"))
                                                                                                                               (builtin "One Step Simplification" (formula "97"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "97") (term "0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "97") (term "0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "97") (term "0,0"))
                                                                                                                              (rule "replace_known_left" (formula "97") (term "0") (ifseqformula "72"))
                                                                                                                               (builtin "One Step Simplification" (formula "97"))
                                                                                                                              (rule "andLeft" (formula "97"))
                                                                                                                              (rule "andLeft" (formula "98"))
                                                                                                                              (rule "andLeft" (formula "97"))
                                                                                                                              (rule "andLeft" (formula "97"))
                                                                                                                              (rule "replace_known_left" (formula "114") (term "1,1") (ifseqformula "101"))
                                                                                                                               (builtin "One Step Simplification" (formula "114"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "102") (term "0,1,0,0,1"))
                                                                                                                              (rule "translateJavaCastInt" (formula "102") (term "0,0,1,0,0,1"))
                                                                                                                              (rule "polySimp_homoEq" (formula "102"))
                                                                                                                              (rule "polySimp_addComm1" (formula "102") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "102") (term "0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "102") (term "0"))
                                                                                                                              (rule "castedGetAny" (formula "102") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "102") (term "0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "102") (term "0,0"))
                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "102"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "102") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "102") (term "0"))
                                                                                                                              (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "113") (term "0,1,1,0"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "1,0,0") (ifseqformula "89"))
                                                                                                                               (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "92")) (ifInst ""  (formula "253")) (ifInst ""  (formula "92")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "29")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "113") (term "1,0") (ifseqformula "89"))
                                                                                                                              (rule "wellFormedAnon" (formula "113") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "113") (term "2,0,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "113") (term "2,1,1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "113") (term "1,1,0") (ifseqformula "88"))
                                                                                                                               (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "25")) (ifInst ""  (formula "24")))
                                                                                                                              (rule "polySimp_addComm0" (formula "113") (term "2,0,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "113") (term "2,1,1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "113") (term "1,0,1") (ifseqformula "99"))
                                                                                                                               (builtin "One Step Simplification" (formula "113"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "113") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "113") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "113") (term "1,1"))
                                                                                                                              (rule "replace_known_left" (formula "113") (term "1,1") (ifseqformula "183"))
                                                                                                                               (builtin "One Step Simplification" (formula "113"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "113") (term "0,1"))
                                                                                                                              (rule "replace_known_left" (formula "113") (term "0,1") (ifseqformula "97"))
                                                                                                                               (builtin "One Step Simplification" (formula "113"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "113") (term "1"))
                                                                                                                              (rule "replace_known_left" (formula "113") (term "1") (ifseqformula "98"))
                                                                                                                               (builtin "One Step Simplification" (formula "113"))
                                                                                                                              (rule "true_left" (formula "113"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "113") (term "0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "113") (term "0,0,2,0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "113") (term "0,2,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "113") (term "0,0,2,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "113") (term "0,2,0,1,1,0"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_19" (formula "113") (term "0,1,1,0"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_20" (formula "113") (term "0,1,1,0"))
                                                                                                                              (rule "applyEq" (formula "113") (term "0,1,1,0") (ifseqformula "95"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "113") (term "1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "113") (term "1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "113") (term "1,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "113") (term "0,1,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "113") (term "1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "113") (term "0,1,0"))
                                                                                                                              (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "113") (term "1,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "117")) (ifInst ""  (formula "253")) (ifInst ""  (formula "117")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "29")))
                                                                                                                              (rule "true_left" (formula "113"))
                                                                                                                              (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "113") (term "1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "113") (term "1,1,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "113") (term "1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "113") (term "0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "113"))
                                                                                                                              (rule "polySimp_addComm1" (formula "113") (term "0"))
                                                                                                                              (rule "applyEq" (formula "113") (term "0,1,1,1,0") (ifseqformula "102"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "113") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "113") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "113") (term "0,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "113") (term "1,0,1,1,1,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "113") (term "1,0,1,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "113") (term "0,0,1,1,1,0"))
                                                                                                                              (rule "mul_literals" (formula "113") (term "0,0,0,1,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "113") (term "1,1,0"))
                                                                                                                              (rule "applyEq" (formula "113") (term "1,0,0,1,0") (ifseqformula "102"))
                                                                                                                              (rule "polySimp_addComm1" (formula "113") (term "0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "113") (term "0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "113") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "113") (term "0,0,0,0,0,1,0"))
                                                                                                                              (rule "add_literals" (formula "113") (term "0,0,0,0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "113"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "113") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "113") (term "1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "113") (term "1,1"))
                                                                                                                              (rule "mul_literals" (formula "113") (term "0,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "113") (term "1,1"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "113") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "113") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "113") (term "0,0,0"))
                                                                                                                              (rule "inEqSimp_homoInEq1" (formula "113"))
                                                                                                                              (rule "polySimp_addComm1" (formula "113") (term "0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "113"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "113") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "113") (term "1"))
                                                                                                                              (rule "mul_literals" (formula "113") (term "0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "113") (term "1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "113") (term "1,1"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "1"))
                                                                                                                              (rule "mul_literals" (formula "63") (term "0,0"))
                                                                                                                              (rule "add_zero_left" (formula "63") (term "0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                                                                                                              (rule "commute_and_2" (formula "214") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "23") (term "0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "23") (term "0,2,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "23") (term "0,0,2,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "23") (term "0,0,2,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "23") (term "0,2,0"))
                                                                                                                              (rule "replaceKnownSelect_taclet20121212121212120012121212012121000120112_19" (formula "23") (term "0"))
                                                                                                                              (rule "replaceKnownAuxiliaryConstant_taclet20121212121212120012121212012121000120112_20" (formula "23") (term "0"))
                                                                                                                              (rule "inEqSimp_homoInEq1" (formula "23"))
                                                                                                                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                                                                              (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "96"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                                                                                              (rule "add_zero_left" (formula "23") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "23") (term "0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "23") (term "1,0,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "23") (term "0,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "116") (term "0") (ifseqformula "73"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "116") (term "0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "116") (term "0,0,0"))
                                                                                                                              (rule "add_literals" (formula "116") (term "1,1,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "116") (term "1,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "116") (term "0,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "116") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "116"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "172") (term "1"))
                                                                                                                              (rule "applyEq" (formula "173") (term "0") (ifseqformula "172"))
                                                                                                                              (rule "mod_axiom" (formula "172") (term "1,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "172") (term "1,1,0,1"))
                                                                                                                              (rule "mod_axiom" (formula "173") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "173") (term "1,1,0,0"))
                                                                                                                              (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "88") (term "0"))
                                                                                                                              (rule "translateJavaCastInt" (formula "88") (term "0,0"))
                                                                                                                              (rule "castedGetAny" (formula "88") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_writtenCountOfBucket_in_de_wiesler_BucketPointers" (formula "88") (term "0,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "88") (term "0,1,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "88") (term "0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "88") (term "1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "88") (term "1,1,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "88") (term "1,1"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "88") (term "0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "88") (term "0,0,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "88") (term "0,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "88") (term "0,1,1"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "88") (term "1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "88") (term "0,1"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "69"))
                                                                                                                              (rule "polySimp_rightDist" (formula "75") (term "0,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "75") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "75") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "75") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "75") (term "0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor2b" (formula "75") (term "0"))
                                                                                                                              (rule "add_literals" (formula "75") (term "1,1,0"))
                                                                                                                              (rule "times_zero_1" (formula "75") (term "1,0"))
                                                                                                                              (rule "polySimp_addLiterals" (formula "75") (term "0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "75") (term "0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                                                                                              (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "67"))
                                                                                                                              (rule "polySimp_rightDist" (formula "76") (term "0,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "76") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "76") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "76") (term "0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "76") (term "0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "76") (term "0,0"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "76") (term "0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "57") (term "1,1,1,1,0"))
                                                                                                                              (rule "mod_axiom" (formula "57") (term "1,0,1,1,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,1,1,1,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "176") (term "1,3,0"))
                                                                                                                              (rule "mod_axiom" (formula "176") (term "1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "176") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "58") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mod_axiom" (formula "58") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "55") (term "0"))
                                                                                                                              (rule "mod_axiom" (formula "55") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "171") (term "2,0"))
                                                                                                                              (rule "mod_axiom" (formula "171") (term "1,0,2,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "171") (term "1,1,0,2,0"))
                                                                                                                              (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "124") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "124") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "124") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "replace_known_right" (formula "124") (term "0,1,0") (ifseqformula "255"))
                                                                                                                               (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "25")) (ifInst ""  (formula "29")))
                                                                                                                              (rule "polySimp_addComm0" (formula "124") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "124") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "124") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "124") (term "0,1,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "124") (term "0,1,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "124") (term "0,0,1,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "124") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "124") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "124") (term "0,0,0") (ifseqformula "69"))
                                                                                                                               (builtin "One Step Simplification" (formula "124"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "124") (term "1,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "124") (term "0,0,0,0,1,1"))
                                                                                                                              (rule "applyEq" (formula "124") (term "0,0,0,1,1,1") (ifseqformula "39"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "124") (term "0,0,1,1,1"))
                                                                                                                              (rule "applyEq" (formula "124") (term "1,0,1,1,1,1") (ifseqformula "39"))
                                                                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "124") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "124") (term "0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "124") (term "0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "124") (term "0,0") (ifseqformula "72"))
                                                                                                                               (builtin "One Step Simplification" (formula "124"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "125") (term "0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "125") (term "0,2,0,1,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "125") (term "0,0,2,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "125") (term "0,0,2,0,1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "125") (term "0,2,0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "125") (term "0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "125") (term "0,2,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "125") (term "0,2,0,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "54") (term "1"))
                                                                                                                              (rule "mod_axiom" (formula "54") (term "1,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1"))
                                                                                                                              (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "125") (term "0,0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "125") (term "0,0,2,0,0,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "125") (term "0,2,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "125") (term "0,0,2,0,0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "125") (term "0,2,0,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "172") (term "0,1,0"))
                                                                                                                              (rule "mod_axiom" (formula "172") (term "1,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "172") (term "1,1,0,0,1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "56") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mod_axiom" (formula "56") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "55") (term "1,3,0"))
                                                                                                                              (rule "mod_axiom" (formula "55") (term "1,0,1,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,1,3,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "173") (term "3,0"))
                                                                                                                              (rule "mod_axiom" (formula "173") (term "1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "173") (term "1,1,0,3,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "53") (term "0"))
                                                                                                                              (rule "mod_axiom" (formula "53") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "48") (term "3,0"))
                                                                                                                              (rule "mod_axiom" (formula "48") (term "1,0,3,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,3,0"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "125") (term "1,1,0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "125") (term "0,2,1,1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "125") (term "0,2,1,1,0,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "52") (term "1"))
                                                                                                                              (rule "mod_axiom" (formula "52") (term "1,0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1"))
                                                                                                                              (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "111") (term "0,1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "111") (term "1,0,1,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "111") (term "1,0,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "111") (term "0,0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "111") (term "1,0,0,1,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0,1,1"))
                                                                                                                              (rule "mul_literals" (formula "111") (term "0,1,0,0,1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0,1,1"))
                                                                                                                              (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "111") (term "0"))
                                                                                                                              (rule "replace_known_right" (formula "111") (term "0,0") (ifseqformula "228"))
                                                                                                                               (builtin "One Step Simplification" (formula "111"))
                                                                                                                              (rule "andLeft" (formula "111"))
                                                                                                                              (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "111"))
                                                                                                                               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "111")))
                                                                                                                              (rule "andLeft" (formula "17"))
                                                                                                                              (rule "andLeft" (formula "17"))
                                                                                                                              (rule "andLeft" (formula "19"))
                                                                                                                              (rule "andLeft" (formula "17"))
                                                                                                                              (rule "andLeft" (formula "17"))
                                                                                                                              (rule "replace_known_left" (formula "130") (term "0,0,0,0,1,1") (ifseqformula "17"))
                                                                                                                               (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "116")) (ifInst ""  (formula "116")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "andLeft" (formula "130"))
                                                                                                                              (rule "andLeft" (formula "130"))
                                                                                                                              (rule "andLeft" (formula "132"))
                                                                                                                              (rule "andLeft" (formula "130"))
                                                                                                                              (rule "andLeft" (formula "134"))
                                                                                                                              (rule "replace_known_left" (formula "23") (term "1,1,1,1,1") (ifseqformula "22"))
                                                                                                                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "116")) (ifInst ""  (formula "116")) (ifInst ""  (formula "17")) (ifInst ""  (formula "130")) (ifInst ""  (formula "131")) (ifInst ""  (formula "20")) (ifInst ""  (formula "133")) (ifInst ""  (formula "135")))
                                                                                                                              (rule "true_left" (formula "23"))
                                                                                                                              (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "117") (term "0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "117") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "117") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "1,0,0,0") (ifseqformula "29"))
                                                                                                                               (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "115")) (ifInst ""  (formula "33")) (ifInst ""  (formula "266")) (ifInst ""  (formula "115")) (ifInst ""  (formula "135")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "polySimp_addComm0" (formula "117") (term "2,1,1,0,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "1,0,0,1") (ifseqformula "131"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "polySimp_addComm0" (formula "117") (term "2,0,1,0,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "117") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "117") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "0,0,1,1"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "0,0,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "0,0,0,1") (ifseqformula "17"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "0,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "0,0,1") (ifseqformula "130"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "0,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "0,1") (ifseqformula "132"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "0,0"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "0,0") (ifseqformula "73"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "1,1"))
                                                                                                                              (rule "applyEq" (formula "117") (term "0,0,0,1") (ifseqformula "43"))
                                                                                                                              (rule "inEqSimp_commuteGeq" (formula "117") (term "0,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "0,1") (ifseqformula "133"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "applyEq" (formula "117") (term "1,1") (ifseqformula "43"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "1") (ifseqformula "134"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "true_left" (formula "117"))
                                                                                                                              (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "117") (term "0,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "117") (term "2,1,1,0,0,1,1"))
                                                                                                                              (rule "translateJavaAddInt" (formula "117") (term "2,0,1,0,1,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "1,0,0,0,0") (ifseqformula "115"))
                                                                                                                               (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "29")) (ifInst ""  (formula "33")) (ifInst ""  (formula "266")) (ifInst ""  (formula "115")) (ifInst ""  (formula "21")) (ifInst ""  (formula "22")))
                                                                                                                              (rule "polySimp_addComm0" (formula "117") (term "2,0,1,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "117") (term "2,1,1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "1,0,1") (ifseqformula "19"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "117") (term "1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "117") (term "0,1,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "1,0,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "1,0,1") (ifseqformula "18"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "0,0"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "0,0") (ifseqformula "73"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "1,1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "1,1") (ifseqformula "132"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "117") (term "1"))
                                                                                                                              (rule "replace_known_left" (formula "117") (term "1") (ifseqformula "17"))
                                                                                                                               (builtin "One Step Simplification" (formula "117"))
                                                                                                                              (rule "true_left" (formula "117"))
                                                                                                                              (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "117") (term "0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "117") (term "0,2,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "117") (term "0,2,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "117") (term "1,0"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "187") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "mod_axiom" (formula "187") (term "1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "187") (term "1,1,0,1,1,1,0,0,0"))
                                                                                                                              (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "117") (term "1,1"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "1,0,0") (ifseqformula "95"))
                                                                                                                               (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "98")) (ifInst ""  (formula "266")) (ifInst ""  (formula "98")) (ifInst ""  (formula "119")) (ifInst ""  (formula "120")) (ifInst ""  (formula "107")) (ifInst ""  (formula "33")))
                                                                                                                              (rule "true_left" (formula "117"))
                                                                                                                              (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "117") (term "1,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "117") (term "1,1,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "117") (term "1,1,1"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "117") (term "0,1,1"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,0,1,1"))
                                                                                                                              (rule "inEqSimp_homoInEq1" (formula "117"))
                                                                                                                              (rule "polySimp_addComm1" (formula "117") (term "0"))
                                                                                                                              (rule "applyEq" (formula "117") (term "0,1,0,0,0,1,0") (ifseqformula "209"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,1,0"))
                                                                                                                              (rule "applyEq" (formula "117") (term "0,1,1,0") (ifseqformula "209"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "117") (term "1,0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "117") (term "1,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "117") (term "1,1,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "117") (term "0,1,0,1,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "117"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "117") (term "1"))
                                                                                                                              (rule "polySimp_rightDist" (formula "117") (term "1"))
                                                                                                                              (rule "mul_literals" (formula "117") (term "0,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "117") (term "1,1"))
                                                                                                                              (rule "polySimp_elimOne" (formula "117") (term "1,1"))
                                                                                                                              (rule "javaShiftLeftIntDef" (formula "53") (term "1,0,2,0"))
                                                                                                                              (rule "eqSymm" (formula "53"))
                                                                                                                              (rule "mod_axiom" (formula "53") (term "1,0,1,0,2,1"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1,0,2,1"))
                                                                                                                              (rule "inEqSimp_subsumption1" (formula "121") (term "0") (ifseqformula "73"))
                                                                                                                              (rule "leq_literals" (formula "121") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "121"))
                                                                                                                              (rule "Definition_axiom_for_countElement_in_de_wiesler_BucketPointers" (formula "7") (term "1,1,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "7") (term "1,1,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "7") (term "1,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "7") (term "0,1,1,0"))
                                                                                                                              (rule "Definition_axiom_for_writtenElementsCountElement_in_de_wiesler_BucketPointers" (formula "7") (term "0,1,0") (inst "b=b"))
                                                                                                                              (rule "translateJavaCastInt" (formula "7") (term "0,1,0"))
                                                                                                                              (rule "Definition_axiom_for_isClassifiedBlocksRange_in_de_wiesler_Classifier" (formula "210") (term "0") (inst "block=block"))
                                                                                                                               (builtin "One Step Simplification" (formula "210"))
                                                                                                                              (rule "expand_inInt" (formula "210") (term "1,0,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "210") (term "1,0,1,0,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "210") (term "0,1,1,0,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "210") (term "0,1,4,0,1,0"))
                                                                                                                              (rule "translateJavaDivInt" (formula "210") (term "1,1,0,0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "210") (term "1,3,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "210") (term "4,0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "210") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "210") (term "3,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "210") (term "1,4,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "210") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "210") (term "1,4,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "210") (term "1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "210") (term "1,1,4,0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "210") (term "1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "210") (term "0,1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "210") (term "0,0,1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "210") (term "0,1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "210") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "210") (term "1,4,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "210") (term "0,1,4,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "210") (term "0,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "210") (term "0,0,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "210") (term "0,0,1,1,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "210") (term "1,1,0,0,1,1,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "210") (term "1,0,0,1,1,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "210") (term "0,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "210") (term "4,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "210") (term "0,4,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "210") (term "0,0,4,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "210") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "210") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "210") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "210") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "210") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "210") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "210") (term "1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "210") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "210") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "210") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "Contract_axiom_for_isClassifiedBlocksRangeSplit_in_Classifier" (formula "214") (term "0"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "214") (term "1,0,0") (ifseqformula "95"))
                                                                                                                               (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "268")) (ifInst ""  (formula "267")) (ifInst ""  (formula "215")) (ifInst ""  (formula "32")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "214") (term "1,0") (ifseqformula "95"))
                                                                                                                              (rule "wellFormedAnon" (formula "214") (term "0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "214") (term "0,0,0,1,0,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "214") (term "0,0,0,1,1,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "214") (term "1,1,0") (ifseqformula "94"))
                                                                                                                               (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "29")) (ifInst ""  (formula "28")))
                                                                                                                              (rule "polySimp_elimSub" (formula "214") (term "0,0,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "214") (term "0,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "214") (term "1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "214") (term "1,0,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "214") (term "1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "214") (term "0,1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "214") (term "0,0,1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "214") (term "0,1,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "214") (term "0,0,0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "214") (term "1,0,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "214") (term "0,1,0,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "214") (term "0,0,1,0,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "214") (term "0,1,0,0,0,1,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "214") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "214") (term "0,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "214") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "add_literals" (formula "214") (term "1,1,0,0,0,0,1,0"))
                                                                                                                              (rule "times_zero_1" (formula "214") (term "1,0,0,0,0,1,0"))
                                                                                                                              (rule "add_zero_right" (formula "214") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "replace_known_left" (formula "214") (term "0,1,0") (ifseqformula "169"))
                                                                                                                               (builtin "One Step Simplification" (formula "214"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "214") (term "0,0,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "214") (term "0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "214") (term "0,0,0,0,0,1,0"))
                                                                                                                              (rule "add_literals" (formula "214") (term "1,1,0,0,0,0,0,1,0"))
                                                                                                                              (rule "times_zero_1" (formula "214") (term "1,0,0,0,0,0,1,0"))
                                                                                                                              (rule "add_literals" (formula "214") (term "0,0,0,0,0,1,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "214") (term "0,0,0,1,0"))
                                                                                                                              (rule "add_literals" (formula "214") (term "1,1,0,0,0,1,0"))
                                                                                                                              (rule "times_zero_1" (formula "214") (term "1,0,0,0,1,0"))
                                                                                                                              (rule "add_zero_right" (formula "214") (term "0,0,0,1,0"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "214") (term "1,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "214") (term "1,0,1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "214") (term "1,0,1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "214") (term "0,1,0,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "214") (term "1,0,1,0,1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "214") (term "0,0,1,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "214") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "214") (term "0,0,1,0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "214") (term "0,0,0,1,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "214") (term "0,0,1,0,0"))
                                                                                                                              (rule "add_literals" (formula "214") (term "1,1,0,0,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "214") (term "1,0,0,1,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "214") (term "0,0,1,0,0"))
                                                                                                                              (rule "inEqSimp_homoInEq0" (formula "214") (term "0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "214") (term "1,0,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "214") (term "1,0,0,0,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "214") (term "0,1,0,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "214") (term "0,0,1,0,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "214") (term "0,1,0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "214") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "214") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "214") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "214") (term "1,1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "214") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "214") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "214") (term "0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "214") (term "1,1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "214") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "214") (term "0,0,0,0"))
                                                                                                                              (rule "qeq_literals" (formula "214") (term "0,0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "214"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "214") (term "0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "214") (term "1,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "214") (term "1,0,0"))
                                                                                                                              (rule "mul_literals" (formula "214") (term "0,1,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "214") (term "1,1,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "214") (term "0,0") (ifseqformula "154"))
                                                                                                                               (builtin "One Step Simplification" (formula "214"))
                                                                                                                              (rule "Definition_axiom_for_isClassifiedBlocksRangeSplit_in_de_wiesler_Classifier" (formula "215") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "215"))
                                                                                                                              (rule "eqSymm" (formula "215"))
                                                                                                                              (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "219") (term "0"))
                                                                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "219") (term "1,0,0") (ifseqformula "95"))
                                                                                                                               (builtin "One Step Simplification" (formula "219") (ifInst ""  (formula "269")) (ifInst ""  (formula "268")) (ifInst ""  (formula "32")))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "219") (term "1,0") (ifseqformula "95"))
                                                                                                                              (rule "wellFormedAnon" (formula "219") (term "0,1,0"))
                                                                                                                              (rule "replace_known_left" (formula "219") (term "1,1,0") (ifseqformula "94"))
                                                                                                                               (builtin "One Step Simplification" (formula "219") (ifInst ""  (formula "29")) (ifInst ""  (formula "28")))
                                                                                                                              (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "220") (term "0") (inst "i=i"))
                                                                                                                               (builtin "One Step Simplification" (formula "220"))
                                                                                                                              (rule "expand_inInt" (formula "220") (term "1,0,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "220") (term "1,0,1,0,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "220") (term "0,1,1,0,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "220") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "220") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "220") (term "0,1,0,0,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "220") (term "1,0,1,0,0,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "220") (term "0,0,1,0,0,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "220") (term "0,0,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "220") (term "0,0,0,1,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "220") (term "0,0,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "220") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "220") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "220") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "220") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "220") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "220") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "220") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "220") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "220") (term "1,0,1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "220") (term "0,0,1,1,0,0,0"))
                                                                                                                              (rule "Definition_axiom_for_isBlockAlignedSub_in_de_wiesler_Buffers" (formula "163") (term "0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "163") (term "0,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "163") (term "0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "163") (term "1,0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "163") (term "0,0"))
                                                                                                                              (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "168") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "168"))
                                                                                                                              (rule "translateJavaMod" (formula "168") (term "0"))
                                                                                                                              (rule "jmod_axiom" (formula "168") (term "0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "168") (term "1,0"))
                                                                                                                              (rule "polySimp_sepNegMonomial" (formula "168"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "168") (term "0"))
                                                                                                                              (rule "Contract_axiom_for_countClassOfSliceEq_in_Classifier" (formula "227") (term "1,1,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "269")) (ifInst ""  (formula "268")) (ifInst ""  (formula "32")))
                                                                                                                              (rule "wellFormedAnon" (formula "227") (term "1,0"))
                                                                                                                              (rule "replace_known_left" (formula "227") (term "1,1,0") (ifseqformula "28"))
                                                                                                                               (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "29")))
                                                                                                                              (rule "Definition_axiom_for_countClassOfSliceEq_in_de_wiesler_Classifier" (formula "228") (term "1,1,0") (inst "i=i"))
                                                                                                                              (rule "eqSymm" (formula "228") (term "1,0"))
                                                                                                                              (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                                                                                              (rule "elimGcdGeq_antec" (formula "191") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "191") (term "1,0,1,0"))
                                                                                                                              (rule "add_zero_right" (formula "191") (term "0,0,0,1,0"))
                                                                                                                              (rule "leq_literals" (formula "191") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "191"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "191") (term "1,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "191") (term "1,0,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "191") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor0b" (formula "191") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "191") (term "1,1,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "191") (term "1,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "191") (term "0,0"))
                                                                                                                              (rule "leq_literals" (formula "191") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "191"))
                                                                                                                              (rule "Contract_axiom_for_isClassifiedBlocksRange_in_Classifier" (formula "8") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "270")) (ifInst ""  (formula "269")) (ifInst ""  (formula "33")))
                                                                                                                              (rule "wellFormedAnon" (formula "8") (term "1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "8") (term "0,0,0,0,0"))
                                                                                                                              (rule "replace_known_left" (formula "8") (term "1,1,0") (ifseqformula "29"))
                                                                                                                               (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "30")))
                                                                                                                              (rule "polySimp_elimSub" (formula "8") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                                                                                              (rule "Definition_axiom_for_isClassifiedBlocksRange_in_de_wiesler_Classifier" (formula "9") (term "0") (inst "block=block"))
                                                                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                                                                              (rule "expand_inInt" (formula "9") (term "1,0,0"))
                                                                                                                              (rule "replace_int_MAX" (formula "9") (term "1,0,1,0,0"))
                                                                                                                              (rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0"))
                                                                                                                              (rule "translateJavaDivInt" (formula "9") (term "1,1,0,0,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "9") (term "3,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "9") (term "4,0,1,0"))
                                                                                                                              (rule "translateJavaSubInt" (formula "9") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "9") (term "1,3,0,1,0"))
                                                                                                                              (rule "translateJavaMulInt" (formula "9") (term "1,4,0,1,0"))
                                                                                                                              (rule "translateJavaAddInt" (formula "9") (term "0,1,4,0,1,0"))
                                                                                                                              (rule "polySimp_elimSub" (formula "9") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,4,0,1,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "9") (term "1,1,4,0,1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "9") (term "1,4,0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "9") (term "0,1,4,0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,1,0,0,0"))
                                                                                                                              (rule "add_literals" (formula "9") (term "1,1,0,0,1,1,0,0,0"))
                                                                                                                              (rule "times_zero_1" (formula "9") (term "1,0,0,1,1,0,0,0"))
                                                                                                                              (rule "add_zero_right" (formula "9") (term "0,0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "9") (term "4,0,1,0"))
                                                                                                                              (rule "polySimp_addComm1" (formula "9") (term "0,4,0,1,0"))
                                                                                                                              (rule "polySimp_addComm0" (formula "9") (term "0,0,4,0,1,0"))
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0"))
                                                                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "1,1,0,0"))
                                                                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                                                                                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                                                                                              (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "206") (term "0,1"))
                                                                                                                               (builtin "One Step Simplification" (formula "206"))
                                                                                                                              (rule "translateJavaAddInt" (formula "206") (term "0,0,0,1"))
                                                                                                                              (rule "translateJavaUnaryMinusInt" (formula "206") (term "1,0,1"))
                                                                                                                              (rule "neg_literal" (formula "206") (term "1,0,1"))
                                                                                                                              (rule "translateJavaSubInt" (formula "206") (term "0,0,1"))
                                                                                                                              (rule "polySimp_elimSub" (formula "206") (term "0,0,1"))
                                                                                                                              (rule "mul_literals" (formula "206") (term "1,0,0,1"))
                                                                                                                              (rule "polySimp_addLiterals" (formula "206") (term "0,0,1"))
                                                                                                                              (rule "polySimp_addComm0" (formula "206") (term "0,0,1"))
                                                                                                                              (rule "nnf_notAnd" (formula "149") (term "1,1,0"))
                                                                                                                              (rule "inEqSimp_contradInEq5" (formula "67") (ifseqformula "145"))
                                                                                                                              (rule "greater_literals" (formula "67") (term "0,0"))
                                                                                                                               (builtin "One Step Simplification" (formula "67"))
                                                                                                                              (rule "times_zero_1" (formula "67") (term "1,0"))
                                                                                                                              (rule "qeq_literals" (formula "67") (term "0"))
                                                                                                                               (builtin "One Step Simplification" (formula "67"))
                                                                                                                              (rule "closeFalse" (formula "67"))
                                                                                                                           )
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "if x_18 false"
                                                                                                                         (builtin "Block Contract (Internal)" (formula "168") (newnames "result_16,exc_16,heap_Before_BLOCK_14,savedHeap_Before_BLOCK_14,o,f"))
                                                                                                                        (branch "Validity"
                                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                                            (builtin "One Step Simplification" (formula "169"))
                                                                                                                            (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "28")))
                                                                                                                           (rule "eqSymm" (formula "169") (term "0,0,1,0,1"))
                                                                                                                           (rule "variableDeclarationAssign" (formula "169") (term "1"))
                                                                                                                           (rule "variableDeclaration" (formula "169") (term "1") (newnames "exc_16_1"))
                                                                                                                           (rule "assignment" (formula "169") (term "1"))
                                                                                                                            (builtin "One Step Simplification" (formula "169"))
                                                                                                                           (rule "emptyStatement" (formula "169") (term "1"))
                                                                                                                            (builtin "One Step Simplification" (formula "169"))
                                                                                                                           (rule "emptyStatement" (formula "169") (term "1"))
                                                                                                                           (rule "applyEq" (formula "135") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "93") (term "2,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "83") (term "6,0,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "120") (term "2,1,5,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "135") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "65") (term "2,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "131") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "8") (term "6,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "8") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "58") (term "0,1,0,1,1,0,1,0") (ifseqformula "1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "58"))
                                                                                                                           (rule "applyEq" (formula "67") (term "0,1,0,1,1,0,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "83") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "92") (term "6,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "67") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "9") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "47") (term "5,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "65") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "11") (term "2,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "81") (term "5,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "138") (term "6,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "10") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "68") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "91") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "59") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "66") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "90") (term "7,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "59") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "90") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "7") (term "0,1,0,1,1,0,0,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "80") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "113") (term "2,1,4,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "79") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "95") (term "2,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "9") (term "7,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "6") (term "0,1,0,1,1,0,0,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "61") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "80") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "13") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "10") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "77") (term "5,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "10") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "12") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "11") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "83") (term "2,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "79") (term "0,1,1,0,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "61") (term "0,1,0,1,1,0,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "45") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "60") (term "2,1,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "61") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "62") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "54") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "54") (term "2,1,1") (ifseqformula "1"))
                                                                                                                           (rule "tryEmpty" (formula "165") (term "1"))
                                                                                                                           (rule "blockEmptyLabel" (formula "165") (term "1"))
                                                                                                                           (rule "blockEmpty" (formula "165") (term "1"))
                                                                                                                           (rule "methodCallEmpty" (formula "165") (term "1"))
                                                                                                                           (rule "emptyModality" (formula "165") (term "1"))
                                                                                                                           (rule "andRight" (formula "165"))
                                                                                                                           (branch
                                                                                                                               (builtin "One Step Simplification" (formula "165"))
                                                                                                                              (rule "closeTrue" (formula "165"))
                                                                                                                           )
                                                                                                                           (branch
                                                                                                                               (builtin "One Step Simplification" (formula "165"))
                                                                                                                              (rule "closeTrue" (formula "165"))
                                                                                                                           )
                                                                                                                        )
                                                                                                                        (branch "Precondition"
                                                                                                                           (rule "andRight" (formula "168"))
                                                                                                                           (branch
                                                                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "168") (ifInst ""  (formula "28")))
                                                                                                                              (rule "closeTrue" (formula "168"))
                                                                                                                           )
                                                                                                                           (branch
                                                                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                                                                               (builtin "One Step Simplification" (formula "168"))
                                                                                                                              (rule "wellFormedAnonEQ" (formula "168") (ifseqformula "60"))
                                                                                                                              (rule "wellFormedAnon" (formula "168") (term "0"))
                                                                                                                              (rule "replace_known_left" (formula "168") (term "1") (ifseqformula "59"))
                                                                                                                               (builtin "One Step Simplification" (formula "168") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                                                                                                                              (rule "closeTrue" (formula "168"))
                                                                                                                           )
                                                                                                                        )
                                                                                                                        (branch "Usage"
                                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                                            (builtin "One Step Simplification" (formula "169"))
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "140") (term "1,1,1,0") (ifseqformula "60"))
                                                                                                                            (builtin "One Step Simplification" (formula "140"))
                                                                                                                           (rule "expand_inInt" (formula "140") (term "0,1,0"))
                                                                                                                           (rule "replace_int_MAX" (formula "140") (term "1,0,0,1,0"))
                                                                                                                           (rule "replace_int_MIN" (formula "140") (term "0,1,0,1,0"))
                                                                                                                           (rule "andLeft" (formula "140"))
                                                                                                                           (rule "andLeft" (formula "140"))
                                                                                                                           (rule "andLeft" (formula "142"))
                                                                                                                           (rule "andLeft" (formula "141"))
                                                                                                                           (rule "andLeft" (formula "141"))
                                                                                                                           (rule "translateJavaAddInt" (formula "144") (term "5,0"))
                                                                                                                           (rule "translateJavaAddInt" (formula "144") (term "3,0"))
                                                                                                                           (rule "replace_known_left" (formula "143") (term "0") (ifseqformula "140"))
                                                                                                                            (builtin "One Step Simplification" (formula "143"))
                                                                                                                           (rule "true_left" (formula "143"))
                                                                                                                           (rule "polySimp_addComm1" (formula "143") (term "5,0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "143") (term "0,5,0"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "142"))
                                                                                                                           (rule "applyEq" (formula "82") (term "5,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "58") (term "2,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "92") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "60") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "67") (term "0,1,0,1,1,0,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "98") (term "2,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "83") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "135") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "135") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "93") (term "2,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "83") (term "6,0,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "8") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "65") (term "2,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "120") (term "2,1,5,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "92") (term "6,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "8") (term "6,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "48") (term "5,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "68") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "58") (term "0,1,0,1,1,0,1,0") (ifseqformula "1"))
                                                                                                                           (rule "inEqSimp_commuteLeq" (formula "58"))
                                                                                                                           (rule "applyEq" (formula "91") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "91") (term "7,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "82") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "59") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "130") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "63") (term "0,1,0,1,1,0,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "81") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "80") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "137") (term "6,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "7") (term "0,1,0,1,1,0,0,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "9") (term "7,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "114") (term "2,1,4,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "81") (term "0,1,1,0,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "11") (term "2,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "64") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "10") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "65") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "78") (term "5,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "9") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "64") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "11") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "10") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "51") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "6") (term "0,1,0,1,1,0,0,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "66") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "61") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "12") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "83") (term "2,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "13") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "169") (term "0,1,0,1,1,0,1,0,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "169") (term "2,1,0,1,0,0,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "10") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "140") (term "6,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "139") (term "6,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "139") (term "2,1,3,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "169") (term "0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "61") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "60") (term "2,1,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "62") (term "2,1") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "45") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "54") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "1"))
                                                                                                                           (rule "elim_double_block_2" (formula "169") (term "1"))
                                                                                                                           (rule "ifUnfold" (formula "169") (term "1") (inst "#boolv=x_2"))
                                                                                                                           (rule "variableDeclaration" (formula "169") (term "1") (newnames "x_19"))
                                                                                                                           (rule "inequality_comparison_simple" (formula "169") (term "1"))
                                                                                                                            (builtin "One Step Simplification" (formula "169"))
                                                                                                                           (rule "replace_known_left" (formula "169") (term "0,0,1,0") (ifseqformula "136"))
                                                                                                                            (builtin "One Step Simplification" (formula "169"))
                                                                                                                           (rule "ifSplit" (formula "169"))
                                                                                                                           (branch "if x_19 true"
                                                                                                                               (builtin "One Step Simplification" (formula "170"))
                                                                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                                                                              (rule "closeFalse" (formula "1"))
                                                                                                                           )
                                                                                                                           (branch "if x_19 false"
                                                                                                                               (builtin "One Step Simplification" (formula "170"))
                                                                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                                                                              (rule "true_left" (formula "1"))
                                                                                                                              (rule "blockEmpty" (formula "169") (term "1"))
                                                                                                                               (builtin "Block Contract (Internal)" (formula "169") (newnames "result_17,exc_17,heap_Before_BLOCK_15,savedHeap_Before_BLOCK_15,o,f"))
                                                                                                                              (branch "Validity"
                                                                                                                                  (builtin "One Step Simplification" (formula "170"))
                                                                                                                                  (builtin "One Step Simplification" (formula "141") (ifInst ""  (formula "26")))
                                                                                                                                 (rule "eqSymm" (formula "170") (term "0,0,1,0,1"))
                                                                                                                                 (rule "variableDeclarationAssign" (formula "170") (term "1"))
                                                                                                                                 (rule "variableDeclaration" (formula "170") (term "1") (newnames "exc_17_1"))
                                                                                                                                 (rule "assignment" (formula "170") (term "1"))
                                                                                                                                  (builtin "One Step Simplification" (formula "170"))
                                                                                                                                 (rule "emptyStatement" (formula "170") (term "1"))
                                                                                                                                  (builtin "One Step Simplification" (formula "170"))
                                                                                                                                 (rule "emptyStatement" (formula "170") (term "1"))
                                                                                                                                 (rule "tryEmpty" (formula "170") (term "1"))
                                                                                                                                 (rule "blockEmptyLabel" (formula "170") (term "1"))
                                                                                                                                 (rule "blockEmpty" (formula "170") (term "1"))
                                                                                                                                 (rule "methodCallEmpty" (formula "170") (term "1"))
                                                                                                                                 (rule "emptyModality" (formula "170") (term "1"))
                                                                                                                                 (rule "andRight" (formula "170"))
                                                                                                                                 (branch
                                                                                                                                     (builtin "One Step Simplification" (formula "170"))
                                                                                                                                    (rule "closeTrue" (formula "170"))
                                                                                                                                 )
                                                                                                                                 (branch
                                                                                                                                     (builtin "One Step Simplification" (formula "170"))
                                                                                                                                    (rule "closeTrue" (formula "170"))
                                                                                                                                 )
                                                                                                                              )
                                                                                                                              (branch "Precondition"
                                                                                                                                 (rule "andRight" (formula "169"))
                                                                                                                                 (branch
                                                                                                                                     (builtin "One Step Simplification" (formula "169") (ifInst ""  (formula "26")))
                                                                                                                                    (rule "closeTrue" (formula "169"))
                                                                                                                                 )
                                                                                                                                 (branch
                                                                                                                                     (builtin "One Step Simplification" (formula "169"))
                                                                                                                                    (rule "wellFormedAnonEQ" (formula "169") (ifseqformula "56"))
                                                                                                                                    (rule "wellFormedAnon" (formula "169") (term "0"))
                                                                                                                                    (rule "replace_known_left" (formula "169") (term "1") (ifseqformula "55"))
                                                                                                                                     (builtin "One Step Simplification" (formula "169") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                                                                                                                                    (rule "closeTrue" (formula "169"))
                                                                                                                                 )
                                                                                                                              )
                                                                                                                              (branch "Usage"
                                                                                                                                  (builtin "One Step Simplification" (formula "170"))
                                                                                                                                  (builtin "One Step Simplification" (formula "141"))
                                                                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "141") (term "1,1,1,0") (ifseqformula "56"))
                                                                                                                                  (builtin "One Step Simplification" (formula "141"))
                                                                                                                                 (rule "expand_inInt" (formula "141") (term "0,1,0"))
                                                                                                                                 (rule "expand_inInt" (formula "141") (term "1,0,0,1"))
                                                                                                                                 (rule "replace_int_MIN" (formula "141") (term "0,1,0,1,0"))
                                                                                                                                 (rule "replace_int_MAX" (formula "141") (term "1,0,0,1,0"))
                                                                                                                                 (rule "replace_int_MAX" (formula "141") (term "1,0,1,0,0,1"))
                                                                                                                                 (rule "replace_int_MIN" (formula "141") (term "0,1,1,0,0,1"))
                                                                                                                                 (rule "andLeft" (formula "141"))
                                                                                                                                 (rule "andLeft" (formula "141"))
                                                                                                                                 (rule "andLeft" (formula "142"))
                                                                                                                                 (rule "andLeft" (formula "142"))
                                                                                                                                 (rule "eqSymm" (formula "145") (term "1,1,0"))
                                                                                                                                 (rule "translateJavaAddInt" (formula "145") (term "0,0,1,0"))
                                                                                                                                 (rule "translateJavaAddInt" (formula "145") (term "0,1,1,0"))
                                                                                                                                 (rule "replace_known_left" (formula "144") (term "0") (ifseqformula "141"))
                                                                                                                                  (builtin "One Step Simplification" (formula "144"))
                                                                                                                                 (rule "true_left" (formula "144"))
                                                                                                                                 (rule "inEqSimp_commuteLeq" (formula "144") (term "1,1,0,0"))
                                                                                                                                 (rule "inEqSimp_commuteLeq" (formula "144") (term "0,0,0,0"))
                                                                                                                                 (rule "inEqSimp_commuteLeq" (formula "143"))
                                                                                                                                 (rule "applyEq" (formula "144") (term "1,1,0,0,0") (ifseqformula "31"))
                                                                                                                                 (rule "commute_and" (formula "144") (term "1,0"))
                                                                                                                                 (rule "commute_and" (formula "144") (term "1,0,0"))
                                                                                                                                 (rule "commute_and" (formula "144") (term "0,0,0"))
                                                                                                                                 (rule "elim_double_block_2" (formula "173") (term "1"))
                                                                                                                                 (rule "shift_paren_and" (formula "144") (term "0,0"))
                                                                                                                                 (rule "commute_and_2" (formula "144") (term "0,0,0"))
                                                                                                                                 (rule "ifUnfold" (formula "173") (term "1") (inst "#boolv=x_2"))
                                                                                                                                 (rule "variableDeclaration" (formula "173") (term "1") (newnames "x_20"))
                                                                                                                                 (rule "inequality_comparison_simple" (formula "173") (term "1"))
                                                                                                                                  (builtin "One Step Simplification" (formula "173"))
                                                                                                                                 (rule "replace_known_left" (formula "173") (term "0,0,1,0") (ifseqformula "141"))
                                                                                                                                  (builtin "One Step Simplification" (formula "173"))
                                                                                                                                 (rule "ifSplit" (formula "173"))
                                                                                                                                 (branch "if x_20 true"
                                                                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                                                                    (rule "closeFalse" (formula "1"))
                                                                                                                                 )
                                                                                                                                 (branch "if x_20 false"
                                                                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                                                                     (builtin "One Step Simplification" (formula "174"))
                                                                                                                                    (rule "true_left" (formula "1"))
                                                                                                                                    (rule "blockEmpty" (formula "173") (term "1"))
                                                                                                                                     (builtin "Block Contract (Internal)" (formula "173") (newnames "result_18,exc_18,heap_Before_BLOCK_16,savedHeap_Before_BLOCK_16,o,f"))
                                                                                                                                    (branch "Validity"
                                                                                                                                        (builtin "One Step Simplification" (formula "145") (ifInst ""  (formula "26")))
                                                                                                                                        (builtin "One Step Simplification" (formula "174"))
                                                                                                                                       (rule "eqSymm" (formula "174") (term "0,0,1,0,1"))
                                                                                                                                       (rule "variableDeclarationAssign" (formula "174") (term "1"))
                                                                                                                                       (rule "variableDeclaration" (formula "174") (term "1") (newnames "exc_18_1"))
                                                                                                                                       (rule "assignment" (formula "174") (term "1"))
                                                                                                                                        (builtin "One Step Simplification" (formula "174"))
                                                                                                                                       (rule "emptyStatement" (formula "174") (term "1"))
                                                                                                                                        (builtin "One Step Simplification" (formula "174"))
                                                                                                                                       (rule "emptyStatement" (formula "174") (term "1"))
                                                                                                                                       (rule "tryEmpty" (formula "174") (term "1"))
                                                                                                                                       (rule "blockEmptyLabel" (formula "174") (term "1"))
                                                                                                                                       (rule "blockEmpty" (formula "174") (term "1"))
                                                                                                                                       (rule "methodCallEmpty" (formula "174") (term "1"))
                                                                                                                                       (rule "emptyModality" (formula "174") (term "1"))
                                                                                                                                       (rule "andRight" (formula "174"))
                                                                                                                                       (branch
                                                                                                                                           (builtin "One Step Simplification" (formula "174"))
                                                                                                                                          (rule "closeTrue" (formula "174"))
                                                                                                                                       )
                                                                                                                                       (branch
                                                                                                                                           (builtin "One Step Simplification" (formula "174"))
                                                                                                                                          (rule "closeTrue" (formula "174"))
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                    (branch "Precondition"
                                                                                                                                       (rule "andRight" (formula "173"))
                                                                                                                                       (branch
                                                                                                                                           (builtin "One Step Simplification" (formula "173") (ifInst ""  (formula "26")))
                                                                                                                                          (rule "closeTrue" (formula "173"))
                                                                                                                                       )
                                                                                                                                       (branch
                                                                                                                                           (builtin "One Step Simplification" (formula "173"))
                                                                                                                                          (rule "wellFormedAnonEQ" (formula "173") (ifseqformula "56"))
                                                                                                                                          (rule "wellFormedAnon" (formula "173") (term "0"))
                                                                                                                                          (rule "replace_known_left" (formula "173") (term "1") (ifseqformula "55"))
                                                                                                                                           (builtin "One Step Simplification" (formula "173") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                                                                                                                                          (rule "closeTrue" (formula "173"))
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                    (branch "Usage"
                                                                                                                                        (builtin "One Step Simplification" (formula "145"))
                                                                                                                                        (builtin "One Step Simplification" (formula "174"))
                                                                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "145") (term "1,1,1,0") (ifseqformula "56"))
                                                                                                                                        (builtin "One Step Simplification" (formula "145"))
                                                                                                                                       (rule "expand_inInt" (formula "145") (term "0,1,0"))
                                                                                                                                       (rule "expand_inInt" (formula "145") (term "0,0,1"))
                                                                                                                                       (rule "replace_int_MIN" (formula "145") (term "0,1,0,1,0"))
                                                                                                                                       (rule "replace_int_MAX" (formula "145") (term "1,0,0,1,0"))
                                                                                                                                       (rule "replace_int_MIN" (formula "145") (term "0,1,0,0,1"))
                                                                                                                                       (rule "replace_int_MAX" (formula "145") (term "1,0,0,0,1"))
                                                                                                                                       (rule "andLeft" (formula "145"))
                                                                                                                                       (rule "andLeft" (formula "145"))
                                                                                                                                       (rule "andLeft" (formula "146"))
                                                                                                                                       (rule "andLeft" (formula "146"))
                                                                                                                                       (rule "eqSymm" (formula "149") (term "1,1,0"))
                                                                                                                                       (rule "translateJavaAddInt" (formula "149") (term "3,1,0,0,1,0"))
                                                                                                                                       (rule "translateJavaAddInt" (formula "149") (term "3,1,0,1,1,0"))
                                                                                                                                       (rule "eqSymm" (formula "149") (term "0,1,0"))
                                                                                                                                       (rule "translateJavaAddInt" (formula "149") (term "0,1,1,0"))
                                                                                                                                       (rule "translateJavaAddInt" (formula "149") (term "1,0,1,0"))
                                                                                                                                       (rule "replace_known_left" (formula "148") (term "0") (ifseqformula "145"))
                                                                                                                                        (builtin "One Step Simplification" (formula "148"))
                                                                                                                                       (rule "true_left" (formula "148"))
                                                                                                                                       (rule "polySimp_addComm1" (formula "148") (term "3,1,0,1,1,0"))
                                                                                                                                       (rule "polySimp_addComm1" (formula "148") (term "3,1,1,0,1,0"))
                                                                                                                                       (rule "polySimp_addComm0" (formula "148") (term "0,3,1,0,1,1,0"))
                                                                                                                                       (rule "polySimp_addComm0" (formula "148") (term "1,0,1,0"))
                                                                                                                                       (rule "polySimp_addComm0" (formula "148") (term "0,1,1,0"))
                                                                                                                                       (rule "polySimp_addComm0" (formula "148") (term "0,3,0,1,0,1,0"))
                                                                                                                                       (rule "inEqSimp_commuteLeq" (formula "148") (term "1,0,0"))
                                                                                                                                       (rule "inEqSimp_commuteLeq" (formula "147"))
                                                                                                                                       (rule "commute_and" (formula "148") (term "0,0"))
                                                                                                                                       (rule "elim_double_block_2" (formula "177") (term "1"))
                                                                                                                                       (rule "elim_double_block_9" (formula "177") (term "1"))
                                                                                                                                       (rule "ifUnfold" (formula "177") (term "1") (inst "#boolv=x_2"))
                                                                                                                                       (rule "variableDeclaration" (formula "177") (term "1") (newnames "x_21"))
                                                                                                                                       (rule "inequality_comparison_simple" (formula "177") (term "1"))
                                                                                                                                        (builtin "One Step Simplification" (formula "177"))
                                                                                                                                       (rule "replace_known_left" (formula "177") (term "0,0,1,0") (ifseqformula "145"))
                                                                                                                                        (builtin "One Step Simplification" (formula "177"))
                                                                                                                                       (rule "ifSplit" (formula "177"))
                                                                                                                                       (branch "if x_21 true"
                                                                                                                                           (builtin "One Step Simplification" (formula "178"))
                                                                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                                                                          (rule "closeFalse" (formula "1"))
                                                                                                                                       )
                                                                                                                                       (branch "if x_21 false"
                                                                                                                                           (builtin "One Step Simplification" (formula "178"))
                                                                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                                                                          (rule "true_left" (formula "1"))
                                                                                                                                          (rule "blockEmpty" (formula "177") (term "1"))
                                                                                                                                          (rule "blockEmpty" (formula "177") (term "1"))
                                                                                                                                          (rule "lsContinue" (formula "177") (term "1"))
                                                                                                                                           (builtin "One Step Simplification" (formula "177") (userinteraction))
                                                                                                                                          (rule "precOfInt" (formula "177") (userinteraction))
                                                                                                                                          (rule "andRight" (formula "177") (userinteraction))
                                                                                                                                          (branch "Case 1"
                                                                                                                                             (rule "Contract_axiom_for_remainingWriteCountOfBucket_in_BucketPointers" (formula "177") (term "1") (userinteraction))
                                                                                                                                             (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "178") (term "1") (userinteraction))
                                                                                                                                             (rule "applyEq" (formula "178") (term "1,1") (ifseqformula "60") (userinteraction))
                                                                                                                                             (rule "translateJavaSubInt" (formula "178") (term "1") (userinteraction))
                                                                                                                                             (rule "Definition_axiom_for_isClassOfSliceSplit_in_de_wiesler_Classifier" (formula "140") (term "0") (userinteraction))
                                                                                                                                              (builtin "One Step Simplification" (formula "140"))
                                                                                                                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0") (ifseqformula "57"))
                                                                                                                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "104")) (ifInst ""  (formula "68")) (ifInst ""  (formula "175")) (ifInst ""  (formula "68")) (ifInst ""  (formula "67")) (ifInst ""  (formula "23")))
                                                                                                                                             (rule "true_left" (formula "1"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "177") (term "2,0,1"))
                                                                                                                                             (rule "eqSymm" (formula "139"))
                                                                                                                                             (rule "polySimp_homoEq" (formula "144") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_homoEq" (formula "144") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_homoEq" (formula "148") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_homoEq" (formula "61"))
                                                                                                                                             (rule "polySimp_elimSub" (formula "177") (term "1"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "148") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "177") (term "1,1"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "177") (term "2,0,1"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "0,1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "144") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "0,1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "148") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "148") (term "0,1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                                                                                                                             (rule "mul_literals" (formula "61") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "177") (term "1,1"))
                                                                                                                                             (rule "mul_literals" (formula "177") (term "0,1,1"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "177") (term "1"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "144") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "144") (term "0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "148") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "148") (term "0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "61") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "144") (term "0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "63"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "63") (term "0"))
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "103"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "103") (term "1,0,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "103") (term "0"))
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
                                                                                                                                             (rule "inEqSimp_leqRight" (formula "177"))
                                                                                                                                             (rule "add_zero_right" (formula "1") (term "0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                                                                                             (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                                                                             (rule "inEqSimp_homoInEq1" (formula "84"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "84") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "84") (term "1,0"))
                                                                                                                                             (rule "polySimp_mulAssoc" (formula "84") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "84") (term "0,0,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "84") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "84") (term "0"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "94"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "94") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "94") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "94") (term "0,1,0"))
                                                                                                                                             (rule "mul_literals" (formula "94") (term "0,0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "94") (term "0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "94") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "46") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "46") (term "0,1,1,0"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "80") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor0b" (formula "80") (term "0,0,0,0"))
                                                                                                                                             (rule "add_literals" (formula "80") (term "1,1,0,0,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "80") (term "1,0,0,0,0"))
                                                                                                                                             (rule "add_literals" (formula "80") (term "0,0,0,0"))
                                                                                                                                             (rule "qeq_literals" (formula "80") (term "0,0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "80"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                                                                                             (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "42"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                                                                                                             (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "74"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "74") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "74") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "73"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                                                                                                             (rule "polySimp_pullOutFactor1" (formula "73") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "73") (term "1,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "73") (term "0,0"))
                                                                                                                                             (rule "add_zero_left" (formula "73") (term "0"))
                                                                                                                                             (rule "inEqSimp_homoInEq1" (formula "55"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "80") (term "0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor1" (formula "80") (term "0,0,0"))
                                                                                                                                             (rule "add_literals" (formula "80") (term "1,0,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "80") (term "0,0,0"))
                                                                                                                                             (rule "qeq_literals" (formula "80") (term "0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "80"))
                                                                                                                                             (rule "true_left" (formula "80"))
                                                                                                                                             (rule "polySimp_sepNegMonomial" (formula "144") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "144") (term "0,0,1,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "144") (term "0,0,1,0"))
                                                                                                                                             (rule "polySimp_sepNegMonomial" (formula "144") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "144") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "144") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_sepNegMonomial" (formula "148") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "148") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "148") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_sepNegMonomial" (formula "62"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "62") (term "0"))
                                                                                                                                             (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "62"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "55") (term "0,0,0"))
                                                                                                                                             (rule "add_zero_left" (formula "55") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "144") (term "1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "144") (term "1,1,0,0,0,0,0"))
                                                                                                                                             (rule "mul_literals" (formula "144") (term "0,1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "144") (term "1,1,0,0,0,0,0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "103"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "103") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "103") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                                                                                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0"))
                                                                                                                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "93"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "93") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "46") (term "0,1,1,0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "74") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "55") (term "0"))
                                                                                                                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "36"))
                                                                                                                                             (rule "leq_literals" (formula "19") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "19"))
                                                                                                                                             (rule "true_left" (formula "19"))
                                                                                                                                             (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "39"))
                                                                                                                                             (rule "leq_literals" (formula "38") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "38"))
                                                                                                                                             (rule "true_left" (formula "38"))
                                                                                                                                             (rule "inEqSimp_subsumption0" (formula "72") (ifseqformula "91"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "72") (term "0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "72") (term "1,0,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "72") (term "0,1,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "72") (term "1,0,1,0,0"))
                                                                                                                                             (rule "mul_literals" (formula "72") (term "0,0,1,0,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "72") (term "1,0,1,0,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "72") (term "0,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                                                                                                             (rule "add_zero_right" (formula "72") (term "0,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "72") (term "0,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "72") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor2b" (formula "72") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                                                                                                             (rule "add_zero_right" (formula "72") (term "0,0"))
                                                                                                                                             (rule "qeq_literals" (formula "72") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "72"))
                                                                                                                                             (rule "true_left" (formula "72"))
                                                                                                                                             (rule "inEqSimp_subsumption1" (formula "98") (ifseqformula "99"))
                                                                                                                                             (rule "leq_literals" (formula "98") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "98"))
                                                                                                                                             (rule "true_left" (formula "98"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "11"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                                                                                                             (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "62") (term "0"))
                                                                                                                                             (rule "inEqSimp_subsumption0" (formula "128") (ifseqformula "62"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "128") (term "0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "128") (term "1,0,0"))
                                                                                                                                             (rule "mul_literals" (formula "128") (term "0,1,0,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "128") (term "0,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "128") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor1b" (formula "128") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "128") (term "1,1,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "128") (term "1,0,0"))
                                                                                                                                             (rule "add_literals" (formula "128") (term "0,0"))
                                                                                                                                             (rule "qeq_literals" (formula "128") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "128"))
                                                                                                                                             (rule "true_left" (formula "128"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "11"))
                                                                                                                                             (rule "mul_literals" (formula "65") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                                                                                                             (rule "mul_literals" (formula "65") (term "1"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "40"))
                                                                                                                                             (rule "mul_literals" (formula "20") (term "0,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                                                                                             (rule "add_literals" (formula "20") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                                                                                             (rule "mul_literals" (formula "20") (term "1"))
                                                                                                                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "36"))
                                                                                                                                             (rule "leq_literals" (formula "20") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "20"))
                                                                                                                                             (rule "true_left" (formula "20"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "19"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "37"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                                                                             (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "39"))
                                                                                                                                             (rule "leq_literals" (formula "19") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "19"))
                                                                                                                                             (rule "true_left" (formula "19"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "92"))
                                                                                                                                             (rule "times_zero_1" (formula "73") (term "0,0"))
                                                                                                                                             (rule "add_zero_left" (formula "73") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "73") (term "1"))
                                                                                                                                             (rule "mul_literals" (formula "73") (term "0,1"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "73") (term "1,1"))
                                                                                                                                             (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "73"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                                                                                                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                                                                                                             (rule "add_zero_right" (formula "35") (term "0,0"))
                                                                                                                                             (rule "qeq_literals" (formula "35") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "35"))
                                                                                                                                             (rule "true_left" (formula "35"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "37"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                                                                                                                                             (rule "mul_literals" (formula "72") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                                                                                                             (rule "add_literals" (formula "72") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                                                                                             (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "72"))
                                                                                                                                             (rule "leq_literals" (formula "18") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                                                                                             (rule "true_left" (formula "18"))
                                                                                                                                             (rule "inEqSimp_and_subsumption3" (formula "141") (term "0,0,0"))
                                                                                                                                             (rule "leq_literals" (formula "141") (term "0,1,0,0,0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "141"))
                                                                                                                                             (rule "inEqSimp_and_subsumption3" (formula "7") (term "0,0,0"))
                                                                                                                                             (rule "leq_literals" (formula "7") (term "0,1,0,0,0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                                                                                             (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                                                                                                                             (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "42"))
                                                                                                                                             (rule "nnf_imp2or" (formula "8") (term "0"))
                                                                                                                                             (rule "nnf_imp2or" (formula "145") (term "0"))
                                                                                                                                             (rule "Contract_axiom_for_elementsToReadCountElementSplitBucket_in_BucketPointers" (formula "87") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "13")) (ifInst ""  (formula "174")) (ifInst ""  (formula "172")) (ifInst ""  (formula "13")) (ifInst ""  (formula "88")) (ifInst ""  (formula "20")))
                                                                                                                                             (rule "wellFormedAnon" (formula "87") (term "1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "87") (term "0,0,1,0,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "87") (term "1,1,1,0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "87") (term "0,1,0") (ifseqformula "16"))
                                                                                                                                              (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "15")))
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "87") (term "0,1,0,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "87") (term "0,0,0") (ifseqformula "101"))
                                                                                                                                              (builtin "One Step Simplification" (formula "87"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "87") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "87") (term "1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "87") (term "0,0,1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "87") (term "0,0,0,1,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0,0,1,0"))
                                                                                                                                             (rule "add_literals" (formula "87") (term "1,1,0,0,0,0,1,0"))
                                                                                                                                             (rule "times_zero_1" (formula "87") (term "1,0,0,0,0,1,0"))
                                                                                                                                             (rule "add_zero_right" (formula "87") (term "0,0,0,0,1,0"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "87") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "87") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "87") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "87") (term "0,1,0,1,1,0"))
                                                                                                                                             (rule "mul_literals" (formula "87") (term "0,0,1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "87") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "87") (term "0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "87") (term "0,0,0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0,1,1,0"))
                                                                                                                                             (rule "add_literals" (formula "87") (term "1,1,0,0,0,1,1,0"))
                                                                                                                                             (rule "times_zero_1" (formula "87") (term "1,0,0,0,1,1,0"))
                                                                                                                                             (rule "add_zero_right" (formula "87") (term "0,0,0,1,1,0"))
                                                                                                                                             (rule "applyEq" (formula "87") (term "0,1,0,0,1,0") (ifseqformula "62"))
                                                                                                                                             (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,1,0"))
                                                                                                                                             (rule "add_literals" (formula "87") (term "1,1,0,0,1,0"))
                                                                                                                                             (rule "times_zero_1" (formula "87") (term "1,0,0,1,0"))
                                                                                                                                             (rule "add_zero_right" (formula "87") (term "0,0,1,0"))
                                                                                                                                             (rule "qeq_literals" (formula "87") (term "0,1,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "87"))
                                                                                                                                             (rule "applyEq" (formula "87") (term "1,0,1,0") (ifseqformula "59"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "87") (term "0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "87") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "87") (term "0,0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "87") (term "0,0") (ifseqformula "102"))
                                                                                                                                              (builtin "One Step Simplification" (formula "87"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "87") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "87") (term "1,0"))
                                                                                                                                             (rule "mul_literals" (formula "87") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "87") (term "1,1,0"))
                                                                                                                                             (rule "replace_known_left" (formula "87") (term "0") (ifseqformula "82"))
                                                                                                                                              (builtin "One Step Simplification" (formula "87"))
                                                                                                                                             (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "105"))
                                                                                                                                              (builtin "One Step Simplification" (formula "105"))
                                                                                                                                             (rule "andLeft" (formula "105"))
                                                                                                                                             (rule "andLeft" (formula "105"))
                                                                                                                                             (rule "andLeft" (formula "105"))
                                                                                                                                             (rule "andLeft" (formula "105"))
                                                                                                                                             (rule "andLeft" (formula "105"))
                                                                                                                                             (rule "andLeft" (formula "105"))
                                                                                                                                             (rule "translateJavaSubInt" (formula "110") (term "0,2,1"))
                                                                                                                                             (rule "translateJavaSubInt" (formula "110") (term "0,2,0"))
                                                                                                                                             (rule "eqSymm" (formula "107"))
                                                                                                                                             (rule "eqSymm" (formula "110"))
                                                                                                                                             (rule "translateJavaMulInt" (formula "107") (term "1,0"))
                                                                                                                                             (rule "polySimp_elimSub" (formula "110") (term "0,2,1"))
                                                                                                                                             (rule "mul_literals" (formula "110") (term "1,0,2,1"))
                                                                                                                                             (rule "polySimp_elimSub" (formula "110") (term "0,2,0"))
                                                                                                                                             (rule "mul_literals" (formula "110") (term "1,0,2,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "107") (term "1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "110") (term "0,2,1"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "110") (term "0,2,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "105"))
                                                                                                                                             (rule "applyEq" (formula "105") (term "0") (ifseqformula "29"))
                                                                                                                                             (rule "applyEq" (formula "106") (term "0") (ifseqformula "29"))
                                                                                                                                             (rule "applyEq" (formula "107") (term "1") (ifseqformula "29"))
                                                                                                                                             (rule "pullOutSelect" (formula "110") (term "1") (inst "selectSK=arr_1"))
                                                                                                                                             (rule "simplifySelectOfAnonEQ" (formula "111") (ifseqformula "53"))
                                                                                                                                              (builtin "One Step Simplification" (formula "111"))
                                                                                                                                             (rule "simplifySelectOfAnonEQ" (formula "110") (ifseqformula "53"))
                                                                                                                                              (builtin "One Step Simplification" (formula "110"))
                                                                                                                                             (rule "elementOfSingleton" (formula "111") (term "0,0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "173")))
                                                                                                                                             (rule "elementOfSingleton" (formula "110") (term "0,0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "173")))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "102") (ifseqformula "106"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "102") (term "0,0"))
                                                                                                                                             (rule "mul_literals" (formula "102") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "102") (term "0"))
                                                                                                                                             (rule "add_literals" (formula "102") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "102"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "102") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "102") (term "0"))
                                                                                                                                             (rule "inEqSimp_subsumption0" (formula "100") (ifseqformula "102"))
                                                                                                                                             (rule "leq_literals" (formula "100") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "100"))
                                                                                                                                             (rule "true_left" (formula "100"))
                                                                                                                                             (rule "pullOutSelect" (formula "111") (term "2,0") (inst "selectSK=arr_2"))
                                                                                                                                             (rule "simplifySelectOfAnon" (formula "111"))
                                                                                                                                              (builtin "One Step Simplification" (formula "111"))
                                                                                                                                             (rule "elementOfSingleton" (formula "111") (term "0,0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "174")))
                                                                                                                                             (rule "pullOutSelect" (formula "110") (term "2,0") (inst "selectSK=arr_3"))
                                                                                                                                             (rule "simplifySelectOfAnon" (formula "110"))
                                                                                                                                              (builtin "One Step Simplification" (formula "110"))
                                                                                                                                             (rule "elementOfSingleton" (formula "110") (term "0,0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "175")))
                                                                                                                                             (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "11") (term "1"))
                                                                                                                                             (rule "translateJavaSubInt" (formula "11") (term "1,1"))
                                                                                                                                             (rule "polySimp_elimSub" (formula "11") (term "1,1"))
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "11"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                                                                                             (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                                                                                                                             (rule "Definition_axiom_for_countClassOfSliceEqLemma_in_de_wiesler_Classifier" (formula "135") (term "0") (inst "b=b"))
                                                                                                                                              (builtin "One Step Simplification" (formula "135"))
                                                                                                                                             (rule "expand_inInt" (formula "135") (term "1,0,0"))
                                                                                                                                             (rule "replace_int_MAX" (formula "135") (term "1,0,1,0,0"))
                                                                                                                                             (rule "replace_int_MIN" (formula "135") (term "0,1,1,0,0"))
                                                                                                                                             (rule "eqSymm" (formula "135") (term "1,0"))
                                                                                                                                             (rule "translateJavaSubInt" (formula "135") (term "1,0,1,0"))
                                                                                                                                             (rule "polySimp_elimSub" (formula "135") (term "1,0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "135") (term "1,1,0,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "135") (term "1,1,0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "135") (term "0,1,1,0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "135") (term "1,0,1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "135") (term "0,1,0,1,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor1b" (formula "135") (term "0,0,1,0,1,0"))
                                                                                                                                             (rule "add_literals" (formula "135") (term "1,1,0,0,1,0,1,0"))
                                                                                                                                             (rule "times_zero_1" (formula "135") (term "1,0,0,1,0,1,0"))
                                                                                                                                             (rule "add_literals" (formula "135") (term "0,0,1,0,1,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor1b" (formula "135") (term "1,0,1,0"))
                                                                                                                                             (rule "add_literals" (formula "135") (term "1,1,1,0,1,0"))
                                                                                                                                             (rule "times_zero_1" (formula "135") (term "1,1,0,1,0"))
                                                                                                                                             (rule "add_literals" (formula "135") (term "1,0,1,0"))
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "135") (term "1,0,0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,1,0,0,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "135") (term "0,0,0,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "135") (term "1,1,0,0"))
                                                                                                                                             (rule "applyEq" (formula "135") (term "0,1,0,0,1,0,0,0") (ifseqformula "29"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "1,0,0,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "135") (term "1,1,0,0,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "135") (term "1,1,0,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "135") (term "1,1,1,0,0,0"))
                                                                                                                                             (rule "mul_literals" (formula "135") (term "0,1,1,0,0,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "135") (term "1,1,1,0,0,0"))
                                                                                                                                             (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "70") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "70"))
                                                                                                                                             (rule "translateJavaMod" (formula "70") (term "0"))
                                                                                                                                             (rule "jmod_axiom" (formula "70") (term "0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                                                                                                                                             (rule "polySimp_sepNegMonomial" (formula "70"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                                                                                                             (rule "newSym_eq" (formula "70") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_1,
               de.wiesler.Increment::$position),
    Z(0(#)))"))
                                                                                                                                             (rule "times_zero_1" (formula "70") (term "1,1"))
                                                                                                                                             (rule "add_zero_right" (formula "70") (term "1"))
                                                                                                                                             (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "70"))
                                                                                                                                             (rule "eqSymm" (formula "71"))
                                                                                                                                             (rule "applyEq" (formula "79") (term "1,6,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "79") (term "6,0"))
                                                                                                                                             (rule "applyEq" (formula "105") (term "1,0,2,2,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "105") (term "0,2,2,0"))
                                                                                                                                             (rule "applyEq" (formula "99") (term "1,0,2,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "99") (term "0,2,0"))
                                                                                                                                             (rule "applyEq" (formula "90") (term "2,0") (ifseqformula "71"))
                                                                                                                                             (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "71"))
                                                                                                                                             (rule "applyEq" (formula "74") (term "0") (ifseqformula "71"))
                                                                                                                                             (rule "applyEq" (formula "87") (term "1,5,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "87") (term "5,0"))
                                                                                                                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "71"))
                                                                                                                                             (rule "applyEq" (formula "129") (term "1,4,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "129") (term "4,0"))
                                                                                                                                             (rule "applyEq" (formula "125") (term "1,4,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "125") (term "4,0"))
                                                                                                                                             (rule "applyEq" (formula "94") (term "0") (ifseqformula "71"))
                                                                                                                                             (rule "inEqSimp_homoInEq0" (formula "94"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "94") (term "0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "94") (term "0,0"))
                                                                                                                                             (rule "applyEq" (formula "129") (term "1,3,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "129") (term "3,0"))
                                                                                                                                             (rule "applyEq" (formula "100") (term "1,0,2,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "100") (term "0,2,0"))
                                                                                                                                             (rule "applyEq" (formula "79") (term "1,7,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "79") (term "7,0"))
                                                                                                                                             (rule "applyEq" (formula "147") (term "1,4,0,1,0,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "147") (term "4,0,1,0,0"))
                                                                                                                                             (rule "applyEq" (formula "78") (term "1,6,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "78") (term "6,0"))
                                                                                                                                             (rule "applyEq" (formula "147") (term "1,4,0,0,0,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "147") (term "4,0,0,0,0"))
                                                                                                                                             (rule "applyEq" (formula "78") (term "1,7,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "78") (term "7,0"))
                                                                                                                                             (rule "applyEq" (formula "125") (term "1,3,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "125") (term "3,0"))
                                                                                                                                             (rule "applyEq" (formula "83") (term "1,1") (ifseqformula "71"))
                                                                                                                                             (rule "applyEq" (formula "104") (term "1,0,2,2,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "104") (term "0,2,2,0"))
                                                                                                                                             (rule "applyEq" (formula "147") (term "1,3,0,1,0,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "147") (term "3,0,1,0,0"))
                                                                                                                                             (rule "applyEq" (formula "121") (term "1,3,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "121") (term "3,0"))
                                                                                                                                             (rule "applyEq" (formula "89") (term "1,4,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "89") (term "4,0"))
                                                                                                                                             (rule "applyEq" (formula "136") (term "1,3,1,1,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "136") (term "3,1,1,0"))
                                                                                                                                             (rule "applyEq" (formula "56") (term "1,1") (ifseqformula "71"))
                                                                                                                                             (rule "applyEq" (formula "95") (term "0,0,0,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "95") (term "0,0,0"))
                                                                                                                                             (rule "applyEq" (formula "136") (term "1,4,1,1,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "136") (term "4,1,1,0"))
                                                                                                                                             (rule "applyEq" (formula "147") (term "1,4,1") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "147") (term "4,1"))
                                                                                                                                             (rule "applyEq" (formula "62") (term "1") (ifseqformula "71"))
                                                                                                                                             (rule "applyEq" (formula "156") (term "1,2,0,1,0,1,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "156") (term "2,0,1,0,1,0"))
                                                                                                                                             (rule "applyEq" (formula "156") (term "1,3,0,1,0,1,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "156") (term "3,0,1,0,1,0"))
                                                                                                                                             (rule "applyEq" (formula "156") (term "1,2,0,0,1,1,1,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "156") (term "2,0,0,1,1,1,0"))
                                                                                                                                             (rule "applyEq" (formula "156") (term "1,3,0,0,1,1,1,0") (ifseqformula "71"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "156") (term "3,0,0,1,1,1,0"))
                                                                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "94"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "94") (term "1"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "94") (term "1"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,1"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "94") (term "1,1"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "94") (term "0,1"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,1"))
                                                                                                                                             (rule "mul_literals" (formula "94") (term "0,0,1"))
                                                                                                                                             (rule "elimGcdGeq_antec" (formula "74") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                                             (rule "leq_literals" (formula "74") (term "0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "74"))
                                                                                                                                             (rule "add_zero_right" (formula "74") (term "0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "74") (term "1,0,0,0,0"))
                                                                                                                                             (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                                                                                                             (rule "add_zero_right" (formula "74") (term "0,0"))
                                                                                                                                             (rule "leq_literals" (formula "74") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "74"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "94") (ifseqformula "36"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "94") (term "0,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "94") (term "0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "94") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                                                                                                                             (rule "mul_literals" (formula "94") (term "0,0,0,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "94") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "94") (term "0,0,0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "94"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "94") (term "0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "94") (term "0"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "95") (ifseqformula "38"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "95") (term "0,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "95") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                                                                                                                                             (rule "mul_literals" (formula "95") (term "0,0,0,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "95") (term "0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "95") (term "0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor2b" (formula "95") (term "0"))
                                                                                                                                             (rule "add_literals" (formula "95") (term "1,1,0"))
                                                                                                                                             (rule "times_zero_1" (formula "95") (term "1,0"))
                                                                                                                                             (rule "polySimp_addLiterals" (formula "95") (term "0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "95") (term "0"))
                                                                                                                                             (rule "add_literals" (formula "95") (term "0,0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "95"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                                                                                                                                             (rule "elimGcdLeq_antec" (formula "95") (inst "elimGcdRightDiv=Z(6(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                                             (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,1,0"))
                                                                                                                                             (rule "neg_literal" (formula "95") (term "0,0,0,0,0,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,0,1,0"))
                                                                                                                                             (rule "leq_literals" (formula "95") (term "0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "95"))
                                                                                                                                             (rule "mul_literals" (formula "95") (term "1,0,0,0,0,0"))
                                                                                                                                             (rule "add_literals" (formula "95") (term "0,0,0,0,0"))
                                                                                                                                             (rule "add_literals" (formula "95") (term "0,0,0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor0b" (formula "95") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "95") (term "1,1,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "95") (term "1,0,0"))
                                                                                                                                             (rule "add_zero_right" (formula "95") (term "0,0"))
                                                                                                                                             (rule "qeq_literals" (formula "95") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "95"))
                                                                                                                                             (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "94"))
                                                                                                                                             (rule "mul_literals" (formula "33") (term "0,0"))
                                                                                                                                             (rule "add_zero_left" (formula "33") (term "0"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                                                                                             (rule "elimGcdLeq_antec" (formula "33") (inst "elimGcdRightDiv=Z(6(2(1(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                                                                                             (rule "neg_literal" (formula "33") (term "0,0,0,0,0,1,0"))
                                                                                                                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,1,0"))
                                                                                                                                             (rule "leq_literals" (formula "33") (term "0,0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "33"))
                                                                                                                                             (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                                                                                                                             (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                                                                                                                                             (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                                                                                                             (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                                                                                                             (rule "add_zero_right" (formula "33") (term "0,0"))
                                                                                                                                             (rule "qeq_literals" (formula "33") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "33"))
                                                                                                                                             (rule "inEqSimp_subsumption0" (formula "96") (ifseqformula "33"))
                                                                                                                                             (rule "leq_literals" (formula "96") (term "0"))
                                                                                                                                              (builtin "One Step Simplification" (formula "96"))
                                                                                                                                             (rule "true_left" (formula "96"))
                                                                                                                                             (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "14"))
                                                                                                                                             (rule "andLeft" (formula "14"))
                                                                                                                                             (rule "notLeft" (formula "14"))
                                                                                                                                             (rule "notLeft" (formula "14"))
                                                                                                                                             (rule "replace_known_right" (formula "113") (term "0,0,0,0") (ifseqformula "158"))
                                                                                                                                              (builtin "One Step Simplification" (formula "113"))
                                                                                                                                             (rule "replace_known_right" (formula "112") (term "0,0,0,0") (ifseqformula "158"))
                                                                                                                                              (builtin "One Step Simplification" (formula "112"))
                                                                                                                                             (rule "replace_known_right" (formula "114") (term "0,0,0,0") (ifseqformula "158"))
                                                                                                                                              (builtin "One Step Simplification" (formula "114"))
                                                                                                                                             (rule "replace_known_right" (formula "115") (term "0,0,0,0") (ifseqformula "158"))
                                                                                                                                              (builtin "One Step Simplification" (formula "115"))
                                                                                                                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "158"))
                                                                                                                                              (builtin "One Step Simplification" (formula "5"))
                                                                                                                                             (rule "replace_known_left" (formula "114") (term "0,0,0") (ifseqformula "5"))
                                                                                                                                              (builtin "One Step Simplification" (formula "114"))
                                                                                                                                             (rule "applyEqReverse" (formula "115") (term "2,0") (ifseqformula "114"))
                                                                                                                                             (rule "hideAuxiliaryEq" (formula "114"))
                                                                                                                                             (rule "replace_known_left" (formula "112") (term "0,0,0") (ifseqformula "5"))
                                                                                                                                              (builtin "One Step Simplification" (formula "112"))
                                                                                                                                             (rule "applyEqReverse" (formula "113") (term "2,0") (ifseqformula "112"))
                                                                                                                                             (rule "hideAuxiliaryEq" (formula "112"))
                                                                                                                                             (rule "replace_known_left" (formula "113") (term "0,0,0,0") (ifseqformula "5"))
                                                                                                                                              (builtin "One Step Simplification" (formula "113"))
                                                                                                                                             (rule "applyEqReverse" (formula "112") (term "1") (ifseqformula "113"))
                                                                                                                                             (rule "hideAuxiliaryEq" (formula "113"))
                                                                                                                                             (rule "replace_known_left" (formula "112") (term "0,0,0,0") (ifseqformula "5"))
                                                                                                                                              (builtin "One Step Simplification" (formula "112"))
                                                                                                                                             (rule "eqSymm" (formula "112"))
                                                                                                                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "156"))
                                                                                                                                              (builtin "One Step Simplification" (formula "4"))
                                                                                                                                             (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "56") (term "0"))
                                                                                                                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,0,0") (ifseqformula "53"))
                                                                                                                                              (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "67")) (ifInst ""  (formula "183")) (ifInst ""  (formula "67")) (ifInst ""  (formula "66")) (ifInst ""  (formula "19")))
                                                                                                                                             (rule "wellFormedAnonEQ" (formula "56") (term "1,0") (ifseqformula "53"))
                                                                                                                                             (rule "wellFormedAnon" (formula "56") (term "0,1,0"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "56") (term "2,1,1,0,0,1"))
                                                                                                                                             (rule "translateJavaAddInt" (formula "56") (term "2,0,1,0,1"))
                                                                                                                                             (rule "replace_known_left" (formula "56") (term "0,0,1,0") (ifseqformula "15"))
                                                                                                                                              (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "14")) (ifInst ""  (formula "52")))
                                                                                                                                             (rule "polySimp_addComm0" (formula "56") (term "2,1,1,0,0,1"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "56") (term "2,0,1,0,1"))
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "56") (term "0,1,0"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,1"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "56") (term "1,0,0,0,1"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "103"))
                                                                                                                                              (builtin "One Step Simplification" (formula "56"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "56") (term "1,0,1"))
                                                                                                                                             (rule "applyEq" (formula "56") (term "0,0,1,1") (ifseqformula "57"))
                                                                                                                                             (rule "applyEq" (formula "56") (term "0,1,0,0,1") (ifseqformula "57"))
                                                                                                                                             (rule "inEqSimp_commuteLeq" (formula "56") (term "1,0,0,1"))
                                                                                                                                             (rule "applyEq" (formula "56") (term "0,1,0,0,0,1") (ifseqformula "57"))
                                                                                                                                             (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0,0,0,1"))
                                                                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "56") (term "0,0"))
                                                                                                                                             (rule "polySimp_elimOne" (formula "56") (term "0,0"))
                                                                                                                                             (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "105"))
                                                                                                                                              (builtin "One Step Simplification" (formula "56"))
                                                                                                                                             (rule "andLeft" (formula "56"))
                                                                                                                                             (rule "andLeft" (formula "56"))
                                                                                                                                             (rule "andLeft" (formula "56"))
                                                                                                                                             (rule "andLeft" (formula "56"))
                                                                                                                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "58"))
                                                                                                                                             (rule "andLeft" (formula "1"))
                                                                                                                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                                                                                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                                                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                                                                                                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                                                                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                                                                                             (rule "add_zero_right" (formula "1") (term "0"))
                                                                                                                                             (rule "leq_literals" (formula "1"))
                                                                                                                                             (rule "closeFalse" (formula "1"))
                                                                                                                                          )
                                                                                                                                          (branch "Case 2"
                                                                                                                                             (rule "polySimp_homoEq" (formula "61"))
                                                                                                                                             (rule "polySimp_homoEq" (formula "148") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_homoEq" (formula "144") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_homoEq" (formula "144") (term "1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "148") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                                                                                                                             (rule "mul_literals" (formula "61") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "148") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "148") (term "0,1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "0,1,0,0,1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "144") (term "1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "144") (term "0,1,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "61") (term "0,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "148") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "148") (term "0,0,1,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "144") (term "0,1,1,0"))
                                                                                                                                             (rule "polySimp_addComm0" (formula "144") (term "0,0,1,1,0"))
                                                                                                                                             (rule "inEqSimp_ltRight" (formula "177"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                                                                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                                                                                             (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                                                                                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                                                                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                                                                                             (rule "add_zero_right" (formula "1") (term "0"))
                                                                                                                                             (rule "qeq_literals" (formula "1"))
                                                                                                                                             (rule "closeFalse" (formula "1"))
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                              )
                                                                                                                           )
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                               )
                                                                                                            )
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "Exceptional Post (classify)"
                                                                            (builtin "One Step Simplification" (formula "132"))
                                                                            (builtin "One Step Simplification" (formula "103"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "103") (term "1,0") (ifseqformula "59"))
                                                                            (builtin "One Step Simplification" (formula "103"))
                                                                           (rule "andLeft" (formula "103"))
                                                                           (rule "andLeft" (formula "104"))
                                                                           (rule "andLeft" (formula "103"))
                                                                           (rule "notLeft" (formula "103"))
                                                                           (rule "close" (formula "106") (ifseqformula "105"))
                                                                        )
                                                                        (branch "Pre (classify)"
                                                                            (builtin "One Step Simplification" (formula "131"))
                                                                           (rule "wellFormedAnonEQ" (formula "131") (term "0,0,1") (ifseqformula "59"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "1,0,1") (ifseqformula "59"))
                                                                            (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "58")) (ifInst ""  (formula "22")))
                                                                           (rule "wellFormedAnon" (formula "131") (term "0,1"))
                                                                           (rule "expand_inInt" (formula "131") (term "1,1"))
                                                                           (rule "replace_int_MIN" (formula "131") (term "0,1,1,1"))
                                                                           (rule "replace_int_MAX" (formula "131") (term "1,0,1,1"))
                                                                           (rule "replace_known_left" (formula "131") (term "1,0,1") (ifseqformula "13"))
                                                                            (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "14")) (ifInst ""  (formula "101")))
                                                                           (rule "polySimp_homoEq" (formula "64"))
                                                                           (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                                                           (rule "mul_literals" (formula "64") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "64") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "44"))
                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "66"))
                                                                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "66") (term "0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "131") (term "1"))
                                                                           (rule "replace_known_left" (formula "131") (term "1") (ifseqformula "102"))
                                                                            (builtin "One Step Simplification" (formula "131"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "96"))
                                                                           (rule "polySimp_mulComm0" (formula "96") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "96") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "96") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "96") (term "0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "96") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "96") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                           (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "86"))
                                                                           (rule "polySimp_mulComm0" (formula "86") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "86") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "86") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "86") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "86") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "86") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "86") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "48") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "82") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "82") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "82") (term "0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "82") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "82"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "75"))
                                                                           (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "75") (term "0,0"))
                                                                           (rule "add_literals" (formula "75") (term "1,0,0"))
                                                                           (rule "times_zero_1" (formula "75") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "75") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "76"))
                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "76") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "76") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "42"))
                                                                           (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "82") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "82") (term "1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "82") (term "0,0,0"))
                                                                           (rule "qeq_literals" (formula "82") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "82"))
                                                                           (rule "true_left" (formula "82"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "64"))
                                                                           (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                                           (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "64"))
                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                           (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                                           (rule "add_literals" (formula "57") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "57") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                                                           (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "66") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "95"))
                                                                           (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "95") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                                                           (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "85") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "76") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                           (rule "polySimp_mulLiterals" (formula "57") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "57") (term "1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "95"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "76") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "76") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "76") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "76") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                                                           (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "76") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "76") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "76") (term "0,0"))
                                                                           (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "76") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "76") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "76"))
                                                                           (rule "true_left" (formula "76"))
                                                                           (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                                           (rule "leq_literals" (formula "39") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "true_left" (formula "39"))
                                                                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "42"))
                                                                           (rule "leq_literals" (formula "16") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "true_left" (formula "16"))
                                                                           (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "35"))
                                                                           (rule "leq_literals" (formula "18") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "true_left" (formula "18"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "9"))
                                                                           (rule "mul_literals" (formula "65") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                                           (rule "mul_literals" (formula "65") (term "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "39"))
                                                                           (rule "mul_literals" (formula "19") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                           (rule "add_literals" (formula "19") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                           (rule "mul_literals" (formula "19") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "35"))
                                                                           (rule "leq_literals" (formula "19") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "true_left" (formula "19"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "92"))
                                                                           (rule "times_zero_1" (formula "73") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "73") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                                                           (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "73") (term "1"))
                                                                           (rule "mul_literals" (formula "73") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "73") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "73"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "35") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "35") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "true_left" (formula "35"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "9"))
                                                                           (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                                           (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                                                           (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "62") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "35"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                           (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "37"))
                                                                           (rule "leq_literals" (formula "18") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "true_left" (formula "18"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "36"))
                                                                           (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                                                                           (rule "mul_literals" (formula "73") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                                           (rule "add_literals" (formula "73") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                                                           (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "73") (term "0"))
                                                                           (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "73"))
                                                                           (rule "leq_literals" (formula "17") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "true_left" (formula "17"))
                                                                           (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                                                                           (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                                                                           (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "nnf_imp2or" (formula "6") (term "0"))
                                                                           (rule "Definition_axiom_for_elementsToReadCountClassEqSplitBucket_in_de_wiesler_BucketPointers" (formula "87") (term "0") (inst "bucket=bucket") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "87"))
                                                                           (rule "expand_inInt" (formula "87") (term "1,0,0"))
                                                                           (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0"))
                                                                           (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "87") (term "3,1,1,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "87") (term "4,1,2,0,0,1,1,0"))
                                                                           (rule "translateJavaCastInt" (formula "87") (term "0,1,1,0"))
                                                                           (rule "eqSymm" (formula "87") (term "1,0"))
                                                                           (rule "translateJavaAddInt" (formula "87") (term "0,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "87") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "87") (term "1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "87") (term "1,1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "87") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "87") (term "0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "87") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "87") (term "1,1,0,0"))
                                                                           (rule "applyEq" (formula "87") (term "1,3,0,0,0,0,1,0") (ifseqformula "63"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "87") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "87") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "87") (term "0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "87") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "87") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "87") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "87") (term "1,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "87") (term "1,1,1,0,0,0"))
                                                                           (rule "Definition_axiom_for_disjointBucketsAreaLemma_in_de_wiesler_BucketPointers" (formula "79") (term "0") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "79"))
                                                                           (rule "expand_inInt" (formula "79") (term "1,0,0"))
                                                                           (rule "replace_int_MAX" (formula "79") (term "1,0,1,0,0"))
                                                                           (rule "replace_int_MIN" (formula "79") (term "0,1,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "79") (term "1,0,0,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "79") (term "2,1,0,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "79") (term "2,0,1,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "79") (term "2,0,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "79") (term "1,0,1,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "79") (term "2,1,1,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "79") (term "0,2,0,1,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "79") (term "0,2,0,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "79") (term "2,1,0,1,0"))
                                                                           (rule "mul_literals" (formula "79") (term "1,2,1,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "79") (term "2,1,1,1,0"))
                                                                           (rule "mul_literals" (formula "79") (term "1,2,1,1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "79") (term "2,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "79") (term "1,2,0,1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "79") (term "2,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "79") (term "1,2,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "2,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "2,1,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "2,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "2,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,2,1,0,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "0,0,2,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,2,1,1,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "0,0,2,1,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "79") (term "0,2,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "79") (term "0,2,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,0"))
                                                                           (rule "disjointDefinition" (formula "79") (term "1,1,0"))
                                                                           (rule "disjointDefinition" (formula "79") (term "0,1,0"))
                                                                           (rule "disjointArrayRanges" (formula "79") (term "1,1,0"))
                                                                            (builtin "One Step Simplification" (formula "79"))
                                                                           (rule "disjointArrayRanges" (formula "79") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "79"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "79") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "79") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,0,0,0,0,0,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                           (rule "add_zero_left" (formula "79") (term "0,0,0,0,1,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,0,0,0,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,0,0,0,0,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "79") (term "0,0,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "79") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,0,0,0,0,0,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                           (rule "add_zero_left" (formula "79") (term "0,0,0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0,1,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,0,0,1,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,0,0,1,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "0,0,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,1,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,1,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,1,0,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "79") (term "0,1,0,0,0,1,0"))
                                                                           (rule "qeq_literals" (formula "79") (term "1,0,0,0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "79"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "79") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                           (rule "add_zero_left" (formula "79") (term "0,0,0,1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,0,0,1,1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,0,0,1,1,1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "79") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,1,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,1,0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "79") (term "0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,1,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,1,0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "79") (term "0,1,0,0,1,1,0"))
                                                                           (rule "qeq_literals" (formula "79") (term "1,0,0,1,1,0"))
                                                                            (builtin "One Step Simplification" (formula "79"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,0,0,1,0,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,0,0,1,0,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "79") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "79") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,0,0,0,0,1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                           (rule "add_zero_left" (formula "79") (term "0,0,0,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,0,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,0,0,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,0,0,0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "79") (term "0,0,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "79") (term "1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "0,1,0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "79") (term "0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0,0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "79") (term "1,1,0,0,0,1,1,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "79") (term "1,0,0,0,1,1,1,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "79") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "79") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "79") (term "0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "0,0,0,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "79") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "0,1,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "79") (term "0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "0,0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "1,0,1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "79") (term "0,1,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "79") (term "1,1,0,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "79") (term "0,1,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "79") (term "0,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "0,0,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "79") (term "1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "79") (term "0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "79") (term "0,1,1,1,0,1,1,0"))
                                                                           (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "94") (term "1,0,0"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "1,0,0") (ifseqformula "54"))
                                                                            (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "67")) (ifInst ""  (formula "126")) (ifInst ""  (formula "67")) (ifInst ""  (formula "66")) (ifInst ""  (formula "19")))
                                                                           (rule "wellFormedAnonEQ" (formula "94") (term "1,0") (ifseqformula "54"))
                                                                           (rule "wellFormedAnon" (formula "94") (term "0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "94") (term "2,1,1,0,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "94") (term "2,0,1,0,1"))
                                                                           (rule "replace_known_left" (formula "94") (term "0,0,1,0") (ifseqformula "14"))
                                                                            (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "13")) (ifInst ""  (formula "53")))
                                                                           (rule "polySimp_addComm0" (formula "94") (term "2,1,1,0,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "94") (term "2,0,1,0,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "94") (term "0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "94") (term "0,1,1,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "94") (term "0,0") (ifseqformula "38"))
                                                                            (builtin "One Step Simplification" (formula "94"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "94") (term "1,0,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "94") (term "1,0,0,0,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,0,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "94") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "94") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "94") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "94") (term "0") (ifseqformula "39"))
                                                                            (builtin "One Step Simplification" (formula "94"))
                                                                           (rule "andLeft" (formula "94"))
                                                                           (rule "andLeft" (formula "95"))
                                                                           (rule "andLeft" (formula "94"))
                                                                           (rule "andLeft" (formula "97"))
                                                                           (rule "andLeft" (formula "94"))
                                                                           (rule "andLeft" (formula "94"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "95") (ifseqformula "96"))
                                                                           (rule "polySimp_mulComm0" (formula "95") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "95"))
                                                                           (rule "polySimp_mulLiterals" (formula "95") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "95") (term "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "83") (ifseqformula "97"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "0,0"))
                                                                           (rule "mul_literals" (formula "83") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "83"))
                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,1"))
                                                                           (rule "mul_literals" (formula "83") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "83") (term "1,1"))
                                                                           (rule "Contract_axiom_for_isBlockAlignedSub_in_Buffers" (formula "90") (term "0"))
                                                                           (rule "wellFormedAnonEQ" (formula "90") (term "1,0") (ifseqformula "54"))
                                                                           (rule "wellFormedAnon" (formula "90") (term "0,1,0"))
                                                                           (rule "replace_known_left" (formula "90") (term "1") (ifseqformula "91"))
                                                                            (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "103")) (ifInst ""  (formula "71")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "53")))
                                                                           (rule "true_left" (formula "90"))
                                                                           (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "57") (term "0"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0,0") (ifseqformula "54"))
                                                                            (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "68")) (ifInst ""  (formula "135")) (ifInst ""  (formula "68")) (ifInst ""  (formula "67")) (ifInst ""  (formula "19")))
                                                                           (rule "wellFormedAnonEQ" (formula "57") (term "1,0") (ifseqformula "54"))
                                                                           (rule "wellFormedAnon" (formula "57") (term "0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "57") (term "2,1,1,0,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "57") (term "2,0,1,0,1"))
                                                                           (rule "replace_known_left" (formula "57") (term "1,1,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                                                           (rule "polySimp_addComm0" (formula "57") (term "2,0,1,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "57") (term "2,1,1,0,0,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "57") (term "0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "38"))
                                                                            (builtin "One Step Simplification" (formula "57"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1"))
                                                                           (rule "replace_known_left" (formula "57") (term "0,0,0,0,1") (ifseqformula "96"))
                                                                            (builtin "One Step Simplification" (formula "57"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0,1"))
                                                                           (rule "replace_known_left" (formula "57") (term "1,0,1") (ifseqformula "100"))
                                                                            (builtin "One Step Simplification" (formula "57"))
                                                                           (rule "applyEq" (formula "57") (term "0,1,0,1") (ifseqformula "58"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0,1"))
                                                                           (rule "replace_known_left" (formula "57") (term "1,0,1") (ifseqformula "84"))
                                                                            (builtin "One Step Simplification" (formula "57"))
                                                                           (rule "applyEq" (formula "57") (term "0,0,1,1") (ifseqformula "58"))
                                                                           (rule "applyEq" (formula "57") (term "0,0,1") (ifseqformula "58"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "57") (term "0,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "57") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "57") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "39"))
                                                                            (builtin "One Step Simplification" (formula "57"))
                                                                           (rule "andLeft" (formula "57"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "97") (ifseqformula "57"))
                                                                           (rule "times_zero_1" (formula "97") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "97") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "97"))
                                                                           (rule "mul_literals" (formula "97") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "97") (ifseqformula "76"))
                                                                           (rule "leq_literals" (formula "97") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "97"))
                                                                           (rule "true_left" (formula "97"))
                                                                           (rule "Contract_axiom_for_disjointBucketsLemma_in_BucketPointers" (formula "48") (term "0"))
                                                                           (rule "replace_known_left" (formula "48") (term "1,0,0,0,0") (ifseqformula "24"))
                                                                            (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "14")) (ifInst ""  (formula "19")) (ifInst ""  (formula "137")) (ifInst ""  (formula "24")) (ifInst ""  (formula "49")) (ifInst ""  (formula "26")))
                                                                           (rule "true_left" (formula "48"))
                                                                           (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "69"))
                                                                           (rule "notLeft" (formula "69"))
                                                                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "110"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "59") (term "0"))
                                                                           (rule "translateJavaMulInt" (formula "59") (term "0,0,2,0"))
                                                                           (rule "translateJavaAddInt" (formula "59") (term "0,2,0"))
                                                                           (rule "polySimp_mulComm0" (formula "59") (term "0,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "59") (term "0,2,0"))
                                                                           (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "54"))
                                                                            (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "111")) (ifInst ""  (formula "4")))
                                                                           (rule "polySimp_homoEq" (formula "60"))
                                                                           (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                           (rule "elementOfSingleton" (formula "59") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "59"))
                                                                           (rule "applyEqReverse" (formula "60") (term "0,1,0,0") (ifseqformula "59"))
                                                                           (rule "hideAuxiliaryEq" (formula "59"))
                                                                           (rule "polySimp_addComm1" (formula "59") (term "0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "59"))
                                                                           (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "59") (term "0"))
                                                                           (rule "Contract_axiom_for_elementsToReadOfBucketBlockClassified_in_BucketPointers" (formula "7") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "138")) (ifInst ""  (formula "139")) (ifInst ""  (formula "137")) (ifInst ""  (formula "12")) (ifInst ""  (formula "20")))
                                                                           (rule "wellFormedAnon" (formula "7") (term "1,0"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,1,0") (ifseqformula "15"))
                                                                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "14")))
                                                                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "39"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "40"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "12"))
                                                                           (rule "notLeft" (formula "12"))
                                                                           (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "25"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "notLeft" (formula "25"))
                                                                           (rule "notLeft" (formula "25"))
                                                                           (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "110"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "109"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "46") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "translateJavaSubInt" (formula "46") (term "0,1"))
                                                                           (rule "translateJavaUnaryMinusInt" (formula "46") (term "1,1"))
                                                                           (rule "neg_literal" (formula "46") (term "1,1"))
                                                                           (rule "translateJavaAddInt" (formula "46") (term "0,0,1"))
                                                                           (rule "polySimp_elimSub" (formula "46") (term "0,1"))
                                                                           (rule "mul_literals" (formula "46") (term "1,0,1"))
                                                                           (rule "polySimp_addLiterals" (formula "46") (term "0,1"))
                                                                           (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                                                           (rule "polySimp_addComm0" (formula "46") (term "0,0,1"))
                                                                           (rule "Definition_axiom_for_elementsToReadOfBucketBlockClassified_in_de_wiesler_BucketPointers" (formula "8") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "translateJavaAddInt" (formula "8") (term "4,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "8") (term "3,0,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "8") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                                           (rule "applyEq" (formula "8") (term "1,4,0,1") (ifseqformula "61"))
                                                                           (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "64"))
                                                                           (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                           (rule "applyEq" (formula "8") (term "1,3,0,1") (ifseqformula "64"))
                                                                           (rule "applyEq" (formula "8") (term "0,1,0,0") (ifseqformula "61"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "8") (term "0,0"))
                                                                           (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "84"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                           (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                           (rule "qeq_literals" (formula "8") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "24"))
                                                                           (rule "notLeft" (formula "24"))
                                                                           (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "10") (term "1"))
                                                                           (rule "replace_known_right" (formula "10") (term "0,1,0") (ifseqformula "137"))
                                                                            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "20")) (ifInst ""  (formula "25")))
                                                                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "37"))
                                                                            (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "38"))
                                                                            (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "inEqSimp_subsumption1" (formula "10") (term "0,1,1") (ifseqformula "65"))
                                                                           (rule "leq_literals" (formula "10") (term "0,0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "11") (term "1"))
                                                                           (rule "translateJavaSubInt" (formula "11") (term "1,1"))
                                                                           (rule "polySimp_elimSub" (formula "11") (term "1,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "11"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                                                           (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "61") (term "1"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "138")) (ifInst ""  (formula "101")) (ifInst ""  (formula "103")) (ifInst ""  (formula "68")) (ifInst ""  (formula "20")))
                                                                           (rule "wellFormedAnonEQ" (formula "61") (term "1,0") (ifseqformula "53"))
                                                                           (rule "wellFormedAnon" (formula "61") (term "0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "61") (term "2,0,1,0,1,1"))
                                                                           (rule "translateJavaAddInt" (formula "61") (term "2,1,1,0,0,1,1"))
                                                                           (rule "replace_known_left" (formula "61") (term "1,1,0") (ifseqformula "52"))
                                                                            (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                                                                           (rule "polySimp_addComm0" (formula "61") (term "2,0,1,0,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "61") (term "2,1,1,0,0,1,1"))
                                                                           (rule "replace_known_left" (formula "61") (term "1,0,0,1,1") (ifseqformula "99"))
                                                                            (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "61") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "61") (term "1,0,0,1,1"))
                                                                           (rule "replace_known_left" (formula "61") (term "1,0,0,1,1") (ifseqformula "98"))
                                                                            (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "61") (term "1,0,1,1"))
                                                                           (rule "replace_known_left" (formula "61") (term "1,0,1,1") (ifseqformula "100"))
                                                                            (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "61") (term "0,1,1"))
                                                                           (rule "replace_known_left" (formula "61") (term "0,1,1") (ifseqformula "96"))
                                                                            (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "61") (term "1,1"))
                                                                           (rule "replace_known_left" (formula "61") (term "1,1") (ifseqformula "102"))
                                                                            (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "37"))
                                                                            (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "61") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "38"))
                                                                            (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "true_left" (formula "61"))
                                                                           (rule "Definition_axiom_for_disjointBucketsLemma_in_de_wiesler_BucketPointers" (formula "47") (term "0") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "47"))
                                                                           (rule "expand_inInt" (formula "47") (term "1,0,0"))
                                                                           (rule "replace_int_MIN" (formula "47") (term "0,1,1,0,0"))
                                                                           (rule "replace_int_MAX" (formula "47") (term "1,0,1,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "47") (term "2,0,1,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "47") (term "2,0,1,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "47") (term "2,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "47") (term "2,0,1,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "47") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "47") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "47") (term "1,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "47") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "47") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "47") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,1,0"))
                                                                           (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "13"))
                                                                           (rule "andLeft" (formula "13"))
                                                                           (rule "notLeft" (formula "13"))
                                                                           (rule "notLeft" (formula "13"))
                                                                           (rule "Contract_axiom_for_nextWriteOf_in_BucketPointers" (formula "63") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "137")) (ifInst ""  (formula "7")) (ifInst ""  (formula "19")))
                                                                           (rule "wellFormedAnon" (formula "63") (term "1,0"))
                                                                           (rule "translateJavaAddInt" (formula "63") (term "2,1,1,0,0,1,1"))
                                                                           (rule "translateJavaAddInt" (formula "63") (term "2,0,1,0,1,1"))
                                                                           (rule "replace_known_left" (formula "63") (term "1,1,0") (ifseqformula "13"))
                                                                            (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "14")))
                                                                           (rule "polySimp_addComm0" (formula "63") (term "2,0,1,0,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "63") (term "2,1,1,0,0,1,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "63") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "63") (term "1,0,0,0,1,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "63") (term "0,0,0") (ifseqformula "36"))
                                                                            (builtin "One Step Simplification" (formula "63"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0,0,1,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "63") (term "1,0,1,1"))
                                                                           (rule "applyEq" (formula "63") (term "0,1,0,0,1,1") (ifseqformula "64"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "63") (term "1,0,0,1,1"))
                                                                           (rule "applyEq" (formula "63") (term "0,0,1,1,1") (ifseqformula "64"))
                                                                           (rule "replace_known_left" (formula "63") (term "1,1,1") (ifseqformula "71"))
                                                                            (builtin "One Step Simplification" (formula "63"))
                                                                           (rule "applyEq" (formula "63") (term "0,1,0,0,1,1") (ifseqformula "64"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "63") (term "1,0,0,1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "63") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "37"))
                                                                            (builtin "One Step Simplification" (formula "63"))
                                                                           (rule "Definition_axiom_for_nextWriteOf_in_de_wiesler_BucketPointers" (formula "64") (term "0"))
                                                                           (rule "translateJavaAddInt" (formula "64") (term "0,2,0"))
                                                                           (rule "translateJavaMulInt" (formula "64") (term "0,0,2,0"))
                                                                           (rule "polySimp_mulComm0" (formula "64") (term "0,0,2,0"))
                                                                           (rule "polySimp_addComm0" (formula "64") (term "0,2,0"))
                                                                           (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_2"))
                                                                           (rule "simplifySelectOfAnon" (formula "64"))
                                                                            (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "112")) (ifInst ""  (formula "4")))
                                                                           (rule "eqSymm" (formula "65"))
                                                                           (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "65"))
                                                                           (rule "hideAuxiliaryEq" (formula "65"))
                                                                           (rule "elementOfSingleton" (formula "64") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "64"))
                                                                           (rule "Definition_axiom_for_disjointBucketsAreaLemma_in_de_wiesler_BucketPointers" (formula "78") (term "0") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                           (rule "expand_inInt" (formula "78") (term "1,0,0"))
                                                                           (rule "replace_int_MIN" (formula "78") (term "0,1,1,0,0"))
                                                                           (rule "replace_int_MAX" (formula "78") (term "1,0,1,0,0"))
                                                                           (rule "translateJavaSubInt" (formula "78") (term "2,1,1,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "78") (term "0,2,0,0,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "78") (term "2,1,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "78") (term "1,0,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "78") (term "1,0,1,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "78") (term "2,0,1,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "78") (term "2,0,0,1,0"))
                                                                           (rule "translateJavaAddInt" (formula "78") (term "0,2,0,1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "78") (term "2,1,1,1,0"))
                                                                           (rule "mul_literals" (formula "78") (term "1,2,1,1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "78") (term "2,1,0,1,0"))
                                                                           (rule "mul_literals" (formula "78") (term "1,2,1,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "78") (term "2,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "78") (term "1,2,0,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "78") (term "2,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "78") (term "1,2,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "2,1,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "2,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "2,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "2,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,2,1,1,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "0,0,2,1,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,2,1,0,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "0,0,2,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "78") (term "0,2,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "78") (term "0,2,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "78") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,0"))
                                                                           (rule "disjointDefinition" (formula "78") (term "0,1,0"))
                                                                           (rule "disjointDefinition" (formula "78") (term "1,1,0"))
                                                                           (rule "disjointArrayRanges" (formula "78") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                           (rule "disjointArrayRanges" (formula "78") (term "1,1,0"))
                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "78") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,0,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,1,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,1,0,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                           (rule "qeq_literals" (formula "78") (term "1,0,0,0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,0,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,0,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "0,0,0,1,0,1,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "78") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,0,0,0,0,0,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "0,0,0,0,0,1,0,1,1,0"))
                                                                           (rule "add_zero_left" (formula "78") (term "0,0,0,0,1,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "78") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,0,0,0,0,1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "0,0,0,0,1,1,0,0,1,0"))
                                                                           (rule "add_zero_left" (formula "78") (term "0,0,0,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,0,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "78") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                           (rule "add_zero_left" (formula "78") (term "0,0,0,1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,1,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,1,1,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,1,1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,1,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,0,0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,1,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,1,0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "78") (term "0,1,0,0,1,1,0"))
                                                                           (rule "qeq_literals" (formula "78") (term "1,0,0,1,1,0"))
                                                                            (builtin "One Step Simplification" (formula "78"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,1,0,0,0,1,1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "1,0,0,0,1,1,1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "78") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "78") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                           (rule "add_literals" (formula "78") (term "1,0,0,0,0,0,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "78") (term "0,0,0,0,0,1,0,0,1,0"))
                                                                           (rule "add_zero_left" (formula "78") (term "0,0,0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "78") (term "0,1,1,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "78") (term "0,1,1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "0,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,0,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,1,1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,1,1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "78") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,0,0,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,0,1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "78") (term "1,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "78") (term "0,1,1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,1,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "78") (term "0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "78") (term "0,0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "78") (term "0,0,0,1,0,0,1,0"))
                                                                           (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "58") (term "1,1"))
                                                                           (rule "translateJavaAddInt" (formula "58") (term "2,0,1,1"))
                                                                           (rule "translateJavaSubInt" (formula "58") (term "1,1"))
                                                                           (rule "polySimp_elimSub" (formula "58") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "58") (term "2,0,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "58") (term "1"))
                                                                           (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "24") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "expand_inInt" (formula "24") (term "1,0,0,1"))
                                                                           (rule "replace_int_MIN" (formula "24") (term "0,1,1,0,0,1"))
                                                                           (rule "replace_int_MAX" (formula "24") (term "1,0,1,0,0,1"))
                                                                           (rule "andLeft" (formula "24"))
                                                                           (rule "andLeft" (formula "24"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "andLeft" (formula "24"))
                                                                           (rule "andLeft" (formula "24"))
                                                                           (rule "andLeft" (formula "24"))
                                                                           (rule "andLeft" (formula "26"))
                                                                           (rule "andLeft" (formula "26"))
                                                                           (rule "andLeft" (formula "26"))
                                                                           (rule "translateJavaCastInt" (formula "31") (term "0"))
                                                                           (rule "translateJavaAddInt" (formula "30") (term "1"))
                                                                           (rule "translateJavaMulInt" (formula "24") (term "1"))
                                                                           (rule "translateJavaMulInt" (formula "25") (term "0"))
                                                                           (rule "translateJavaCastInt" (formula "28") (term "0"))
                                                                           (rule "translateJavaCastInt" (formula "27") (term "1"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "30") (term "1"))
                                                                           (rule "castedGetAny" (formula "31") (term "0"))
                                                                           (rule "castedGetAny" (formula "28") (term "0"))
                                                                           (rule "castedGetAny" (formula "27") (term "1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "26"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "27"))
                                                                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "47"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "27"))
                                                                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "46"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "27"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                           (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=int::final(bucket_pointers,
           de.wiesler.BucketPointers::$num_buckets)") (inst "elimGcd=Z(2(#))"))
                                                                           (rule "leq_literals" (formula "24") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                                           (rule "mul_literals" (formula "24") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                                                           (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "24") (term "0,0"))
                                                                           (rule "leq_literals" (formula "24") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "46"))
                                                                           (rule "times_zero_1" (formula "26") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "26") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "81"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                                           (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "26") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "26") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "true_left" (formula "26"))
                                                                           (rule "inEqSimp_exactShadow2" (formula "24") (ifseqformula "25"))
                                                                           (rule "mul_literals" (formula "24") (term "1,0,0,1"))
                                                                           (rule "greater_literals" (formula "24") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "mul_literals" (formula "24") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "24") (term "0"))
                                                                           (rule "inEqSimp_exactShadow2" (formula "45") (ifseqformula "26"))
                                                                           (rule "greater_literals" (formula "45") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "45") (term "0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "45") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                                           (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                                           (rule "mul_literals" (formula "45") (term "0,1"))
                                                                           (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "49") (term "0"))
                                                                           (rule "replace_known_left" (formula "49") (term "1,0,0") (ifseqformula "18"))
                                                                            (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "146")) (ifInst ""  (formula "14")) (ifInst ""  (formula "148")) (ifInst ""  (formula "33")))
                                                                           (rule "true_left" (formula "49"))
                                                                           (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "112") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "112"))
                                                                           (rule "translateJavaMod" (formula "112") (term "0"))
                                                                           (rule "jmod_axiom" (formula "112") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "112") (term "1,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "112"))
                                                                           (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                                                           (rule "newSym_eq" (formula "112") (inst "l=l_0") (inst "newSymDef=add(mul(int::final(result_1,
                   de.wiesler.Increment::$position),
        Z(0(#))),
    mul(de.wiesler.BucketPointers::lastReadOf(heapAfter_increment_write,
                                              bucket_pointers,
                                              target_bucket),
        Z(0(#))))"))
                                                                           (rule "times_zero_1" (formula "112") (term "1,1,1"))
                                                                           (rule "times_zero_1" (formula "112") (term "0,1,1"))
                                                                           (rule "add_zero_left" (formula "112") (term "1,1"))
                                                                           (rule "add_zero_right" (formula "112") (term "1"))
                                                                           (rule "applyEq" (formula "113") (term "0,0") (ifseqformula "112"))
                                                                           (rule "polySimp_homoEq" (formula "113"))
                                                                           (rule "polySimp_mulLiterals" (formula "113") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "113") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "113") (term "0,0"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "113"))
                                                                           (rule "polySimp_mulComm0" (formula "113") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "113") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "113") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "113") (term "1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "113") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "113") (term "0,1"))
                                                                           (rule "applyEq" (formula "8") (term "1,4,0") (ifseqformula "113"))
                                                                           (rule "polySimp_addAssoc" (formula "8") (term "4,0"))
                                                                           (rule "polySimp_addComm0" (formula "8") (term "0,4,0"))
                                                                           (rule "applyEq" (formula "109") (term "0,1") (ifseqformula "113"))
                                                                           (rule "eqSymm" (formula "109") (term "1"))
                                                                           (rule "applyEq" (formula "112") (term "1,0,0") (ifseqformula "113"))
                                                                           (rule "polySimp_addAssoc" (formula "112") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "112") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "112") (term "0,0"))
                                                                           (rule "add_literals" (formula "112") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "112") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "112") (term "0,0"))
                                                                           (rule "applyEq" (formula "111") (term "0,0") (ifseqformula "113"))
                                                                           (rule "applyEq" (formula "93") (term "0") (ifseqformula "113"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "93"))
                                                                           (rule "polySimp_mulComm0" (formula "93") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "93") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "93") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "93") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "93") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "93") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "93") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "93") (term "0"))
                                                                           (rule "add_literals" (formula "93") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "93") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "93") (term "0"))
                                                                           (rule "applyEq" (formula "109") (term "0,0") (ifseqformula "113"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "109") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "109") (term "1,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "109") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "109") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "109") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "109") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "109") (term "0,0,0"))
                                                                           (rule "applyEq" (formula "106") (term "0") (ifseqformula "113"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "106"))
                                                                           (rule "applyEq" (formula "107") (term "0") (ifseqformula "113"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "107"))
                                                                           (rule "applyEq" (formula "99") (term "1,0") (ifseqformula "113"))
                                                                           (rule "applyEq" (formula "69") (term "1") (ifseqformula "113"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                                                                           (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "109") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "109") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "109") (term "0,0"))
                                                                           (rule "elimGcdGeq_antec" (formula "93") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                           (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "93") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "93") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "93"))
                                                                           (rule "mul_literals" (formula "93") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "93") (term "0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "93") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "93") (term "0,0"))
                                                                           (rule "add_literals" (formula "93") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "93") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "93") (term "0,0"))
                                                                           (rule "leq_literals" (formula "93") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "93"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "106"))
                                                                           (rule "times_zero_1" (formula "104") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "104") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "104"))
                                                                           (rule "polySimp_mulLiterals" (formula "104") (term "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "103"))
                                                                           (rule "polySimp_mulComm0" (formula "104") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "104") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "104") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "104") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "104") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "104"))
                                                                           (rule "polySimp_mulComm0" (formula "104") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "104") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "104") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "104") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "104") (term "0,1"))
                                                                           (rule "mul_literals" (formula "104") (term "0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "104") (term "1,0,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "43"))
                                                                           (rule "polySimp_rightDist" (formula "104") (term "0,0"))
                                                                           (rule "polySimp_rightDist" (formula "104") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "104") (term "0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "104") (term "1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "104") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "104") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "104") (term "0"))
                                                                           (rule "add_literals" (formula "104") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "104") (term "1,0"))
                                                                           (rule "polySimp_addLiterals" (formula "104") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "104") (term "0"))
                                                                           (rule "add_literals" (formula "104") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "104"))
                                                                           (rule "mul_literals" (formula "104") (term "1"))
                                                                           (rule "inEqSimp_subsumption6" (formula "104") (ifseqformula "93"))
                                                                           (rule "greater_literals" (formula "104") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "104"))
                                                                           (rule "mul_literals" (formula "104") (term "1,0"))
                                                                           (rule "leq_literals" (formula "104") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "104"))
                                                                           (rule "true_left" (formula "104"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "41"))
                                                                           (rule "polySimp_rightDist" (formula "104") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "104") (term "0"))
                                                                           (rule "polySimp_rightDist" (formula "104") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "104") (term "0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "104") (term "1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "104") (term "0,0"))
                                                                           (rule "add_literals" (formula "104") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "104"))
                                                                           (rule "polySimp_mulLiterals" (formula "104") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "104") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "104"))
                                                                           (rule "mul_literals" (formula "38") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "38") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                                           (rule "mul_literals" (formula "38") (term "1"))
                                                                           (rule "inEqSimp_subsumption6" (formula "38") (ifseqformula "94"))
                                                                           (rule "greater_literals" (formula "38") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "mul_literals" (formula "38") (term "1,0"))
                                                                           (rule "leq_literals" (formula "38") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "true_left" (formula "38"))
                                                                           (rule "Contract_axiom_for_writtenElementsOfBucketClassified_in_BucketPointers" (formula "9") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "152")) (ifInst ""  (formula "153")) (ifInst ""  (formula "148")) (ifInst ""  (formula "151")) (ifInst ""  (formula "7")) (ifInst ""  (formula "38")) (ifInst ""  (formula "20")))
                                                                           (rule "wellFormedAnon" (formula "9") (term "1,0"))
                                                                           (rule "replace_known_left" (formula "9") (term "1,1,0") (ifseqformula "14"))
                                                                            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "15")))
                                                                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "45"))
                                                                            (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "81") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "81"))
                                                                           (rule "translateJavaMod" (formula "81") (term "0"))
                                                                           (rule "jmod_axiom" (formula "81") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "81") (term "1,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "81"))
                                                                           (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                                                                           (rule "newSym_eq" (formula "81") (inst "l=l_1") (inst "newSymDef=mul(int::final(result_1,
               de.wiesler.Increment::$position),
    Z(0(#)))"))
                                                                           (rule "times_zero_1" (formula "81") (term "1,1"))
                                                                           (rule "add_zero_right" (formula "81") (term "1"))
                                                                           (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "81"))
                                                                           (rule "eqSymm" (formula "82"))
                                                                           (rule "applyEq" (formula "122") (term "1,0,2,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "122") (term "0,2,0"))
                                                                           (rule "applyEq" (formula "111") (term "1,1") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "111") (term "1"))
                                                                           (rule "applyEq" (formula "89") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "90") (term "1,1,1,0,1,0,0,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "99") (term "1,3,1,2,0,1,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm1" (formula "99") (term "3,1,2,0,1,0"))
                                                                           (rule "applyEq" (formula "89") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "108") (term "0") (ifseqformula "82"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "108"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "108"))
                                                                           (rule "polySimp_mulLiterals" (formula "108") (term "1,0"))
                                                                           (rule "applyEq" (formula "89") (term "1,0,1,1,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "101") (term "1,1,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "101") (term "1,0"))
                                                                           (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "90") (term "1,0,1,1,0,0,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "90") (term "1,1,1,1,1,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "89") (term "1,1,1,1,1,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "89") (term "1,1,1,0,1,0,0,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "73") (term "1,1,0,1,1") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "90") (term "1,0,1,1,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "116") (term "1,0,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "116") (term "0,0"))
                                                                           (rule "applyEq" (formula "100") (term "1,4,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm1" (formula "100") (term "4,0"))
                                                                           (rule "applyEq" (formula "114") (term "0,0") (ifseqformula "82"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "114") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "114") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "114") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "114") (term "0,0,0"))
                                                                           (rule "applyEq" (formula "85") (term "0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "89") (term "1,0,0,1,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "90") (term "1,0,0,1,0,0,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "112") (term "1,1") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "112") (term "1"))
                                                                           (rule "applyEq" (formula "90") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "101") (term "2,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "90") (term "1,0,0,1,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "90") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "8") (term "1,4,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm1" (formula "8") (term "4,0"))
                                                                           (rule "polySimp_addComm0" (formula "8") (term "0,4,0"))
                                                                           (rule "applyEq" (formula "123") (term "1,0,2,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "123") (term "0,2,0"))
                                                                           (rule "applyEq" (formula "73") (term "1,1,0,0,1,1") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "89") (term "1,0,0,1,0,0,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "8") (term "1,3,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "8") (term "3,0"))
                                                                           (rule "applyEq" (formula "66") (term "1,0,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "105") (term "0") (ifseqformula "82"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "105"))
                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "105") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "105") (term "0,0"))
                                                                           (rule "applyEq" (formula "89") (term "1,0,1,1,0,0,1,0") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "118") (term "1,1") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "118") (term "1"))
                                                                           (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "70") (term "1"))
                                                                           (rule "applyEq" (formula "114") (term "1,1,1") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "114") (term "1,1"))
                                                                           (rule "applyEq" (formula "74") (term "1") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "99") (term "1,3,0,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm0" (formula "99") (term "3,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "99") (term "1,4,0,0,1,1,0") (ifseqformula "82"))
                                                                           (rule "polySimp_addComm1" (formula "99") (term "4,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "108"))
                                                                           (rule "polySimp_mulLiterals" (formula "108") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "114") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "114") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "114") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "114") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "114") (term "0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "105"))
                                                                           (rule "polySimp_mulComm0" (formula "105") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "105") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "105") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "105") (term "0,1"))
                                                                           (rule "mul_literals" (formula "105") (term "0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "1,0,1"))
                                                                           (rule "elimGcdGeq_antec" (formula "108") (inst "elimGcdRightDiv=mul(l_1, Z(neglit(1(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                           (rule "leq_literals" (formula "108") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "108"))
                                                                           (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "108") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "108") (term "0,0"))
                                                                           (rule "add_literals" (formula "108") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "108") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "108") (term "0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "108") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "108") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "108") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "108") (term "0,0"))
                                                                           (rule "add_literals" (formula "108") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "108") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "108") (term "0,0"))
                                                                           (rule "leq_literals" (formula "108") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "108"))
                                                                           (rule "elimGcdGeq_antec" (formula "85") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                           (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "85") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "85") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "85"))
                                                                           (rule "add_zero_right" (formula "85") (term "0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "85") (term "1,0,0,0,0"))
                                                                           (rule "add_literals" (formula "85") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "85") (term "0,0"))
                                                                           (rule "add_literals" (formula "85") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "85") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "85") (term "0,0"))
                                                                           (rule "leq_literals" (formula "85") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "85"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "109") (ifseqformula "111"))
                                                                           (rule "mul_literals" (formula "109") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "109") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "109"))
                                                                           (rule "polySimp_mulLiterals" (formula "109") (term "1"))
                                                                           (rule "inEqSimp_subsumption6" (formula "109") (ifseqformula "108"))
                                                                           (rule "greater_literals" (formula "109") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "109"))
                                                                           (rule "polySimp_mulComm0" (formula "109") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "109") (term "1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "109") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "109") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "109") (term "0,0"))
                                                                           (rule "add_literals" (formula "109") (term "1,0,0"))
                                                                           (rule "times_zero_1" (formula "109") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "109") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "109"))
                                                                           (rule "true_left" (formula "109"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "109") (ifseqformula "65"))
                                                                           (rule "mul_literals" (formula "109") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "109") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "109"))
                                                                           (rule "mul_literals" (formula "109") (term "1"))
                                                                           (rule "inEqSimp_subsumption6" (formula "109") (ifseqformula "85"))
                                                                           (rule "mul_literals" (formula "109") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "109") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "109"))
                                                                           (rule "leq_literals" (formula "109") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "109"))
                                                                           (rule "true_left" (formula "109"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "105") (ifseqformula "44"))
                                                                           (rule "polySimp_rightDist" (formula "105") (term "0,0"))
                                                                           (rule "polySimp_rightDist" (formula "105") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "105") (term "0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "105") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "105") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "105") (term "0"))
                                                                           (rule "add_literals" (formula "105") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "105") (term "1,0"))
                                                                           (rule "polySimp_addLiterals" (formula "105") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "105") (term "0"))
                                                                           (rule "add_literals" (formula "105") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "105"))
                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                                                                           (rule "elimGcdLeq_antec" (formula "105") (inst "elimGcdRightDiv=Z(6(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "105") (term "1,0,0,0,0,1,0"))
                                                                           (rule "neg_literal" (formula "105") (term "0,0,0,0,0,1,0"))
                                                                           (rule "leq_literals" (formula "105") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "105"))
                                                                           (rule "mul_literals" (formula "105") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "105") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "105") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "105") (term "0,0"))
                                                                           (rule "add_literals" (formula "105") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "105") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "105") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "105") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "105"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "106") (ifseqformula "42"))
                                                                           (rule "polySimp_rightDist" (formula "106") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "106") (term "0"))
                                                                           (rule "polySimp_rightDist" (formula "106") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "106") (term "0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "106") (term "0,0"))
                                                                           (rule "add_literals" (formula "106") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "106"))
                                                                           (rule "polySimp_mulLiterals" (formula "106") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "106") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "106"))
                                                                           (rule "times_zero_1" (formula "39") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "39") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                           (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                           (rule "elimGcdLeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(6(2(1(#))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0"))
                                                                           (rule "neg_literal" (formula "39") (term "0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "39") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                                                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "39") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "39") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "inEqSimp_subsumption0" (formula "106") (ifseqformula "39"))
                                                                           (rule "leq_literals" (formula "106") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "106"))
                                                                           (rule "true_left" (formula "106"))
                                                                           (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "andLeft" (formula "34"))
                                                                           (rule "andLeft" (formula "34"))
                                                                           (rule "andLeft" (formula "34"))
                                                                           (rule "andLeft" (formula "34"))
                                                                           (rule "andLeft" (formula "34"))
                                                                           (rule "andLeft" (formula "34"))
                                                                           (rule "translateJavaSubInt" (formula "39") (term "0,2,0"))
                                                                           (rule "translateJavaSubInt" (formula "39") (term "0,2,1"))
                                                                           (rule "eqSymm" (formula "36"))
                                                                           (rule "eqSymm" (formula "39"))
                                                                           (rule "translateJavaMulInt" (formula "36") (term "1,0"))
                                                                           (rule "polySimp_elimSub" (formula "39") (term "0,2,0"))
                                                                           (rule "mul_literals" (formula "39") (term "1,0,2,0"))
                                                                           (rule "eqSymm" (formula "39"))
                                                                           (rule "polySimp_elimSub" (formula "39") (term "0,2,0"))
                                                                           (rule "mul_literals" (formula "39") (term "1,0,2,0"))
                                                                           (rule "eqSymm" (formula "39"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                                           (rule "polySimp_addComm0" (formula "39") (term "0,2,0"))
                                                                           (rule "eqSymm" (formula "39"))
                                                                           (rule "polySimp_addComm0" (formula "39") (term "0,2,0"))
                                                                           (rule "eqSymm" (formula "39"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "34"))
                                                                           (rule "applyEq" (formula "35") (term "0") (ifseqformula "41"))
                                                                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "41"))
                                                                           (rule "applyEq" (formula "36") (term "1") (ifseqformula "41"))
                                                                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "34"))
                                                                           (rule "leq_literals" (formula "26") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "true_left" (formula "26"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "34"))
                                                                           (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                                                           (rule "mul_literals" (formula "53") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                           (rule "add_literals" (formula "53") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                           (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                           (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "53"))
                                                                           (rule "leq_literals" (formula "16") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "true_left" (formula "16"))
                                                                           (rule "inEqSimp_exactShadow2" (formula "32") (ifseqformula "25"))
                                                                           (rule "greater_literals" (formula "32") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                           (rule "mul_literals" (formula "32") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "32"))
                                                                           (rule "leq_literals" (formula "24") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "true_left" (formula "24"))
                                                                           (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "83") (inst "b=b"))
                                                                            (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "26")) (ifInst ""  (formula "29")))
                                                                           (rule "expand_inInt" (formula "83") (term "1,0,0,1"))
                                                                           (rule "replace_int_MAX" (formula "83") (term "1,0,1,0,0,1"))
                                                                           (rule "replace_int_MIN" (formula "83") (term "0,1,1,0,0,1"))
                                                                           (rule "andLeft" (formula "83"))
                                                                           (rule "andLeft" (formula "83"))
                                                                           (rule "andLeft" (formula "83"))
                                                                           (rule "andLeft" (formula "83"))
                                                                           (rule "andLeft" (formula "83"))
                                                                           (rule "andLeft" (formula "85"))
                                                                           (rule "andLeft" (formula "85"))
                                                                           (rule "translateJavaCastInt" (formula "89") (term "0"))
                                                                           (rule "translateJavaAddInt" (formula "88") (term "1"))
                                                                           (rule "translateJavaMulInt" (formula "84") (term "0"))
                                                                           (rule "translateJavaMulInt" (formula "83") (term "1"))
                                                                           (rule "translateJavaCastInt" (formula "87") (term "0"))
                                                                           (rule "translateJavaCastInt" (formula "86") (term "1"))
                                                                           (rule "polySimp_mulComm0" (formula "84") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1"))
                                                                           (rule "polySimp_addComm0" (formula "87") (term "1"))
                                                                           (rule "castedGetAny" (formula "87") (term "0"))
                                                                           (rule "castedGetAny" (formula "86") (term "0"))
                                                                           (rule "castedGetAny" (formula "85") (term "1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "87") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "84"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "83"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "84"))
                                                                           (rule "applyEq" (formula "84") (term "0") (ifseqformula "54"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "84"))
                                                                           (rule "applyEq" (formula "84") (term "0") (ifseqformula "54"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "84"))
                                                                           (rule "polySimp_mulComm0" (formula "84") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "84") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "84") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "84") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "84") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "84") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "85") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "84"))
                                                                           (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "84") (term "0"))
                                                                           (rule "inEqSimp_subsumption6" (formula "83") (ifseqformula "32"))
                                                                           (rule "mul_literals" (formula "83") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "83") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "83"))
                                                                           (rule "leq_literals" (formula "83") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "83"))
                                                                           (rule "true_left" (formula "83"))
                                                                           (rule "Contract_axiom_for_toReadCountOfBucket_in_BucketPointers" (formula "82") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "160")) (ifInst ""  (formula "7")) (ifInst ""  (formula "19")))
                                                                           (rule "wellFormedAnon" (formula "82") (term "1,0"))
                                                                           (rule "replace_known_left" (formula "82") (term "1,1,0") (ifseqformula "14"))
                                                                            (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "15")))
                                                                           (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "82") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "82") (term "0,0,0") (ifseqformula "50"))
                                                                            (builtin "One Step Simplification" (formula "82"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "82") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "82") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "82") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "82") (term "0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "82"))
                                                                           (rule "inEqSimp_subsumption1" (formula "82") (term "0,1,1") (ifseqformula "83"))
                                                                           (rule "leq_literals" (formula "82") (term "0,0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "82"))
                                                                           (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "56") (term "0") (inst "i=i"))
                                                                            (builtin "One Step Simplification" (formula "56"))
                                                                           (rule "expand_inInt" (formula "56") (term "1,0,0"))
                                                                           (rule "replace_int_MAX" (formula "56") (term "1,0,1,0,0"))
                                                                           (rule "replace_int_MIN" (formula "56") (term "0,1,1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0,0"))
                                                                           (rule "add_literals" (formula "56") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "56") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "56") (term "1,1,0,0,0"))
                                                                           (rule "Definition_axiom_for_toReadCountOfBucket_in_de_wiesler_BucketPointers" (formula "83") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "83") (term "1,0"))
                                                                           (rule "polySimp_elimSub" (formula "83") (term "1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0"))
                                                                           (rule "applyEq" (formula "83") (term "0,1,0") (ifseqformula "76"))
                                                                           (rule "applyEq" (formula "83") (term "0,1,0,0,0,0") (ifseqformula "76"))
                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "83") (term "0,1,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "83") (term "0,0,1,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "0,1,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "83") (term "0,0,1,0,0"))
                                                                           (rule "Definition_axiom_for_writtenElementsOfBucketClassified_in_de_wiesler_BucketPointers" (formula "10") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "translateJavaAddInt" (formula "10") (term "3,0,0,1"))
                                                                           (rule "translateJavaSubInt" (formula "10") (term "0,0,0"))
                                                                           (rule "translateJavaAddInt" (formula "10") (term "0,4,0,0,1"))
                                                                           (rule "translateJavaAddInt" (formula "10") (term "3,0,2"))
                                                                           (rule "translateJavaAddInt" (formula "10") (term "4,0,2"))
                                                                           (rule "translateJavaSubInt" (formula "10") (term "4,0,0,1"))
                                                                           (rule "polySimp_elimSub" (formula "10") (term "0,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "10") (term "4,0,0,1"))
                                                                           (rule "mul_literals" (formula "10") (term "1,4,0,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "4,0,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "10") (term "0,4,0,0,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0"))
                                                                           (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "75"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                                           (rule "Contract_axiom_for_remainingWriteCountOfBucket_in_BucketPointers" (formula "74") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "161")) (ifInst ""  (formula "7")) (ifInst ""  (formula "19")))
                                                                           (rule "wellFormedAnon" (formula "74") (term "1,0"))
                                                                           (rule "replace_known_left" (formula "74") (term "0,1,0") (ifseqformula "15"))
                                                                            (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "14")))
                                                                           (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "74") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "74") (term "0,0,0") (ifseqformula "50"))
                                                                            (builtin "One Step Simplification" (formula "74"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "74") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "74") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "74") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "74") (term "0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "74"))
                                                                           (rule "true_left" (formula "74"))
                                                                           (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "74") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "74") (term "0"))
                                                                           (rule "translateJavaAddInt" (formula "74") (term "2,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "74") (term "0"))
                                                                           (rule "polySimp_homoEq" (formula "74"))
                                                                           (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                                           (rule "polySimp_addComm0" (formula "74") (term "2,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "74") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "74") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "74"))
                                                                           (rule "polySimp_mulComm0" (formula "74") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "74") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "74") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "74") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "74") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1"))
                                                                           (rule "polySimp_elimOne" (formula "74") (term "1,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "74") (term "0,0,1"))
                                                                           (rule "mul_literals" (formula "74") (term "0,0,0,1"))
                                                                           (rule "applyEq" (formula "10") (term "1,4,0,0,1") (ifseqformula "74"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "4,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,4,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,4,0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0,4,0,0,1"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,0,4,0,0,1"))
                                                                           (rule "applyEq" (formula "10") (term "1,4,0,2") (ifseqformula "74"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "4,0,2"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,4,0,2"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,4,0,2"))
                                                                           (rule "polySimp_addComm0" (formula "10") (term "0,0,0,4,0,2"))
                                                                           (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "74"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,0,0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "applyEq" (formula "83") (term "0,1,1,0") (ifseqformula "74"))
                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "83") (term "0,0,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "83") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "83") (term "1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "83") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "83") (term "0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "83") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "83") (term "0,0,0,0,1,0"))
                                                                           (rule "applyEq" (formula "83") (term "0,0,0") (ifseqformula "74"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "83") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "83") (term "0,0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "83") (term "0,0,0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "83") (term "1,0,0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "83") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "83") (term "0,0,0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "83") (term "0,0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "83") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "83") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "83") (term "0,0,0"))
                                                                           (rule "Contract_axiom_for_lastReadOf_in_BucketPointers" (formula "76") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "161")) (ifInst ""  (formula "7")) (ifInst ""  (formula "19")))
                                                                           (rule "wellFormedAnon" (formula "76") (term "1,0"))
                                                                           (rule "translateJavaAddInt" (formula "76") (term "2,1,1,0,0,1,1"))
                                                                           (rule "translateJavaAddInt" (formula "76") (term "2,0,1,0,1,1"))
                                                                           (rule "replace_known_left" (formula "76") (term "1,1,0") (ifseqformula "14"))
                                                                            (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "15")))
                                                                           (rule "polySimp_addComm0" (formula "76") (term "2,0,1,0,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "76") (term "2,1,1,0,0,1,1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "76") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0,0,1,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "50"))
                                                                            (builtin "One Step Simplification" (formula "76"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "0,1,1,1,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "1,0,1,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "1,0,0,0,1,1"))
                                                                           (rule "applyEq" (formula "76") (term "0,1,0,0,0,1,1") (ifseqformula "77"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "76") (term "1,0,0,0,1,1"))
                                                                           (rule "applyEq" (formula "76") (term "0,0,1,1,1,1,1") (ifseqformula "77"))
                                                                           (rule "replace_known_left" (formula "76") (term "1,1,1,1,1") (ifseqformula "125"))
                                                                            (builtin "One Step Simplification" (formula "76"))
                                                                           (rule "applyEq" (formula "76") (term "0,1,0,0,1,1") (ifseqformula "77"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "1,0,0,1,1"))
                                                                           (rule "applyEq" (formula "76") (term "0,0,0,1,1,1") (ifseqformula "77"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,1,1,1"))
                                                                           (rule "applyEq" (formula "76") (term "0,1,0,1,1,1") (ifseqformula "77"))
                                                                           (rule "eqSymm" (formula "76") (term "1,0,1,1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "76") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "76") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "76") (term "0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "76"))
                                                                           (rule "Definition_axiom_for_lastReadOf_in_de_wiesler_BucketPointers" (formula "77") (term "0"))
                                                                           (rule "translateJavaMulInt" (formula "77") (term "0,2,0"))
                                                                           (rule "polySimp_mulComm0" (formula "77") (term "0,2,0"))
                                                                           (rule "nnf_imp2or" (formula "57") (term "0"))
                                                                           (rule "nnf_imp2or" (formula "5") (term "0"))
                                                                           (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                                           (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "164"))
                                                                           (rule "replace_known_right" (formula "164") (term "0,1") (ifseqformula "133"))
                                                                            (builtin "One Step Simplification" (formula "164") (ifInst ""  (formula "134")))
                                                                           (rule "closeTrue" (formula "164"))
                                                                        )
                                                                        (branch "Null reference (var = null)"
                                                                            (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "129")))
                                                                           (rule "closeTrue" (formula "131"))
                                                                        )
                                                                     )
                                                                     (branch "Null Reference (_values = null)"
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "Index Out of Bounds (_values != null, but write Out of Bounds!)"
                                                                         (builtin "One Step Simplification" (formula "132") (userinteraction))
                                                                        (rule "false_right" (formula "132") (userinteraction))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")) (userinteraction))
                                                                        (rule "orLeft" (formula "1") (userinteraction))
                                                                        (branch "values.length <= begin + result_1.position"
                                                                           (rule "polySimp_homoEq" (formula "65"))
                                                                           (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                                                                           (rule "mul_literals" (formula "65") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "65") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "65") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "45"))
                                                                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "67"))
                                                                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "83") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "83") (term "0,1,0,0"))
                                                                           (rule "add_literals" (formula "83") (term "1,0,1,0,0"))
                                                                           (rule "times_zero_1" (formula "83") (term "0,1,0,0"))
                                                                           (rule "qeq_literals" (formula "83") (term "1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "83"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "76"))
                                                                           (rule "polySimp_addComm1" (formula "76") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "76") (term "0,0"))
                                                                           (rule "add_literals" (formula "76") (term "1,0,0"))
                                                                           (rule "times_zero_1" (formula "76") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "76") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "58"))
                                                                           (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                                           (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "43"))
                                                                           (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "97"))
                                                                           (rule "polySimp_mulComm0" (formula "97") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "97") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "97") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "97") (term "0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "97") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "97") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "77"))
                                                                           (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "77") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "77") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "49") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "49") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "49") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "87"))
                                                                           (rule "polySimp_mulComm0" (formula "87") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "87") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "87") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "87") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "87") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "87") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "87") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                           (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "83") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "83") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "83") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "83") (term "1,0,0,0"))
                                                                           (rule "add_literals" (formula "83") (term "0,0,0"))
                                                                           (rule "qeq_literals" (formula "83") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "83"))
                                                                           (rule "true_left" (formula "83"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "65"))
                                                                           (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "65") (term "0"))
                                                                           (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "65"))
                                                                           (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                                           (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                                           (rule "add_literals" (formula "58") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "58") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                                                           (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                                                           (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "67") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                                           (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "96"))
                                                                           (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "96") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                                                                           (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "49") (term "0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "49") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "86"))
                                                                           (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "86") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                                           (rule "polySimp_mulLiterals" (formula "58") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "58") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "17") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "true_left" (formula "17"))
                                                                           (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                                           (rule "leq_literals" (formula "39") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "true_left" (formula "39"))
                                                                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "36"))
                                                                           (rule "leq_literals" (formula "19") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "true_left" (formula "19"))
                                                                           (rule "inEqSimp_subsumption0" (formula "74") (ifseqformula "93"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "74") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "74") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "74") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "74") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                                                           (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "74") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "74") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "74") (term "0,0"))
                                                                           (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "74") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "74") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "74"))
                                                                           (rule "true_left" (formula "74"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "92"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "1"))
                                                                           (rule "andLeft" (formula "40"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "40"))
                                                                           (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                                           (rule "mul_literals" (formula "40") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                                           (rule "add_literals" (formula "40") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "40") (term "1,0"))
                                                                           (rule "add_literals" (formula "40") (term "0"))
                                                                           (rule "leq_literals" (formula "40"))
                                                                           (rule "closeFalse" (formula "40"))
                                                                        )
                                                                        (branch "begin + result_1.position < 0"
                                                                           (rule "polySimp_homoEq" (formula "65"))
                                                                           (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                                                                           (rule "mul_literals" (formula "65") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "65") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "65") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "45"))
                                                                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "67"))
                                                                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "87"))
                                                                           (rule "polySimp_mulComm0" (formula "87") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "87") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "87") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "87") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "87") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "87") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "87") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "58"))
                                                                           (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                                           (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "77"))
                                                                           (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "77") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "77") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "83") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "83") (term "0,1,0,0"))
                                                                           (rule "add_literals" (formula "83") (term "1,0,1,0,0"))
                                                                           (rule "times_zero_1" (formula "83") (term "0,1,0,0"))
                                                                           (rule "qeq_literals" (formula "83") (term "1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "83"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "49") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "49") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "49") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "43"))
                                                                           (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "97"))
                                                                           (rule "polySimp_mulComm0" (formula "97") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "97") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "97") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "97") (term "0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "97") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "97") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "76"))
                                                                           (rule "polySimp_addComm1" (formula "76") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "76") (term "0,0"))
                                                                           (rule "add_literals" (formula "76") (term "1,0,0"))
                                                                           (rule "times_zero_1" (formula "76") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "76") (term "0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                           (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "83") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "83") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "83") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "83") (term "1,0,0,0"))
                                                                           (rule "add_literals" (formula "83") (term "0,0,0"))
                                                                           (rule "qeq_literals" (formula "83") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "83"))
                                                                           (rule "true_left" (formula "83"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "65"))
                                                                           (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "65") (term "0"))
                                                                           (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "65"))
                                                                           (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                                           (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                                           (rule "add_literals" (formula "58") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "58") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                                                           (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                                                           (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "67") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "86"))
                                                                           (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "86") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                                                                           (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "49") (term "0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "49") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                                           (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "96"))
                                                                           (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "96") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                                           (rule "polySimp_mulLiterals" (formula "58") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "58") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "37"))
                                                                           (rule "leq_literals" (formula "20") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "true_left" (formula "20"))
                                                                           (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "95"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "76") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "76") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "76") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "76") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                                                           (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "76") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "76") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "76") (term "0,0"))
                                                                           (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "76") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "76") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "76"))
                                                                           (rule "true_left" (formula "76"))
                                                                           (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                                           (rule "leq_literals" (formula "39") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "true_left" (formula "39"))
                                                                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "42"))
                                                                           (rule "leq_literals" (formula "17") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "true_left" (formula "17"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "40"))
                                                                           (rule "mul_literals" (formula "20") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                           (rule "add_literals" (formula "20") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "mul_literals" (formula "20") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "36"))
                                                                           (rule "leq_literals" (formula "20") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "true_left" (formula "20"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "10"))
                                                                           (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                                                                           (rule "mul_literals" (formula "64") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                                                                           (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "67") (ifseqformula "10"))
                                                                           (rule "mul_literals" (formula "67") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                                           (rule "mul_literals" (formula "67") (term "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "94"))
                                                                           (rule "mul_literals" (formula "75") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "75") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "75"))
                                                                           (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "75") (term "1"))
                                                                           (rule "mul_literals" (formula "75") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "75") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "75"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                                           (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "36") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "36") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "36"))
                                                                           (rule "true_left" (formula "36"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "1"))
                                                                           (rule "times_zero_1" (formula "75") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "75") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                                           (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "75") (term "0"))
                                                                           (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "75"))
                                                                           (rule "leq_literals" (formula "18") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "true_left" (formula "18"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "74"))
                                                                           (rule "qeq_literals" (formula "34") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "closeFalse" (formula "34"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "if occupied false"
                                              (builtin "One Step Simplification" (formula "1"))
                                              (builtin "One Step Simplification" (formula "111"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "variableDeclarationGhostAssign" (formula "111") (term "1"))
                                             (rule "variableDeclarationGhost" (formula "111") (term "1") (newnames "heapBeforeWrite"))
                                             (rule "assignment" (formula "111") (term "1"))
                                              (builtin "One Step Simplification" (formula "111"))
                                              (builtin "Block Contract (Internal)" (formula "111") (newnames "anonOut_heap,result_4,exc_4,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                                             (branch "Validity"
                                                 (builtin "One Step Simplification" (formula "112"))
                                                 (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "26")) (ifInst ""  (formula "111")) (ifInst ""  (formula "106")) (ifInst ""  (formula "108")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "1,0,0,1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "23")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "1,0,0,1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "25")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "0,0,1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "16")))
                                                (rule "expand_inInt" (formula "82") (term "1,1"))
                                                (rule "expand_inInt" (formula "82") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "82") (term "1,0,1,1"))
                                                (rule "replace_int_MIN" (formula "82") (term "0,1,1,1"))
                                                (rule "replace_int_MIN" (formula "82") (term "0,1,0,1"))
                                                (rule "replace_int_MAX" (formula "82") (term "1,0,0,1"))
                                                (rule "andLeft" (formula "82"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "84"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "inEqSimp_commuteLeq" (formula "85"))
                                                (rule "variableDeclarationAssign" (formula "114") (term "1"))
                                                (rule "variableDeclaration" (formula "114") (term "1") (newnames "exc_4_1"))
                                                (rule "assignment" (formula "114") (term "1"))
                                                 (builtin "One Step Simplification" (formula "114"))
                                                (rule "apply_eq_boolean" (formula "67") (term "1") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "67"))
                                                (rule "notLeft" (formula "67"))
                                                (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "84"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                (rule "ifElseUnfold" (formula "114") (term "1") (inst "#boolv=x"))
                                                 (builtin "One Step Simplification" (formula "114"))
                                                (rule "variableDeclaration" (formula "114") (term "1") (newnames "x_7"))
                                                (rule "compound_less_than_comparison_2" (formula "114") (term "1") (inst "#v1=x_9") (inst "#v0=x_8"))
                                                (rule "variableDeclarationAssign" (formula "114") (term "1"))
                                                (rule "variableDeclaration" (formula "114") (term "1") (newnames "x_8"))
                                                (rule "assignment" (formula "114") (term "1"))
                                                 (builtin "One Step Simplification" (formula "114"))
                                                (rule "variableDeclarationAssign" (formula "114") (term "1"))
                                                (rule "variableDeclaration" (formula "114") (term "1") (newnames "x_9"))
                                                (rule "assignmentAdditionInt" (formula "114") (term "1"))
                                                (branch "Overflow check"
                                                    (builtin "One Step Simplification" (formula "114"))
                                                   (rule "expand_inInt" (formula "114"))
                                                   (rule "replace_int_MAX" (formula "114") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "114") (term "0,1"))
                                                   (rule "polySimp_homoEq" (formula "63"))
                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "114") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "114") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "114") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "114") (term "0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                                   (rule "mul_literals" (formula "63") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "84"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "75"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "75") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "42"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "48") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "84"))
                                                   (rule "mul_literals" (formula "84") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "84") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "84") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "57"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                   (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "83"))
                                                   (rule "polySimp_mulComm0" (formula "83") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "83") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "83") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "83") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "74"))
                                                   (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "74") (term "0,0"))
                                                   (rule "add_literals" (formula "74") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "74") (term "0,0"))
                                                   (rule "add_zero_left" (formula "74") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "81") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "81") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "81") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "81") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "81") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "81") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "81"))
                                                   (rule "inEqSimp_homoInEq0" (formula "114") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "114") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "114") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "114") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "114") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "114") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "114") (term "0,0,0"))
                                                   (rule "add_literals" (formula "114") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "114") (term "1"))
                                                   (rule "mul_literals" (formula "114") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "114") (term "0,1"))
                                                   (rule "polySimp_addComm1" (formula "114") (term "0,0,1"))
                                                   (rule "add_literals" (formula "114") (term "0,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "81") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "81") (term "0,0,0"))
                                                   (rule "add_literals" (formula "81") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "81") (term "0,0,0"))
                                                   (rule "qeq_literals" (formula "81") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "81"))
                                                   (rule "true_left" (formula "81"))
                                                   (rule "polySimp_sepNegMonomial" (formula "64"))
                                                   (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                   (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "64"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                   (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                   (rule "add_literals" (formula "57") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "57") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "75") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "83"))
                                                   (rule "polySimp_mulComm0" (formula "83") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "83") (term "1"))
                                                   (rule "mul_literals" (formula "83") (term "0,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "82"))
                                                   (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "82") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "113") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "113") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "113") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "113") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "113") (term "1,1"))
                                                   (rule "mul_literals" (formula "113") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                   (rule "polySimp_mulLiterals" (formula "57") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "57") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "43"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_subsumption1" (formula "112") (term "1") (ifseqformula "82"))
                                                   (rule "inEqSimp_homoInEq0" (formula "112") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "112") (term "1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "112") (term "0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "112") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "112") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "112") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "112") (term "0,0,1"))
                                                   (rule "add_literals" (formula "112") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "112") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "112") (term "0,0,1"))
                                                   (rule "qeq_literals" (formula "112") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "112"))
                                                   (rule "inEqSimp_leqRight" (formula "112"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "36"))
                                                   (rule "leq_literals" (formula "19") (term "0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "39"))
                                                   (rule "leq_literals" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "inEqSimp_subsumption1" (formula "81") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "81") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "81") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "81") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "81") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "81") (term "0,0,0"))
                                                   (rule "add_literals" (formula "81") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "81") (term "0,0"))
                                                   (rule "add_literals" (formula "81") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "81") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "81") (term "0,0"))
                                                   (rule "qeq_literals" (formula "81") (term "0"))
                                                    (builtin "One Step Simplification" (formula "81"))
                                                   (rule "true_left" (formula "81"))
                                                   (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "19"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "80"))
                                                   (rule "times_zero_1" (formula "72") (term "0,0"))
                                                   (rule "add_zero_left" (formula "72") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "73"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "73"))
                                                   (rule "times_zero_1" (formula "72") (term "0,0"))
                                                   (rule "add_zero_left" (formula "72") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "37"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "39") (term "0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "closeFalse" (formula "39"))
                                                )
                                                (branch "Usage"
                                                    (builtin "One Step Simplification" (formula "114"))
                                                   (rule "translateJavaAddInt" (formula "114") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "114") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "114") (term "0,0,1,0"))
                                                   (rule "less_than_comparison_simple" (formula "114") (term "1"))
                                                    (builtin "One Step Simplification" (formula "114"))
                                                    (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "80") (term "0,1")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::elementsToReadOfBucketBlockClassified(de.wiesler.Classifier,[I,int,int,int)].JML accessible clause.0"))
                                                   (rule "wellFormedAnon" (formula "84") (term "1,1,0,0,0,0,0,0,0,0"))
                                                   (rule "expand_inInt" (formula "84") (term "1,0,0,0"))
                                                   (rule "expand_inInt" (formula "84") (term "1,0,0,0,0"))
                                                   (rule "expand_inInt" (formula "84") (term "1,0,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,0,0,0"))
                                                   (rule "translateJavaMulInt" (formula "84") (term "1,1,0,0,1,1,0"))
                                                   (rule "translateJavaAddInt" (formula "84") (term "0,2,0,0,0,1,1,0"))
                                                   (rule "translateJavaAddInt" (formula "84") (term "2,1,0,0,1,1,0"))
                                                   (rule "translateJavaAddInt" (formula "84") (term "1,0,0,0,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "84") (term "2,0,0,0,1,1,0"))
                                                   (rule "translateJavaMulInt" (formula "84") (term "0,2,1,0,0,1,1,0"))
                                                   (rule "replace_known_left" (formula "84") (term "0,1,1,0,0") (ifseqformula "28"))
                                                    (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "112")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "113")) (ifInst ""  (formula "21")) (ifInst ""  (formula "114")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "19")) (ifInst ""  (formula "14")) (ifInst ""  (formula "43")) (ifInst ""  (formula "27")) (ifInst ""  (formula "113")) (ifInst ""  (formula "114")))
                                                   (rule "polySimp_elimSub" (formula "84") (term "2,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "84") (term "1,2,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "84") (term "0,2,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "84") (term "2,0,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "84") (term "2,1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "84") (term "0,2,0,0,0,1,1,0"))
                                                   (rule "disjointDefinition" (formula "84") (term "1,0"))
                                                   (rule "disjointWithSingleton2" (formula "84") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "84") (term "1,0,0,0,0"))
                                                   (rule "replace_known_left" (formula "84") (term "1,0,0,0,0") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "84"))
                                                   (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "84") (term "0,0,0,0") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "84"))
                                                   (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "84") (term "0,0,0") (ifseqformula "15"))
                                                    (builtin "One Step Simplification" (formula "84"))
                                                   (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0"))
                                                   (rule "replace_known_left" (formula "84") (term "0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "84"))
                                                   (rule "applyEq" (formula "84") (term "0,1") (ifseqformula "6"))
                                                   (rule "eqSymm" (formula "84") (term "1"))
                                                   (rule "elementOfUnion" (formula "84") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "84"))
                                                   (rule "eqSymm" (formula "84") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "84") (term "1,0,0") (ifseqformula "107"))
                                                    (builtin "One Step Simplification" (formula "84"))
                                                   (rule "elementOfUnion" (formula "84") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "84"))
                                                   (rule "eqSymm" (formula "84") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "84") (term "1,0,0") (ifseqformula "106"))
                                                    (builtin "One Step Simplification" (formula "84"))
                                                   (rule "elementOfUnion" (formula "84") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "84") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "84") (term "0,0,0,0,0") (ifseqformula "91"))
                                                    (builtin "One Step Simplification" (formula "84"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "84") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "80")))
                                                   (rule "true_left" (formula "84"))
                                                   (rule "ifElseSplit" (formula "114"))
                                                   (branch "if x_7 true"
                                                       (builtin "Block Contract (Internal)" (formula "115") (newnames "result_5,exc_5,heap_Before_BLOCK_4,savedHeap_Before_BLOCK_4,o,f"))
                                                      (branch "Validity"
                                                          (builtin "One Step Simplification" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "116"))
                                                          (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "27")) (ifInst ""  (formula "82")))
                                                         (rule "true_left" (formula "85"))
                                                         (rule "eqSymm" (formula "115") (term "0,0,1,0,1"))
                                                         (rule "variableDeclarationAssign" (formula "115") (term "1"))
                                                         (rule "variableDeclaration" (formula "115") (term "1") (newnames "exc_5_1"))
                                                         (rule "assignment" (formula "115") (term "1"))
                                                          (builtin "One Step Simplification" (formula "115"))
                                                         (rule "emptyStatement" (formula "115") (term "1"))
                                                          (builtin "One Step Simplification" (formula "115"))
                                                         (rule "emptyStatement" (formula "115") (term "1"))
                                                         (rule "tryEmpty" (formula "115") (term "1"))
                                                         (rule "blockEmptyLabel" (formula "115") (term "1"))
                                                         (rule "blockEmpty" (formula "115") (term "1"))
                                                         (rule "methodCallEmpty" (formula "115") (term "1"))
                                                         (rule "emptyModality" (formula "115") (term "1"))
                                                         (rule "andRight" (formula "115"))
                                                         (branch
                                                             (builtin "One Step Simplification" (formula "115"))
                                                            (rule "closeTrue" (formula "115"))
                                                         )
                                                         (branch
                                                             (builtin "One Step Simplification" (formula "115"))
                                                            (rule "closeTrue" (formula "115"))
                                                         )
                                                      )
                                                      (branch "Precondition"
                                                         (rule "andRight" (formula "115"))
                                                         (branch
                                                             (builtin "One Step Simplification" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "27")))
                                                            (rule "closeTrue" (formula "115"))
                                                         )
                                                         (branch
                                                             (builtin "One Step Simplification" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "82")))
                                                            (rule "closeTrue" (formula "115"))
                                                         )
                                                      )
                                                      (branch "Usage"
                                                          (builtin "One Step Simplification" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "85"))
                                                          (builtin "One Step Simplification" (formula "116"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,1,1,0") (ifseqformula "59"))
                                                          (builtin "One Step Simplification" (formula "85"))
                                                         (rule "expand_inInt" (formula "85") (term "0,1,0"))
                                                         (rule "replace_int_MIN" (formula "85") (term "0,1,0,1,0"))
                                                         (rule "replace_int_MAX" (formula "85") (term "1,0,0,1,0"))
                                                         (rule "andLeft" (formula "85"))
                                                         (rule "andLeft" (formula "85"))
                                                         (rule "andLeft" (formula "86"))
                                                         (rule "andLeft" (formula "86"))
                                                         (rule "translateJavaAddInt" (formula "89") (term "1"))
                                                         (rule "translateJavaAddInt" (formula "89") (term "0"))
                                                         (rule "translateJavaSubInt" (formula "89") (term "0,1,1"))
                                                         (rule "replace_known_left" (formula "88") (term "0") (ifseqformula "85"))
                                                          (builtin "One Step Simplification" (formula "88"))
                                                         (rule "true_left" (formula "88"))
                                                         (rule "polySimp_elimSub" (formula "88") (term "0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "88") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "88") (term "0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "88") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "87"))
                                                         (rule "elim_double_block_2" (formula "119") (term "1"))
                                                         (rule "ifUnfold" (formula "119") (term "1") (inst "#boolv=x"))
                                                         (rule "variableDeclaration" (formula "119") (term "1") (newnames "x_10"))
                                                         (rule "inequality_comparison_simple" (formula "119") (term "1"))
                                                          (builtin "One Step Simplification" (formula "119"))
                                                         (rule "replace_known_left" (formula "119") (term "0,0,1,0") (ifseqformula "85"))
                                                          (builtin "One Step Simplification" (formula "119"))
                                                         (rule "ifSplit" (formula "119"))
                                                         (branch "if x_10 true"
                                                             (builtin "One Step Simplification" (formula "120"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "if x_10 false"
                                                             (builtin "One Step Simplification" (formula "120"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "blockEmpty" (formula "119") (term "1"))
                                                             (builtin "Use Operation Contract" (formula "119") (newnames "heapBefore_copy_nonoverlapping,exc_6,heapAfter_copy_nonoverlapping,anon_heap_copy_nonoverlapping") (contract "de.wiesler.Functions[de.wiesler.Functions::copy_nonoverlapping([I,int,[I,int,int)].JML normal_behavior operation contract.0"))
                                                            (branch "Post (copy_nonoverlapping)"
                                                                (builtin "One Step Simplification" (formula "121"))
                                                                (builtin "Block Contract (Internal)" (formula "121") (newnames "result_6,exc_7,heap_Before_BLOCK_5,savedHeap_Before_BLOCK_5,o,f"))
                                                               (branch "Validity"
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                   (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "27")))
                                                                   (builtin "One Step Simplification" (formula "122"))
                                                                  (rule "expand_inInt" (formula "90") (term "0,0,1,1,0,1"))
                                                                  (rule "expand_inInt" (formula "90") (term "1,0,0,0,1,0,1"))
                                                                  (rule "replace_int_MAX" (formula "90") (term "1,0,0,0,1,1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "90") (term "0,1,0,0,1,1,0,1"))
                                                                  (rule "replace_int_MAX" (formula "90") (term "1,0,1,0,0,0,1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "90") (term "0,1,1,0,0,0,1,0,1"))
                                                                  (rule "andLeft" (formula "90"))
                                                                  (rule "andLeft" (formula "91"))
                                                                  (rule "andLeft" (formula "91"))
                                                                  (rule "andLeft" (formula "91"))
                                                                  (rule "eqSymm" (formula "125") (term "0,0,1,0,1"))
                                                                  (rule "translateJavaSubInt" (formula "90") (term "2,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "91") (term "0,2,1,1,0"))
                                                                  (rule "add_zero_left" (formula "91") (term "0,2,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "92") (term "3,0,1,0"))
                                                                  (rule "add_zero_left" (formula "92") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "91") (term "0,2,0,1,0"))
                                                                  (rule "add_zero_left" (formula "91") (term "0,2,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "92") (term "3,1,1,0"))
                                                                  (rule "add_zero_left" (formula "92") (term "3,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "90") (term "0,2,1,0"))
                                                                  (rule "add_zero_left" (formula "90") (term "0,2,1,0"))
                                                                  (rule "sub_literals" (formula "90") (term "2,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "91") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "92") (term "1,0,0"))
                                                                  (rule "variableDeclarationAssign" (formula "125") (term "1"))
                                                                  (rule "variableDeclaration" (formula "125") (term "1") (newnames "exc_7_1"))
                                                                  (rule "assignment" (formula "125") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "125"))
                                                                  (rule "emptyStatement" (formula "125") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "125"))
                                                                  (rule "emptyStatement" (formula "125") (term "1"))
                                                                  (rule "commute_and" (formula "92") (term "0,0"))
                                                                  (rule "commute_and" (formula "91") (term "1,0,0"))
                                                                  (rule "commute_and" (formula "91") (term "0,0,0"))
                                                                  (rule "shift_paren_and" (formula "91") (term "0,0"))
                                                                  (rule "commute_and_2" (formula "91") (term "0,0,0"))
                                                                  (rule "tryEmpty" (formula "125") (term "1"))
                                                                  (rule "blockEmptyLabel" (formula "125") (term "1"))
                                                                  (rule "blockEmpty" (formula "125") (term "1"))
                                                                  (rule "methodCallEmpty" (formula "125") (term "1"))
                                                                  (rule "emptyModality" (formula "125") (term "1"))
                                                                  (rule "andRight" (formula "125"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "125"))
                                                                     (rule "closeTrue" (formula "125"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "125"))
                                                                     (rule "closeTrue" (formula "125"))
                                                                  )
                                                               )
                                                               (branch "Precondition"
                                                                  (rule "andRight" (formula "121"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "90"))
                                                                      (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "27")))
                                                                     (rule "closeTrue" (formula "121"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "90"))
                                                                      (builtin "One Step Simplification" (formula "121"))
                                                                     (rule "expand_inInt" (formula "90") (term "0,0,1,1,0,1"))
                                                                     (rule "expand_inInt" (formula "90") (term "1,0,0,0,1,0,1"))
                                                                     (rule "replace_int_MIN" (formula "90") (term "0,1,0,0,1,1,0,1"))
                                                                     (rule "replace_int_MAX" (formula "90") (term "1,0,0,0,1,1,0,1"))
                                                                     (rule "replace_int_MAX" (formula "90") (term "1,0,1,0,0,0,1,0,1"))
                                                                     (rule "replace_int_MIN" (formula "90") (term "0,1,1,0,0,0,1,0,1"))
                                                                     (rule "andLeft" (formula "90"))
                                                                     (rule "wellFormedAnonEQ" (formula "122") (ifseqformula "90"))
                                                                     (rule "wellFormedAnonEQ" (formula "122") (term "0") (ifseqformula "59"))
                                                                     (rule "wellFormedAnon" (formula "122") (term "0,0"))
                                                                     (rule "andLeft" (formula "91"))
                                                                     (rule "andLeft" (formula "91"))
                                                                     (rule "andLeft" (formula "91"))
                                                                     (rule "translateJavaSubInt" (formula "90") (term "2,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "92") (term "3,1,1,0"))
                                                                     (rule "add_zero_left" (formula "92") (term "3,1,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "91") (term "0,2,0,1,0"))
                                                                     (rule "add_zero_left" (formula "91") (term "0,2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "91") (term "0,2,1,1,0"))
                                                                     (rule "add_zero_left" (formula "91") (term "0,2,1,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "92") (term "3,0,1,0"))
                                                                     (rule "add_zero_left" (formula "92") (term "3,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "90") (term "0,2,1,0"))
                                                                     (rule "add_zero_left" (formula "90") (term "0,2,1,0"))
                                                                     (rule "sub_literals" (formula "90") (term "2,1,0"))
                                                                     (rule "replace_known_left" (formula "124") (term "1") (ifseqformula "89"))
                                                                      (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")))
                                                                     (rule "closeTrue" (formula "124"))
                                                                  )
                                                               )
                                                               (branch "Usage"
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                   (builtin "One Step Simplification" (formula "122"))
                                                                   (builtin "One Step Simplification" (formula "91"))
                                                                  (rule "expand_inInt" (formula "90") (term "0,0,1,1,0,1"))
                                                                  (rule "expand_inInt" (formula "90") (term "1,0,0,0,1,0,1"))
                                                                  (rule "expand_inInt" (formula "91") (term "0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "90") (term "0,1,0,0,1,1,0,1"))
                                                                  (rule "replace_int_MAX" (formula "90") (term "1,0,0,0,1,1,0,1"))
                                                                  (rule "replace_int_MAX" (formula "90") (term "1,0,1,0,0,0,1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "90") (term "0,1,1,0,0,0,1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "91") (term "0,1,0,1,0"))
                                                                  (rule "replace_int_MAX" (formula "91") (term "1,0,0,1,0"))
                                                                  (rule "andLeft" (formula "90"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "1,1,1,0") (ifseqformula "90"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,1,1,1,0") (ifseqformula "59"))
                                                                   (builtin "One Step Simplification" (formula "92"))
                                                                  (rule "andLeft" (formula "91"))
                                                                  (rule "andLeft" (formula "93"))
                                                                  (rule "andLeft" (formula "91"))
                                                                  (rule "andLeft" (formula "93"))
                                                                  (rule "andLeft" (formula "95"))
                                                                  (rule "andLeft" (formula "91"))
                                                                  (rule "andLeft" (formula "95"))
                                                                  (rule "andLeft" (formula "95"))
                                                                  (rule "translateJavaSubInt" (formula "90") (term "2,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "91") (term "0,2,0,1,0"))
                                                                  (rule "add_zero_left" (formula "91") (term "0,2,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "91") (term "0,2,1,1,0"))
                                                                  (rule "add_zero_left" (formula "91") (term "0,2,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "92") (term "3,0,1,0"))
                                                                  (rule "add_zero_left" (formula "92") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "92") (term "3,1,1,0"))
                                                                  (rule "add_zero_left" (formula "92") (term "3,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "90") (term "0,2,1,0"))
                                                                  (rule "add_literals" (formula "90") (term "0,2,1,0"))
                                                                  (rule "sub_literals" (formula "90") (term "2,1,0"))
                                                                  (rule "replace_known_left" (formula "97") (term "0") (ifseqformula "94"))
                                                                   (builtin "One Step Simplification" (formula "97"))
                                                                  (rule "true_left" (formula "97"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "92") (term "1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "91") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "96"))
                                                                  (rule "commute_and" (formula "92") (term "0,0"))
                                                                  (rule "commute_and" (formula "91") (term "0,0,0"))
                                                                  (rule "commute_and" (formula "91") (term "1,0,0"))
                                                                  (rule "elim_double_block_2" (formula "129") (term "1"))
                                                                  (rule "shift_paren_and" (formula "91") (term "0,0"))
                                                                  (rule "commute_and_2" (formula "91") (term "0,0,0"))
                                                                  (rule "ifUnfold" (formula "129") (term "1") (inst "#boolv=x"))
                                                                  (rule "variableDeclaration" (formula "129") (term "1") (newnames "x_11"))
                                                                  (rule "inequality_comparison_simple" (formula "129") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "129"))
                                                                  (rule "replace_known_left" (formula "129") (term "0,0,1,0") (ifseqformula "94"))
                                                                   (builtin "One Step Simplification" (formula "129"))
                                                                  (rule "ifSplit" (formula "129"))
                                                                  (branch "if x_11 true"
                                                                      (builtin "One Step Simplification" (formula "130"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "if x_11 false"
                                                                      (builtin "One Step Simplification" (formula "130"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "blockEmpty" (formula "129") (term "1"))
                                                                      (builtin "Block Contract (Internal)" (formula "129") (newnames "result_7,exc_8,heap_Before_BLOCK_6,savedHeap_Before_BLOCK_6,o,f"))
                                                                     (branch "Validity"
                                                                         (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "27")))
                                                                         (builtin "One Step Simplification" (formula "130"))
                                                                        (rule "eqSymm" (formula "130") (term "0,0,1,0,1"))
                                                                        (rule "variableDeclarationAssign" (formula "130") (term "1"))
                                                                        (rule "variableDeclaration" (formula "130") (term "1") (newnames "exc_8_1"))
                                                                        (rule "assignment" (formula "130") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "130"))
                                                                        (rule "emptyStatement" (formula "130") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "130"))
                                                                        (rule "emptyStatement" (formula "130") (term "1"))
                                                                        (rule "tryEmpty" (formula "130") (term "1"))
                                                                        (rule "blockEmptyLabel" (formula "130") (term "1"))
                                                                        (rule "blockEmpty" (formula "130") (term "1"))
                                                                        (rule "methodCallEmpty" (formula "130") (term "1"))
                                                                        (rule "emptyModality" (formula "130") (term "1"))
                                                                        (rule "andRight" (formula "130"))
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "130"))
                                                                           (rule "closeTrue" (formula "130"))
                                                                        )
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "130"))
                                                                           (rule "closeTrue" (formula "130"))
                                                                        )
                                                                     )
                                                                     (branch "Precondition"
                                                                        (rule "andRight" (formula "129"))
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "27")))
                                                                           (rule "closeTrue" (formula "129"))
                                                                        )
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "129"))
                                                                           (rule "wellFormedAnonEQ" (formula "129") (ifseqformula "90"))
                                                                           (rule "wellFormedAnonEQ" (formula "129") (term "0") (ifseqformula "59"))
                                                                           (rule "wellFormedAnon" (formula "129") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "129") (term "1,0") (ifseqformula "58"))
                                                                            (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "89")))
                                                                           (rule "closeTrue" (formula "129"))
                                                                        )
                                                                     )
                                                                     (branch "Usage"
                                                                         (builtin "One Step Simplification" (formula "99"))
                                                                         (builtin "One Step Simplification" (formula "130"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "1,1,1,0") (ifseqformula "90"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,1,1,0") (ifseqformula "59"))
                                                                         (builtin "One Step Simplification" (formula "99"))
                                                                        (rule "expand_inInt" (formula "99") (term "0,1,0"))
                                                                        (rule "replace_int_MAX" (formula "99") (term "1,0,0,1,0"))
                                                                        (rule "replace_int_MIN" (formula "99") (term "0,1,0,1,0"))
                                                                        (rule "andLeft" (formula "99"))
                                                                        (rule "andLeft" (formula "99"))
                                                                        (rule "andLeft" (formula "100"))
                                                                        (rule "andLeft" (formula "100"))
                                                                        (rule "eqSymm" (formula "103"))
                                                                        (rule "replace_known_left" (formula "102") (term "0") (ifseqformula "99"))
                                                                         (builtin "One Step Simplification" (formula "102"))
                                                                        (rule "true_left" (formula "102"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "101"))
                                                                        (rule "applyEq" (formula "102") (term "0") (ifseqformula "62"))
                                                                        (rule "eqSymm" (formula "102"))
                                                                        (rule "elim_double_block_2" (formula "133") (term "1"))
                                                                        (rule "ifUnfold" (formula "133") (term "1") (inst "#boolv=x"))
                                                                        (rule "variableDeclaration" (formula "133") (term "1") (newnames "x_12"))
                                                                        (rule "inequality_comparison_simple" (formula "133") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "133"))
                                                                        (rule "replace_known_left" (formula "133") (term "0,0,1,0") (ifseqformula "99"))
                                                                         (builtin "One Step Simplification" (formula "133"))
                                                                         (builtin "Use Dependency Contract" (formula "66") (term "0") (ifInst ""  (formula "103") (term "0")) (ifInst ""  (formula "59")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                         (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "131")) (ifInst ""  (formula "82")) (ifInst ""  (formula "44")) (ifInst ""  (formula "11")) (ifInst ""  (formula "23")))
                                                                        (rule "wellFormedAnon" (formula "103") (term "0,0,0,0"))
                                                                        (rule "expand_inInt" (formula "103") (term "1,0,0,0"))
                                                                        (rule "replace_int_MAX" (formula "103") (term "1,0,1,0,0,0"))
                                                                        (rule "replace_int_MIN" (formula "103") (term "0,1,1,0,0,0"))
                                                                        (rule "translateJavaAddInt" (formula "103") (term "0,1,1,1,1,0"))
                                                                        (rule "eqSymm" (formula "103") (term "1"))
                                                                        (rule "translateJavaMulInt" (formula "103") (term "0,1,0,1,1,0"))
                                                                        (rule "translateJavaMulInt" (formula "103") (term "0,0,1,1,1,1,0"))
                                                                        (rule "replace_known_left" (formula "103") (term "0,0,0,0,0") (ifseqformula "14"))
                                                                         (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "13")) (ifInst ""  (formula "15")))
                                                                        (rule "polySimp_mulComm0" (formula "103") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "103") (term "0,0,1,1,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "103") (term "0,1,1,1,1,0"))
                                                                        (rule "disjointDefinition" (formula "103") (term "1,0"))
                                                                        (rule "disjointWithSingleton2" (formula "103") (term "1,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "103") (term "0,0,0"))
                                                                        (rule "replace_known_left" (formula "103") (term "0,0,0") (ifseqformula "16"))
                                                                         (builtin "One Step Simplification" (formula "103"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "103") (term "0,0"))
                                                                        (rule "replace_known_left" (formula "103") (term "0,0") (ifseqformula "43"))
                                                                         (builtin "One Step Simplification" (formula "103"))
                                                                        (rule "applyEq" (formula "103") (term "1,1") (ifseqformula "66"))
                                                                        (rule "elementOfUnion" (formula "103") (term "0,0"))
                                                                        (rule "elementOfSingleton" (formula "103") (term "1,0,0"))
                                                                         (builtin "One Step Simplification" (formula "103"))
                                                                        (rule "true_left" (formula "103"))
                                                                        (rule "ifSplit" (formula "133"))
                                                                        (branch "if x_12 true"
                                                                            (builtin "One Step Simplification" (formula "134"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "if x_12 false"
                                                                            (builtin "One Step Simplification" (formula "134"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "true_left" (formula "1"))
                                                                           (rule "blockEmpty" (formula "133") (term "1"))
                                                                            (builtin "Block Contract (Internal)" (formula "133") (newnames "result_8,exc_9,heap_Before_BLOCK_7,savedHeap_Before_BLOCK_7,o,f"))
                                                                           (branch "Validity"
                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                               (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "27")))
                                                                              (rule "eqSymm" (formula "134") (term "0,0,1,0,1"))
                                                                              (rule "variableDeclarationAssign" (formula "134") (term "1"))
                                                                              (rule "variableDeclaration" (formula "134") (term "1") (newnames "exc_9_1"))
                                                                              (rule "assignment" (formula "134") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                              (rule "emptyStatement" (formula "134") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                              (rule "emptyStatement" (formula "134") (term "1"))
                                                                              (rule "tryEmpty" (formula "134") (term "1"))
                                                                              (rule "blockEmptyLabel" (formula "134") (term "1"))
                                                                              (rule "blockEmpty" (formula "134") (term "1"))
                                                                              (rule "methodCallEmpty" (formula "134") (term "1"))
                                                                              (rule "emptyModality" (formula "134") (term "1"))
                                                                              (rule "andRight" (formula "134"))
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "134"))
                                                                                 (rule "closeTrue" (formula "134"))
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "134"))
                                                                                 (rule "closeTrue" (formula "134"))
                                                                              )
                                                                           )
                                                                           (branch "Precondition"
                                                                              (rule "andRight" (formula "133"))
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "27")))
                                                                                 (rule "closeTrue" (formula "133"))
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "133"))
                                                                                 (rule "wellFormedAnonEQ" (formula "133") (ifseqformula "90"))
                                                                                 (rule "wellFormedAnonEQ" (formula "133") (term "0") (ifseqformula "59"))
                                                                                 (rule "wellFormedAnon" (formula "133") (term "0,0"))
                                                                                 (rule "replace_known_left" (formula "133") (term "1") (ifseqformula "89"))
                                                                                  (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")))
                                                                                 (rule "closeTrue" (formula "133"))
                                                                              )
                                                                           )
                                                                           (branch "Usage"
                                                                               (builtin "One Step Simplification" (formula "103"))
                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "103") (term "1,1,1,0") (ifseqformula "90"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "103") (term "0,1,1,1,0") (ifseqformula "59"))
                                                                               (builtin "One Step Simplification" (formula "103"))
                                                                              (rule "expand_inInt" (formula "103") (term "0,1,0"))
                                                                              (rule "replace_int_MIN" (formula "103") (term "0,1,0,1,0"))
                                                                              (rule "replace_int_MAX" (formula "103") (term "1,0,0,1,0"))
                                                                              (rule "andLeft" (formula "103"))
                                                                              (rule "andLeft" (formula "103"))
                                                                              (rule "andLeft" (formula "104"))
                                                                              (rule "andLeft" (formula "104"))
                                                                              (rule "replace_known_left" (formula "106") (term "0") (ifseqformula "103"))
                                                                               (builtin "One Step Simplification" (formula "106"))
                                                                              (rule "true_left" (formula "106"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "105"))
                                                                              (rule "elim_double_block_2" (formula "137") (term "1"))
                                                                              (rule "ifUnfold" (formula "137") (term "1") (inst "#boolv=x"))
                                                                              (rule "variableDeclaration" (formula "137") (term "1") (newnames "x_13"))
                                                                              (rule "inequality_comparison_simple" (formula "137") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                              (rule "replace_known_left" (formula "137") (term "0,0,1,0") (ifseqformula "103"))
                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                              (rule "ifSplit" (formula "137"))
                                                                              (branch "if x_13 true"
                                                                                  (builtin "One Step Simplification" (formula "138"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "if x_13 false"
                                                                                  (builtin "One Step Simplification" (formula "138"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "blockEmpty" (formula "137") (term "1"))
                                                                                  (builtin "Block Contract (Internal)" (formula "137") (newnames "result_9,exc_10,heap_Before_BLOCK_8,savedHeap_Before_BLOCK_8,o,f"))
                                                                                 (branch "Validity"
                                                                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "27")))
                                                                                     (builtin "One Step Simplification" (formula "138"))
                                                                                    (rule "eqSymm" (formula "138") (term "0,0,1,0,1"))
                                                                                    (rule "variableDeclarationAssign" (formula "138") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "138") (term "1") (newnames "exc_10_1"))
                                                                                    (rule "assignment" (formula "138") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "138"))
                                                                                    (rule "emptyStatement" (formula "138") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "138"))
                                                                                    (rule "emptyStatement" (formula "138") (term "1"))
                                                                                    (rule "tryEmpty" (formula "138") (term "1"))
                                                                                    (rule "blockEmptyLabel" (formula "138") (term "1"))
                                                                                    (rule "blockEmpty" (formula "138") (term "1"))
                                                                                    (rule "methodCallEmpty" (formula "138") (term "1"))
                                                                                    (rule "emptyModality" (formula "138") (term "1"))
                                                                                    (rule "andRight" (formula "138"))
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "138"))
                                                                                       (rule "closeTrue" (formula "138"))
                                                                                    )
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "138"))
                                                                                       (rule "closeTrue" (formula "138"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Precondition"
                                                                                    (rule "andRight" (formula "137"))
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "27")))
                                                                                       (rule "closeTrue" (formula "137"))
                                                                                    )
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "137"))
                                                                                       (rule "wellFormedAnonEQ" (formula "137") (ifseqformula "90"))
                                                                                       (rule "wellFormedAnonEQ" (formula "137") (term "0") (ifseqformula "59"))
                                                                                       (rule "wellFormedAnon" (formula "137") (term "0,0"))
                                                                                       (rule "replace_known_left" (formula "137") (term "1,0") (ifseqformula "58"))
                                                                                        (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "89")))
                                                                                       (rule "closeTrue" (formula "137"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Usage"
                                                                                     (builtin "One Step Simplification" (formula "107"))
                                                                                     (builtin "One Step Simplification" (formula "138"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "107") (term "1,1,1,0") (ifseqformula "90"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "107") (term "0,1,1,1,0") (ifseqformula "59"))
                                                                                     (builtin "One Step Simplification" (formula "107"))
                                                                                    (rule "expand_inInt" (formula "107") (term "0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "107") (term "0,1,0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "107") (term "1,0,0,1,0"))
                                                                                    (rule "andLeft" (formula "107"))
                                                                                    (rule "andLeft" (formula "107"))
                                                                                    (rule "andLeft" (formula "108"))
                                                                                    (rule "andLeft" (formula "108"))
                                                                                    (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "107"))
                                                                                     (builtin "One Step Simplification" (formula "110"))
                                                                                    (rule "true_left" (formula "110"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "109"))
                                                                                    (rule "elim_double_block_2" (formula "141") (term "1"))
                                                                                    (rule "elim_double_block_9" (formula "141") (term "1"))
                                                                                    (rule "ifUnfold" (formula "141") (term "1") (inst "#boolv=x"))
                                                                                    (rule "variableDeclaration" (formula "141") (term "1") (newnames "x_14"))
                                                                                    (rule "inequality_comparison_simple" (formula "141") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "141"))
                                                                                    (rule "replace_known_left" (formula "141") (term "0,0,1,0") (ifseqformula "107"))
                                                                                     (builtin "One Step Simplification" (formula "141"))
                                                                                    (rule "ifSplit" (formula "141"))
                                                                                    (branch "if x_14 true"
                                                                                        (builtin "One Step Simplification" (formula "142"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch "if x_14 false"
                                                                                        (builtin "One Step Simplification" (formula "142"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "true_left" (formula "1"))
                                                                                       (rule "blockEmpty" (formula "141") (term "1"))
                                                                                       (rule "blockEmpty" (formula "141") (term "1"))
                                                                                        (builtin "Block Contract (Internal)" (formula "141") (newnames "result_10,exc_11,heap_Before_BLOCK_9,savedHeap_Before_BLOCK_9,o,f"))
                                                                                       (branch "Validity"
                                                                                           (builtin "One Step Simplification" (formula "142"))
                                                                                           (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "27")))
                                                                                          (rule "eqSymm" (formula "142") (term "0,0,1,0,1"))
                                                                                          (rule "variableDeclarationAssign" (formula "142") (term "1"))
                                                                                          (rule "variableDeclaration" (formula "142") (term "1") (newnames "exc_11_1"))
                                                                                          (rule "assignment" (formula "142") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "142"))
                                                                                          (rule "emptyStatement" (formula "142") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "142"))
                                                                                          (rule "emptyStatement" (formula "142") (term "1"))
                                                                                          (rule "tryEmpty" (formula "142") (term "1"))
                                                                                          (rule "blockEmptyLabel" (formula "142") (term "1"))
                                                                                          (rule "blockEmpty" (formula "142") (term "1"))
                                                                                          (rule "methodCallEmpty" (formula "142") (term "1"))
                                                                                          (rule "emptyModality" (formula "142") (term "1"))
                                                                                          (rule "andRight" (formula "142"))
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "142"))
                                                                                             (rule "closeTrue" (formula "142"))
                                                                                          )
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "142"))
                                                                                             (rule "closeTrue" (formula "142"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Precondition"
                                                                                          (rule "andRight" (formula "141"))
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "141") (ifInst ""  (formula "27")))
                                                                                             (rule "closeTrue" (formula "141"))
                                                                                          )
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "141"))
                                                                                             (rule "wellFormedAnonEQ" (formula "141") (ifseqformula "90"))
                                                                                             (rule "wellFormedAnonEQ" (formula "141") (term "0") (ifseqformula "59"))
                                                                                             (rule "wellFormedAnon" (formula "141") (term "0,0"))
                                                                                             (rule "replace_known_left" (formula "141") (term "1") (ifseqformula "89"))
                                                                                              (builtin "One Step Simplification" (formula "141") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "58")))
                                                                                             (rule "closeTrue" (formula "141"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Usage"
                                                                                           (builtin "One Step Simplification" (formula "142"))
                                                                                           (builtin "One Step Simplification" (formula "111"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (term "1,1,1,0") (ifseqformula "90"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (term "0,1,1,1,0") (ifseqformula "59"))
                                                                                           (builtin "One Step Simplification" (formula "111"))
                                                                                          (rule "expand_inInt" (formula "111") (term "0,1,0"))
                                                                                          (rule "replace_int_MIN" (formula "111") (term "0,1,0,1,0"))
                                                                                          (rule "replace_int_MAX" (formula "111") (term "1,0,0,1,0"))
                                                                                          (rule "andLeft" (formula "111"))
                                                                                          (rule "andLeft" (formula "111"))
                                                                                          (rule "andLeft" (formula "112"))
                                                                                          (rule "andLeft" (formula "112"))
                                                                                          (rule "replace_known_left" (formula "114") (term "0") (ifseqformula "111"))
                                                                                           (builtin "One Step Simplification" (formula "114"))
                                                                                          (rule "true_left" (formula "114"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "113"))
                                                                                          (rule "elim_double_block_2" (formula "145") (term "1"))
                                                                                          (rule "ifUnfold" (formula "145") (term "1") (inst "#boolv=x"))
                                                                                          (rule "variableDeclaration" (formula "145") (term "1") (newnames "x_15"))
                                                                                          (rule "inequality_comparison_simple" (formula "145") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "145"))
                                                                                          (rule "replace_known_left" (formula "145") (term "0,0,1,0") (ifseqformula "111"))
                                                                                           (builtin "One Step Simplification" (formula "145"))
                                                                                          (rule "ifSplit" (formula "145"))
                                                                                          (branch "if x_15 true"
                                                                                              (builtin "One Step Simplification" (formula "146"))
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "closeFalse" (formula "1"))
                                                                                          )
                                                                                          (branch "if x_15 false"
                                                                                              (builtin "One Step Simplification" (formula "146"))
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "true_left" (formula "1"))
                                                                                             (rule "blockEmpty" (formula "145") (term "1"))
                                                                                             (rule "emptyStatement" (formula "145") (term "1"))
                                                                                             (rule "tryEmpty" (formula "145") (term "1"))
                                                                                             (rule "blockEmptyLabel" (formula "145") (term "1"))
                                                                                             (rule "blockEmpty" (formula "145") (term "1"))
                                                                                             (rule "methodCallEmpty" (formula "145") (term "1"))
                                                                                             (rule "emptyModality" (formula "145") (term "1"))
                                                                                             (rule "andRight" (formula "145"))
                                                                                             (branch
                                                                                                 (builtin "One Step Simplification" (formula "145"))
                                                                                                (rule "closeTrue" (formula "145"))
                                                                                             )
                                                                                             (branch
                                                                                                (rule "andRight" (formula "145"))
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "145") (ifInst ""  (formula "97")))
                                                                                                   (rule "closeTrue" (formula "145"))
                                                                                                )
                                                                                                (branch
                                                                                                    (builtin "One Step Simplification" (formula "145") (ifInst ""  (formula "98")))
                                                                                                   (rule "closeTrue" (formula "145"))
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "Exceptional Post (copy_nonoverlapping)"
                                                                (builtin "One Step Simplification" (formula "90"))
                                                                (builtin "One Step Simplification" (formula "121"))
                                                               (rule "andLeft" (formula "90"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "1,0") (ifseqformula "90"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,0") (ifseqformula "59"))
                                                                (builtin "One Step Simplification" (formula "91"))
                                                               (rule "andLeft" (formula "91"))
                                                               (rule "andLeft" (formula "91"))
                                                               (rule "notLeft" (formula "91"))
                                                               (rule "close" (formula "93") (ifseqformula "92"))
                                                            )
                                                            (branch "Pre (copy_nonoverlapping)"
                                                                (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "115")) (ifInst ""  (formula "113")) (ifInst ""  (formula "82")) (ifInst ""  (formula "115")) (ifInst ""  (formula "113")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "1,0,0") (ifseqformula "59"))
                                                                (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "26")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "0,0") (ifseqformula "59"))
                                                                (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "24")))
                                                               (rule "expand_inInt" (formula "119") (term "1"))
                                                               (rule "expand_inInt" (formula "119") (term "0"))
                                                               (rule "replace_int_MAX" (formula "119") (term "1,0,1"))
                                                               (rule "replace_int_MIN" (formula "119") (term "0,1,1"))
                                                               (rule "replace_int_MAX" (formula "119") (term "1,0,0"))
                                                               (rule "replace_int_MIN" (formula "119") (term "0,1,0"))
                                                               (rule "leq_literals" (formula "119") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "119"))
                                                               (rule "leq_literals" (formula "119") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "119"))
                                                               (rule "leq_literals" (formula "119") (term "0"))
                                                                (builtin "One Step Simplification" (formula "119"))
                                                               (rule "leq_literals" (formula "119"))
                                                               (rule "closeTrue" (formula "119"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "if x_7 false"
                                                       (builtin "One Step Simplification" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "115"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elim_double_block_2" (formula "115") (term "1"))
                                                       (builtin "Use Operation Contract" (formula "115") (newnames "heapBefore_copy_nonoverlapping,exc_5,heapAfter_copy_nonoverlapping,anon_heap_copy_nonoverlapping") (contract "de.wiesler.Functions[de.wiesler.Functions::copy_nonoverlapping([I,int,[I,int,int)].JML normal_behavior operation contract.0"))
                                                      (branch "Post (copy_nonoverlapping)"
                                                          (builtin "One Step Simplification" (formula "85"))
                                                          (builtin "One Step Simplification" (formula "117"))
                                                          (builtin "Block Contract (Internal)" (formula "117") (newnames "result_5,exc_6,heap_Before_BLOCK_4,savedHeap_Before_BLOCK_4,o,f"))
                                                         (branch "Validity"
                                                             (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "26")))
                                                             (builtin "One Step Simplification" (formula "118"))
                                                            (rule "expand_inInt" (formula "85") (term "0,0,1,1,0,1"))
                                                            (rule "expand_inInt" (formula "85") (term "1,0,0,0,1,0,1"))
                                                            (rule "replace_int_MAX" (formula "85") (term "1,0,0,0,1,1,0,1"))
                                                            (rule "replace_int_MIN" (formula "85") (term "0,1,0,0,1,1,0,1"))
                                                            (rule "replace_int_MIN" (formula "85") (term "0,1,1,0,0,0,1,0,1"))
                                                            (rule "replace_int_MAX" (formula "85") (term "1,0,1,0,0,0,1,0,1"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "eqSymm" (formula "121") (term "0,0,1,0,1"))
                                                            (rule "translateJavaSubInt" (formula "85") (term "2,1,0"))
                                                            (rule "translateJavaAddInt" (formula "86") (term "0,2,1,1,0"))
                                                            (rule "add_zero_left" (formula "86") (term "0,2,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "87") (term "3,1,1,0"))
                                                            (rule "add_zero_left" (formula "87") (term "3,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "87") (term "3,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "86") (term "0,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "85") (term "0,2,1,0"))
                                                            (rule "polySimp_elimSub" (formula "85") (term "2,1,0"))
                                                            (rule "mul_literals" (formula "85") (term "1,2,1,0"))
                                                            (rule "polySimp_addLiterals" (formula "85") (term "2,1,0"))
                                                            (rule "polySimp_addComm1" (formula "87") (term "3,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "85") (term "2,1,0"))
                                                            (rule "polySimp_addComm0" (formula "87") (term "0,3,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "85") (term "0,2,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "86") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,0"))
                                                            (rule "variableDeclarationAssign" (formula "121") (term "1"))
                                                            (rule "variableDeclaration" (formula "121") (term "1") (newnames "exc_6_1"))
                                                            (rule "assignment" (formula "121") (term "1"))
                                                             (builtin "One Step Simplification" (formula "121"))
                                                            (rule "emptyStatement" (formula "121") (term "1"))
                                                             (builtin "One Step Simplification" (formula "121"))
                                                            (rule "emptyStatement" (formula "121") (term "1"))
                                                            (rule "commute_and" (formula "87") (term "0,0"))
                                                            (rule "commute_and" (formula "86") (term "1,0,0"))
                                                            (rule "commute_and" (formula "86") (term "0,0,0"))
                                                            (rule "shift_paren_and" (formula "86") (term "0,0"))
                                                            (rule "commute_and_2" (formula "86") (term "0,0,0"))
                                                            (rule "tryEmpty" (formula "121") (term "1"))
                                                            (rule "blockEmptyLabel" (formula "121") (term "1"))
                                                            (rule "blockEmpty" (formula "121") (term "1"))
                                                            (rule "methodCallEmpty" (formula "121") (term "1"))
                                                            (rule "emptyModality" (formula "121") (term "1"))
                                                            (rule "andRight" (formula "121"))
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "121"))
                                                               (rule "closeTrue" (formula "121"))
                                                            )
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "121"))
                                                               (rule "closeTrue" (formula "121"))
                                                            )
                                                         )
                                                         (branch "Precondition"
                                                            (rule "andRight" (formula "117"))
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "26")))
                                                               (rule "closeTrue" (formula "117"))
                                                            )
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "117"))
                                                               (rule "expand_inInt" (formula "85") (term "1,0,0,0,1,0,1"))
                                                               (rule "expand_inInt" (formula "85") (term "0,0,1,1,0,1"))
                                                               (rule "replace_int_MIN" (formula "85") (term "0,1,1,0,0,0,1,0,1"))
                                                               (rule "replace_int_MAX" (formula "85") (term "1,0,1,0,0,0,1,0,1"))
                                                               (rule "replace_int_MAX" (formula "85") (term "1,0,0,0,1,1,0,1"))
                                                               (rule "replace_int_MIN" (formula "85") (term "0,1,0,0,1,1,0,1"))
                                                               (rule "andLeft" (formula "85"))
                                                               (rule "wellFormedAnonEQ" (formula "118") (ifseqformula "85"))
                                                               (rule "wellFormedAnonEQ" (formula "118") (term "0") (ifseqformula "58"))
                                                               (rule "wellFormedAnon" (formula "118") (term "0,0"))
                                                               (rule "andLeft" (formula "86"))
                                                               (rule "andLeft" (formula "86"))
                                                               (rule "andLeft" (formula "86"))
                                                               (rule "translateJavaSubInt" (formula "85") (term "2,1,0"))
                                                               (rule "translateJavaAddInt" (formula "87") (term "3,1,1,0"))
                                                               (rule "add_zero_left" (formula "87") (term "3,1,1,0"))
                                                               (rule "translateJavaAddInt" (formula "86") (term "0,2,1,1,0"))
                                                               (rule "add_zero_left" (formula "86") (term "0,2,1,1,0"))
                                                               (rule "translateJavaAddInt" (formula "86") (term "0,2,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "87") (term "3,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "85") (term "0,2,1,0"))
                                                               (rule "replace_known_left" (formula "120") (term "1,0,0") (ifseqformula "12"))
                                                                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "13")) (ifInst ""  (formula "57")) (ifInst ""  (formula "84")))
                                                               (rule "closeTrue" (formula "120"))
                                                            )
                                                         )
                                                         (branch "Usage"
                                                             (builtin "One Step Simplification" (formula "86"))
                                                             (builtin "One Step Simplification" (formula "118"))
                                                            (rule "expand_inInt" (formula "85") (term "0,0,1,1,0,1"))
                                                            (rule "expand_inInt" (formula "85") (term "1,0,0,0,1,0,1"))
                                                            (rule "expand_inInt" (formula "86") (term "0,1,0"))
                                                            (rule "replace_int_MIN" (formula "85") (term "0,1,0,0,1,1,0,1"))
                                                            (rule "replace_int_MAX" (formula "85") (term "1,0,0,0,1,1,0,1"))
                                                            (rule "replace_int_MIN" (formula "85") (term "0,1,1,0,0,0,1,0,1"))
                                                            (rule "replace_int_MAX" (formula "85") (term "1,0,1,0,0,0,1,0,1"))
                                                            (rule "replace_int_MIN" (formula "86") (term "0,1,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "86") (term "1,0,0,1,0"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "1,1,1,0") (ifseqformula "85"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,1,1,1,0") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "87"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "andLeft" (formula "88"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "andLeft" (formula "89"))
                                                            (rule "andLeft" (formula "88"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "andLeft" (formula "90"))
                                                            (rule "andLeft" (formula "90"))
                                                            (rule "translateJavaSubInt" (formula "85") (term "2,1,0"))
                                                            (rule "translateJavaAddInt" (formula "87") (term "3,1,1,0"))
                                                            (rule "add_literals" (formula "87") (term "3,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "86") (term "0,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "87") (term "3,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "86") (term "0,2,1,1,0"))
                                                            (rule "add_zero_left" (formula "86") (term "0,2,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "85") (term "0,2,1,0"))
                                                            (rule "replace_known_left" (formula "92") (term "0") (ifseqformula "89"))
                                                             (builtin "One Step Simplification" (formula "92"))
                                                            (rule "true_left" (formula "92"))
                                                            (rule "polySimp_elimSub" (formula "85") (term "2,1,0"))
                                                            (rule "mul_literals" (formula "85") (term "1,2,1,0"))
                                                            (rule "polySimp_addLiterals" (formula "85") (term "2,1,0"))
                                                            (rule "polySimp_addComm1" (formula "87") (term "3,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "85") (term "2,1,0"))
                                                            (rule "polySimp_addComm0" (formula "87") (term "0,3,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "85") (term "0,2,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "86") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "91"))
                                                            (rule "commute_and" (formula "87") (term "0,0"))
                                                            (rule "commute_and" (formula "86") (term "0,0,0"))
                                                            (rule "commute_and" (formula "86") (term "1,0,0"))
                                                            (rule "elim_double_block_2" (formula "125") (term "1"))
                                                            (rule "shift_paren_and" (formula "86") (term "0,0"))
                                                            (rule "commute_and_2" (formula "86") (term "0,0,0"))
                                                            (rule "ifUnfold" (formula "125") (term "1") (inst "#boolv=x"))
                                                            (rule "variableDeclaration" (formula "125") (term "1") (newnames "x_10"))
                                                            (rule "inequality_comparison_simple" (formula "125") (term "1"))
                                                             (builtin "One Step Simplification" (formula "125"))
                                                            (rule "replace_known_left" (formula "125") (term "0,0,1,0") (ifseqformula "89"))
                                                             (builtin "One Step Simplification" (formula "125"))
                                                            (rule "ifSplit" (formula "125"))
                                                            (branch "if x_10 true"
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "if x_10 false"
                                                                (builtin "One Step Simplification" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "126"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "blockEmpty" (formula "125") (term "1"))
                                                               (rule "emptyStatement" (formula "125") (term "1"))
                                                                (builtin "Block Contract (Internal)" (formula "125") (newnames "result_6,exc_7,heap_Before_BLOCK_5,savedHeap_Before_BLOCK_5,o,f"))
                                                               (branch "Validity"
                                                                   (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "26")))
                                                                   (builtin "One Step Simplification" (formula "126"))
                                                                  (rule "eqSymm" (formula "126") (term "0,0,1,0,1"))
                                                                  (rule "variableDeclarationAssign" (formula "126") (term "1"))
                                                                  (rule "variableDeclaration" (formula "126") (term "1") (newnames "exc_7_1"))
                                                                  (rule "assignment" (formula "126") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "126"))
                                                                  (rule "emptyStatement" (formula "126") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "126"))
                                                                  (rule "emptyStatement" (formula "126") (term "1"))
                                                                  (rule "tryEmpty" (formula "126") (term "1"))
                                                                  (rule "blockEmptyLabel" (formula "126") (term "1"))
                                                                  (rule "blockEmpty" (formula "126") (term "1"))
                                                                  (rule "methodCallEmpty" (formula "126") (term "1"))
                                                                  (rule "emptyModality" (formula "126") (term "1"))
                                                                  (rule "andRight" (formula "126"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "126"))
                                                                     (rule "closeTrue" (formula "126"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "126"))
                                                                     (rule "closeTrue" (formula "126"))
                                                                  )
                                                               )
                                                               (branch "Precondition"
                                                                  (rule "andRight" (formula "125"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "26")))
                                                                     (rule "closeTrue" (formula "125"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "125"))
                                                                     (rule "wellFormedAnonEQ" (formula "125") (ifseqformula "85"))
                                                                     (rule "wellFormedAnonEQ" (formula "125") (term "0") (ifseqformula "58"))
                                                                     (rule "wellFormedAnon" (formula "125") (term "0,0"))
                                                                     (rule "replace_known_left" (formula "125") (term "1") (ifseqformula "84"))
                                                                      (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")))
                                                                     (rule "closeTrue" (formula "125"))
                                                                  )
                                                               )
                                                               (branch "Usage"
                                                                   (builtin "One Step Simplification" (formula "94"))
                                                                   (builtin "One Step Simplification" (formula "126"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "1,1,1,0") (ifseqformula "85"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,1,1,1,0") (ifseqformula "58"))
                                                                   (builtin "One Step Simplification" (formula "94"))
                                                                  (rule "expand_inInt" (formula "94") (term "0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "94") (term "0,1,0,1,0"))
                                                                  (rule "replace_int_MAX" (formula "94") (term "1,0,0,1,0"))
                                                                  (rule "andLeft" (formula "94"))
                                                                  (rule "andLeft" (formula "94"))
                                                                  (rule "andLeft" (formula "95"))
                                                                  (rule "andLeft" (formula "95"))
                                                                  (rule "eqSymm" (formula "98"))
                                                                  (rule "replace_known_left" (formula "97") (term "0") (ifseqformula "94"))
                                                                   (builtin "One Step Simplification" (formula "97"))
                                                                  (rule "true_left" (formula "97"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "96"))
                                                                  (rule "applyEq" (formula "61") (term "0") (ifseqformula "97"))
                                                                  (rule "applyEq" (formula "97") (term "1") (ifseqformula "61"))
                                                                  (rule "elim_double_block_2" (formula "129") (term "1"))
                                                                  (rule "ifUnfold" (formula "129") (term "1") (inst "#boolv=x"))
                                                                  (rule "variableDeclaration" (formula "129") (term "1") (newnames "x_11"))
                                                                  (rule "inequality_comparison_simple" (formula "129") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "129"))
                                                                  (rule "replace_known_left" (formula "129") (term "0,0,1,0") (ifseqformula "94"))
                                                                   (builtin "One Step Simplification" (formula "129"))
                                                                  (rule "ifSplit" (formula "129"))
                                                                  (branch "if x_11 true"
                                                                      (builtin "One Step Simplification" (formula "130"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "if x_11 false"
                                                                      (builtin "One Step Simplification" (formula "130"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "blockEmpty" (formula "129") (term "1"))
                                                                     (rule "emptyStatement" (formula "129") (term "1"))
                                                                      (builtin "Block Contract (Internal)" (formula "129") (newnames "result_7,exc_8,heap_Before_BLOCK_6,savedHeap_Before_BLOCK_6,o,f"))
                                                                     (branch "Validity"
                                                                         (builtin "One Step Simplification" (formula "130"))
                                                                         (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "26")))
                                                                        (rule "eqSymm" (formula "130") (term "0,0,1,0,1"))
                                                                        (rule "variableDeclarationAssign" (formula "130") (term "1"))
                                                                        (rule "variableDeclaration" (formula "130") (term "1") (newnames "exc_8_1"))
                                                                        (rule "assignment" (formula "130") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "130"))
                                                                        (rule "emptyStatement" (formula "130") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "130"))
                                                                        (rule "emptyStatement" (formula "130") (term "1"))
                                                                        (rule "tryEmpty" (formula "130") (term "1"))
                                                                        (rule "blockEmptyLabel" (formula "130") (term "1"))
                                                                        (rule "blockEmpty" (formula "130") (term "1"))
                                                                        (rule "methodCallEmpty" (formula "130") (term "1"))
                                                                        (rule "emptyModality" (formula "130") (term "1"))
                                                                        (rule "andRight" (formula "130"))
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "130"))
                                                                           (rule "closeTrue" (formula "130"))
                                                                        )
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "130"))
                                                                           (rule "closeTrue" (formula "130"))
                                                                        )
                                                                     )
                                                                     (branch "Precondition"
                                                                        (rule "andRight" (formula "129"))
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "26")))
                                                                           (rule "closeTrue" (formula "129"))
                                                                        )
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "129"))
                                                                           (rule "wellFormedAnonEQ" (formula "129") (ifseqformula "85"))
                                                                           (rule "wellFormedAnonEQ" (formula "129") (term "0") (ifseqformula "58"))
                                                                           (rule "wellFormedAnon" (formula "129") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "129") (term "1,0") (ifseqformula "57"))
                                                                            (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "84")))
                                                                           (rule "closeTrue" (formula "129"))
                                                                        )
                                                                     )
                                                                     (branch "Usage"
                                                                         (builtin "One Step Simplification" (formula "98"))
                                                                         (builtin "One Step Simplification" (formula "130"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,1,1,0") (ifseqformula "85"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,1,1,1,0") (ifseqformula "58"))
                                                                         (builtin "One Step Simplification" (formula "98"))
                                                                        (rule "expand_inInt" (formula "98") (term "0,1,0"))
                                                                        (rule "replace_int_MIN" (formula "98") (term "0,1,0,1,0"))
                                                                        (rule "replace_int_MAX" (formula "98") (term "1,0,0,1,0"))
                                                                        (rule "andLeft" (formula "98"))
                                                                        (rule "andLeft" (formula "98"))
                                                                        (rule "andLeft" (formula "99"))
                                                                        (rule "andLeft" (formula "99"))
                                                                        (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "98"))
                                                                         (builtin "One Step Simplification" (formula "101"))
                                                                        (rule "true_left" (formula "101"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "100"))
                                                                        (rule "elim_double_block_2" (formula "133") (term "1"))
                                                                        (rule "ifUnfold" (formula "133") (term "1") (inst "#boolv=x"))
                                                                        (rule "variableDeclaration" (formula "133") (term "1") (newnames "x_12"))
                                                                        (rule "inequality_comparison_simple" (formula "133") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "133"))
                                                                        (rule "replace_known_left" (formula "133") (term "0,0,1,0") (ifseqformula "98"))
                                                                         (builtin "One Step Simplification" (formula "133"))
                                                                         (builtin "Use Dependency Contract" (formula "65") (term "0") (ifInst ""  (formula "103") (term "0")) (ifInst ""  (formula "58")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::toReadCountOfBucket(int)].JML accessible clause.0"))
                                                                         (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "131")) (ifInst ""  (formula "81")) (ifInst ""  (formula "43")) (ifInst ""  (formula "10")) (ifInst ""  (formula "22")))
                                                                        (rule "wellFormedAnon" (formula "102") (term "0,0,0,0"))
                                                                        (rule "expand_inInt" (formula "102") (term "1,0,0,0"))
                                                                        (rule "replace_int_MIN" (formula "102") (term "0,1,1,0,0,0"))
                                                                        (rule "replace_int_MAX" (formula "102") (term "1,0,1,0,0,0"))
                                                                        (rule "translateJavaMulInt" (formula "102") (term "0,1,0,1,1,0"))
                                                                        (rule "translateJavaAddInt" (formula "102") (term "0,1,1,1,1,0"))
                                                                        (rule "eqSymm" (formula "102") (term "1"))
                                                                        (rule "translateJavaMulInt" (formula "102") (term "0,0,1,1,1,1,0"))
                                                                        (rule "replace_known_left" (formula "102") (term "0,1,0,0,0") (ifseqformula "14"))
                                                                         (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")))
                                                                        (rule "polySimp_mulComm0" (formula "102") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "102") (term "0,0,1,1,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "102") (term "0,1,1,1,1,0"))
                                                                        (rule "disjointDefinition" (formula "102") (term "1,0"))
                                                                        (rule "disjointWithSingleton2" (formula "102") (term "1,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "102") (term "1,0,0"))
                                                                        (rule "replace_known_left" (formula "102") (term "1,0,0") (ifseqformula "42"))
                                                                         (builtin "One Step Simplification" (formula "102"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "102") (term "0,0"))
                                                                        (rule "replace_known_left" (formula "102") (term "0,0") (ifseqformula "15"))
                                                                         (builtin "One Step Simplification" (formula "102"))
                                                                        (rule "applyEq" (formula "102") (term "1,1") (ifseqformula "65"))
                                                                        (rule "elementOfUnion" (formula "102") (term "0,0"))
                                                                        (rule "elementOfSingleton" (formula "102") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "102"))
                                                                        (rule "elementOfSingleton" (formula "102") (term "1,0,0"))
                                                                         (builtin "One Step Simplification" (formula "102"))
                                                                        (rule "true_left" (formula "102"))
                                                                        (rule "ifSplit" (formula "133"))
                                                                        (branch "if x_12 true"
                                                                            (builtin "One Step Simplification" (formula "134"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "if x_12 false"
                                                                            (builtin "One Step Simplification" (formula "134"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "true_left" (formula "1"))
                                                                           (rule "blockEmpty" (formula "133") (term "1"))
                                                                           (rule "emptyStatement" (formula "133") (term "1"))
                                                                            (builtin "Block Contract (Internal)" (formula "133") (newnames "result_8,exc_9,heap_Before_BLOCK_7,savedHeap_Before_BLOCK_7,o,f"))
                                                                           (branch "Validity"
                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                               (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "26")))
                                                                              (rule "eqSymm" (formula "134") (term "0,0,1,0,1"))
                                                                              (rule "variableDeclarationAssign" (formula "134") (term "1"))
                                                                              (rule "variableDeclaration" (formula "134") (term "1") (newnames "exc_9_1"))
                                                                              (rule "assignment" (formula "134") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                              (rule "emptyStatement" (formula "134") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                              (rule "emptyStatement" (formula "134") (term "1"))
                                                                              (rule "tryEmpty" (formula "134") (term "1"))
                                                                              (rule "blockEmptyLabel" (formula "134") (term "1"))
                                                                              (rule "blockEmpty" (formula "134") (term "1"))
                                                                              (rule "methodCallEmpty" (formula "134") (term "1"))
                                                                              (rule "emptyModality" (formula "134") (term "1"))
                                                                              (rule "andRight" (formula "134"))
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "134"))
                                                                                 (rule "closeTrue" (formula "134"))
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "134"))
                                                                                 (rule "closeTrue" (formula "134"))
                                                                              )
                                                                           )
                                                                           (branch "Precondition"
                                                                              (rule "andRight" (formula "133"))
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "26")))
                                                                                 (rule "closeTrue" (formula "133"))
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "133"))
                                                                                 (rule "wellFormedAnonEQ" (formula "133") (ifseqformula "85"))
                                                                                 (rule "wellFormedAnonEQ" (formula "133") (term "0") (ifseqformula "58"))
                                                                                 (rule "wellFormedAnon" (formula "133") (term "0,0"))
                                                                                 (rule "replace_known_left" (formula "133") (term "1") (ifseqformula "84"))
                                                                                  (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")))
                                                                                 (rule "closeTrue" (formula "133"))
                                                                              )
                                                                           )
                                                                           (branch "Usage"
                                                                               (builtin "One Step Simplification" (formula "102"))
                                                                               (builtin "One Step Simplification" (formula "134"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "1,1,1,0") (ifseqformula "85"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "0,1,1,1,0") (ifseqformula "58"))
                                                                               (builtin "One Step Simplification" (formula "102"))
                                                                              (rule "expand_inInt" (formula "102") (term "0,1,0"))
                                                                              (rule "replace_int_MIN" (formula "102") (term "0,1,0,1,0"))
                                                                              (rule "replace_int_MAX" (formula "102") (term "1,0,0,1,0"))
                                                                              (rule "andLeft" (formula "102"))
                                                                              (rule "andLeft" (formula "102"))
                                                                              (rule "andLeft" (formula "103"))
                                                                              (rule "andLeft" (formula "103"))
                                                                              (rule "translateJavaAddInt" (formula "106") (term "5,0"))
                                                                              (rule "translateJavaAddInt" (formula "106") (term "3,0"))
                                                                              (rule "replace_known_left" (formula "105") (term "0") (ifseqformula "102"))
                                                                               (builtin "One Step Simplification" (formula "105"))
                                                                              (rule "true_left" (formula "105"))
                                                                              (rule "polySimp_addComm1" (formula "105") (term "5,0"))
                                                                              (rule "polySimp_addComm0" (formula "105") (term "0,5,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "104"))
                                                                              (rule "elim_double_block_2" (formula "137") (term "1"))
                                                                              (rule "ifUnfold" (formula "137") (term "1") (inst "#boolv=x"))
                                                                              (rule "variableDeclaration" (formula "137") (term "1") (newnames "x_13"))
                                                                              (rule "inequality_comparison_simple" (formula "137") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                              (rule "replace_known_left" (formula "137") (term "0,0,1,0") (ifseqformula "102"))
                                                                               (builtin "One Step Simplification" (formula "137"))
                                                                              (rule "ifSplit" (formula "137"))
                                                                              (branch "if x_13 true"
                                                                                  (builtin "One Step Simplification" (formula "138"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "if x_13 false"
                                                                                  (builtin "One Step Simplification" (formula "138"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "blockEmpty" (formula "137") (term "1"))
                                                                                 (rule "emptyStatement" (formula "137") (term "1"))
                                                                                 (rule "blockEmpty" (formula "137") (term "1"))
                                                                                  (builtin "Block Contract (Internal)" (formula "137") (newnames "result_9,exc_10,heap_Before_BLOCK_8,savedHeap_Before_BLOCK_8,o,f"))
                                                                                 (branch "Validity"
                                                                                     (builtin "One Step Simplification" (formula "138"))
                                                                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "26")))
                                                                                    (rule "eqSymm" (formula "138") (term "0,0,1,0,1"))
                                                                                    (rule "variableDeclarationAssign" (formula "138") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "138") (term "1") (newnames "exc_10_1"))
                                                                                    (rule "assignment" (formula "138") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "138"))
                                                                                    (rule "emptyStatement" (formula "138") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "138"))
                                                                                    (rule "emptyStatement" (formula "138") (term "1"))
                                                                                    (rule "tryEmpty" (formula "138") (term "1"))
                                                                                    (rule "blockEmptyLabel" (formula "138") (term "1"))
                                                                                    (rule "blockEmpty" (formula "138") (term "1"))
                                                                                    (rule "methodCallEmpty" (formula "138") (term "1"))
                                                                                    (rule "emptyModality" (formula "138") (term "1"))
                                                                                    (rule "andRight" (formula "138"))
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "138"))
                                                                                       (rule "closeTrue" (formula "138"))
                                                                                    )
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "138"))
                                                                                       (rule "closeTrue" (formula "138"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Precondition"
                                                                                    (rule "andRight" (formula "137"))
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "26")))
                                                                                       (rule "closeTrue" (formula "137"))
                                                                                    )
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "137"))
                                                                                       (rule "wellFormedAnonEQ" (formula "137") (ifseqformula "85"))
                                                                                       (rule "wellFormedAnonEQ" (formula "137") (term "0") (ifseqformula "58"))
                                                                                       (rule "wellFormedAnon" (formula "137") (term "0,0"))
                                                                                       (rule "replace_known_left" (formula "137") (term "1,0") (ifseqformula "57"))
                                                                                        (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "84")))
                                                                                       (rule "closeTrue" (formula "137"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Usage"
                                                                                     (builtin "One Step Simplification" (formula "106"))
                                                                                     (builtin "One Step Simplification" (formula "138"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "1,1,1,0") (ifseqformula "85"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "0,1,1,1,0") (ifseqformula "58"))
                                                                                     (builtin "One Step Simplification" (formula "106"))
                                                                                    (rule "expand_inInt" (formula "106") (term "0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "106") (term "0,1,0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "106") (term "1,0,0,1,0"))
                                                                                    (rule "andLeft" (formula "106"))
                                                                                    (rule "andLeft" (formula "106"))
                                                                                    (rule "andLeft" (formula "107"))
                                                                                    (rule "andLeft" (formula "107"))
                                                                                    (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "106"))
                                                                                     (builtin "One Step Simplification" (formula "109"))
                                                                                    (rule "true_left" (formula "109"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "108"))
                                                                                    (rule "elim_double_block_2" (formula "141") (term "1"))
                                                                                    (rule "ifUnfold" (formula "141") (term "1") (inst "#boolv=x"))
                                                                                    (rule "variableDeclaration" (formula "141") (term "1") (newnames "x_14"))
                                                                                    (rule "inequality_comparison_simple" (formula "141") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "141"))
                                                                                    (rule "replace_known_left" (formula "141") (term "0,0,1,0") (ifseqformula "106"))
                                                                                     (builtin "One Step Simplification" (formula "141"))
                                                                                    (rule "ifSplit" (formula "141"))
                                                                                    (branch "if x_14 true"
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch "if x_14 false"
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                        (builtin "One Step Simplification" (formula "142"))
                                                                                       (rule "true_left" (formula "1"))
                                                                                       (rule "blockEmpty" (formula "141") (term "1"))
                                                                                       (rule "emptyStatement" (formula "141") (term "1"))
                                                                                       (rule "tryEmpty" (formula "141") (term "1"))
                                                                                       (rule "blockEmptyLabel" (formula "141") (term "1"))
                                                                                       (rule "blockEmpty" (formula "141") (term "1"))
                                                                                       (rule "methodCallEmpty" (formula "141") (term "1"))
                                                                                       (rule "emptyModality" (formula "141") (term "1"))
                                                                                       (rule "andRight" (formula "141"))
                                                                                       (branch
                                                                                           (builtin "One Step Simplification" (formula "141"))
                                                                                          (rule "closeTrue" (formula "141"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "andRight" (formula "141"))
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "141") (ifInst ""  (formula "92")))
                                                                                             (rule "closeTrue" (formula "141"))
                                                                                          )
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "141") (ifInst ""  (formula "93")))
                                                                                             (rule "closeTrue" (formula "141"))
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Exceptional Post (copy_nonoverlapping)"
                                                          (builtin "One Step Simplification" (formula "85"))
                                                          (builtin "One Step Simplification" (formula "117"))
                                                         (rule "andLeft" (formula "85"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "1,0") (ifseqformula "85"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,1,0") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "86"))
                                                         (rule "andLeft" (formula "86"))
                                                         (rule "andLeft" (formula "86"))
                                                         (rule "notLeft" (formula "86"))
                                                         (rule "close" (formula "88") (ifseqformula "87"))
                                                      )
                                                      (branch "Pre (copy_nonoverlapping)"
                                                          (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "111")) (ifInst ""  (formula "114")) (ifInst ""  (formula "81")) (ifInst ""  (formula "111")) (ifInst ""  (formula "114")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "1,0,0") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "16")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,0,0") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "23")))
                                                         (rule "expand_inInt" (formula "115") (term "1,0"))
                                                         (rule "expand_inInt" (formula "115") (term "0,0"))
                                                         (rule "expand_inInt" (formula "115") (term "1"))
                                                         (rule "replace_int_MAX" (formula "115") (term "1,0,1,0"))
                                                         (rule "replace_int_MIN" (formula "115") (term "0,1,1,0"))
                                                         (rule "replace_int_MAX" (formula "115") (term "1,0,0,0"))
                                                         (rule "replace_int_MIN" (formula "115") (term "0,1,0,0"))
                                                         (rule "replace_int_MIN" (formula "115") (term "0,1,1"))
                                                         (rule "replace_int_MAX" (formula "115") (term "1,0,1"))
                                                         (rule "leq_literals" (formula "115") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "82")) (ifInst ""  (formula "83")))
                                                         (rule "leq_literals" (formula "115") (term "0"))
                                                          (builtin "One Step Simplification" (formula "115"))
                                                         (rule "leq_literals" (formula "115") (term "1"))
                                                          (builtin "One Step Simplification" (formula "115"))
                                                         (rule "leq_literals" (formula "115"))
                                                         (rule "closeTrue" (formula "115"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Precondition"
                                                (rule "andRight" (formula "111"))
                                                (branch
                                                   (rule "andRight" (formula "111"))
                                                   (branch
                                                       (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "26")))
                                                      (rule "closeTrue" (formula "111"))
                                                   )
                                                   (branch
                                                       (builtin "One Step Simplification" (formula "111"))
                                                      (rule "wellFormedAnonEQ" (formula "111") (ifseqformula "58"))
                                                      (rule "wellFormedAnon" (formula "111") (term "0"))
                                                      (rule "replace_known_left" (formula "111") (term "1") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")))
                                                      (rule "closeTrue" (formula "111"))
                                                   )
                                                )
                                                (branch
                                                   (rule "andRight" (formula "111"))
                                                   (branch
                                                      (rule "andRight" (formula "111"))
                                                      (branch
                                                         (rule "andRight" (formula "111"))
                                                         (branch
                                                            (rule "andRight" (formula "111"))
                                                            (branch
                                                               (rule "orRight" (formula "111"))
                                                                (builtin "One Step Simplification" (formula "112"))
                                                                (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "110")))
                                                               (rule "false_right" (formula "111"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "16")))
                                                               (rule "closeTrue" (formula "111"))
                                                            )
                                                            (branch
                                                               (rule "orRight" (formula "111"))
                                                                (builtin "One Step Simplification" (formula "112"))
                                                                (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "105")))
                                                               (rule "false_right" (formula "111"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "25")))
                                                               (rule "closeTrue" (formula "111"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "orRight" (formula "111"))
                                                             (builtin "One Step Simplification" (formula "112"))
                                                             (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "107")))
                                                            (rule "false_right" (formula "111"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "23")))
                                                            (rule "closeTrue" (formula "111"))
                                                         )
                                                      )
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "111"))
                                                         (rule "expand_inInt" (formula "111"))
                                                         (rule "replace_int_MIN" (formula "111") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "111") (term "1,0"))
                                                         (rule "polySimp_homoEq" (formula "63"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "65") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "65") (term "0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "74"))
                                                         (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "74") (term "0,0"))
                                                         (rule "add_literals" (formula "74") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "74") (term "0,0"))
                                                         (rule "add_zero_left" (formula "74") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "56"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "56") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "81") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "81") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "81") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "81") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "81") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "81") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "inEqSimp_homoInEq0" (formula "75"))
                                                         (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "75") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "75") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "41"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "47") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,1,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "111") (term "1"))
                                                         (rule "mul_literals" (formula "111") (term "1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "111") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "111") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "111") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "111") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "111") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "111") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "111") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "81") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "81") (term "0,0,0"))
                                                         (rule "add_literals" (formula "81") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "81") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "81") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "81"))
                                                         (rule "true_left" (formula "81"))
                                                         (rule "apply_eq_boolean" (formula "67") (term "1") (ifseqformula "81"))
                                                          (builtin "One Step Simplification" (formula "67"))
                                                         (rule "notLeft" (formula "67"))
                                                         (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "80"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "64"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                         (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "64"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                         (rule "add_literals" (formula "57") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "57") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                         (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "75") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "110") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "110") (term "1,1"))
                                                         (rule "mul_literals" (formula "110") (term "0,1,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "110") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "110") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "110") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "57") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "36"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "39"))
                                                         (rule "leq_literals" (formula "38") (term "0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "41"))
                                                         (rule "leq_literals" (formula "16") (term "0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "72"))
                                                         (rule "times_zero_1" (formula "71") (term "0,0"))
                                                         (rule "add_zero_left" (formula "71") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                                                         (rule "polySimp_mulLiterals" (formula "71") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "71") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "36"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "38"))
                                                         (rule "leq_literals" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "39"))
                                                         (rule "mul_literals" (formula "18") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                         (rule "add_literals" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "34"))
                                                         (rule "leq_literals" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "37"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "34"))
                                                         (rule "leq_literals" (formula "17") (term "0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "45") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "nnf_imp2or" (formula "6") (term "0"))
                                                         (rule "nnf_imp2or" (formula "45") (term "0"))
                                                         (rule "nnf_imp2or" (formula "5") (term "0"))
                                                         (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,0"))
                                                         (rule "Definition_axiom_for_remainingWriteCountOfBucket_in_de_wiesler_BucketPointers" (formula "60") (term "1,1"))
                                                         (rule "translateJavaSubInt" (formula "60") (term "1,1"))
                                                         (rule "translateJavaAddInt" (formula "60") (term "2,0,1,1"))
                                                         (rule "polySimp_elimSub" (formula "60") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "60") (term "2,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "60") (term "1"))
                                                         (rule "applyEq" (formula "60") (term "0,1,1") (ifseqformula "59"))
                                                         (rule "polySimp_mulComm0" (formula "60") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "60") (term "1,1"))
                                                         (rule "mul_literals" (formula "60") (term "0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "60") (term "1"))
                                                         (rule "polySimp_addAssoc" (formula "60") (term "0,1"))
                                                         (rule "add_literals" (formula "60") (term "0,0,1"))
                                                         (rule "add_zero_left" (formula "60") (term "0,1"))
                                                         (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "70") (term "0"))
                                                          (builtin "One Step Simplification" (formula "70"))
                                                         (rule "translateJavaMod" (formula "70") (term "0"))
                                                         (rule "jmod_axiom" (formula "70") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "70"))
                                                         (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                         (rule "newSym_eq" (formula "70") (inst "l=l_0") (inst "newSymDef=mul(int::final(result_1,
               de.wiesler.Increment::$position),
    Z(0(#)))"))
                                                         (rule "times_zero_1" (formula "70") (term "1,1"))
                                                         (rule "add_zero_right" (formula "70") (term "1"))
                                                         (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "70"))
                                                         (rule "eqSymm" (formula "71"))
                                                         (rule "applyEq" (formula "78") (term "1,6,0") (ifseqformula "71"))
                                                         (rule "polySimp_addComm0" (formula "78") (term "6,0"))
                                                         (rule "applyEq" (formula "77") (term "1,6,0") (ifseqformula "71"))
                                                         (rule "polySimp_addComm0" (formula "77") (term "6,0"))
                                                         (rule "applyEq" (formula "108") (term "0,0") (ifseqformula "71"))
                                                         (rule "inEqSimp_homoInEq0" (formula "108") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "108") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "108") (term "0,0"))
                                                         (rule "applyEq" (formula "73") (term "0") (ifseqformula "71"))
                                                         (rule "inEqSimp_homoInEq0" (formula "73"))
                                                         (rule "polySimp_mulLiterals" (formula "73") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "73") (term "0,0"))
                                                         (rule "applyEq" (formula "78") (term "1,7,0") (ifseqformula "71"))
                                                         (rule "polySimp_addComm1" (formula "78") (term "7,0"))
                                                         (rule "applyEq" (formula "108") (term "0,1") (ifseqformula "71"))
                                                         (rule "inEqSimp_homoInEq1" (formula "108") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "108") (term "1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "108") (term "0,1"))
                                                         (rule "applyEq" (formula "77") (term "1,7,0") (ifseqformula "71"))
                                                         (rule "polySimp_addComm1" (formula "77") (term "7,0"))
                                                         (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "71"))
                                                         (rule "applyEq" (formula "72") (term "0") (ifseqformula "71"))
                                                         (rule "applyEq" (formula "64") (term "1") (ifseqformula "71"))
                                                         (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "71"))
                                                         (rule "applyEq" (formula "60") (term "0,0,1") (ifseqformula "71"))
                                                         (rule "polySimp_mulLiterals" (formula "60") (term "0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "108") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "108") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "108") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                                         (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "73") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "73") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "73") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "73") (term "0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "108") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "108") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "108") (term "0,1"))
                                                         (rule "elimGcdGeq_antec" (formula "72") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "add_zero_right" (formula "72") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "72") (term "1,0,1,0"))
                                                         (rule "leq_literals" (formula "72") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "72"))
                                                         (rule "times_zero_1" (formula "72") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "72") (term "0,0"))
                                                         (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "72") (term "0,0"))
                                                         (rule "leq_literals" (formula "72") (term "0"))
                                                          (builtin "One Step Simplification" (formula "72"))
                                                         (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "37"))
                                                         (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "73") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "73") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "73") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "73") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                                         (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "73") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "109") (term "0") (ifseqformula "73"))
                                                         (rule "inEqSimp_homoInEq0" (formula "109") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "109") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "109") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "109") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "109") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "109") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "109") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "109") (term "0,0,0"))
                                                         (rule "add_literals" (formula "109") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "109") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "109") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "109") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "109"))
                                                         (rule "inEqSimp_geqRight" (formula "109"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_subsumption0" (formula "74") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "74") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "74") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "74") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                                         (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                         (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "74") (term "0,0"))
                                                         (rule "qeq_literals" (formula "74") (term "0"))
                                                          (builtin "One Step Simplification" (formula "74"))
                                                         (rule "true_left" (formula "74"))
                                                         (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "40"))
                                                         (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "74") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "74") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "74") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "74") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "74") (term "0"))
                                                         (rule "add_literals" (formula "74") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "74") (term "1,0"))
                                                         (rule "add_zero_right" (formula "74") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "74") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                         (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "74") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "74") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "74"))
                                                         (rule "mul_literals" (formula "74") (term "1,0,0,0,0,0"))
                                                         (rule "neg_literal" (formula "74") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "74") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                         (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "74") (term "0,0"))
                                                         (rule "qeq_literals" (formula "74") (term "0"))
                                                          (builtin "One Step Simplification" (formula "74"))
                                                         (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "33") (term "0,0"))
                                                         (rule "add_zero_left" (formula "33") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                         (rule "inEqSimp_contradInEq5" (formula "33") (ifseqformula "74"))
                                                         (rule "times_zero_1" (formula "33") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "33") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "qeq_literals" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "closeFalse" (formula "33"))
                                                      )
                                                   )
                                                   (branch
                                                       (builtin "One Step Simplification" (formula "111"))
                                                      (rule "expand_inInt" (formula "111"))
                                                      (rule "replace_int_MIN" (formula "111") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "111") (term "1,0"))
                                                      (rule "replace_known_left" (formula "111") (term "0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "111"))
                                                      (rule "polySimp_homoEq" (formula "63"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "111"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "66") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "66") (term "0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "76"))
                                                      (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "76") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "76") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "75"))
                                                      (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "75") (term "0,0"))
                                                      (rule "add_literals" (formula "75") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "75") (term "0,0"))
                                                      (rule "add_zero_left" (formula "75") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "82") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "82") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "82") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "82") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "82"))
                                                      (rule "inEqSimp_homoInEq0" (formula "48") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "57"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "82") (term "0,0,0"))
                                                      (rule "add_literals" (formula "82") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "82") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "82") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "82"))
                                                      (rule "true_left" (formula "82"))
                                                      (rule "apply_eq_boolean" (formula "68") (term "1") (ifseqformula "82"))
                                                       (builtin "One Step Simplification" (formula "68"))
                                                      (rule "notLeft" (formula "68"))
                                                      (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "81"))
                                                       (builtin "One Step Simplification" (formula "66"))
                                                      (rule "inEqSimp_geqRight" (formula "81"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "65"))
                                                      (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "65") (term "0"))
                                                      (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "65"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                      (rule "add_literals" (formula "58") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "58") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                      (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "76") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "58") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                                                      (rule "leq_literals" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "closeFalse" (formula "22"))
                                                   )
                                                )
                                             )
                                             (branch "Usage"
                                                 (builtin "One Step Simplification" (formula "112"))
                                                 (builtin "One Step Simplification" (formula "82"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "0,1,1,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "82"))
                                                (rule "expand_inInt" (formula "82") (term "0,1,0"))
                                                (rule "expand_inInt" (formula "82") (term "0,0,0,1,1"))
                                                (rule "expand_inInt" (formula "82") (term "1,0,0,0,1"))
                                                (rule "replace_int_MIN" (formula "82") (term "0,1,0,1,0"))
                                                (rule "replace_int_MAX" (formula "82") (term "1,0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "82") (term "0,1,0,0,0,1,1"))
                                                (rule "replace_int_MAX" (formula "82") (term "1,0,0,0,0,1,1"))
                                                (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0,1"))
                                                (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0,1"))
                                                (rule "andLeft" (formula "82"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "82"))
                                                (rule "andLeft" (formula "85"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "82"))
                                                (rule "andLeft" (formula "88"))
                                                (rule "andLeft" (formula "84"))
                                                (rule "andLeft" (formula "82"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "translateJavaAddInt" (formula "122") (term "2,0,1,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "89") (term "0,0,1,2,0,1,0,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "89") (term "1,1,2,0,1,0,0,1,0"))
                                                (rule "sub_literals" (formula "89") (term "1,1,2,0,1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "90") (term "2,0,1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "90") (term "1,1,0"))
                                                (rule "translateJavaAddInt" (formula "92") (term "0,0,1,2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "91") (term "2,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "92") (term "1,1,2,0,1,0"))
                                                (rule "sub_literals" (formula "92") (term "1,1,2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "83") (term "2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "84") (term "2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "122") (term "0,0,1,2,0,1,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "122") (term "1,1,2,0,1,0,1,0"))
                                                (rule "sub_literals" (formula "122") (term "1,1,2,0,1,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "89") (term "2,0,1,0,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "90") (term "1,1,2,0,1,0,0,1,0"))
                                                (rule "sub_literals" (formula "90") (term "1,1,2,0,1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "90") (term "0,0,1,2,0,1,0,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "91") (term "0,0,1,2,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "91") (term "1,1,2,0,1,0"))
                                                (rule "sub_literals" (formula "91") (term "1,1,2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "92") (term "2,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "83") (term "1,1,2,0,1,0"))
                                                (rule "sub_literals" (formula "83") (term "1,1,2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "83") (term "0,0,1,2,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "84") (term "1,1,2,0,1,0"))
                                                (rule "sub_literals" (formula "84") (term "1,1,2,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "84") (term "0,0,1,2,0,1,0"))
                                                (rule "replace_known_left" (formula "88") (term "0") (ifseqformula "82"))
                                                 (builtin "One Step Simplification" (formula "88"))
                                                (rule "true_left" (formula "88"))
                                                (rule "polySimp_addComm0" (formula "89") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "121") (term "0,0,1,2,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "88") (term "0,0,1,2,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "89") (term "0,0,1,2,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "90") (term "0,0,1,2,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "91") (term "0,0,1,2,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "83") (term "0,0,1,2,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "84") (term "0,0,1,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "121") (term "0,0,0,1,2,0,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "88") (term "0,0,0,1,2,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "89") (term "0,0,0,1,2,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "90") (term "0,0,0,1,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "91") (term "0,0,0,1,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "83") (term "0,0,0,1,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "84") (term "0,0,0,1,2,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "88") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "89") (term "1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "87"))
                                                (rule "applyEq" (formula "88") (term "1,1,0,0,0") (ifseqformula "31"))
                                                (rule "apply_eq_boolean" (formula "67") (term "1") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "67"))
                                                (rule "notLeft" (formula "67"))
                                                (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "91"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                (rule "commuteUnion" (formula "121") (term "1,0,1,0"))
                                                (rule "commuteUnion" (formula "87") (term "1,0,0,1,0"))
                                                (rule "commuteUnion" (formula "88") (term "1,0,0,1,0"))
                                                (rule "commuteUnion" (formula "89") (term "1,0"))
                                                (rule "commuteUnion" (formula "90") (term "1,0"))
                                                (rule "commuteUnion" (formula "82") (term "1,0"))
                                                (rule "commuteUnion" (formula "83") (term "1,0"))
                                                 (builtin "Use Dependency Contract" (formula "11") (ifInst ""  (formula "121") (term "1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                (rule "wellFormedAnon" (formula "91") (term "1,1,0,0,0"))
                                                (rule "replace_known_left" (formula "91") (term "0,1") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "120")) (ifInst ""  (formula "21")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                                (rule "true_left" (formula "91"))
                                                (rule "commute_and" (formula "88") (term "0,0"))
                                                 (builtin "Use Dependency Contract" (formula "10") (ifInst ""  (formula "121") (term "0,0,1,0,0,1")) (contract "de.wiesler.BucketPointers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                (rule "wellFormedAnon" (formula "91") (term "1,1,0,0,0"))
                                                (rule "replace_known_left" (formula "91") (term "1,0,0,0,0") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "119")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "27")) (ifInst ""  (formula "10")) (ifInst ""  (formula "27")))
                                                (rule "true_left" (formula "91"))
                                                (rule "commute_and" (formula "87") (term "1,0,0"))
                                                (rule "commute_and" (formula "87") (term "0,0,0"))
                                                (rule "shift_paren_and" (formula "87") (term "0,0"))
                                                (rule "commute_and_2" (formula "87") (term "0,0,0"))
                                                (rule "ifUnfold" (formula "121") (term "1") (inst "#boolv=x_2"))
                                                (rule "variableDeclaration" (formula "121") (term "1") (newnames "x_7"))
                                                (rule "inequality_comparison_simple" (formula "121") (term "1"))
                                                 (builtin "One Step Simplification" (formula "121"))
                                                (rule "replace_known_left" (formula "121") (term "0,0,1,0") (ifseqformula "81"))
                                                 (builtin "One Step Simplification" (formula "121"))
                                                 (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "80") (term "0,1")) (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::elementsToReadOfBucketBlockClassified(de.wiesler.Classifier,[I,int,int,int)].JML accessible clause.0"))
                                                (rule "wellFormedAnon" (formula "91") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "expand_inInt" (formula "91") (term "1,0,0,0,0"))
                                                (rule "expand_inInt" (formula "91") (term "1,0,0,0"))
                                                (rule "expand_inInt" (formula "91") (term "1,0,0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "91") (term "1,0,1,0,0,0,0"))
                                                (rule "replace_int_MIN" (formula "91") (term "0,1,1,0,0,0,0"))
                                                (rule "replace_int_MIN" (formula "91") (term "0,1,1,0,0,0"))
                                                (rule "replace_int_MAX" (formula "91") (term "1,0,1,0,0,0"))
                                                (rule "replace_int_MIN" (formula "91") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "91") (term "1,0,1,0,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "91") (term "2,0,0,0,1,1,0"))
                                                (rule "translateJavaMulInt" (formula "91") (term "0,2,1,0,0,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "91") (term "1,0,0,0,1,1,0"))
                                                (rule "translateJavaMulInt" (formula "91") (term "1,1,0,0,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "91") (term "0,2,0,0,0,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "91") (term "2,1,0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "91") (term "1,1,0,0,0,0,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "119")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "120")) (ifInst ""  (formula "21")) (ifInst ""  (formula "121")) (ifInst ""  (formula "17")) (ifInst ""  (formula "19")) (ifInst ""  (formula "14")) (ifInst ""  (formula "43")) (ifInst ""  (formula "28")) (ifInst ""  (formula "27")) (ifInst ""  (formula "120")) (ifInst ""  (formula "121")))
                                                (rule "polySimp_elimSub" (formula "91") (term "2,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "91") (term "1,2,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "91") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "91") (term "0,2,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "91") (term "2,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "91") (term "2,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "91") (term "0,2,0,0,0,1,1,0"))
                                                (rule "disjointDefinition" (formula "91") (term "1,0"))
                                                (rule "disjointWithSingleton2" (formula "91") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "91") (term "1,0,0,0") (ifseqformula "15"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "91") (term "0,0,0,0") (ifseqformula "18"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "91") (term "0,0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0"))
                                                (rule "replace_known_left" (formula "91") (term "0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "applyEq" (formula "91") (term "0,1") (ifseqformula "6"))
                                                (rule "eqSymm" (formula "91") (term "1"))
                                                (rule "elementOfUnion" (formula "91") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "eqSymm" (formula "91") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "91") (term "1,0,0") (ifseqformula "114"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "elementOfUnion" (formula "91") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "eqSymm" (formula "91") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "91") (term "1,0,0") (ifseqformula "113"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "elementOfUnion" (formula "91") (term "0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "91") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "91") (term "0,0,0,0,0") (ifseqformula "98"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "elementOfArrayRangeConcrete" (formula "91") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "80")))
                                                (rule "true_left" (formula "91"))
                                                (rule "ifSplit" (formula "121"))
                                                (branch "if x_7 true"
                                                    (builtin "One Step Simplification" (formula "122"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_7 false"
                                                    (builtin "One Step Simplification" (formula "122"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "blockEmpty" (formula "121") (term "1"))
                                                    (builtin "Block Contract (Internal)" (formula "121") (newnames "result_5,exc_5,heap_Before_BLOCK_4,savedHeap_Before_BLOCK_4,o,f"))
                                                   (branch "Validity"
                                                       (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "26")))
                                                       (builtin "One Step Simplification" (formula "122"))
                                                      (rule "eqSymm" (formula "122") (term "0,0,1,0,1"))
                                                      (rule "variableDeclarationAssign" (formula "122") (term "1"))
                                                      (rule "variableDeclaration" (formula "122") (term "1") (newnames "exc_5_1"))
                                                      (rule "assignment" (formula "122") (term "1"))
                                                       (builtin "One Step Simplification" (formula "122"))
                                                      (rule "emptyStatement" (formula "122") (term "1"))
                                                       (builtin "One Step Simplification" (formula "122"))
                                                      (rule "emptyStatement" (formula "122") (term "1"))
                                                      (rule "tryEmpty" (formula "122") (term "1"))
                                                      (rule "blockEmptyLabel" (formula "122") (term "1"))
                                                      (rule "blockEmpty" (formula "122") (term "1"))
                                                      (rule "methodCallEmpty" (formula "122") (term "1"))
                                                      (rule "emptyModality" (formula "122") (term "1"))
                                                      (rule "andRight" (formula "122"))
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "122"))
                                                         (rule "closeTrue" (formula "122"))
                                                      )
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "122"))
                                                         (rule "closeTrue" (formula "122"))
                                                      )
                                                   )
                                                   (branch "Precondition"
                                                      (rule "andRight" (formula "121"))
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "26")))
                                                         (rule "closeTrue" (formula "121"))
                                                      )
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "121"))
                                                         (rule "wellFormedAnon" (formula "121"))
                                                         (rule "wellFormedAnonEQ" (formula "121") (term "0") (ifseqformula "58"))
                                                         (rule "wellFormedAnon" (formula "121") (term "0,0"))
                                                         (rule "replace_known_left" (formula "121") (term "1") (ifseqformula "84"))
                                                          (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")))
                                                         (rule "closeTrue" (formula "121"))
                                                      )
                                                   )
                                                   (branch "Usage"
                                                       (builtin "One Step Simplification" (formula "91"))
                                                       (builtin "One Step Simplification" (formula "122"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,1,1,0") (ifseqformula "58"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "expand_inInt" (formula "91") (term "0,1,0"))
                                                      (rule "replace_int_MIN" (formula "91") (term "0,1,0,1,0"))
                                                      (rule "replace_int_MAX" (formula "91") (term "1,0,0,1,0"))
                                                      (rule "andLeft" (formula "91"))
                                                      (rule "andLeft" (formula "91"))
                                                      (rule "andLeft" (formula "93"))
                                                      (rule "andLeft" (formula "92"))
                                                      (rule "andLeft" (formula "92"))
                                                      (rule "replace_known_left" (formula "94") (term "0") (ifseqformula "91"))
                                                       (builtin "One Step Simplification" (formula "94"))
                                                      (rule "true_left" (formula "94"))
                                                      (rule "inEqSimp_commuteLeq" (formula "93"))
                                                      (rule "applyEq" (formula "95") (term "1") (ifseqformula "61"))
                                                      (rule "elim_double_block_2" (formula "126") (term "1"))
                                                      (rule "ifUnfold" (formula "126") (term "1") (inst "#boolv=x_2"))
                                                      (rule "variableDeclaration" (formula "126") (term "1") (newnames "x_8"))
                                                      (rule "inequality_comparison_simple" (formula "126") (term "1"))
                                                       (builtin "One Step Simplification" (formula "126"))
                                                      (rule "replace_known_left" (formula "126") (term "0,0,1,0") (ifseqformula "91"))
                                                       (builtin "One Step Simplification" (formula "126"))
                                                      (rule "ifSplit" (formula "126"))
                                                      (branch "if x_8 true"
                                                          (builtin "One Step Simplification" (formula "127"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "if x_8 false"
                                                          (builtin "One Step Simplification" (formula "127"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "blockEmpty" (formula "126") (term "1"))
                                                          (builtin "Block Contract (Internal)" (formula "126") (newnames "result_6,exc_6,heap_Before_BLOCK_5,savedHeap_Before_BLOCK_5,o,f"))
                                                         (branch "Validity"
                                                             (builtin "One Step Simplification" (formula "127"))
                                                             (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "26")))
                                                            (rule "eqSymm" (formula "127") (term "0,0,1,0,1"))
                                                            (rule "variableDeclarationAssign" (formula "127") (term "1"))
                                                            (rule "variableDeclaration" (formula "127") (term "1") (newnames "exc_6_1"))
                                                            (rule "assignment" (formula "127") (term "1"))
                                                             (builtin "One Step Simplification" (formula "127"))
                                                            (rule "emptyStatement" (formula "127") (term "1"))
                                                             (builtin "One Step Simplification" (formula "127"))
                                                            (rule "emptyStatement" (formula "127") (term "1"))
                                                            (rule "tryEmpty" (formula "127") (term "1"))
                                                            (rule "blockEmptyLabel" (formula "127") (term "1"))
                                                            (rule "blockEmpty" (formula "127") (term "1"))
                                                            (rule "methodCallEmpty" (formula "127") (term "1"))
                                                            (rule "emptyModality" (formula "127") (term "1"))
                                                            (rule "andRight" (formula "127"))
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "127"))
                                                               (rule "closeTrue" (formula "127"))
                                                            )
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "127"))
                                                               (rule "closeTrue" (formula "127"))
                                                            )
                                                         )
                                                         (branch "Precondition"
                                                            (rule "andRight" (formula "126"))
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "26")))
                                                               (rule "closeTrue" (formula "126"))
                                                            )
                                                            (branch
                                                                (builtin "One Step Simplification" (formula "126"))
                                                               (rule "wellFormedAnon" (formula "126"))
                                                               (rule "wellFormedAnonEQ" (formula "126") (term "0") (ifseqformula "58"))
                                                               (rule "wellFormedAnon" (formula "126") (term "0,0"))
                                                               (rule "replace_known_left" (formula "126") (term "1") (ifseqformula "84"))
                                                                (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")))
                                                               (rule "closeTrue" (formula "126"))
                                                            )
                                                         )
                                                         (branch "Usage"
                                                             (builtin "One Step Simplification" (formula "127"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,1,1,1,0") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "96"))
                                                            (rule "expand_inInt" (formula "96") (term "1,0,0,1"))
                                                            (rule "expand_inInt" (formula "96") (term "0,1,0"))
                                                            (rule "replace_int_MAX" (formula "96") (term "1,0,1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "96") (term "0,1,1,0,0,1"))
                                                            (rule "replace_int_MIN" (formula "96") (term "0,1,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "96") (term "1,0,0,1,0"))
                                                            (rule "andLeft" (formula "96"))
                                                            (rule "andLeft" (formula "96"))
                                                            (rule "andLeft" (formula "97"))
                                                            (rule "andLeft" (formula "97"))
                                                            (rule "eqSymm" (formula "100") (term "1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "100") (term "0,1,1,0"))
                                                            (rule "replace_known_left" (formula "99") (term "0") (ifseqformula "96"))
                                                             (builtin "One Step Simplification" (formula "99"))
                                                            (rule "true_left" (formula "99"))
                                                            (rule "inEqSimp_commuteLeq" (formula "99") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "99") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "98"))
                                                            (rule "applyEq" (formula "99") (term "1,1,0,0,0") (ifseqformula "31"))
                                                            (rule "commute_and" (formula "99") (term "1,0,0"))
                                                            (rule "commute_and" (formula "99") (term "0,0,0"))
                                                            (rule "elim_double_block_2" (formula "130") (term "1"))
                                                            (rule "shift_paren_and" (formula "99") (term "0,0"))
                                                            (rule "commute_and_2" (formula "99") (term "0,0,0"))
                                                            (rule "ifUnfold" (formula "130") (term "1") (inst "#boolv=x_2"))
                                                            (rule "variableDeclaration" (formula "130") (term "1") (newnames "x_9"))
                                                            (rule "inequality_comparison_simple" (formula "130") (term "1"))
                                                             (builtin "One Step Simplification" (formula "130"))
                                                            (rule "replace_known_left" (formula "130") (term "0,0,1,0") (ifseqformula "96"))
                                                             (builtin "One Step Simplification" (formula "130"))
                                                            (rule "ifSplit" (formula "130"))
                                                            (branch "if x_9 true"
                                                                (builtin "One Step Simplification" (formula "131"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "if x_9 false"
                                                                (builtin "One Step Simplification" (formula "131"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "blockEmpty" (formula "130") (term "1"))
                                                                (builtin "Block Contract (Internal)" (formula "130") (newnames "result_7,exc_7,heap_Before_BLOCK_6,savedHeap_Before_BLOCK_6,o,f"))
                                                               (branch "Validity"
                                                                   (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "26")))
                                                                   (builtin "One Step Simplification" (formula "131"))
                                                                  (rule "eqSymm" (formula "131") (term "0,0,1,0,1"))
                                                                  (rule "variableDeclarationAssign" (formula "131") (term "1"))
                                                                  (rule "variableDeclaration" (formula "131") (term "1") (newnames "exc_7_1"))
                                                                  (rule "assignment" (formula "131") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "131"))
                                                                  (rule "emptyStatement" (formula "131") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "131"))
                                                                  (rule "emptyStatement" (formula "131") (term "1"))
                                                                  (rule "tryEmpty" (formula "131") (term "1"))
                                                                  (rule "blockEmptyLabel" (formula "131") (term "1"))
                                                                  (rule "blockEmpty" (formula "131") (term "1"))
                                                                  (rule "methodCallEmpty" (formula "131") (term "1"))
                                                                  (rule "emptyModality" (formula "131") (term "1"))
                                                                  (rule "andRight" (formula "131"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "131"))
                                                                     (rule "closeTrue" (formula "131"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "131"))
                                                                     (rule "closeTrue" (formula "131"))
                                                                  )
                                                               )
                                                               (branch "Precondition"
                                                                  (rule "andRight" (formula "130"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "26")))
                                                                     (rule "closeTrue" (formula "130"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "130"))
                                                                     (rule "wellFormedAnon" (formula "130"))
                                                                     (rule "wellFormedAnonEQ" (formula "130") (term "0") (ifseqformula "58"))
                                                                     (rule "wellFormedAnon" (formula "130") (term "0,0"))
                                                                     (rule "replace_known_left" (formula "130") (term "1") (ifseqformula "84"))
                                                                      (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "57")))
                                                                     (rule "closeTrue" (formula "130"))
                                                                  )
                                                               )
                                                               (branch "Usage"
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                   (builtin "One Step Simplification" (formula "131"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,1,1,0") (ifseqformula "58"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "expand_inInt" (formula "100") (term "0,0,1"))
                                                                  (rule "expand_inInt" (formula "100") (term "0,1,0"))
                                                                  (rule "replace_int_MAX" (formula "100") (term "1,0,0,0,1"))
                                                                  (rule "replace_int_MIN" (formula "100") (term "0,1,0,0,1"))
                                                                  (rule "replace_int_MIN" (formula "100") (term "0,1,0,1,0"))
                                                                  (rule "replace_int_MAX" (formula "100") (term "1,0,0,1,0"))
                                                                  (rule "andLeft" (formula "100"))
                                                                  (rule "andLeft" (formula "100"))
                                                                  (rule "andLeft" (formula "101"))
                                                                  (rule "andLeft" (formula "101"))
                                                                  (rule "replace_known_left" (formula "103") (term "0") (ifseqformula "100"))
                                                                   (builtin "One Step Simplification" (formula "103"))
                                                                  (rule "true_left" (formula "103"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "103") (term "1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "102"))
                                                                  (rule "commute_and" (formula "103") (term "0,0"))
                                                                  (rule "elim_double_block_2" (formula "134") (term "1"))
                                                                  (rule "ifUnfold" (formula "134") (term "1") (inst "#boolv=x_2"))
                                                                  (rule "variableDeclaration" (formula "134") (term "1") (newnames "x_10"))
                                                                  (rule "inequality_comparison_simple" (formula "134") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "134"))
                                                                  (rule "replace_known_left" (formula "134") (term "0,0,1,0") (ifseqformula "100"))
                                                                   (builtin "One Step Simplification" (formula "134"))
                                                                  (rule "ifSplit" (formula "134"))
                                                                  (branch "if x_10 true"
                                                                      (builtin "One Step Simplification" (formula "135"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "if x_10 false"
                                                                      (builtin "One Step Simplification" (formula "135"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "blockEmpty" (formula "134") (term "1"))
                                                                     (rule "blockReturn" (formula "134") (term "1"))
                                                                     (rule "lsReturnNonVoid" (formula "134") (term "1"))
                                                                     (rule "assignment" (formula "134") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "134"))
                                                                     (rule "methodCallReturn" (formula "134") (term "1"))
                                                                     (rule "assignment" (formula "134") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "134"))
                                                                     (rule "methodCallEmpty" (formula "134") (term "1"))
                                                                     (rule "tryEmpty" (formula "134") (term "1"))
                                                                     (rule "emptyModality" (formula "134") (term "1"))
                                                                     (rule "andRight" (formula "134"))
                                                                     (branch
                                                                        (rule "impRight" (formula "134"))
                                                                        (rule "andRight" (formula "135"))
                                                                        (branch
                                                                           (rule "andRight" (formula "135"))
                                                                           (branch
                                                                               (builtin "One Step Simplification" (formula "135") (ifInst ""  (formula "84")))
                                                                              (rule "closeTrue" (formula "135"))
                                                                           )
                                                                           (branch
                                                                               (builtin "One Step Simplification" (formula "135") (ifInst ""  (formula "83")))
                                                                              (rule "closeTrue" (formula "135"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                            (builtin "One Step Simplification" (formula "135"))
                                                                           (rule "closeTrue" (formula "135"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "impRight" (formula "134"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Null Reference (increment = null)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Null Reference (increment = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Exceptional Post (increment_write)"
                      (builtin "One Step Simplification" (formula "58"))
                      (builtin "One Step Simplification" (formula "86"))
                     (rule "andLeft" (formula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "1,0") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "andLeft" (formula "59"))
                     (rule "andLeft" (formula "59"))
                     (rule "andLeft" (formula "61"))
                     (rule "notLeft" (formula "59"))
                     (rule "close" (formula "62") (ifseqformula "61"))
                  )
                  (branch "Pre (increment_write)"
                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "10")) (ifInst ""  (formula "22")))
                     (rule "wellFormedAnon" (formula "84") (term "0"))
                     (rule "expand_inInt" (formula "84") (term "1"))
                     (rule "replace_int_MAX" (formula "84") (term "1,0,1"))
                     (rule "replace_int_MIN" (formula "84") (term "0,1,1"))
                     (rule "replace_known_left" (formula "84") (term "1,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
                     (rule "inEqSimp_leqRight" (formula "84"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "44"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "42"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "48") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "57"))
                     (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                     (rule "mul_literals" (formula "57") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "57") (term "0"))
                     (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                     (rule "polySimp_elimOne" (formula "44") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                     (rule "polySimp_elimOne" (formula "42") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                     (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                     (rule "polySimp_elimOne" (formula "57") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "36"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "42"))
                     (rule "leq_literals" (formula "16") (term "0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "38"))
                     (rule "leq_literals" (formula "37") (term "0"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "1"))
                     (rule "leq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "39"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Null reference (_bucket_pointers = null)"
                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "81")))
                     (rule "closeTrue" (formula "84"))
                  )
               )
            )
         )
         (branch "if true false"
             (builtin "One Step Simplification" (formula "78"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
)
}
