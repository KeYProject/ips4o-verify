\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Dec 30 08:11:47 CET 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , finalFields-finalFields\\:onHeap
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../java-overflow";

\proofObligation "#Proof Obligation Settings
#Sat Dec 30 08:11:47 CET 2023
contract=de.wiesler.Tree[de.wiesler.Tree\\:\\:Tree([I,[I,int)].JML normal_behavior operation contract.0
name=de.wiesler.Tree[de.wiesler.Tree\\:\\:Tree([I,[I,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "mattias" ) (keyVersion "e1a85b31e7"))

(autoModeTime "122366")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "12"))
(rule "translateJavaSubInt" (formula "11") (term "3,0"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "14"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "15"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "11") (term "3,0"))
(rule "mul_literals" (formula "11") (term "1,3,0"))
(rule "polySimp_addComm0" (formula "11") (term "3,0"))
(rule "disjointDefinition" (formula "13"))
 (builtin "One Step Simplification" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "eqSymm" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "assignment" (formula "16") (term "1"))
 (builtin "One Step Simplification" (formula "16"))
(rule "variableDeclarationAssign" (formula "16") (term "1"))
(rule "variableDeclaration" (formula "16") (term "1") (newnames "self_207"))
(rule "arrayLengthNotNegative" (formula "10") (term "0"))
(rule "arrayLengthIsAShort" (formula "11") (term "0"))
(rule "expand_inShort" (formula "11"))
(rule "replace_short_MAX" (formula "11") (term "1,0"))
(rule "replace_short_MIN" (formula "11") (term "0,1"))
(rule "andLeft" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "arrayLengthIsAShort" (formula "15") (term "0"))
(rule "expand_inShort" (formula "15"))
(rule "replace_short_MIN" (formula "15") (term "0,1"))
(rule "replace_short_MAX" (formula "15") (term "1,0"))
(rule "andLeft" (formula "15"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "arrayLengthNotNegative" (formula "17") (term "0"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "22") (term "1") (inst "#v0=t"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "t"))
(rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "22"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "22") (term "1") (inst "#v0=t_1"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "t_1"))
(rule "allocateInstance" (formula "22"))
 (builtin "One Step Simplification" (formula "23"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallWithinClass" (formula "25") (term "1"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallSuper" (formula "25") (term "1"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallEmpty" (formula "25") (term "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallEmpty" (formula "25") (term "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "25") (term "1"))
(rule "methodCallReturn" (formula "25") (term "1"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallEmpty" (formula "25") (term "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "var"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "var_1"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "var_2"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallSuper" (formula "25") (term "1"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallEmpty" (formula "25") (term "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "eval_order_access4_this" (formula "25") (term "1") (inst "#v1=x"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "x"))
(rule "assignmentShiftLeftInt" (formula "25") (term "1"))
(branch "Overflow check"
    (builtin "One Step Simplification" (formula "25"))
   (rule "powPositive" (formula "25") (term "1,0") (userinteraction))
   (rule "cut" (inst "cutFormula=leq(pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))),
    pow(Z(2(#)), Z(8(#))))<<origin(\"User_Interaction @ node 4788 (cut)\",\"[]\")>>") (userinteraction))
   (branch "CUT: pow(2, log_buckets % 32) <= pow(2, 8) TRUE"
      (rule "greater_literals" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "pow_literals" (formula "1") (term "1"))
      (rule "expand_inInt" (formula "27"))
      (rule "replace_int_MAX" (formula "27") (term "1,0"))
      (rule "replace_int_MIN" (formula "27") (term "0,1"))
      (rule "translateJavaShiftLeftInt" (formula "21") (term "1"))
      (rule "translateJavaShiftLeftInt" (formula "17") (term "1,3,0"))
      (rule "translateJavaShiftLeftInt" (formula "16") (term "1"))
      (rule "translateJavaShiftLeftInt" (formula "12") (term "0"))
      (rule "polySimp_elimOneLeft0" (formula "27") (term "0,0"))
      (rule "polySimp_elimOneLeft0" (formula "27") (term "1,1"))
      (rule "inEqSimp_commuteLeq" (formula "27") (term "1"))
      (rule "mod_axiom" (formula "1") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
      (rule "mod_axiom" (formula "2") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
      (rule "mod_axiom" (formula "2") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1"))
      (rule "mod_axiom" (formula "27") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
      (rule "mod_axiom" (formula "27") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1"))
      (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
      (rule "leq_literals" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "11"))
      (rule "leq_literals" (formula "7") (term "0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
      (rule "leq_literals" (formula "14") (term "0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
      (rule "leq_literals" (formula "7") (term "0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "inEqSimp_subsumption0" (formula "23") (term "0") (ifseqformula "1"))
      (rule "leq_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "inEqSimp_geqRight" (formula "23"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
      (rule "leq_literals" (formula "2") (term "0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "inEqSimp_contradInEq0" (formula "2") (term "1") (ifseqformula "1"))
      (rule "qeq_literals" (formula "2") (term "0,1"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "notLeft" (formula "2"))
      (rule "inEqSimp_leqRight" (formula "17"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "javaShiftLeftIntDef" (formula "17") (term "1"))
      (rule "mod_axiom" (formula "17") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1"))
      (rule "javaShiftLeftIntDef" (formula "14") (term "1,3,0"))
      (rule "mod_axiom" (formula "14") (term "1,0,1,3,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,3,0"))
      (rule "javaShiftLeftIntDef" (formula "13") (term "1"))
      (rule "mod_axiom" (formula "13") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1"))
      (rule "javaShiftLeftIntDef" (formula "10") (term "0"))
      (rule "mod_axiom" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "shiftLeftDef" (formula "17") (term "0,1"))
      (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1"))
      (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,1"))
      (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,1"))
      (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1"))
      (rule "inEqSimp_commuteGeq" (formula "17"))
      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
      (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "inEqSimp_commuteLeq" (formula "17"))
      (rule "shiftLeftDef" (formula "14") (term "0,1,3,0"))
      (rule "polySimp_elimNeg" (formula "14") (term "1,1,0,1,3,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,3,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,3,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,3,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,0,1,3,0"))
      (rule "shiftLeftPositiveShiftDef" (formula "14") (term "2,0,1,3,0"))
      (rule "polySimp_elimOneLeft0" (formula "14") (term "2,0,1,3,0"))
      (rule "shiftRightPositiveShiftDef" (formula "14") (term "1,0,1,3,0"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,3,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,3,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,3,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,3,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,3,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,3,0"))
      (rule "replace_known_left" (formula "14") (term "0,0,1,3,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "shiftLeftDef" (formula "13") (term "0,1"))
      (rule "polySimp_elimNeg" (formula "13") (term "1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,0,1"))
      (rule "shiftLeftPositiveShiftDef" (formula "13") (term "2,0,1"))
      (rule "polySimp_elimOneLeft0" (formula "13") (term "2,0,1"))
      (rule "shiftRightPositiveShiftDef" (formula "13") (term "1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
      (rule "inEqSimp_commuteGeq" (formula "13"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
      (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_commuteLeq" (formula "13"))
      (rule "shiftLeftDef" (formula "10") (term "0,0"))
      (rule "polySimp_elimNeg" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,0,0"))
      (rule "shiftLeftPositiveShiftDef" (formula "10") (term "2,0,0"))
      (rule "polySimp_elimOneLeft0" (formula "10") (term "2,0,0"))
      (rule "shiftRightPositiveShiftDef" (formula "10") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0"))
      (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
      (rule "polySimp_addComm0" (formula "17") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "17"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
      (rule "polySimp_elimOne" (formula "17") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
      (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
      (rule "polySimp_addComm0" (formula "13") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "expand_moduloInteger" (formula "18") (term "1"))
      (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1"))
      (rule "replace_int_MIN" (formula "18") (term "0,1"))
      (rule "replace_int_RANGE" (formula "18") (term "1,1,1"))
      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "15"))
      (rule "polySimp_rightDist" (formula "18") (term "0,0"))
      (rule "mul_literals" (formula "18") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "18"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
      (rule "polySimp_elimOne" (formula "18") (term "0"))
      (rule "expand_moduloInteger" (formula "14") (term "1,3,0"))
      (rule "replace_int_RANGE" (formula "14") (term "1,1,1,3,0"))
      (rule "replace_int_MIN" (formula "14") (term "0,1,3,0"))
      (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,3,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "3,0"))
      (rule "add_literals" (formula "14") (term "0,3,0"))
      (rule "expand_moduloInteger" (formula "13") (term "1"))
      (rule "replace_int_MIN" (formula "13") (term "0,1"))
      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1"))
      (rule "replace_int_RANGE" (formula "13") (term "1,1,1"))
      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
      (rule "polySimp_rightDist" (formula "13") (term "0,0"))
      (rule "mul_literals" (formula "13") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "expand_moduloInteger" (formula "10") (term "0"))
      (rule "replace_int_RANGE" (formula "10") (term "1,1,0"))
      (rule "replace_int_MIN" (formula "10") (term "0,0"))
      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
      (rule "mul_literals" (formula "10") (term "1"))
      (rule "expand_moduloInteger" (formula "17") (term "0"))
      (rule "replace_int_MIN" (formula "17") (term "0,0"))
      (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0"))
      (rule "replace_int_RANGE" (formula "17") (term "1,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "17"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "17"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
      (rule "polySimp_elimOne" (formula "17") (term "0"))
      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "14") (term "0") (inst "j=j") (inst "i=i"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "expand_inInt" (formula "14") (term "1,0,0"))
      (rule "expand_inInt" (formula "14") (term "1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
      (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0"))
      (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0"))
      (rule "nnf_imp2or" (formula "14") (term "0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0"))
      (rule "nnf_imp2or" (formula "14") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "14") (term "1,0,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "1,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
      (rule "nnf_notAnd" (formula "14") (term "1,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "1,0,1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0,1,0"))
      (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "1,1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1,0"))
      (rule "div_axiom" (formula "2") (term "0,1,1,0") (inst "quotient=quotient_0"))
      (rule "qeq_literals" (formula "2") (term "0,1,1"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "mul_literals" (formula "2") (term "1,1,1,1"))
      (rule "equal_literals" (formula "2") (term "0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "polySimp_addComm1" (formula "4") (term "1"))
      (rule "add_literals" (formula "4") (term "0,1"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "inEqSimp_homoInEq1" (formula "4"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0"))
      (rule "applyEq" (formula "16") (term "0,1,1,1,1,0,1,1") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "16") (term "1,1,1,0,1,1"))
      (rule "applyEq" (formula "5") (term "0,1,1,0") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "5") (term "1,0"))
      (rule "applyEq" (formula "17") (term "0,1,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "17") (term "1,1,1,0,1,1,1,0,0,0,1,0"))
      (rule "applyEq" (formula "17") (term "0,1,1,1,1,0,1,1,1,0,0,0") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "17") (term "1,1,1,0,1,1,1,0,0,0"))
      (rule "applyEq" (formula "20") (term "0,1,1,1,1,0,0") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "20") (term "1,1,1,0,0"))
      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "applyEq" (formula "21") (term "0,1,1,1,1,0,1,1") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "21") (term "1,1,1,0,1,1"))
      (rule "applyEq" (formula "13") (term "0,1,1,1,1,0,0") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1"))
      (rule "polySimp_rightDist" (formula "4") (term "1"))
      (rule "mul_literals" (formula "4") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
      (rule "andLeft" (formula "3"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
      (rule "mul_literals" (formula "3") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "polySimp_addComm0" (formula "3") (term "0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "1,1,0"))
      (rule "times_zero_1" (formula "3") (term "1,0"))
      (rule "add_zero_right" (formula "3") (term "0"))
      (rule "leq_literals" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
   (branch "CUT: pow(2, log_buckets % 32) <= pow(2, 8) FALSE"
      (rule "powMonoConcrete" (formula "21") (userinteraction))
      (rule "expand_inInt" (formula "27"))
      (rule "greater_literals" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "greater_literals" (formula "1") (term "1,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_int_MAX" (formula "27") (term "1,0"))
      (rule "replace_int_MIN" (formula "27") (term "0,1"))
      (rule "translateJavaShiftLeftInt" (formula "11") (term "0"))
      (rule "translateJavaShiftLeftInt" (formula "15") (term "1"))
      (rule "translateJavaShiftLeftInt" (formula "16") (term "1,3,0"))
      (rule "translateJavaShiftLeftInt" (formula "20") (term "1"))
      (rule "polySimp_elimOneLeft0" (formula "27") (term "0,0"))
      (rule "polySimp_elimOneLeft0" (formula "27") (term "1,1"))
      (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "27") (term "1"))
      (rule "mod_axiom" (formula "21") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
      (rule "mod_axiom" (formula "1") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
      (rule "mod_axiom" (formula "1") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
      (rule "mod_axiom" (formula "27") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
      (rule "mod_axiom" (formula "21") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
      (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
      (rule "mod_axiom" (formula "27") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1"))
      (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1"))
      (rule "mul_literals" (formula "21") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
      (rule "leq_literals" (formula "14") (term "0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
      (rule "leq_literals" (formula "17") (term "0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
      (rule "leq_literals" (formula "7") (term "0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "9"))
      (rule "leq_literals" (formula "6") (term "0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "javaShiftLeftIntDef" (formula "9") (term "0"))
      (rule "mod_axiom" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
      (rule "javaShiftLeftIntDef" (formula "12") (term "1"))
      (rule "mod_axiom" (formula "12") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1"))
      (rule "javaShiftLeftIntDef" (formula "13") (term "1,3,0"))
      (rule "mod_axiom" (formula "13") (term "1,0,1,3,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,3,0"))
      (rule "javaShiftLeftIntDef" (formula "16") (term "1"))
      (rule "mod_axiom" (formula "16") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1"))
      (rule "shiftLeftDef" (formula "9") (term "0,0"))
      (rule "polySimp_elimNeg" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,0,0"))
      (rule "shiftLeftPositiveShiftDef" (formula "9") (term "2,0,0"))
      (rule "polySimp_elimOneLeft0" (formula "9") (term "2,0,0"))
      (rule "shiftRightPositiveShiftDef" (formula "9") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
      (rule "shiftLeftDef" (formula "12") (term "0,1"))
      (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,1"))
      (rule "shiftLeftPositiveShiftDef" (formula "12") (term "2,0,1"))
      (rule "polySimp_elimOneLeft0" (formula "12") (term "2,0,1"))
      (rule "shiftRightPositiveShiftDef" (formula "12") (term "1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
      (rule "inEqSimp_commuteGeq" (formula "12"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
      (rule "shiftLeftDef" (formula "13") (term "0,1,3,0"))
      (rule "polySimp_elimNeg" (formula "13") (term "1,1,0,1,3,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,3,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,3,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,3,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,0,1,3,0"))
      (rule "shiftLeftPositiveShiftDef" (formula "13") (term "2,0,1,3,0"))
      (rule "polySimp_elimOneLeft0" (formula "13") (term "2,0,1,3,0"))
      (rule "shiftRightPositiveShiftDef" (formula "13") (term "1,0,1,3,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,3,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,3,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,3,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,3,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,3,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,3,0"))
      (rule "shiftLeftDef" (formula "16") (term "0,1"))
      (rule "polySimp_elimNeg" (formula "16") (term "1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,1"))
      (rule "shiftLeftPositiveShiftDef" (formula "16") (term "2,0,1"))
      (rule "polySimp_elimOneLeft0" (formula "16") (term "2,0,1"))
      (rule "shiftRightPositiveShiftDef" (formula "16") (term "1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,0,1"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1"))
      (rule "inEqSimp_commuteGeq" (formula "16"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "12"))
      (rule "mul_literals" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
      (rule "times_zero_1" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "expand_moduloInteger" (formula "9") (term "0"))
      (rule "replace_int_MIN" (formula "9") (term "0,0"))
      (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
      (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1"))
      (rule "expand_moduloInteger" (formula "12") (term "0"))
      (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
      (rule "replace_int_MIN" (formula "12") (term "0,0"))
      (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "12"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "polySimp_addComm0" (formula "12") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "12"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
      (rule "polySimp_elimOne" (formula "12") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "12"))
      (rule "mul_literals" (formula "9") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "expand_moduloInteger" (formula "13") (term "1,3,0"))
      (rule "replace_int_MIN" (formula "13") (term "0,1,3,0"))
      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,3,0"))
      (rule "replace_int_RANGE" (formula "13") (term "1,1,1,3,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
      (rule "add_literals" (formula "13") (term "0,3,0"))
      (rule "expand_moduloInteger" (formula "16") (term "0"))
      (rule "replace_int_MIN" (formula "16") (term "0,0"))
      (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
      (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "16"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "16"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0"))
      (rule "polySimp_elimOne" (formula "16") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
      (rule "mul_literals" (formula "9") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "commute_and" (formula "23"))
      (rule "commute_and" (formula "17"))
      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "13") (term "0") (inst "j=j") (inst "i=i"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "expand_inInt" (formula "13") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "13") (term "1,0,0"))
      (rule "replace_int_MAX" (formula "13") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "13") (term "1,0,1,0,0"))
      (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "13") (term "1,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "13") (term "1,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "13") (term "1,0,1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,1,1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "13") (term "1,1,1,0,0,1,0"))
      (rule "div_axiom" (formula "1") (term "0,1,1,0,1") (inst "quotient=quotient_0"))
      (rule "qeq_literals" (formula "1") (term "0,1,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "equal_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1,1,1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "polySimp_addComm1" (formula "3") (term "1"))
      (rule "add_literals" (formula "3") (term "0,1"))
      (rule "inEqSimp_commuteLeq" (formula "2"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "applyEq" (formula "19") (term "0,1,1,2,1,0,0") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "19") (term "1,2,1,0,0"))
      (rule "applyEq" (formula "15") (term "0,0,0,1,0,0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0"))
      (rule "applyEq" (formula "19") (term "0,0,0,1,0,0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
      (rule "applyEq" (formula "26") (term "0,1,1,0,1") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "26") (term "1,0,1"))
      (rule "applyEq" (formula "16") (term "0,1,1,2,1,0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,2,1,0,1,1,1,0,0,0,1,0"))
      (rule "applyEq" (formula "16") (term "0,1,1,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,1,1,1,0,1,1,1,0,0,0,1,0"))
      (rule "applyEq" (formula "12") (term "0,1,1,1,1,1,0,0") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
      (rule "applyEq" (formula "16") (term "0,0,0,1,0,1,1,1,0,0,0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0,1,1,1,0,0,0"))
      (rule "applyEq" (formula "4") (term "0,1,1,0,1") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "4") (term "1,0,1"))
      (rule "applyEq" (formula "16") (term "0,1,1,2,1,0,1,1,1,0,0,0") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,2,1,0,1,1,1,0,0,0"))
      (rule "applyEq" (formula "15") (term "0,1,1,2,1,0,0") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "15") (term "1,2,1,0,0"))
      (rule "applyEq" (formula "26") (term "0,1,1,0,0") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "26") (term "1,0,0"))
      (rule "applyEq" (formula "16") (term "0,1,1,1,1,1,0,1,1,1,0,0,0") (ifseqformula "1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,1,1,1,0,1,1,1,0,0,0"))
      (rule "applyEq" (formula "20") (term "0,0,1") (ifseqformula "1"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_geqRight" (formula "20"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "applyEq" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0"))
      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0"))
      (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "3"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "applyEq" (formula "16") (term "0,1,1,1,1,1,0,0") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "16") (term "1,1,1,1,0,0"))
      (rule "applyEq" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0,1,0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "applyEq" (formula "20") (term "0,1,1,1,1,1,0,0") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "20") (term "1,1,1,1,0,0"))
      (rule "applyEq" (formula "13") (term "0,1,1,2,1,0,0") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "13") (term "1,2,1,0,0"))
      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "2"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1"))
      (rule "polySimp_rightDist" (formula "4") (term "1"))
      (rule "mul_literals" (formula "4") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0,1,1,1,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,1,0,1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "13") (term "0,1,0,0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0"))
      (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "leq_literals" (formula "13") (term "0,0,1,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "mod_axiom" (formula "13") (term "0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
      (rule "inEqSimp_homoInEq1" (formula "13"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
      (rule "mul_literals" (formula "13") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1"))
      (rule "polySimp_elimOne" (formula "13") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "17") (term "0,1,0,1,1,1,0,0,0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0,1,1,1,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0,1,1,1,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0,1,1,1,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0"))
      (rule "add_literals" (formula "17") (term "1,1,0,0,0,1,0,1,1,1,0,0,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,0,1,0,1,1,1,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0"))
      (rule "leq_literals" (formula "17") (term "0,0,1,0,1,1,1,0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "mod_axiom" (formula "17") (term "1,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,0"))
      (rule "inEqSimp_contradInEq1" (formula "16") (term "0,1,0,0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,1,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_homoInEq0" (formula "16"))
      (rule "polySimp_addComm1" (formula "16") (term "0"))
      (rule "mod_axiom" (formula "16") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
      (rule "polySimp_mulComm0" (formula "16") (term "1"))
      (rule "polySimp_rightDist" (formula "16") (term "1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
      (rule "polySimp_mulAssoc" (formula "16") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
      (rule "polySimp_elimOne" (formula "16") (term "0,1"))
      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,1,0,0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0,0"))
      (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,1,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,1,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_homoInEq0" (formula "20"))
      (rule "polySimp_addComm1" (formula "20") (term "0"))
      (rule "mod_axiom" (formula "20") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20"))
      (rule "polySimp_mulComm0" (formula "20") (term "1"))
      (rule "polySimp_rightDist" (formula "20") (term "1"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
      (rule "polySimp_mulAssoc" (formula "20") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
      (rule "polySimp_elimOne" (formula "20") (term "0,1"))
      (rule "inEqSimp_subsumption1" (formula "26") (term "0") (ifseqformula "5"))
      (rule "leq_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "inEqSimp_leqRight" (formula "26"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
      (rule "add_literals" (formula "4") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "4") (term "1,0,0"))
      (rule "add_zero_right" (formula "4") (term "0,0"))
      (rule "qeq_literals" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "inEqSimp_contradInEq1" (formula "17") (term "0,1,0,1,1,1,0,0,0,1,0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "add_literals" (formula "17") (term "1,1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0,1,0"))
      (rule "leq_literals" (formula "17") (term "0,0,1,0,1,1,1,0,0,0,1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "mod_axiom" (formula "17") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0,0,1,0"))
      (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,0,1,0"))
      (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
      (rule "leq_literals" (formula "5") (term "0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "4"))
      (rule "mul_literals" (formula "10") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
      (rule "mul_literals" (formula "10") (term "1"))
      (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0"))
      (rule "leq_literals" (formula "10") (term "0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "15"))
      (rule "polySimp_rightDist" (formula "16") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
      (rule "polySimp_mulComm0" (formula "16") (term "1"))
      (rule "polySimp_rightDist" (formula "16") (term "1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
      (rule "mul_literals" (formula "16") (term "0,1"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
      (rule "mul_literals" (formula "2") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "11"))
      (rule "times_zero_1" (formula "2") (term "1,1,0"))
      (rule "greater_literals" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "qeq_literals" (formula "2") (term "0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "closeFalse" (formula "2"))
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "25"))
   (rule "translateJavaShiftLeftInt" (formula "14") (term "1"))
   (rule "translateJavaShiftLeftInt" (formula "10") (term "0"))
   (rule "translateJavaShiftLeftInt" (formula "19") (term "1"))
   (rule "translateJavaShiftLeftInt" (formula "15") (term "1,3,0"))
   (rule "translateJavaShiftLeftInt" (formula "25") (term "0,1,0"))
   (rule "assignment_write_attribute_this" (formula "25"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "assignment_write_attribute_this" (formula "25"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "variableDeclarationFinalAssign" (formula "25") (term "1"))
   (rule "variableDeclarationFinal" (formula "25") (term "1") (newnames "num_buckets"))
   (rule "javaShiftLeftIntDef" (formula "14") (term "1"))
   (rule "javaShiftLeftIntDef" (formula "10") (term "0"))
   (rule "javaShiftLeftIntDef" (formula "19") (term "1"))
   (rule "javaShiftLeftIntDef" (formula "15") (term "1,3,0"))
   (rule "javaShiftLeftIntDef" (formula "25") (term "3,0,0,1,0"))
   (rule "shiftLeftDef" (formula "14") (term "0,1"))
   (rule "polySimp_elimNeg" (formula "14") (term "1,1,0,1"))
   (rule "shiftLeftPositiveShiftDef" (formula "14") (term "2,0,1"))
   (rule "polySimp_elimOneLeft0" (formula "14") (term "2,0,1"))
   (rule "shiftRightPositiveShiftDef" (formula "14") (term "1,0,1"))
   (rule "inEqSimp_commuteGeq" (formula "14"))
   (rule "shiftLeftDef" (formula "10") (term "0,0"))
   (rule "polySimp_elimNeg" (formula "10") (term "1,1,0,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "10") (term "2,0,0"))
   (rule "polySimp_elimOneLeft0" (formula "10") (term "2,0,0"))
   (rule "shiftRightPositiveShiftDef" (formula "10") (term "1,0,0"))
   (rule "shiftLeftDef" (formula "19") (term "0,1"))
   (rule "polySimp_elimNeg" (formula "19") (term "1,1,0,1"))
   (rule "shiftLeftPositiveShiftDef" (formula "19") (term "2,0,1"))
   (rule "polySimp_elimOneLeft0" (formula "19") (term "2,0,1"))
   (rule "shiftRightPositiveShiftDef" (formula "19") (term "1,0,1"))
   (rule "inEqSimp_commuteGeq" (formula "19"))
   (rule "shiftLeftDef" (formula "15") (term "0,1,3,0"))
   (rule "polySimp_elimNeg" (formula "15") (term "1,1,0,1,3,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "15") (term "2,0,1,3,0"))
   (rule "polySimp_elimOneLeft0" (formula "15") (term "2,0,1,3,0"))
   (rule "shiftRightPositiveShiftDef" (formula "15") (term "1,0,1,3,0"))
   (rule "shiftLeftDef" (formula "25") (term "0,3,0,0,1,0"))
   (rule "polySimp_elimNeg" (formula "25") (term "1,1,0,3,0,0,1,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "25") (term "2,0,3,0,0,1,0"))
   (rule "polySimp_elimOneLeft0" (formula "25") (term "2,0,3,0,0,1,0"))
   (rule "shiftRightPositiveShiftDef" (formula "25") (term "1,0,3,0,0,1,0"))
   (rule "expand_moduloInteger" (formula "14") (term "0"))
   (rule "replace_int_MIN" (formula "14") (term "0,0"))
   (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
   (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
   (rule "expand_moduloInteger" (formula "10") (term "0"))
   (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0"))
   (rule "replace_int_MIN" (formula "10") (term "0,0"))
   (rule "replace_int_RANGE" (formula "10") (term "1,1,0"))
   (rule "expand_moduloInteger" (formula "19") (term "0"))
   (rule "replace_int_MIN" (formula "19") (term "0,0"))
   (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0"))
   (rule "replace_int_RANGE" (formula "19") (term "1,1,0"))
   (rule "expand_moduloInteger" (formula "15") (term "1,3,0"))
   (rule "replace_int_RANGE" (formula "15") (term "1,1,1,3,0"))
   (rule "replace_int_MIN" (formula "15") (term "0,1,3,0"))
   (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,3,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "3,0"))
   (rule "add_literals" (formula "15") (term "0,3,0"))
   (rule "expand_moduloInteger" (formula "25") (term "3,0,0,1,0"))
   (rule "replace_int_MIN" (formula "25") (term "0,3,0,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,3,0,0,1,0"))
   (rule "replace_int_RANGE" (formula "25") (term "1,1,3,0,0,1,0"))
   (rule "assignmentShiftLeftInt" (formula "25") (term "1"))
   (branch "Overflow check"
       (builtin "One Step Simplification" (formula "25"))
      (rule "cut" (inst "cutFormula=leq(pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))),
    pow(Z(2(#)), de.wiesler.Constants.LOG_MAX_BUCKETS))<<origin(\"User_Interaction @ node 20500 (cut)\",\"[]\")>>") (userinteraction))
      (branch "CUT: pow(2, log_buckets % 32) <= pow(2, de.wiesler.Constants.LOG_MAX_BUCKETS) TRUE"
         (rule "powPositive" (formula "26") (term "1,0") (userinteraction))
          (builtin "One Step Simplification" (formula "2"))
         (rule "greater_literals" (formula "1") (term "1,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "expand_inInt" (formula "27"))
         (rule "pow_literals" (formula "2") (term "1"))
         (rule "replace_int_MIN" (formula "27") (term "0,1"))
         (rule "replace_int_MAX" (formula "27") (term "1,0"))
         (rule "polySimp_elimOneLeft0" (formula "27") (term "0,0"))
         (rule "polySimp_elimOneLeft0" (formula "27") (term "1,1"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,3,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0,1,0,1,3,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,1,3,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,1,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "1"))
         (rule "inEqSimp_homoInEq0" (formula "21"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0"))
         (rule "polySimp_addComm0" (formula "21") (term "0,0"))
         (rule "inEqSimp_homoInEq0" (formula "16"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0"))
         (rule "polySimp_addComm0" (formula "16") (term "0,0"))
         (rule "mod_axiom" (formula "12") (term "1,2,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,2,1,0,1,0"))
         (rule "mod_axiom" (formula "17") (term "1,2,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,2,1,0,1,3,0"))
         (rule "mod_axiom" (formula "12") (term "0,1,1,1,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,1,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1,1,0,1,0"))
         (rule "mod_axiom" (formula "17") (term "0,1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,1,0,1,3,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,1,1,0,1,3,0"))
         (rule "mod_axiom" (formula "2") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
         (rule "mod_axiom" (formula "1") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
         (rule "mod_axiom" (formula "1") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "mod_axiom" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
         (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,1,3,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,1,3,0"))
         (rule "mod_axiom" (formula "12") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,0"))
         (rule "mod_axiom" (formula "27") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1"))
         (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,0"))
         (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,0,1,0"))
         (rule "mod_axiom" (formula "21") (term "1,2,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,0,1,0"))
         (rule "mod_axiom" (formula "16") (term "1,0,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,0"))
         (rule "mod_axiom" (formula "16") (term "0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,1,0,0,1,0"))
         (rule "mod_axiom" (formula "16") (term "1,2,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,2,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,0,1,3,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1"))
         (rule "inEqSimp_sepNegMonomial1" (formula "21"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
         (rule "polySimp_elimOne" (formula "21") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "16"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
         (rule "polySimp_elimOne" (formula "16") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "11"))
         (rule "leq_literals" (formula "7") (term "0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
         (rule "leq_literals" (formula "18") (term "0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
         (rule "leq_literals" (formula "14") (term "0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "inEqSimp_subsumption0" (formula "24") (term "0") (ifseqformula "2"))
         (rule "leq_literals" (formula "24") (term "0,0"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "inEqSimp_geqRight" (formula "24"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
         (rule "leq_literals" (formula "8") (term "0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
         (rule "leq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_contradInEq0" (formula "2") (term "1") (ifseqformula "1"))
         (rule "qeq_literals" (formula "2") (term "0,1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "notLeft" (formula "2"))
         (rule "inEqSimp_leqRight" (formula "17"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "replace_known_left" (formula "14") (term "0,1,0,1,3,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "replace_known_left" (formula "17") (term "0,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "replace_known_left" (formula "13") (term "0,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "replace_known_left" (formula "10") (term "0,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_homoInEq0" (formula "17"))
         (rule "polySimp_addComm1" (formula "17") (term "0"))
         (rule "inEqSimp_homoInEq0" (formula "13"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17"))
         (rule "polySimp_mulComm0" (formula "17") (term "1"))
         (rule "polySimp_rightDist" (formula "17") (term "1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
         (rule "mul_literals" (formula "17") (term "0,1"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
         (rule "polySimp_mulComm0" (formula "13") (term "1"))
         (rule "polySimp_rightDist" (formula "13") (term "1"))
         (rule "mul_literals" (formula "13") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
         (rule "mul_literals" (formula "13") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "16"))
         (rule "polySimp_rightDist" (formula "18") (term "0,0"))
         (rule "mul_literals" (formula "18") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0"))
         (rule "add_literals" (formula "18") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "18"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
         (rule "polySimp_elimOne" (formula "18") (term "0"))
         (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "15") (term "0") (inst "j=j") (inst "i=i"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "expand_inInt" (formula "15") (term "1,0,0"))
         (rule "expand_inInt" (formula "15") (term "1,0,0,1,0"))
         (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
         (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0"))
         (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0,1,0"))
         (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,0"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0"))
         (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "15") (term "1,0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,1,0,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
         (rule "nnf_notAnd" (formula "15") (term "1,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "1,0,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,1,1,0,0,1,0"))
         (rule "add_literals" (formula "15") (term "0,0,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "1,1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,1,0"))
         (rule "commute_or_2" (formula "15") (term "0,0"))
         (rule "arrayLengthIsAShort" (formula "11") (term "0"))
         (rule "expand_inShort" (formula "11"))
         (rule "replace_short_MIN" (formula "11") (term "0,1"))
         (rule "replace_short_MAX" (formula "11") (term "1,0"))
         (rule "andLeft" (formula "11"))
         (rule "inEqSimp_commuteLeq" (formula "11"))
         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
         (rule "leq_literals" (formula "11") (term "0"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "arrayLengthNotNegative" (formula "11") (term "0"))
         (rule "arrayLengthIsAShort" (formula "17") (term "0"))
         (rule "expand_inShort" (formula "17"))
         (rule "replace_short_MIN" (formula "17") (term "0,1"))
         (rule "replace_short_MAX" (formula "17") (term "1,0"))
         (rule "andLeft" (formula "17"))
         (rule "inEqSimp_commuteLeq" (formula "17"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
         (rule "leq_literals" (formula "17") (term "0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "arrayLengthNotNegative" (formula "17") (term "0"))
         (rule "commute_or" (formula "15") (term "1,0,0,1,0"))
         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
         (rule "commute_or_2" (formula "15") (term "0,0,0"))
         (rule "div_axiom" (formula "2") (term "0,1,1,0") (inst "quotient=quotient_0"))
         (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
         (rule "equal_literals" (formula "2") (term "0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "qeq_literals" (formula "2") (term "0,1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "polySimp_addComm1" (formula "4") (term "1"))
         (rule "add_literals" (formula "4") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "3"))
         (rule "inEqSimp_homoInEq1" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
         (rule "polySimp_addComm1" (formula "4") (term "0"))
         (rule "applyEq" (formula "17") (term "0,1,1,1,1,0,1,1") (ifseqformula "2"))
         (rule "polySimp_addComm0" (formula "17") (term "1,1,1,0,1,1"))
         (rule "applyEq" (formula "21") (term "0,1,1,1,1,0,1,1") (ifseqformula "2"))
         (rule "polySimp_addComm0" (formula "21") (term "1,1,1,0,1,1"))
         (rule "applyEq" (formula "18") (term "0,1,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "2"))
         (rule "polySimp_addComm0" (formula "18") (term "1,1,1,0,1,1,1,0,0,0,1,0"))
         (rule "applyEq" (formula "16") (term "0,1,1,1,1,0,0") (ifseqformula "2"))
         (rule "polySimp_addComm0" (formula "16") (term "1,1,1,0,0"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "applyEq" (formula "18") (term "0,1,1,1,1,0,1,1,1,0,0") (ifseqformula "2"))
         (rule "polySimp_addComm0" (formula "18") (term "1,1,1,0,1,1,1,0,0"))
         (rule "applyEq" (formula "5") (term "0,1,1,0") (ifseqformula "2"))
         (rule "polySimp_addComm0" (formula "5") (term "1,0"))
         (rule "applyEq" (formula "13") (term "0,1,1,1,1,0,0") (ifseqformula "2"))
         (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "CUT: pow(2, log_buckets % 32) <= pow(2, de.wiesler.Constants.LOG_MAX_BUCKETS) FALSE"
         (rule "powMonoConcrete" (formula "20") (userinteraction))
          (builtin "One Step Simplification" (formula "20"))
         (rule "expand_inInt" (formula "26"))
         (rule "greater_literals" (formula "20") (term "1"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "replace_int_MAX" (formula "26") (term "1,0"))
         (rule "replace_int_MIN" (formula "26") (term "0,1"))
         (rule "polySimp_elimOneLeft0" (formula "26") (term "0,0"))
         (rule "polySimp_elimOneLeft0" (formula "26") (term "1,1"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
         (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "1"))
         (rule "inEqSimp_homoInEq0" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0"))
         (rule "inEqSimp_homoInEq0" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0"))
         (rule "polySimp_addComm0" (formula "19") (term "0,0"))
         (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
         (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
         (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
         (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
         (rule "mod_axiom" (formula "20") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
         (rule "mod_axiom" (formula "26") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
         (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
         (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
         (rule "mod_axiom" (formula "20") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
         (rule "inEqSimp_homoInEq0" (formula "20") (term "1"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
         (rule "mod_axiom" (formula "26") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1"))
         (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
         (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
         (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
         (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
         (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
         (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1"))
         (rule "mul_literals" (formula "20") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1"))
         (rule "inEqSimp_sepNegMonomial1" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
         (rule "leq_literals" (formula "16") (term "0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
         (rule "leq_literals" (formula "12") (term "0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
         (rule "leq_literals" (formula "5") (term "0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "11"))
         (rule "mul_literals" (formula "8") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "0,0"))
         (rule "add_zero_left" (formula "8") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "15"))
         (rule "mul_literals" (formula "8") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "0,0"))
         (rule "add_zero_left" (formula "8") (term "0"))
         (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "12") (term "0") (inst "j=j") (inst "i=i"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "expand_inInt" (formula "12") (term "1,0,0"))
         (rule "expand_inInt" (formula "12") (term "1,0,0,1,0"))
         (rule "replace_int_MAX" (formula "12") (term "1,0,1,0,0"))
         (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
         (rule "replace_int_MAX" (formula "12") (term "1,0,1,0,0,1,0"))
         (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "1,0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "12") (term "1,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "1,0,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,1,1,0,0,1,0"))
         (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "1,1,1,0,0,1,0"))
         (rule "commute_and" (formula "22"))
         (rule "commute_and" (formula "16"))
         (rule "commute_or_2" (formula "12") (term "0,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,1,0"))
         (rule "shift_paren_or" (formula "12") (term "0,0,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,0"))
         (rule "commute_or" (formula "12") (term "0,0,0,0"))
         (rule "inEqSimp_or_subsumption0" (formula "12") (term "0,0,0,0"))
         (rule "qeq_literals" (formula "12") (term "0,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "arrayLengthIsAShort" (formula "10") (term "0"))
         (rule "expand_inShort" (formula "10"))
         (rule "replace_short_MIN" (formula "10") (term "0,1"))
         (rule "replace_short_MAX" (formula "10") (term "1,0"))
         (rule "andLeft" (formula "10"))
         (rule "inEqSimp_commuteLeq" (formula "10"))
         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "9"))
         (rule "leq_literals" (formula "10") (term "0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "arrayLengthNotNegative" (formula "10") (term "0"))
         (rule "commute_or" (formula "12") (term "0,0,0,1,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,1,0"))
         (rule "arrayLengthIsAShort" (formula "14") (term "0"))
         (rule "expand_inShort" (formula "14"))
         (rule "replace_short_MIN" (formula "14") (term "0,1"))
         (rule "replace_short_MAX" (formula "14") (term "1,0"))
         (rule "andLeft" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
         (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
         (rule "leq_literals" (formula "14") (term "0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "arrayLengthNotNegative" (formula "14") (term "0"))
         (rule "div_axiom" (formula "15") (term "0,1,1,1,1,1,0,0") (inst "quotient=quotient_0"))
         (rule "equal_literals" (formula "15") (term "0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "mul_literals" (formula "15") (term "1,1,1,1"))
         (rule "qeq_literals" (formula "15") (term "0,1"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "polySimp_addComm1" (formula "17") (term "1"))
         (rule "add_literals" (formula "17") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "inEqSimp_homoInEq1" (formula "17"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0"))
         (rule "applyEq" (formula "11") (term "0,1,1,1,1,1,0,0") (ifseqformula "15"))
         (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0"))
         (rule "applyEq" (formula "11") (term "0,1,1,2,1,0,0") (ifseqformula "15"))
         (rule "polySimp_addComm0" (formula "11") (term "1,2,1,0,0"))
         (rule "applyEq" (formula "18") (term "0,1,1,2,1,0,0") (ifseqformula "15"))
         (rule "polySimp_addComm0" (formula "18") (term "1,2,1,0,0"))
         (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "15"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "1"))
         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "inEqSimp_geqRight" (formula "19"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "applyEq" (formula "25") (term "0,1,1,0,0") (ifseqformula "16"))
         (rule "polySimp_addComm0" (formula "25") (term "1,0,0"))
         (rule "applyEq" (formula "13") (term "0,1,1,2,1,0,1,1,1,0,0,0,1,0") (ifseqformula "16"))
         (rule "polySimp_addComm0" (formula "13") (term "1,2,1,0,1,1,1,0,0,0,1,0"))
         (rule "applyEq" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0"))
         (rule "applyEq" (formula "19") (term "0,1,1,1,1,1,0,0") (ifseqformula "16"))
         (rule "polySimp_addComm0" (formula "19") (term "1,1,1,1,0,0"))
         (rule "applyEq" (formula "13") (term "0,1,1,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "16"))
         (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,1,1,1,0,0,0,1,0"))
         (rule "applyEq" (formula "9") (term "0,1,1,1,1,1,0,0") (ifseqformula "16"))
         (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0"))
         (rule "applyEq" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0"))
         (rule "applyEq" (formula "13") (term "0,0,0,1,0,1,1,1,0,0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0,1,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0,1,1,1,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,1,1,1,0,0"))
         (rule "applyEq" (formula "25") (term "0,1,1,0,1") (ifseqformula "16"))
         (rule "polySimp_addComm0" (formula "25") (term "1,0,1"))
         (rule "applyEq" (formula "13") (term "0,0,0,1,0,1,1,1,0,0,0,1,0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "applyEq" (formula "19") (term "0,0,0,1,0,0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
         (rule "applyEq" (formula "9") (term "0,1,1,2,1,0,0") (ifseqformula "16"))
         (rule "polySimp_addComm0" (formula "9") (term "1,2,1,0,0"))
         (rule "applyEq" (formula "13") (term "0,1,1,2,1,0,1,1,1,0,0") (ifseqformula "16"))
         (rule "polySimp_addComm0" (formula "13") (term "1,2,1,0,1,1,1,0,0"))
         (rule "applyEq" (formula "13") (term "0,1,1,1,1,1,0,1,1,1,0,0") (ifseqformula "16"))
         (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,1,1,1,0,0"))
         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1"))
         (rule "polySimp_rightDist" (formula "18") (term "1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
         (rule "mul_literals" (formula "18") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,1,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,1,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,1,0,1,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0"))
         (rule "qeq_literals" (formula "17") (term "0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "inEqSimp_contradInEq1" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
         (rule "leq_literals" (formula "9") (term "0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "mod_axiom" (formula "9") (term "0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
         (rule "inEqSimp_homoInEq1" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
         (rule "mul_literals" (formula "9") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1"))
         (rule "polySimp_elimOne" (formula "9") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "12") (term "0,1,0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,0"))
         (rule "leq_literals" (formula "12") (term "0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "inEqSimp_homoInEq0" (formula "12"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "mod_axiom" (formula "12") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1"))
         (rule "polySimp_rightDist" (formula "12") (term "1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
         (rule "polySimp_mulAssoc" (formula "12") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,0,1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
         (rule "polySimp_elimOne" (formula "12") (term "0,1"))
         (rule "inEqSimp_contradInEq1" (formula "13") (term "0,1,0,1,1,1,0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0,1,0,1,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,1,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,1,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0,1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,1,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,1,1,1,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,1,1,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,1,1,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,0,1,1,1,0,0"))
         (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,0,1,1,1,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,1,1,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,1,1,0,0"))
         (rule "leq_literals" (formula "13") (term "0,0,1,0,1,1,1,0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "mod_axiom" (formula "13") (term "1,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
         (rule "inEqSimp_contradInEq1" (formula "18") (term "0,1,0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0,1,0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0,0,1,0,0"))
         (rule "leq_literals" (formula "18") (term "0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_homoInEq0" (formula "18"))
         (rule "polySimp_addComm1" (formula "18") (term "0"))
         (rule "mod_axiom" (formula "18") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1"))
         (rule "polySimp_rightDist" (formula "18") (term "1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
         (rule "polySimp_mulAssoc" (formula "18") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,0,1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
         (rule "polySimp_elimOne" (formula "18") (term "0,1"))
         (rule "inEqSimp_contradInEq1" (formula "13") (term "0,1,0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,1,1,0,0,0,1,0"))
         (rule "leq_literals" (formula "13") (term "0,0,1,0,1,1,1,0,0,0,1,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "mod_axiom" (formula "13") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,0,1,0"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "polySimp_addComm0" (formula "12") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1"))
         (rule "polySimp_rightDist" (formula "12") (term "1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
         (rule "mul_literals" (formula "12") (term "0,1"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "18"))
         (rule "mul_literals" (formula "7") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0"))
         (rule "add_literals" (formula "7") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
         (rule "mul_literals" (formula "7") (term "1"))
         (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
         (rule "leq_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "leq_literals" (formula "7") (term "0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "16"))
         (rule "polySimp_rightDist" (formula "20") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0"))
         (rule "polySimp_addComm0" (formula "20") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20"))
         (rule "polySimp_mulComm0" (formula "20") (term "1"))
         (rule "polySimp_rightDist" (formula "20") (term "1"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
         (rule "mul_literals" (formula "20") (term "0,1"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "8"))
         (rule "times_zero_1" (formula "1") (term "1,1,0"))
         (rule "greater_literals" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "qeq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Usage"
       (builtin "One Step Simplification" (formula "25"))
      (rule "translateJavaShiftLeftInt" (formula "25") (term "0,1,0"))
      (rule "variableDeclarationFinalAssign" (formula "25") (term "1"))
      (rule "variableDeclarationFinal" (formula "25") (term "1") (newnames "num_splitters"))
      (rule "javaShiftLeftIntDef" (formula "25") (term "0,1,0"))
      (rule "shiftLeftDef" (formula "25") (term "0,0,1,0"))
      (rule "polySimp_elimNeg" (formula "25") (term "1,1,0,0,1,0"))
      (rule "shiftLeftPositiveShiftDef" (formula "25") (term "2,0,0,1,0"))
      (rule "polySimp_elimOneLeft0" (formula "25") (term "2,0,0,1,0"))
      (rule "shiftRightPositiveShiftDef" (formula "25") (term "1,0,0,1,0"))
      (rule "expand_moduloInteger" (formula "25") (term "0,1,0"))
      (rule "replace_int_MIN" (formula "25") (term "0,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,0,1,0"))
      (rule "replace_int_RANGE" (formula "25") (term "1,1,0,1,0"))
      (rule "assignmentSubtractionInt" (formula "25") (term "1"))
      (branch "Overflow check"
          (builtin "One Step Simplification" (formula "25"))
         (rule "expand_inInt" (formula "25"))
         (rule "replace_int_MAX" (formula "25") (term "1,0"))
         (rule "replace_int_MIN" (formula "25") (term "0,1"))
         (rule "polySimp_elimSub" (formula "25") (term "0,0"))
         (rule "mul_literals" (formula "25") (term "1,0,0"))
         (rule "polySimp_elimSub" (formula "25") (term "1,1"))
         (rule "mul_literals" (formula "25") (term "1,1,1"))
         (rule "polySimp_addComm1" (formula "25") (term "0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "1,1"))
         (rule "add_literals" (formula "25") (term "0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,1,0,0"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,1,0,0"))
         (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,1,1,1"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,1,1,1"))
         (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,1,1,1"))
         (rule "inEqSimp_homoInEq0" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0"))
         (rule "polySimp_addComm0" (formula "19") (term "0,0"))
         (rule "inEqSimp_homoInEq0" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0"))
         (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
         (rule "mul_literals" (formula "25") (term "1,0,1"))
         (rule "polySimp_addComm1" (formula "25") (term "0,1"))
         (rule "add_literals" (formula "25") (term "0,0,1"))
         (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
         (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
         (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
         (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
         (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
         (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
         (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
         (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
         (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
         (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
         (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
         (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
         (rule "mod_axiom" (formula "25") (term "1,2,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,2,1,0,0,1,0,0"))
         (rule "mod_axiom" (formula "25") (term "0,1,1,1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1,1,0,0,1,0,0"))
         (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0"))
         (rule "mod_axiom" (formula "25") (term "0,1,1,1,1,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1,1,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,1,1,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,1,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1,1,0,1,0,1"))
         (rule "mod_axiom" (formula "25") (term "1,2,1,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,2,1,0,1,0,1"))
         (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1"))
         (rule "mul_literals" (formula "25") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_subsumption1" (formula "25") (term "1") (ifseqformula "10"))
         (rule "leq_literals" (formula "25") (term "0,1"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_leqRight" (formula "25"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "10"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
         (rule "leq_literals" (formula "16") (term "0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
         (rule "leq_literals" (formula "12") (term "0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
         (rule "leq_literals" (formula "9") (term "0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
         (rule "mul_literals" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
         (rule "leq_literals" (formula "10") (term "0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "10"))
         (rule "qeq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Usage"
          (builtin "One Step Simplification" (formula "25"))
          (builtin "Block Contract (Internal)" (formula "25") (newnames "exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
         (branch "Validity"
             (builtin "One Step Simplification" (formula "26"))
             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "7")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")))
            (rule "andLeft" (formula "20"))
            (rule "eqSymm" (formula "27") (term "0,0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "0"))
            (rule "dismissNonSelectedField" (formula "21") (term "0"))
            (rule "dismissNonSelectedField" (formula "21") (term "0"))
            (rule "dismissNonSelectedField" (formula "21") (term "0"))
            (rule "dismissNonSelectedField" (formula "21") (term "0"))
            (rule "variableDeclarationAssign" (formula "27") (term "1"))
            (rule "variableDeclaration" (formula "27") (term "1") (newnames "exc_0_1"))
            (rule "assignment" (formula "27") (term "1"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "emptyStatement" (formula "27") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,0,1"))
            (rule "emptyStatement" (formula "27") (term "1"))
            (rule "tryEmpty" (formula "27") (term "1"))
            (rule "blockEmptyLabel" (formula "27") (term "1"))
            (rule "blockEmpty" (formula "27") (term "1"))
            (rule "methodCallEmpty" (formula "27") (term "1"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "emptyModality" (formula "27") (term "1"))
            (rule "andRight" (formula "27"))
            (branch "Case 1"
               (rule "andRight" (formula "27"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "closeTrue" (formula "27"))
               )
               (branch "Case 2"
                  (rule "andRight" (formula "27"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "27") (userinteraction))
                     (rule "ifthenelse_split" (formula "27") (term "1,0,1,0") (userinteraction))
                     (branch "log_buckets % 32 < 0 TRUE"
                        (rule "replace_known_left" (formula "15") (term "0,1,0,1,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "replace_known_left" (formula "11") (term "0,1,0,1,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "replace_known_left" (formula "21") (term "0,1,0,1,3,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "replace_known_left" (formula "16") (term "0,1,0,1,3,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_left" (formula "20") (term "0,1,0,1,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_geqRight" (formula "28"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16"))
                        (rule "inEqSimp_commuteLeq" (formula "21"))
                        (rule "mod_axiom" (formula "12") (term "0,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1,0,1,0"))
                        (rule "mod_axiom" (formula "22") (term "0,1,1,1,0,1,3,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,0,1,3,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,1,3,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0,1,3,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,1,3,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,0,1,3,0,0"))
                        (rule "mod_axiom" (formula "17") (term "0,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0,1,3,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "1") (term "0,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,0,1,0"))
                        (rule "mod_axiom" (formula "2") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "mod_axiom" (formula "16") (term "0,1,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,0,1,1"))
                        (rule "mod_axiom" (formula "21") (term "0,1,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                        (rule "mul_literals" (formula "12") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                        (rule "leq_literals" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                        (rule "leq_literals" (formula "18") (term "0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "11"))
                        (rule "leq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                        (rule "leq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfCreate" (formula "19"))
                         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "22")))
                        (rule "castDel" (formula "19") (term "0"))
                        (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "1"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "add_literals" (formula "13") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "14") (term "0") (inst "i=i") (inst "j=j"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "expand_inInt" (formula "14") (term "1,0,0"))
                        (rule "expand_inInt" (formula "14") (term "1,0,0,1,0"))
                        (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
                        (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0"))
                        (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1,0"))
                        (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "nnf_imp2or" (formula "14") (term "0,1,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,1,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "14") (term "1,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,1,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0,1,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,1,0,0,1,0"))
                        (rule "commute_or_2" (formula "14") (term "0,0"))
                        (rule "div_axiom" (formula "18") (term "0,1,1,1,1,0,1,3,0,0") (inst "quotient=quotient_0"))
                        (rule "equal_literals" (formula "18") (term "0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "qeq_literals" (formula "18") (term "0,1"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1,1,1"))
                        (rule "andLeft" (formula "18"))
                        (rule "andLeft" (formula "18"))
                        (rule "polySimp_addComm1" (formula "20") (term "1"))
                        (rule "add_literals" (formula "20") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "19"))
                        (rule "inEqSimp_homoInEq1" (formula "20"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0"))
                        (rule "applyEq" (formula "10") (term "0,1,1,1,1,0,0") (ifseqformula "18"))
                        (rule "polySimp_addComm0" (formula "10") (term "1,1,1,0,0"))
                        (rule "applyEq" (formula "14") (term "0,1,1,1,1,0,1,1,1,0,0") (ifseqformula "18"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,1,0,1,1,1,0,0"))
                        (rule "applyEq" (formula "17") (term "0,1,1,1,1,0,1,1") (ifseqformula "18"))
                        (rule "polySimp_addComm0" (formula "17") (term "1,1,1,0,1,1"))
                        (rule "applyEq" (formula "13") (term "0,1,1,1,1,0,1,1") (ifseqformula "18"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0,1,1"))
                        (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "18"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "applyEq" (formula "1") (term "0,1,1,1,1,0,0") (ifseqformula "18"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,1,1,0,0"))
                        (rule "applyEq" (formula "21") (term "0,1,1,1,1,0,1,3,0,0") (ifseqformula "18"))
                        (rule "polySimp_addComm0" (formula "21") (term "1,1,1,0,1,3,0,0"))
                        (rule "applyEq" (formula "14") (term "0,1,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "18"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,1,0,1,1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1"))
                        (rule "polySimp_rightDist" (formula "20") (term "1"))
                        (rule "mul_literals" (formula "20") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "19"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "log_buckets % 32 < 0 FALSE"
                        (rule "eqTermCut" (formula "28") (term "1,0") (inst "s=add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
    pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))))") (userinteraction))
                        (branch "Assume (2147483648 + pow(2, log_buckets % 32)) % 4294967296 = 2147483648 + pow(2, log_buckets % 32)"
                           (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "1") (userinteraction))
                           (rule "cut" (inst "cutFormula=geq(pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))),
    pow(Z(2(#)), Z(1(#))))<<origin(\"User_Interaction @ node 32388 (cut)\",\"[]\")>>") (userinteraction))
                           (branch "CUT: pow(2, log_buckets % 32) >= pow(2, 1) TRUE"
                              (rule "pow_literals" (formula "1") (term "1") (userinteraction))
                              (rule "replace_known_right" (formula "12") (term "0,1,0,1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "replace_known_right" (formula "22") (term "0,1,0,1,3,0,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "replace_known_right" (formula "21") (term "0,1,0,1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "replace_known_right" (formula "16") (term "0,1,0,1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "replace_known_right" (formula "17") (term "0,1,0,1,3,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0"))
                              (rule "add_literals" (formula "30") (term "0,0"))
                              (rule "add_zero_left" (formula "30") (term "0"))
                              (rule "close" (formula "30") (ifseqformula "1"))
                           )
                           (branch "CUT: pow(2, log_buckets % 32) >= pow(2, 1) FALSE"
                              (rule "powMonoConcreteRev" (formula "23") (userinteraction))
                              (rule "greater_literals" (formula "23") (term "1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "replace_known_right" (formula "11") (term "0,1,0,1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "replace_known_right" (formula "21") (term "0,1,0,1,3,0,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "replace_known_right" (formula "16") (term "0,1,0,1,3,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "replace_known_right" (formula "20") (term "0,1,0,1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_right" (formula "15") (term "0,1,0,1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0"))
                              (rule "add_literals" (formula "30") (term "0,0"))
                              (rule "add_zero_left" (formula "30") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "29"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "30"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23"))
                              (rule "inEqSimp_commuteLeq" (formula "18"))
                              (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1"))
                              (rule "add_literals" (formula "23") (term "0,1"))
                              (rule "add_zero_left" (formula "23") (term "1"))
                              (rule "applyEq" (formula "24") (term "1,3,0,0") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "24") (term "3,0,0"))
                              (rule "add_literals" (formula "24") (term "0,3,0,0"))
                              (rule "add_zero_left" (formula "24") (term "3,0,0"))
                              (rule "applyEq" (formula "19") (term "1,3,0") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "19") (term "3,0"))
                              (rule "add_literals" (formula "19") (term "0,3,0"))
                              (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1"))
                              (rule "add_literals" (formula "18") (term "0,1"))
                              (rule "add_zero_left" (formula "18") (term "1"))
                              (rule "mod_axiom" (formula "4") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1"))
                              (rule "mod_axiom" (formula "4") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                              (rule "mod_axiom" (formula "3") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "mod_axiom" (formula "2") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "mod_axiom" (formula "1") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                              (rule "mod_axiom" (formula "14") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                              (rule "mod_axiom" (formula "23") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                              (rule "mod_axiom" (formula "24") (term "1,3,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,3,0,0"))
                              (rule "mod_axiom" (formula "19") (term "1,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,3,0"))
                              (rule "mod_axiom" (formula "18") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "12"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                              (rule "simplifySelectOfCreate" (formula "21"))
                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
                              (rule "castDel" (formula "21") (term "0"))
                              (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "hideAuxiliaryEq" (formula "21"))
                              (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,0"))
                              (rule "times_zero_1" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "3"))
                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,0"))
                              (rule "times_zero_1" (formula "3") (term "0"))
                              (rule "qeq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "newSym_eq" (formula "2") (inst "l=l_0") (inst "newSymDef=mul(log_buckets, Z(0(#)))"))
                              (rule "times_zero_1" (formula "2") (term "1,1"))
                              (rule "add_zero_right" (formula "2") (term "1"))
                              (rule "applyEq" (formula "1") (term "0,1,1,0") (ifseqformula "2"))
                              (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                              (rule "applyEq" (formula "16") (term "0,1,1,1,3,0") (ifseqformula "2"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,1,3,0"))
                              (rule "applyEq" (formula "20") (term "0,1,1,3,0,0") (ifseqformula "2"))
                              (rule "polySimp_addComm0" (formula "20") (term "1,3,0,0"))
                              (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "3"))
                              (rule "applyEq" (formula "19") (term "0,1,1,1") (ifseqformula "2"))
                              (rule "polySimp_addComm0" (formula "19") (term "1,1"))
                              (rule "applyEq" (formula "4") (term "0,1,1,1,0,0") (ifseqformula "2"))
                              (rule "polySimp_homoEq" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0,1,0,0"))
                              (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "2"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                              (rule "applyEq" (formula "15") (term "0,1,1,1") (ifseqformula "2"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,1"))
                              (rule "applyEq" (formula "15") (term "1,1,1") (ifseqformula "3"))
                              (rule "polySimp_pullOutFactor0" (formula "15") (term "1,1"))
                              (rule "add_literals" (formula "15") (term "1,1,1"))
                              (rule "times_zero_1" (formula "15") (term "1,1"))
                              (rule "pow_literals" (formula "15") (term "1"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "3"))
                              (rule "polySimp_pullOutFactor0" (formula "12") (term "1,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0"))
                              (rule "pow_literals" (formula "12") (term "0"))
                              (rule "qeq_literals" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "applyEq" (formula "18") (term "1,1,1") (ifseqformula "3"))
                              (rule "polySimp_pullOutFactor0" (formula "18") (term "1,1"))
                              (rule "add_literals" (formula "18") (term "1,1,1"))
                              (rule "times_zero_1" (formula "18") (term "1,1"))
                              (rule "pow_literals" (formula "18") (term "1"))
                              (rule "applyEq" (formula "4") (term "0,1,1,1,0") (ifseqformula "2"))
                              (rule "polySimp_addComm0" (formula "4") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "19") (term "1,1,3,0,0") (ifseqformula "3"))
                              (rule "polySimp_pullOutFactor0" (formula "19") (term "1,3,0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,3,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,3,0,0"))
                              (rule "pow_literals" (formula "19") (term "3,0,0"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "3"))
                              (rule "polySimp_pullOutFactor0" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "pow_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "14") (term "1,1,1,3,0") (ifseqformula "2"))
                              (rule "polySimp_pullOutFactor0" (formula "14") (term "1,1,3,0"))
                              (rule "add_literals" (formula "14") (term "1,1,1,3,0"))
                              (rule "times_zero_1" (formula "14") (term "1,1,3,0"))
                              (rule "pow_literals" (formula "14") (term "1,3,0"))
                              (rule "add_literals" (formula "14") (term "3,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,0,1,0") (ifseqformula "2"))
                              (rule "polySimp_pullOutFactor0" (formula "3") (term "1,1,0,0,1,0"))
                              (rule "add_literals" (formula "3") (term "1,1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,1,0,0,1,0"))
                              (rule "pow_literals" (formula "3") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "3") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "mod_axiom" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                              (rule "div_literals" (formula "3") (term "0,1,0,1,0,0"))
                              (rule "times_zero_2" (formula "3") (term "1,0,1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0") (ifseqformula "2"))
                              (rule "polySimp_pullOutFactor0" (formula "3") (term "1,1,0"))
                              (rule "add_literals" (formula "3") (term "1,1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,1,0"))
                              (rule "pow_literals" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(3(#)))"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "8") (term "0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "leq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "inEqSimp_contradInEq5" (formula "9") (ifseqformula "8"))
                              (rule "greater_literals" (formula "9") (term "0,0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "closeFalse" (formula "9"))
                           )
                        )
                        (branch "Assume (2147483648 + pow(2, log_buckets % 32)) % 4294967296 != 2147483648 + pow(2, log_buckets % 32)"
                           (rule "notLeft" (formula "1") (userinteraction))
                           (rule "cut" (inst "cutFormula=(  leq(pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))),
       pow(Z(2(#)), Z(8(#))))<<origin(\"User_Interaction @ node 32633 (cut)\",\"[]\")>>
 & geq(pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))),
       Z(1(#)))<<origin(\"User_Interaction @ node 32633 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 32633 (cut)\",\"[]\")>>") (userinteraction))
                           (branch "CUT: pow(2, log_buckets % 32) <= pow(2, 8) & pow(2, log_buckets % 32) >= 1 TRUE"
                              (rule "pow_literals" (formula "1") (term "1,0"))
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_right" (formula "21") (term "0,1,0,1,0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "replace_known_right" (formula "12") (term "0,1,0,1,0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "replace_known_right" (formula "17") (term "0,1,0,1,3,0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "replace_known_right" (formula "16") (term "0,1,0,1,0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "replace_known_right" (formula "22") (term "0,1,0,1,3,0,0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_geqRight" (formula "31"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltRight" (formula "31"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "23"))
                              (rule "inEqSimp_commuteLeq" (formula "18"))
                              (rule "mod_axiom" (formula "26") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1"))
                              (rule "mod_axiom" (formula "26") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                              (rule "mod_axiom" (formula "3") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                              (rule "mod_axiom" (formula "4") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "mod_axiom" (formula "14") (term "1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,0"))
                              (rule "mod_axiom" (formula "19") (term "1,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,3,0"))
                              (rule "mod_axiom" (formula "24") (term "1,1,0,1,3,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,3,0,0"))
                              (rule "mod_axiom" (formula "2") (term "1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,0"))
                              (rule "mod_axiom" (formula "1") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                              (rule "mod_axiom" (formula "23") (term "1,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1"))
                              (rule "mod_axiom" (formula "18") (term "1,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                              (rule "leq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "13"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                              (rule "simplifySelectOfCreate" (formula "21"))
                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")))
                              (rule "castDel" (formula "21") (term "0"))
                              (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "hideAuxiliaryEq" (formula "21"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "2"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                              (rule "mul_literals" (formula "19") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "2"))
                              (rule "leq_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "16") (term "0") (inst "i=i") (inst "j=j"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "expand_inInt" (formula "16") (term "1,0,0"))
                              (rule "expand_inInt" (formula "16") (term "1,0,0,1,0"))
                              (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0"))
                              (rule "replace_int_MAX" (formula "16") (term "1,0,1,0,0"))
                              (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0,1,0"))
                              (rule "replace_int_MAX" (formula "16") (term "1,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "16") (term "1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,1,0,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "16") (term "1,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,1,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0,1,0"))
                              (rule "add_literals" (formula "16") (term "0,0,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "1,1,1,0,0,1,0"))
                              (rule "commute_or_2" (formula "16") (term "0,0"))
                              (rule "div_axiom" (formula "21") (term "0,1,1,1,1") (inst "quotient=quotient_0"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "19") (term "0,1,1,1,0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "19") (term "1,1,0,1,1,1,0,0"))
                              (rule "applyEq" (formula "22") (term "0,1,1,1,0,1,1") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "22") (term "1,1,0,1,1"))
                              (rule "applyEq" (formula "23") (term "0,1,1,1,0,1,3,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "23") (term "1,1,0,1,3,0,0"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "applyEq" (formula "6") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                              (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0"))
                              (rule "applyEq" (formula "5") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                              (rule "applyEq" (formula "4") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                              (rule "applyEq" (formula "18") (term "0,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "18") (term "1,1,0,1,1,1,0,0,0,1,0"))
                              (rule "applyEq" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                              (rule "applyEq" (formula "17") (term "0,1,1,1,0,1,1") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1,1"))
                              (rule "applyEq" (formula "23") (term "0,1,1,1,1") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "23") (term "1,1,1"))
                              (rule "mod_axiom" (formula "18") (term "1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,1,0,0"))
                              (rule "mod_axiom" (formula "21") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,1"))
                              (rule "add_zero_left" (formula "21") (term "0,1"))
                              (rule "mod_axiom" (formula "22") (term "1,3,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,3,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "3,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,3,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,3,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,3,0,0"))
                              (rule "mod_axiom" (formula "23") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "0,0"))
                              (rule "add_zero_left" (formula "23") (term "0"))
                              (rule "mod_axiom" (formula "4") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0"))
                              (rule "mod_axiom" (formula "18") (term "1,1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,1,0,0,0,1,0"))
                              (rule "mod_axiom" (formula "14") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0"))
                              (rule "mod_axiom" (formula "17") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "17") (term "1"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                              (rule "add_literals" (formula "17") (term "0,0,1"))
                              (rule "add_zero_left" (formula "17") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                              (rule "polySimp_elimOne" (formula "14") (term "1"))
                              (rule "elimGcdEq" (formula "23") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                log_buckets))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,1"))
                              (rule "add_literals" (formula "23") (term "1,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,1,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "qeq_literals" (formula "23") (term "1,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "times_zero_1" (formula "23") (term "0,0"))
                              (rule "leq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1"))
                              (rule "mul_literals" (formula "21") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                              (rule "mul_literals" (formula "12") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "12") (term "0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0"))
                              (rule "leq_literals" (formula "12") (term "0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                              (rule "mul_literals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "2"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "13"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEqRigid" (formula "2") (term "0,1") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "2") (term "1"))
                              (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "3") (term "1,1"))
                              (rule "add_zero_right" (formula "3") (term "1"))
                              (rule "applyEqRigid" (formula "22") (term "0,0,1,1,0,0,1,1") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "22") (term "0,1,1,0,0,1,1"))
                              (rule "add_zero_left" (formula "22") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "22") (term "1"))
                              (rule "applyEq" (formula "18") (term "0,0,1,1,0,0,1,1") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "18") (term "0,1,1,0,0,1,1"))
                              (rule "add_zero_left" (formula "18") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "1"))
                              (rule "applyEqRigid" (formula "5") (term "0,0,1,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "5") (term "0,1,0"))
                              (rule "add_zero_left" (formula "5") (term "1,0"))
                              (rule "applyEqRigid" (formula "6") (term "0,0,1,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "6") (term "0,1,0"))
                              (rule "add_zero_left" (formula "6") (term "1,0"))
                              (rule "applyEqRigid" (formula "15") (term "0,0,1,1") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "15") (term "0,1,1"))
                              (rule "add_zero_left" (formula "15") (term "1,1"))
                              (rule "applyEq" (formula "24") (term "0,0,1,1,0,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "24") (term "0,1,1,0,0"))
                              (rule "add_zero_left" (formula "24") (term "1,1,0,0"))
                              (rule "applyEq" (formula "19") (term "0,0,1,1,0,0,1,1,1,0,0,0,1,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "19") (term "0,1,1,0,0,1,1,1,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "19") (term "1,1,0,0,1,1,1,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0,0,1,0"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,1,1,1") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "4") (term "0,1,1,1"))
                              (rule "add_zero_left" (formula "4") (term "1,1,1"))
                              (rule "applyEq" (formula "19") (term "0,0,1,1,0,0,1,1,1,0,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "19") (term "0,1,1,0,0,1,1,1,0,0"))
                              (rule "add_zero_left" (formula "19") (term "1,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0"))
                              (rule "applyEqRigid" (formula "23") (term "0,0,1,1,0,0,1,3,0,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "23") (term "0,1,1,0,0,1,3,0,0"))
                              (rule "add_zero_left" (formula "23") (term "1,1,0,0,1,3,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "3,0,0"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "12"))
                              (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "15") (term "0,1,1,0,0,0"))
                              (rule "add_zero_left" (formula "15") (term "1,1,0,0,0"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,1,1,0,0,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "4") (term "0,1,1,0,0,0"))
                              (rule "add_zero_left" (formula "4") (term "1,1,0,0,0"))
                              (rule "applyEqRigid" (formula "23") (term "0,0,1,1,3,0,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "23") (term "0,1,1,3,0,0"))
                              (rule "add_zero_left" (formula "23") (term "1,1,3,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "3,0,0"))
                              (rule "applyEq" (formula "19") (term "0,0,1,1,1,1,0,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "19") (term "0,1,1,1,1,0,0"))
                              (rule "add_zero_left" (formula "19") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0"))
                              (rule "applyEq" (formula "19") (term "0,0,1,1,1,1,0,0,0,1,0") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "19") (term "0,1,1,1,1,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "19") (term "1,1,1,1,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0,0,1,0"))
                              (rule "applyEqRigid" (formula "22") (term "0,0,1,1,1") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "22") (term "0,1,1,1"))
                              (rule "add_zero_left" (formula "22") (term "1,1,1"))
                              (rule "polySimp_addComm0" (formula "22") (term "1"))
                              (rule "applyEq" (formula "18") (term "0,0,1,1,1") (ifseqformula "12"))
                              (rule "times_zero_2" (formula "18") (term "0,1,1,1"))
                              (rule "add_zero_left" (formula "18") (term "1,1,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "14"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "15"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                              (rule "mul_literals" (formula "16") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "18"))
                              (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1"))
                              (rule "polySimp_rightDist" (formula "20") (term "1"))
                              (rule "mul_literals" (formula "20") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                              (rule "inEqSimp_subsumption5" (formula "20") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "greater_literals" (formula "20") (term "0,0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                              (rule "mul_literals" (formula "20") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0"))
                              (rule "qeq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                              (rule "commute_or" (formula "17") (term "1,0,0,1,0"))
                              (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                              (rule "expand_inShort" (formula "15"))
                              (rule "replace_short_MAX" (formula "15") (term "1,0"))
                              (rule "replace_short_MIN" (formula "15") (term "0,1"))
                              (rule "andLeft" (formula "15"))
                              (rule "inEqSimp_commuteLeq" (formula "15"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                              (rule "expand_inShort" (formula "18"))
                              (rule "replace_short_MAX" (formula "18") (term "1,0"))
                              (rule "replace_short_MIN" (formula "18") (term "0,1"))
                              (rule "andLeft" (formula "18"))
                              (rule "inEqSimp_commuteLeq" (formula "18"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                              (rule "leq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                              (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                              (rule "commute_or" (formula "17") (term "0,0,0,1,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0,1,0"))
                              (rule "commute_or" (formula "17") (term "0,0,0,0"))
                              (rule "inEqSimp_or_subsumption0" (formula "17") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "17") (term "0,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "commute_or" (formula "17") (term "0,0,0,1,0"))
                              (rule "div_axiom" (formula "22") (term "0") (inst "quotient=quotient_1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "20") (term "1,1,0,0"))
                              (rule "applyEq" (formula "24") (term "0,1,3,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "24") (term "3,0,0"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "23") (term "1"))
                              (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "16"))
                              (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "20") (term "1,1,0,0,0,1,0"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "19") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                              (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "qeq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "4"))
                              (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                              (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "14") (term "0,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0"))
                              (rule "qeq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_strengthen0" (formula "14") (ifseqformula "24"))
                              (rule "add_zero_right" (formula "14") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "14"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0"))
                              (rule "qeq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "false_right" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                              (rule "mul_literals" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "add_zero_left" (formula "5") (term "0"))
                              (rule "inEqSimp_contradInEq3" (formula "5") (ifseqformula "15"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "greater_literals" (formula "5") (term "0,0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                           (branch "CUT: pow(2, log_buckets % 32) <= pow(2, 8) & pow(2, log_buckets % 32) >= 1 FALSE"
                              (rule "andRight" (formula "22") (userinteraction))
                              (branch "Case 1"
                                 (rule "powMonoConcrete" (formula "22") (userinteraction))
                                 (rule "greater_literals" (formula "22") (term "1"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "replace_known_right" (formula "14") (term "0,1,0,1,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "replace_known_right" (formula "20") (term "0,1,0,1,3,0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_right" (formula "19") (term "0,1,0,1,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "replace_known_right" (formula "10") (term "0,1,0,1,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "replace_known_right" (formula "15") (term "0,1,0,1,3,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_ltRight" (formula "29"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_geqRight" (formula "30"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_geqRight" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17"))
                                 (rule "inEqSimp_commuteLeq" (formula "22"))
                                 (rule "mod_axiom" (formula "25") (term "1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1"))
                                 (rule "mod_axiom" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "23") (term "1,1,0,1,3,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,3,0,0"))
                                 (rule "mod_axiom" (formula "13") (term "1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,0"))
                                 (rule "mod_axiom" (formula "18") (term "1,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,3,0"))
                                 (rule "mod_axiom" (formula "3") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "mod_axiom" (formula "2") (term "1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,0"))
                                 (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "mod_axiom" (formula "17") (term "1,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1"))
                                 (rule "mod_axiom" (formula "22") (term "1,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                                 (rule "simplifySelectOfCreate" (formula "19"))
                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")))
                                 (rule "castDel" (formula "19") (term "0"))
                                 (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "hideAuxiliaryEq" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "add_literals" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "14") (term "0") (inst "i=i") (inst "j=j"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "expand_inInt" (formula "14") (term "1,0,0"))
                                 (rule "expand_inInt" (formula "14") (term "1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
                                 (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "14") (term "0,0"))
                                 (rule "div_axiom" (formula "19") (term "0,1,1,1,1") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "5") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,1,0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1,1,1,0,0"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1,1,1,0,0,0,1,0"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "16") (term "0,1,1,1,0,1,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1,1"))
                                 (rule "applyEq" (formula "21") (term "0,1,1,1,0,1,3,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "21") (term "1,1,0,1,3,0,0"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,1,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,1,0,1,1"))
                                 (rule "applyEq" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "22") (term "0,1,1,1,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "1,1,1"))
                                 (rule "mod_axiom" (formula "22") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0"))
                                 (rule "mod_axiom" (formula "5") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "17") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                                 (rule "mod_axiom" (formula "17") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,0,1,0"))
                                 (rule "mod_axiom" (formula "16") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "16") (term "0,1"))
                                 (rule "mod_axiom" (formula "21") (term "1,3,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,3,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "3,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,3,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,3,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,3,0,0"))
                                 (rule "mod_axiom" (formula "20") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "20") (term "0,1"))
                                 (rule "mod_axiom" (formula "13") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "elimGcdEq" (formula "21") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                log_buckets))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "qeq_literals" (formula "21") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "times_zero_1" (formula "21") (term "0,0"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "11") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "mul_literals" (formula "11") (term "1"))
                                 (rule "inEqSimp_contradInEq3" (formula "11") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0"))
                                 (rule "greater_literals" (formula "11") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "closeFalse" (formula "11"))
                              )
                              (branch "Case 2"
                                 (rule "replace_known_right" (formula "10") (term "0,1,0,1,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "replace_known_right" (formula "20") (term "0,1,0,1,3,0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_right" (formula "19") (term "0,1,0,1,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "replace_known_right" (formula "15") (term "0,1,0,1,3,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "replace_known_right" (formula "14") (term "0,1,0,1,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "powGeq1Concrete" (formula "22"))
                                 (rule "greater_literals" (formula "22") (term "1"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_ltRight" (formula "29"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "close" (formula "23") (ifseqformula "1"))
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_geqRight" (formula "27"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,3,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,3,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,3,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,3,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,1,3,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,3,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                     (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,3,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,3,0,0"))
                     (rule "mod_axiom" (formula "11") (term "0,1,1,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0,1,0"))
                     (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,3,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,3,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,3,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,3,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,3,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,3,0,0"))
                     (rule "mod_axiom" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,1,0,1,3,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,0,1,3,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,1,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,1,0,1,3,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                     (rule "mod_axiom" (formula "16") (term "1,2,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,2,1,0,1,3,0"))
                     (rule "mod_axiom" (formula "11") (term "1,2,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,2,1,0,1,0"))
                     (rule "mod_axiom" (formula "1") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "1") (term "1,2,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,3,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,3,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,3,0,0"))
                     (rule "mod_axiom" (formula "11") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                     (rule "mod_axiom" (formula "16") (term "1,0,0,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,3,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,3,0"))
                     (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "15") (term "1,2,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "20") (term "1,2,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,2,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0,1,3,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0,1,3,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,3,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                     (rule "leq_literals" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "27"))
               (rule "closeTrue" (formula "27"))
            )
         )
         (branch "Precondition"
            (rule "andRight" (formula "25"))
            (branch "Case 1"
               (rule "andRight" (formula "25"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "7")))
                  (rule "closeTrue" (formula "25"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,1,3,0,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,1,3,0,0"))
                  (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,1,3,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                  (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                  (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                  (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                  (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                  (rule "mod_axiom" (formula "25") (term "0,1,1,1,1,0,1,3,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1,1,0,1,3,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,0,1,3,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,1,1,1,0,1,3,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,1,0,1,3,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1,1,0,1,3,0,0"))
                  (rule "mod_axiom" (formula "25") (term "1,2,1,0,1,3,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,2,1,0,1,3,0,0"))
                  (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                  (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                  (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,1,3,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1,3,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,1,3,0,0"))
                  (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                  (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                  (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                  (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                  (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                  (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,0,1,3,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0,1,3,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                  (rule "leq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                  (rule "leq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                  (rule "leq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
                  (rule "leq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "wellFormedStoreObject" (formula "21"))
                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")))
                  (rule "wellFormedStorePrimitive" (formula "21") (term "0"))
                  (rule "wellFormedStorePrimitive" (formula "21") (term "0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
                  (rule "wellFormedStoreObject" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "wellFormedStorePrimitive" (formula "21") (term "0"))
                  (rule "wellFormedCreate" (formula "21") (term "0"))
                  (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                  (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "22") (ifseqformula "4"))
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "25"))
               (branch "Case 1"
                  (rule "andRight" (formula "25"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "21")))
                     (rule "closeTrue" (formula "25"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                     (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                     (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                     (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                     (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                     (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                     (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                     (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                     (rule "leq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                     (rule "leq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                     (rule "leq_literals" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "closeTrue" (formula "22"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")))
                  (rule "closeTrue" (formula "25"))
               )
            )
         )
         (branch "Usage"
             (builtin "One Step Simplification" (formula "26"))
             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "eqSymm" (formula "28") (term "1,0,0,1,0,1"))
            (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "elim_double_block_2" (formula "27") (term "1"))
            (rule "ifUnfold" (formula "27") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_1"))
            (rule "inequality_comparison_simple" (formula "27") (term "1"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "replace_known_left" (formula "27") (term "0,0,1,0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "ifSplit" (formula "27"))
            (branch "if x_1 true"
                (builtin "One Step Simplification" (formula "28"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_1 false"
                (builtin "One Step Simplification" (formula "28"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "blockEmpty" (formula "27") (term "1"))
               (rule "assignment_write_attribute_this" (formula "27"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "assignment_write_attribute_this" (formula "27"))
                (builtin "One Step Simplification" (formula "27"))
                (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_build,exc_1,heapAfter_build,anon_heap_build") (contract "de.wiesler.Tree[de.wiesler.Tree::build([I)].JML normal_behavior operation contract.0"))
               (branch "Post (build)"
                   (builtin "One Step Simplification" (formula "23"))
                   (builtin "One Step Simplification" (formula "29"))
                   (builtin "Block Contract (Internal)" (formula "29") (newnames "exc_2,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
                  (branch "Validity"
                      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "7")) (ifInst ""  (formula "26")) (ifInst ""  (formula "1")))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "expand_inInt" (formula "23") (term "1,0,0,0,1,1"))
                     (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,0,0,1,1"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "23"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (ifseqformula "23"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "25"))
                     (rule "eqSymm" (formula "33") (term "0,0,1,0,1"))
                     (rule "translateJavaShiftLeftInt" (formula "33") (term "0,1,0,0,1"))
                     (rule "eqSymm" (formula "25") (term "1,0"))
                     (rule "translateJavaSubInt" (formula "25") (term "0,2,0,1,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "0,2,0,1,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,2,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
                     (rule "variableDeclarationAssign" (formula "33") (term "1"))
                     (rule "variableDeclaration" (formula "33") (term "1") (newnames "exc_2_1"))
                     (rule "assignment" (formula "33") (term "1"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "emptyStatement" (formula "33") (term "1"))
                     (rule "emptyStatement" (formula "33") (term "1"))
                     (rule "javaShiftLeftIntDef" (formula "33") (term "0,1,0,0,1"))
                     (rule "shiftLeftDef" (formula "33") (term "0,0,1,0,0,1"))
                     (rule "polySimp_elimNeg" (formula "33") (term "1,1,0,0,1,0,0,1"))
                     (rule "shiftLeftPositiveShiftDef" (formula "33") (term "2,0,0,1,0,0,1"))
                     (rule "polySimp_elimOneLeft0" (formula "33") (term "2,0,0,1,0,0,1"))
                     (rule "shiftRightPositiveShiftDef" (formula "33") (term "1,0,0,1,0,0,1"))
                     (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                     (rule "simplifySelectOfStore" (formula "23"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "castDel" (formula "23") (term "0"))
                     (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "23"))
                     (rule "hideAuxiliaryEq" (formula "23"))
                     (rule "pullOutSelect" (formula "25") (term "1,1,0,0,0") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")))
                     (rule "sortsDisjointModuloNull" (formula "25") (term "0,0,0"))
                     (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")))
                     (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0"))
                     (rule "ifthenelse_negated" (formula "25") (term "0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "26") (term "1,1,1,0") (inst "selectSK=de_wiesler_Tree_tree_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "31")))
                     (rule "replaceKnownSelect_taclet0012111_0" (formula "26") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0012111_1" (formula "26") (term "2,0"))
                     (rule "sortsDisjointModuloNull" (formula "26") (term "0,0,0"))
                     (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")))
                     (rule "ifthenelse_negated" (formula "26") (term "0"))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "27") (term "1,1,0,2,0,1,0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
                     (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                     (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "34")))
                     (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
                     (rule "ifthenelse_negated" (formula "27") (term "0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "30") (term "0,0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "30"))
                     (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "30"))
                     (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "30"))
                     (rule "simplifySelectOfCreate" (formula "30"))
                      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "33")))
                     (rule "castDel" (formula "30") (term "0"))
                     (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "true_left" (formula "31"))
                     (rule "applyEqReverse" (formula "27") (term "0,0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "simplifySelectOfStore" (formula "27"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "castDel" (formula "27") (term "0"))
                     (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "simplifySelectOfStore" (formula "25"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "castDel" (formula "25") (term "0"))
                     (rule "applyEqReverse" (formula "28") (term "1,1,0,2,0,1,0") (ifseqformula "27"))
                     (rule "applyEqReverse" (formula "28") (term "1,1,1,0") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "30"))
                     (rule "hideAuxiliaryEq" (formula "27"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "expand_moduloInteger" (formula "33") (term "0,1,0,0,1"))
                     (rule "replace_int_RANGE" (formula "33") (term "1,1,0,1,0,0,1"))
                     (rule "replace_int_HALFRANGE" (formula "33") (term "0,0,1,0,1,0,0,1"))
                     (rule "replace_int_MIN" (formula "33") (term "0,0,1,0,0,1"))
                     (rule "commute_and" (formula "26") (term "1,0,0"))
                     (rule "commute_and" (formula "26") (term "0,0,0"))
                     (rule "shift_paren_and" (formula "26") (term "0,0"))
                     (rule "commute_and_2" (formula "26") (term "0,0,0"))
                     (rule "tryEmpty" (formula "33") (term "1"))
                     (rule "blockEmptyLabel" (formula "33") (term "1"))
                     (rule "blockEmpty" (formula "33") (term "1"))
                     (rule "methodCallEmpty" (formula "33") (term "1"))
                     (rule "emptyModality" (formula "33") (term "1"))
                     (rule "andRight" (formula "33"))
                     (branch "Case 1"
                        (rule "andRight" (formula "33"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "closeTrue" (formula "33"))
                        )
                        (branch "Case 2"
                           (rule "ifthenelse_split" (formula "33") (term "1,0,1,0,1") (userinteraction))
                           (branch "self_207.log_buckets % 32 < 0 TRUE"
                               (builtin "One Step Simplification" (formula "1"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "replaceKnownSelect_taclet0012111_4" (formula "1") (term "0,0"))
                              (rule "replaceKnownSelect_taclet0012111_4" (formula "34") (term "1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "1") (term "0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "34") (term "1,1"))
                              (rule "replaceKnownSelect_taclet0012111_4" (formula "34") (term "0,0,1,1,1,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "34") (term "0,0,1,1,1,0,1,0"))
                              (rule "replace_known_left" (formula "20") (term "0,1,0,1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_left" (formula "16") (term "0,1,0,1,3,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "replace_known_left" (formula "11") (term "0,1,0,1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "replace_known_left" (formula "15") (term "0,1,0,1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "replace_known_left" (formula "26") (term "0,1,0,1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEqReverse" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "hideAuxiliaryEq" (formula "26"))
                              (rule "replace_known_left" (formula "24") (term "0,1,0,1,3,0,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "replace_known_left" (formula "22") (term "0,1,0,1,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "polySimp_homoEq" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20"))
                              (rule "inEqSimp_commuteLeq" (formula "15"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "mul_literals" (formula "22") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "0,0"))
                              (rule "mod_axiom" (formula "16") (term "0,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0,1,3,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,0,1,3,0"))
                              (rule "mod_axiom" (formula "11") (term "0,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,0,1,0"))
                              (rule "mod_axiom" (formula "24") (term "0,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "mod_axiom" (formula "33") (term "0,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "mod_axiom" (formula "26") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "mod_axiom" (formula "20") (term "0,1,1,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,0,1,1"))
                              (rule "mod_axiom" (formula "15") (term "0,1,1,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,0,1,1"))
                              (rule "mod_axiom" (formula "22") (term "0,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,0,1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "33"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "mul_literals" (formula "22") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                              (rule "leq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "10"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                              (rule "leq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "13"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_and_subsumption3" (formula "22") (term "0,0,0"))
                              (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "nnf_imp2or" (formula "22") (term "0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,1,0,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "12") (term "0") (inst "i=i") (inst "j=j"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "expand_inInt" (formula "12") (term "1,0,0"))
                              (rule "expand_inInt" (formula "12") (term "1,0,0,1,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                              (rule "replace_int_MAX" (formula "12") (term "1,0,1,0,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0,1,0"))
                              (rule "replace_int_MAX" (formula "12") (term "1,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "12") (term "1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,1,0,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                              (rule "nnf_notAnd" (formula "12") (term "1,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,1,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,1,1,0,0,1,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,1,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,1,0"))
                              (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "22") (term "1,0,2,0,1,0"))
                              (rule "translateJavaSubInt" (formula "22") (term "0,1,1,1,0,2,0,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "1,0,0,1,0,2,0,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0,2,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,1,1,1,0,2,0,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,2,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,2,0,1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,1,0,1,0,2,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0,2,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0,2,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,1,0,2,0,1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "1,1,0,2,0,1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,1,1,0,2,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,2,0,1,0"))
                              (rule "polySimp_mulComm1" (formula "22") (term "1,1,0,2,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,2,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,1,0,2,0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,2,0,1,0"))
                              (rule "polySimp_mulComm1" (formula "22") (term "1,0,1,0,2,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1,0,2,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,2,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,0,1,0"))
                              (rule "commute_or" (formula "22") (term "0,0,0"))
                              (rule "commute_or_2" (formula "12") (term "0,0"))
                              (rule "div_axiom" (formula "20") (term "0,1,1,1,1,0,1,3,0,0,0,0,0") (inst "quotient=quotient_0"))
                              (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "20") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "equal_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "polySimp_addComm1" (formula "22") (term "1"))
                              (rule "add_literals" (formula "22") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "21"))
                              (rule "inEqSimp_homoInEq1" (formula "22"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "applyEq" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0") (ifseqformula "20"))
                              (rule "polySimp_addComm0" (formula "23") (term "1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "applyEq" (formula "18") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                              (rule "polySimp_addComm0" (formula "18") (term "1,1,1,0,0"))
                              (rule "applyEq" (formula "16") (term "0,1,1,1,1,0,1,1") (ifseqformula "20"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,1,1,0,1,1"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "20"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "11") (term "0,1,1,1,1,0,1,1") (ifseqformula "20"))
                              (rule "polySimp_addComm0" (formula "11") (term "1,1,1,0,1,1"))
                              (rule "applyEq" (formula "15") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,1,1,0,0"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                              (rule "polySimp_addComm0" (formula "32") (term "1,1,1,0,0"))
                              (rule "applyEq" (formula "25") (term "0,1,1,1,1,0,1,1,1,0,0,0") (ifseqformula "20"))
                              (rule "polySimp_addComm0" (formula "25") (term "1,1,1,0,1,1,1,0,0,0"))
                              (rule "applyEq" (formula "12") (term "0,1,1,1,1,0,1,1,1,0,0") (ifseqformula "20"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0,1,1,1,0,0"))
                              (rule "applyEq" (formula "12") (term "0,1,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "20"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0,1,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0"))
                              (rule "qeq_literals" (formula "22") (term "0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                              (rule "andLeft" (formula "21"))
                              (rule "inEqSimp_homoInEq1" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                              (rule "add_literals" (formula "21") (term "1,1,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0"))
                              (rule "add_zero_right" (formula "21") (term "0"))
                              (rule "leq_literals" (formula "21"))
                              (rule "closeFalse" (formula "21"))
                           )
                           (branch "self_207.log_buckets % 32 < 0 FALSE"
                              (rule "powPositive" (formula "34") (term "1,0,1,0,1") (userinteraction))
                               (builtin "One Step Simplification" (formula "35") (userinteraction))
                              (rule "replaceKnownSelect_taclet0012111_4" (formula "35") (term "0,1,1,0,1,0") (userinteraction))
                              (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "35") (term "0,1,1,0,1,0") (userinteraction))
                              (rule "cut" (inst "cutFormula=leq(pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))),
    pow(Z(2(#)), de.wiesler.Constants.LOG_MAX_BUCKETS))<<origin(\"User_Interaction @ node 22488 (cut)\",\"[]\")>>") (userinteraction))
                              (branch "CUT: pow(2, log_buckets % 32) <= pow(2, de.wiesler.Constants.LOG_MAX_BUCKETS) TRUE"
                                 (rule "eqTermCut" (formula "36") (term "1,0") (inst "s=add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
    pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))))") (userinteraction))
                                 (branch "Assume (2147483648 + pow(2, log_buckets % 32)) % 4294967296 = 2147483648 + pow(2, log_buckets % 32)"
                                     (builtin "One Step Simplification" (formula "2"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "replaceKnownSelect_taclet0012111_4" (formula "37") (term "1,1"))
                                    (rule "replaceKnownSelect_taclet0012111_4" (formula "36") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "37") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "36") (term "0,0"))
                                    (rule "greater_literals" (formula "3") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "pow_literals" (formula "2") (term "1"))
                                    (rule "replace_known_right" (formula "17") (term "0,1,0,1,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "replace_known_right" (formula "13") (term "0,1,0,1,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_right" (formula "22") (term "0,1,0,1,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "replace_known_right" (formula "18") (term "0,1,0,1,3,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "replace_known_right" (formula "28") (term "0,1,0,1,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "replace_known_right" (formula "24") (term "0,1,0,1,1") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "26") (term "0,1,0,1,3,0,0,0,0,0") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "polySimp_homoEq" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0"))
                                    (rule "inEqSimp_ltRight" (formula "35"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18"))
                                    (rule "inEqSimp_commuteLeq" (formula "23"))
                                    (rule "inEqSimp_homoInEq0" (formula "25"))
                                    (rule "mul_literals" (formula "25") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "0,0"))
                                    (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "0,0"))
                                    (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "1"))
                                    (rule "add_literals" (formula "23") (term "0,1"))
                                    (rule "add_zero_left" (formula "23") (term "1"))
                                    (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                    (rule "add_literals" (formula "18") (term "0,1"))
                                    (rule "add_zero_left" (formula "18") (term "1"))
                                    (rule "applyEq" (formula "27") (term "1,3,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "3,0,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,3,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "3,0,0,0,0,0"))
                                    (rule "applyEq" (formula "19") (term "1,3,0") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "3,0"))
                                    (rule "add_literals" (formula "19") (term "0,3,0"))
                                    (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0"))
                                    (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0"))
                                    (rule "applyEq" (formula "29") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                    (rule "polySimp_homoEq" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "mod_axiom" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                    (rule "mod_axiom" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1"))
                                    (rule "mod_axiom" (formula "4") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "mod_axiom" (formula "1") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                    (rule "mod_axiom" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                    (rule "mod_axiom" (formula "23") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                    (rule "mod_axiom" (formula "18") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                    (rule "mod_axiom" (formula "27") (term "1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,3,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "19") (term "1,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,3,0"))
                                    (rule "mod_axiom" (formula "36") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                    (rule "mod_axiom" (formula "29") (term "1,0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "mul_literals" (formula "25") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "16"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_and_subsumption3" (formula "24") (term "0,0,0"))
                                    (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "nnf_imp2or" (formula "24") (term "0"))
                                    (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,1,0,0,0"))
                                    (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "15") (term "0") (inst "i=i") (inst "j=j"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "expand_inInt" (formula "15") (term "1,0,0"))
                                    (rule "expand_inInt" (formula "15") (term "1,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                    (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0,1,0"))
                                    (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "1,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,1,1,0,0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,0"))
                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "24") (term "1,0,2,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "24") (term "0,1,1,1,0,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "24") (term "1,0,0,1,0,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "24") (term "0,1,1,1,0,2,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,1,1,1,0,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "24") (term "1,1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,1,0,1,0,2,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "1,1,0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm1" (formula "24") (term "1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,2,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm1" (formula "24") (term "1,0,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,1,0,2,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,2,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,2,0,1,0"))
                                    (rule "commute_or" (formula "24") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0,0"))
                                    (rule "div_axiom" (formula "3") (term "0,1,1,0") (inst "quotient=quotient_0"))
                                    (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "equal_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "add_literals" (formula "5") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "27") (term "0,1,1,1,1,0,0,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "27") (term "1,1,1,0,0,0"))
                                    (rule "applyEq" (formula "23") (term "0,1,1,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "23") (term "1,0"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "applyEq" (formula "17") (term "0,1,1,1,1,1,0,0,0,1,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,1,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "1") (term "0,1,1,1,0,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "applyEq" (formula "5") (term "0,1,1,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                    (rule "applyEq" (formula "24") (term "0,1,1,3,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "24") (term "1,3,0,0,0,0,0"))
                                    (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "33") (term "1,0"))
                                    (rule "applyEq" (formula "16") (term "0,1,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,1"))
                                    (rule "applyEq" (formula "20") (term "0,1,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "20") (term "1,1"))
                                    (rule "applyEq" (formula "17") (term "0,1,1,1,1,1,0,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,1,1,0,0"))
                                    (rule "applyEq" (formula "1") (term "0,1,1,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                                    (rule "mod_axiom" (formula "1") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "elimGcdEq" (formula "1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                log_buckets))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "12") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                    (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                    (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "12"))
                                    (rule "times_zero_2" (formula "4") (term "1,1"))
                                    (rule "add_zero_right" (formula "4") (term "1"))
                                    (rule "applyEqRigid" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "1,1,0,0"))
                                    (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "18") (term "0,0,1,1,1,1,0,0") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,1,1,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "1,1,1,1,0,0"))
                                    (rule "applyEqRigid" (formula "23") (term "0,0,1,0") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "1,0"))
                                    (rule "applyEq" (formula "17") (term "0,0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1"))
                                    (rule "add_zero_left" (formula "17") (term "1,1"))
                                    (rule "applyEq" (formula "25") (term "0,0,1,3,0,0,0,0,0") (ifseqformula "12"))
                                    (rule "times_zero_2" (formula "25") (term "0,1,3,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "1,3,0,0,0,0,0"))
                                    (rule "applyEq" (formula "18") (term "0,0,1,1,1,1,0,0,0,1,0") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,1,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "1,1,1,1,0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "21") (term "0,0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1"))
                                    (rule "add_zero_left" (formula "21") (term "1,1"))
                                    (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0"))
                                    (rule "add_zero_left" (formula "34") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "closeTrue" (formula "34"))
                                 )
                                 (branch "Assume (2147483648 + pow(2, log_buckets % 32)) % 4294967296 != 2147483648 + pow(2, log_buckets % 32)"
                                    (rule "notLeft" (formula "1") (userinteraction))
                                    (rule "cut" (inst "cutFormula=(  leq(pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))),
       pow(Z(2(#)), Z(8(#))))<<origin(\"User_Interaction @ node 26836 (cut)\",\"[]\")>>
 & geq(pow(Z(2(#)), mod(log_buckets, Z(2(3(#))))),
       Z(1(#)))<<origin(\"User_Interaction @ node 26836 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 26836 (cut)\",\"[]\")>>") (userinteraction))
                                    (branch "CUT: pow(2, log_buckets % 32) <= pow(2, 8) & pow(2, log_buckets % 32) >= 1 TRUE"
                                        (builtin "One Step Simplification" (formula "2"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "replaceKnownSelect_taclet0012111_4" (formula "38") (term "1,1"))
                                       (rule "replaceKnownSelect_taclet0012111_4" (formula "37") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "38") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "37") (term "0,0"))
                                       (rule "greater_literals" (formula "3") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "pow_literals" (formula "1") (term "1,0"))
                                       (rule "pow_literals" (formula "2") (term "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "replace_known_right" (formula "26") (term "0,1,0,1,3,0,0,0,0,0") (ifseqformula "37"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "replace_known_right" (formula "28") (term "0,1,0,1,0") (ifseqformula "37"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "applyEqReverse" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "28"))
                                       (rule "hideAuxiliaryEq" (formula "28"))
                                       (rule "replace_known_right" (formula "24") (term "0,1,0,1,1") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "22") (term "0,1,0,1,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "13") (term "0,1,0,1,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "replace_known_right" (formula "17") (term "0,1,0,1,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "replace_known_right" (formula "18") (term "0,1,0,1,3,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "polySimp_homoEq" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0"))
                                       (rule "inEqSimp_ltRight" (formula "36"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                       (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "23"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "25"))
                                       (rule "mul_literals" (formula "25") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "add_literals" (formula "25") (term "0,0"))
                                       (rule "mod_axiom" (formula "31") (term "1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,1"))
                                       (rule "mod_axiom" (formula "31") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                       (rule "mod_axiom" (formula "3") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                       (rule "mod_axiom" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "mod_axiom" (formula "4") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1"))
                                       (rule "mod_axiom" (formula "2") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                       (rule "mod_axiom" (formula "27") (term "1,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,3,0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "14") (term "1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,0"))
                                       (rule "mod_axiom" (formula "19") (term "1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "1") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "mod_axiom" (formula "37") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "29") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "23") (term "1,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1"))
                                       (rule "mod_axiom" (formula "18") (term "1,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1"))
                                       (rule "mod_axiom" (formula "25") (term "1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "37"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                       (rule "mul_literals" (formula "25") (term "1"))
                                       (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0"))
                                       (rule "inEqSimp_and_subsumption3" (formula "25") (term "0,0,0"))
                                       (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "nnf_imp2or" (formula "25") (term "0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0"))
                                       (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "16") (term "0") (inst "i=i") (inst "j=j"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "expand_inInt" (formula "16") (term "1,0,0"))
                                       (rule "expand_inInt" (formula "16") (term "1,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "16") (term "1,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0"))
                                       (rule "replace_int_MAX" (formula "16") (term "1,0,1,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,1,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,1,0"))
                                       (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "25") (term "1,0,2,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "25") (term "0,1,1,1,0,2,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "25") (term "1,0,0,1,0,2,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "25") (term "1,1,1,0,2,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "25") (term "0,1,1,1,0,2,0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,1,1,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,1,0,1,0,2,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "1,1,0,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm1" (formula "25") (term "1,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,1,0,2,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0,0,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm1" (formula "25") (term "1,0,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1,0,2,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,2,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,2,0,1,0"))
                                       (rule "commute_or" (formula "25") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "16") (term "0,0"))
                                       (rule "div_axiom" (formula "27") (term "0,1,1,1,1") (inst "quotient=quotient_0"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "19") (term "0,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,1,0,1,1,1,0,0,0,1,0"))
                                       (rule "applyEq" (formula "28") (term "0,1,1,1,0,1,1,1,0,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "1,1,0,1,1,1,0,0,0"))
                                       (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "22") (term "0,1,1,1,0,1,1") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "22") (term "1,1,0,1,1"))
                                       (rule "applyEq" (formula "18") (term "0,1,1,1,0,1,1") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1,1,0,1,1"))
                                       (rule "applyEq" (formula "5") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                       (rule "applyEq" (formula "19") (term "0,1,1,1,0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,1,0,1,1,1,0,0"))
                                       (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "36") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "6") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                                       (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_commuteLeq" (formula "4"))
                                       (rule "applyEq" (formula "25") (term "0,1,1,1,0,1,3,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "25") (term "1,1,0,1,3,0,0,0,0,0"))
                                       (rule "applyEq" (formula "29") (term "0,1,1,1,1") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "29") (term "1,1,1"))
                                       (rule "mod_axiom" (formula "18") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,1,0,0,0,1,0"))
                                       (rule "mod_axiom" (formula "27") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,1,1,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,1,1,0,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,1,1,0,0,0"))
                                       (rule "mod_axiom" (formula "29") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0"))
                                       (rule "mod_axiom" (formula "21") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "21") (term "0,1"))
                                       (rule "mod_axiom" (formula "17") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "17") (term "0,1"))
                                       (rule "mod_axiom" (formula "18") (term "1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,1,0,0"))
                                       (rule "mod_axiom" (formula "35") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "35") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "23") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "16") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "25") (term "1,3,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,3,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "3,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,3,0,0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,3,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,3,0,0,0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                       (rule "elimGcdEq" (formula "29") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                log_buckets))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,0"))
                                       (rule "add_literals" (formula "29") (term "1,0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,1,0"))
                                       (rule "times_zero_1" (formula "29") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0"))
                                       (rule "leq_literals" (formula "29") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "qeq_literals" (formula "29") (term "0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "12") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "add_literals" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "12") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0"))
                                       (rule "leq_literals" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "16"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                                       (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "applyEqRigid" (formula "24") (term "0,0,1,1,0,0,0") (ifseqformula "12"))
                                       (rule "times_zero_2" (formula "24") (term "0,1,1,0,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "applyEq" (formula "36") (term "0,0,1,1,0,0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                       (rule "add_zero_left" (formula "36") (term "1,1,0,0,0"))
                                       (rule "polySimp_homoEq" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0"))
                                       (rule "applyEqRigid" (formula "17") (term "0,0,1,1,0,0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "5") (term "1,0"))
                                       (rule "applyEq" (formula "18") (term "0,0,1,1,0,0,1,1") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1"))
                                       (rule "add_zero_left" (formula "18") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1"))
                                       (rule "applyEq" (formula "19") (term "0,0,1,1,0,0,1,1,1,0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,1,1,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "1,1,0,0,1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,1") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,1"))
                                       (rule "add_zero_left" (formula "22") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "22") (term "1"))
                                       (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "4") (term "1,0"))
                                       (rule "applyEqRigid" (formula "28") (term "0,0,1,1,0,0,1,1,1,0,0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,1,1,0,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "1,1,0,0,1,1,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,0"))
                                       (rule "applyEqRigid" (formula "30") (term "0,0,1,1,0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "30") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "19") (term "0,0,1,1,0,0,1,1,1,0,0,0,1,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,1,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "19") (term "1,1,0,0,1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0,0,1,0"))
                                       (rule "applyEq" (formula "26") (term "0,0,1,1,0,0,1,3,0,0,0,0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,3,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "1,1,0,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "3,0,0,0,0,0"))
                                       (rule "applyEq" (formula "19") (term "0,0,1,1,1,1,0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,1,1,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0"))
                                       (rule "applyEqRigid" (formula "24") (term "0,0,1,1,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                       (rule "add_zero_left" (formula "24") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "applyEq" (formula "17") (term "0,0,1,1,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0"))
                                       (rule "add_zero_left" (formula "17") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "applyEqRigid" (formula "26") (term "0,0,1,1,3,0,0,0,0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,3,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "1,1,3,0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "3,0,0,0,0,0"))
                                       (rule "applyEqRigid" (formula "18") (term "0,0,1,1,1") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,1"))
                                       (rule "add_zero_left" (formula "18") (term "1,1,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1"))
                                       (rule "applyEqRigid" (formula "28") (term "0,0,1,1,1,1,0,0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,1,1,0,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "1,1,1,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,0"))
                                       (rule "applyEqRigid" (formula "19") (term "0,0,1,1,1,1,0,0,0,1,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,1,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "19") (term "1,1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0,0,1,0"))
                                       (rule "applyEq" (formula "22") (term "0,0,1,1,1") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,1"))
                                       (rule "add_zero_left" (formula "22") (term "1,1,1"))
                                       (rule "polySimp_addComm0" (formula "22") (term "1"))
                                       (rule "applyEq" (formula "36") (term "0,0,1,1,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                       (rule "add_zero_left" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0"))
                                       (rule "polySimp_pullOutFactor2" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0"))
                                       (rule "polySimp_invertEq" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                       (rule "mul_literals" (formula "36") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "elimGcdEq" (formula "34") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        pow(Z(2(#)), log_buckets)),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "28")))
                                       (rule "times_zero_1" (formula "34") (term "1,0,1,0"))
                                       (rule "add_zero_left" (formula "34") (term "0,0,0"))
                                       (rule "add_literals" (formula "34") (term "1,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "34") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "times_zero_1" (formula "34") (term "0,0"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1"))
                                       (rule "mul_literals" (formula "20") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "14"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "mul_literals" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                       (rule "div_axiom" (formula "4") (term "0,1,1,0,1") (inst "quotient=quotient_1"))
                                       (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "equal_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "6") (term "1"))
                                       (rule "add_literals" (formula "6") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "7") (term "0,1,1,0,1") (ifseqformula "4"))
                                       (rule "polySimp_addComm0" (formula "7") (term "1,0,1"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_commuteLeq" (formula "7") (term "0"))
                                       (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "commute_or" (formula "20") (term "1,0,0,1,0"))
                                       (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                       (rule "expand_inShort" (formula "16"))
                                       (rule "replace_short_MIN" (formula "16") (term "0,1"))
                                       (rule "replace_short_MAX" (formula "16") (term "1,0"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                       (rule "expand_inShort" (formula "21"))
                                       (rule "replace_short_MIN" (formula "21") (term "0,1"))
                                       (rule "replace_short_MAX" (formula "21") (term "1,0"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "inEqSimp_commuteLeq" (formula "21"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "23"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "29") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0,0,1,0"))
                                       (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "20") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "20") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "div_axiom" (formula "31") (term "0") (inst "quotient=quotient_2"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "applyEq" (formula "30") (term "0,1,3,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "30") (term "3,0,0,0,0,0"))
                                       (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "23") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "1,0,0,0,0,1,0"))
                                       (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "26") (term "1"))
                                       (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "22") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "27"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "4"))
                                       (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "add_literals" (formula "26") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "26") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "26") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0"))
                                       (rule "qeq_literals" (formula "26") (term "0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_strengthen0" (formula "26") (ifseqformula "33"))
                                       (rule "add_zero_right" (formula "26") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "26"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0"))
                                       (rule "qeq_literals" (formula "33") (term "0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "false_right" (formula "33"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "27"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "greater_literals" (formula "3") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: pow(2, log_buckets % 32) <= pow(2, 8) & pow(2, log_buckets % 32) >= 1 FALSE"
                                       (rule "andRight" (formula "30") (userinteraction))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "replaceKnownSelect_taclet0012111_4" (formula "38") (term "1,1"))
                                          (rule "replaceKnownSelect_taclet0012111_4" (formula "37") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "38") (term "1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "37") (term "0,0"))
                                          (rule "greater_literals" (formula "2") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "pow_literals" (formula "1") (term "1"))
                                          (rule "replace_known_right" (formula "21") (term "0,1,0,1,0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "17") (term "0,1,0,1,3,0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "replace_known_right" (formula "27") (term "0,1,0,1,0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "applyEqReverse" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "27"))
                                          (rule "hideAuxiliaryEq" (formula "27"))
                                          (rule "replace_known_right" (formula "25") (term "0,1,0,1,3,0,0,0,0,0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_right" (formula "12") (term "0,1,0,1,0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "replace_known_right" (formula "16") (term "0,1,0,1,0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "replace_known_right" (formula "23") (term "0,1,0,1,1") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_homoEq" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0"))
                                          (rule "powGeq1Concrete" (formula "29"))
                                          (rule "greater_literals" (formula "29") (term "1"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_ltRight" (formula "36"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "close" (formula "30") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: pow(2, log_buckets % 32) <= pow(2, de.wiesler.Constants.LOG_MAX_BUCKETS) FALSE"
                                 (rule "powMonoConcrete" (formula "29") (userinteraction))
                                  (builtin "One Step Simplification" (formula "35"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "replaceKnownSelect_taclet0012111_4" (formula "36") (term "1,1"))
                                 (rule "replaceKnownSelect_taclet0012111_4" (formula "35") (term "0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "36") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0012111_9" (formula "35") (term "0,0"))
                                 (rule "greater_literals" (formula "1") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "greater_literals" (formula "29") (term "1"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "replace_known_right" (formula "20") (term "0,1,0,1,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_right" (formula "15") (term "0,1,0,1,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "replace_known_right" (formula "16") (term "0,1,0,1,3,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "replace_known_right" (formula "11") (term "0,1,0,1,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_right" (formula "24") (term "0,1,0,1,3,0,0,0,0,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_right" (formula "22") (term "0,1,0,1,1") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "replace_known_right" (formula "26") (term "0,1,0,1,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "applyEqReverse" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "26"))
                                 (rule "hideAuxiliaryEq" (formula "26"))
                                 (rule "polySimp_homoEq" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_ltRight" (formula "34"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                 (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_geqRight" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22"))
                                 (rule "inEqSimp_commuteLeq" (formula "17"))
                                 (rule "inEqSimp_homoInEq0" (formula "24"))
                                 (rule "mul_literals" (formula "24") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "0,0"))
                                 (rule "mod_axiom" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mod_axiom" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1"))
                                 (rule "mod_axiom" (formula "18") (term "1,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,3,0"))
                                 (rule "mod_axiom" (formula "13") (term "1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,0"))
                                 (rule "mod_axiom" (formula "26") (term "1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "2") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "mod_axiom" (formula "35") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "mod_axiom" (formula "28") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "22") (term "1,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1"))
                                 (rule "mod_axiom" (formula "17") (term "1,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1"))
                                 (rule "mod_axiom" (formula "24") (term "1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                 (rule "mul_literals" (formula "24") (term "1"))
                                 (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "greater_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "23") (term "0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "nnf_imp2or" (formula "23") (term "0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,1,0,0,0"))
                                 (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "14") (term "0") (inst "i=i") (inst "j=j"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "expand_inInt" (formula "14") (term "1,0,0"))
                                 (rule "expand_inInt" (formula "14") (term "1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
                                 (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,1,0,0,1,0"))
                                 (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "23") (term "1,0,2,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,1,1,1,0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "23") (term "1,0,0,1,0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "23") (term "0,1,1,1,0,2,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "1,0,1,1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,1,0,1,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "1,1,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm1" (formula "23") (term "1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,1,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm1" (formula "23") (term "1,0,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1,0,2,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,2,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,2,0,1,0"))
                                 (rule "commute_or" (formula "23") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "14") (term "0,0"))
                                 (rule "div_axiom" (formula "2") (term "0,1,1,0,1") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "equal_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "polySimp_addComm1" (formula "4") (term "1"))
                                 (rule "add_literals" (formula "4") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "5") (term "0,1,1,0,1") (ifseqformula "2"))
                                 (rule "polySimp_addComm0" (formula "5") (term "1,0,1"))
                                 (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0"))
                                 (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "div_axiom" (formula "24") (term "0,1,1,1,0,1,3,0,0,0,0,0") (inst "quotient=quotient_1"))
                                 (rule "mul_literals" (formula "24") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "equal_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "polySimp_addComm1" (formula "26") (term "1"))
                                 (rule "add_literals" (formula "26") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "25"))
                                 (rule "inEqSimp_homoInEq1" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1,1,1,0,0,0,1,0"))
                                 (rule "applyEq" (formula "16") (term "0,1,1,1,0,1,1") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1,1"))
                                 (rule "applyEq" (formula "27") (term "0,1,1,1,0,1,3,0,0,0,0,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "27") (term "1,1,0,1,3,0,0,0,0,0"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,1,1") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,1,0,1,1"))
                                 (rule "applyEq" (formula "29") (term "0,1,1,1,0,1,1,1,0,0,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "29") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "24"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "36") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,1,0,1,1,1,0,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "17") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,0,1,0"))
                                 (rule "mod_axiom" (formula "16") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "16") (term "0,1"))
                                 (rule "mod_axiom" (formula "27") (term "1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,3,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "3,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,3,0,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,3,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,3,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "20") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "20") (term "0,1"))
                                 (rule "mod_axiom" (formula "29") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,1,1,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,1,1,0,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,1,1,0,0,0"))
                                 (rule "mod_axiom" (formula "15") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "22") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "36") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "36") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "17") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1"))
                                 (rule "mul_literals" (formula "26") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                 (rule "mul_literals" (formula "15") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1"))
                                 (rule "mul_literals" (formula "22") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0"))
                                 (rule "qeq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1"))
                                 (rule "mul_literals" (formula "16") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "25"))
                                 (rule "mul_literals" (formula "11") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "mul_literals" (formula "11") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(3(#)))"))
                                 (rule "leq_literals" (formula "11") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "12"))
                                 (rule "greater_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,0"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "closeTrue" (formula "33"))
                     )
                  )
                  (branch "Precondition"
                     (rule "andRight" (formula "29"))
                     (branch "Case 1"
                        (rule "andRight" (formula "29"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "7")))
                           (rule "closeTrue" (formula "29"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "expand_inInt" (formula "23") (term "1,0,0,0,1,1"))
                           (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,0,0,1,1"))
                           (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,0,0,1,1"))
                           (rule "andLeft" (formula "23"))
                           (rule "wellFormedAnonEQ" (formula "30") (ifseqformula "23"))
                           (rule "andLeft" (formula "24"))
                           (rule "andLeft" (formula "25"))
                           (rule "translateJavaSubInt" (formula "25") (term "0,2,1,1,0"))
                           (rule "eqSymm" (formula "25") (term "1,0"))
                           (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_elimSub" (formula "25") (term "0,2,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,2,0,1,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,2,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,1,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,1"))
                           (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,3,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,1,3,0,0,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,0,1,0,1,3,0,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,0,1,0,1,3,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "1,1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "21"))
                           (rule "mul_literals" (formula "21") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "0,0"))
                           (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                           (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                           (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                           (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                           (rule "mod_axiom" (formula "23") (term "1,2,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "mod_axiom" (formula "23") (term "1,2,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                           (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "mod_axiom" (formula "31") (term "0,1,1,1,1,0,1,3,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,1,1,1,0,1,3,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,1,1,0,1,3,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,1,1,0,1,3,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,1,1,0,1,3,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,1,1,0,1,3,0,0,0,0"))
                           (rule "mod_axiom" (formula "31") (term "1,2,1,0,1,3,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,2,1,0,1,3,0,0,0,0"))
                           (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                           (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                           (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "mod_axiom" (formula "31") (term "1,0,0,1,0,1,3,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0,1,3,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,1,3,0,0,0,0"))
                           (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                           (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                           (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1,0,1,3,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1,0,1,3,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                           (rule "mul_literals" (formula "21") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                           (rule "leq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "20"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
                           (rule "leq_literals" (formula "5") (term "0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                           (rule "leq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "pullOutSelect" (formula "20") (term "1,1,1,0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
                           (rule "eqSymm" (formula "20") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,0,0"))
                           (rule "sortsDisjointModuloNull" (formula "20") (term "0,0,0"))
                           (rule "replace_known_right" (formula "20") (term "1,0,0,0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "ifthenelse_negated" (formula "20") (term "0"))
                           (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "21") (term "1,1,0,2,0,1,0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
                           (rule "eqSymm" (formula "21") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "2,0"))
                           (rule "sortsDisjointModuloNull" (formula "21") (term "0,0,0"))
                           (rule "replace_known_right" (formula "21") (term "1,0,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "ifthenelse_negated" (formula "21") (term "0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                           (rule "wellFormedStoreObject" (formula "28"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "26")))
                           (rule "wellFormedStorePrimitive" (formula "28") (term "0"))
                           (rule "dismissNonSelectedField" (formula "28") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "28") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "28") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "28") (term "0,1"))
                           (rule "wellFormedStoreObject" (formula "28") (term "0"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                           (rule "wellFormedStorePrimitive" (formula "28") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "28") (term "0,0"))
                           (rule "wellFormedCreate" (formula "28") (term "0,0"))
                           (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                           (rule "pullOutSelect" (formula "22") (term "1,1,1,0,0,0") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "25")))
                           (rule "eqSymm" (formula "22") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                           (rule "sortsDisjointModuloNull" (formula "22") (term "0,0,0"))
                           (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
                           (rule "ifthenelse_negated" (formula "22") (term "0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "18") (term "0,1,0") (inst "selectSK=de_wiesler_Tree_tree_1"))
                           (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "18"))
                           (rule "simplifySelectOfStore" (formula "18"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "castDel" (formula "18") (term "0"))
                           (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "19") (term "0,1,0") (ifseqformula "18"))
                           (rule "hideAuxiliaryEq" (formula "18"))
                           (rule "pullOutSelect" (formula "20") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "20"))
                           (rule "simplifySelectOfCreate" (formula "20"))
                            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")))
                           (rule "castDel" (formula "20") (term "0"))
                           (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "simplifySelectOfStore" (formula "22"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "castDel" (formula "22") (term "0"))
                           (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "simplifySelectOfStore" (formula "23"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "castDel" (formula "23") (term "0"))
                           (rule "applyEqReverse" (formula "24") (term "1,1,1,0") (ifseqformula "21"))
                           (rule "applyEqReverse" (formula "24") (term "1,1,0,2,0,1,0") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "20"))
                           (rule "hideAuxiliaryEq" (formula "20"))
                           (rule "hideAuxiliaryEq" (formula "20"))
                           (rule "polySimp_homoEq" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "applyEq" (formula "11") (term "1,3,0") (ifseqformula "20"))
                           (rule "polySimp_addAssoc" (formula "11") (term "3,0"))
                           (rule "add_literals" (formula "11") (term "0,3,0"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "0,0"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0"))
                           (rule "add_zero_left" (formula "10") (term "0,0"))
                           (rule "applyEq" (formula "18") (term "1,3,0,0,0,0,0") (ifseqformula "20"))
                           (rule "polySimp_addAssoc" (formula "18") (term "3,0,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,3,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "18") (term "3,0,0,0,0,0"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq0" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                           (rule "polySimp_elimOne" (formula "14") (term "1"))
                           (rule "pullOutSelect" (formula "27") (term "0,1") (inst "selectSK=java_lang_Object_created__1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                           (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "28") (ifseqformula "4"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "29"))
                        (branch "Case 1"
                           (rule "andRight" (formula "29"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "25")))
                              (rule "closeTrue" (formula "29"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "expand_inInt" (formula "23") (term "1,0,0,0,1,1"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,0,0,1,1"))
                              (rule "andLeft" (formula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "23"))
                              (rule "andLeft" (formula "24"))
                              (rule "orRight" (formula "31"))
                              (rule "andLeft" (formula "25"))
                              (rule "translateJavaSubInt" (formula "25") (term "0,2,1,1,0"))
                              (rule "eqSymm" (formula "25") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "25") (term "0,2,0,1,0"))
                              (rule "mul_literals" (formula "25") (term "1,0,2,0,1,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,2,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "31") (term "0"))
                              (rule "dismissNonSelectedField" (formula "31") (term "0"))
                              (rule "dismissNonSelectedField" (formula "31") (term "0"))
                              (rule "dismissNonSelectedField" (formula "31") (term "0"))
                              (rule "dismissNonSelectedField" (formula "31") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,1"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,3,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,3,0,0,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "add_literals" (formula "21") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                              (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                              (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                              (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                              (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                              (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                              (rule "mod_axiom" (formula "23") (term "1,2,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                              (rule "mod_axiom" (formula "23") (term "1,2,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                              (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                              (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0"))
                              (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                              (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                              (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                              (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,0,1,3,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                              (rule "leq_literals" (formula "12") (term "0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "pullOutSelect" (formula "20") (term "1,1,1,0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
                              (rule "eqSymm" (formula "20") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,0,0"))
                              (rule "sortsDisjointModuloNull" (formula "20") (term "0,0,0"))
                              (rule "replace_known_right" (formula "20") (term "1,0,0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,0,0"))
                              (rule "ifthenelse_negated" (formula "20") (term "0"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                              (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "applyEqReverse" (formula "21") (term "1,1,1,0") (ifseqformula "20"))
                              (rule "hideAuxiliaryEq" (formula "20"))
                              (rule "pullOutSelect" (formula "20") (term "1,1,0,2,0,1,0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
                              (rule "eqSymm" (formula "20") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "20") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,0,0"))
                              (rule "sortsDisjointModuloNull" (formula "20") (term "0,0,0"))
                              (rule "replace_known_right" (formula "20") (term "1,0,0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,0,0"))
                              (rule "ifthenelse_negated" (formula "20") (term "0"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "20") (term "0,0,0"))
                              (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "applyEqReverse" (formula "21") (term "1,1,0,2,0,1,0") (ifseqformula "20"))
                              (rule "hideAuxiliaryEq" (formula "20"))
                              (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "closeTrue" (formula "27"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")))
                           (rule "closeTrue" (formula "29"))
                        )
                     )
                  )
                  (branch "Usage"
                      (builtin "One Step Simplification" (formula "30"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "expand_inInt" (formula "23") (term "1,0,0,0,1,1"))
                     (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,0,0,1,1"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "23"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "23"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "25"))
                     (rule "translateJavaShiftLeftInt" (formula "27") (term "0"))
                     (rule "eqSymm" (formula "25") (term "1,0"))
                     (rule "translateJavaSubInt" (formula "25") (term "0,2,0,1,0"))
                     (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "polySimp_elimSub" (formula "25") (term "0,2,0,1,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,2,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "1,1,0,0"))
                     (rule "javaShiftLeftIntDef" (formula "27") (term "0"))
                     (rule "shiftLeftDef" (formula "27") (term "0,0"))
                     (rule "polySimp_elimNeg" (formula "27") (term "1,1,0,0"))
                     (rule "shiftLeftPositiveShiftDef" (formula "27") (term "2,0,0"))
                     (rule "polySimp_elimOneLeft0" (formula "27") (term "2,0,0"))
                     (rule "shiftRightPositiveShiftDef" (formula "27") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                     (rule "simplifySelectOfStore" (formula "23"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "castDel" (formula "23") (term "0"))
                     (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "23"))
                     (rule "hideAuxiliaryEq" (formula "23"))
                     (rule "pullOutSelect" (formula "27") (term "1,1") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                     (rule "applyEq" (formula "25") (term "1,1,0,2,0,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "28") (term "0,0,0,0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "28") (term "0,1,2,0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "28") (term "0,0,1,1,1,0,0") (ifseqformula "27"))
                     (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "30")))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                     (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                     (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
                     (rule "ifthenelse_negated" (formula "27") (term "0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "25") (term "1,1,0,0,0") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "31")))
                     (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                     (rule "sortsDisjointModuloNull" (formula "25") (term "0,0,0"))
                     (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "31")))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0"))
                     (rule "ifthenelse_negated" (formula "25") (term "0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "26") (term "1,1,1,0") (inst "selectSK=de_wiesler_Tree_tree_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")))
                     (rule "replaceKnownSelect_taclet2012111_0" (formula "26") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2012111_1" (formula "26") (term "2,0"))
                     (rule "sortsDisjointModuloNull" (formula "26") (term "0,0,0"))
                     (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "34")))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,0"))
                     (rule "ifthenelse_negated" (formula "26") (term "0"))
                     (rule "pullOutSelect" (formula "29") (term "1,0") (inst "selectSK=de_wiesler_Tree_log_buckets_1"))
                     (rule "simplifySelectOfStore" (formula "29"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "castDel" (formula "29") (term "0"))
                     (rule "applyEqReverse" (formula "30") (term "1,0") (ifseqformula "29"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "pullOutSelect" (formula "29") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "29"))
                     (rule "simplifySelectOfCreate" (formula "29"))
                      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                     (rule "castDel" (formula "29") (term "0"))
                     (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "simplifySelectOfStore" (formula "25"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "castDel" (formula "25") (term "0"))
                     (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEqReverse" (formula "27") (term "1,1,0,2,0,1,0") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "0,0,1,1,1,0,0") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "0,1,2,0,0") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "0,0,0,0,0") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "1,1") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "27") (term "1,1,1,0") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "expand_moduloInteger" (formula "28") (term "0"))
                     (rule "replace_int_RANGE" (formula "28") (term "1,1,0"))
                     (rule "replace_int_MIN" (formula "28") (term "0,0"))
                     (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0"))
                     (rule "commute_and" (formula "26") (term "1,0,0"))
                     (rule "elim_double_block_2" (formula "34") (term "1"))
                     (rule "commute_and" (formula "26") (term "0,0,0"))
                     (rule "shift_paren_and" (formula "26") (term "0,0"))
                     (rule "commute_and_2" (formula "26") (term "0,0,0"))
                     (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                     (rule "expand_inShort" (formula "16"))
                     (rule "replace_short_MIN" (formula "16") (term "0,1"))
                     (rule "replace_short_MAX" (formula "16") (term "1,0"))
                     (rule "andLeft" (formula "16"))
                     (rule "inEqSimp_commuteLeq" (formula "16"))
                     (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                     (rule "expand_inShort" (formula "13"))
                     (rule "replace_short_MIN" (formula "13") (term "0,1"))
                     (rule "replace_short_MAX" (formula "13") (term "1,0"))
                     (rule "andLeft" (formula "13"))
                     (rule "inEqSimp_commuteLeq" (formula "13"))
                     (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                     (rule "ifUnfold" (formula "34") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_2"))
                     (rule "inequality_comparison_simple" (formula "34") (term "1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "replace_known_left" (formula "34") (term "0,0,1,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "ifSplit" (formula "34"))
                     (branch "if x_2 true"
                         (builtin "One Step Simplification" (formula "35"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_2 false"
                         (builtin "One Step Simplification" (formula "35"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "blockEmpty" (formula "34") (term "1"))
                        (rule "emptyStatement" (formula "34") (term "1"))
                         (builtin "Block Contract (Internal)" (formula "34") (newnames "exc_3,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                        (branch "Validity"
                            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "7")) (ifInst ""  (formula "31")) (ifInst ""  (formula "1")))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "23"))
                           (rule "expand_inInt" (formula "35") (term "1,0,0,1,0,0,1"))
                           (rule "replace_int_MAX" (formula "35") (term "1,0,1,0,0,1,0,0,1"))
                           (rule "replace_int_MIN" (formula "35") (term "0,1,1,0,0,1,0,0,1"))
                           (rule "andLeft" (formula "29"))
                           (rule "eqSymm" (formula "36") (term "0,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0"))
                           (rule "replaceKnownSelect_taclet2012111_7" (formula "30") (term "0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2012111_9" (formula "30") (term "0,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0,1,0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,0,0,1,0,0,1"))
                           (rule "variableDeclarationAssign" (formula "35") (term "1"))
                           (rule "variableDeclaration" (formula "35") (term "1") (newnames "exc_3_1"))
                           (rule "assignment" (formula "35") (term "1"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "emptyStatement" (formula "35") (term "1"))
                           (rule "emptyStatement" (formula "35") (term "1"))
                           (rule "tryEmpty" (formula "35") (term "1"))
                           (rule "blockEmptyLabel" (formula "35") (term "1"))
                           (rule "blockEmpty" (formula "35") (term "1"))
                           (rule "methodCallEmpty" (formula "35") (term "1"))
                           (rule "emptyModality" (formula "35") (term "1"))
                           (rule "andRight" (formula "35"))
                           (branch "Case 1"
                              (rule "andRight" (formula "35"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "closeTrue" (formula "35"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "replaceKnownSelect_taclet2012111_3" (formula "35") (term "1,1,0,0,0"))
                                 (rule "allRight" (formula "35") (inst "sk=i_0"))
                                 (rule "impRight" (formula "35"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_homoEq" (formula "29"))
                                 (rule "polySimp_homoEq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,3,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,3,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,3,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,3,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,1,1"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,1,1"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "29") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25"))
                                 (rule "mul_literals" (formula "25") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "add_literals" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                 (rule "mod_axiom" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,1,3,0"))
                                 (rule "mod_axiom" (formula "27") (term "1,2,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,1,0"))
                                 (rule "mod_axiom" (formula "14") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,1,0"))
                                 (rule "mod_axiom" (formula "19") (term "1,2,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,1,3,0"))
                                 (rule "mod_axiom" (formula "29") (term "1,2,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,2,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "29") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "32") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "32") (term "1,2,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,2,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,1,3,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,1,3,0"))
                                 (rule "mod_axiom" (formula "27") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0"))
                                 (rule "mod_axiom" (formula "29") (term "1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "25") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,2,1,0,1,0"))
                                 (rule "mod_axiom" (formula "25") (term "0,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1,1,0,1,0"))
                                 (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,1,0"))
                                 (rule "mod_axiom" (formula "23") (term "1,2,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "18") (term "1,2,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,2,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "18") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "29"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                 (rule "add_literals" (formula "25") (term "0,0"))
                                 (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "29"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0"))
                                 (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "29"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0"))
                                 (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "29"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0"))
                                 (rule "applyEq" (formula "27") (term "1,3,0,0,0,0,0") (ifseqformula "29"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "3,0,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,3,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "3,0,0,0,0,0"))
                                 (rule "applyEq" (formula "19") (term "1,3,0") (ifseqformula "29"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "3,0"))
                                 (rule "add_literals" (formula "19") (term "0,3,0"))
                                 (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "29"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "32"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1"))
                                 (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "30") (term "1,1,0,0,0,0,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "27") (term "3,0,0,0,0,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "19") (term "1,3,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "18") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                 (rule "mul_literals" (formula "25") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "16"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_and_subsumption3" (formula "25") (term "0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "Contract_axiom_for_piInRangeUpper_in_Tree" (formula "33") (term "0,1"))
                                 (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "23"))
                                 (rule "replace_known_left" (formula "1") (term "1,1,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "wellFormedStoreObject" (formula "1") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                 (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                                 (rule "wellFormedStoreObject" (formula "1") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                 (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,1,0"))
                                 (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,1,0"))
                                 (rule "wellFormedCreate" (formula "1") (term "0,0,1,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,1,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                                 (rule "pullOutSelect" (formula "1") (term "0,1,1,0") (inst "selectSK=java_lang_Object_created__1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                 (rule "applyEqReverse" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "1,1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=java_lang_Object_created__2"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                 (rule "applyEqReverse" (formula "2") (term "0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "Definition_axiom_for_piInRangeUpper_in_de_wiesler_Tree" (formula "34") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,1"))
                                 (rule "nnf_imp2or" (formula "26") (term "0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,0"))
                                 (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "16") (term "0") (inst "i=i") (inst "j=j"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "expand_inInt" (formula "16") (term "1,0,0"))
                                 (rule "expand_inInt" (formula "16") (term "1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0"))
                                 (rule "replace_int_MAX" (formula "16") (term "1,0,1,0,0"))
                                 (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "16") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0,1,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,1,0,0,1,0"))
                                 (rule "Contract_axiom_for_piLemmaUpperBound_in_Tree" (formula "1") (term "0,0"))
                                 (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "24"))
                                 (rule "replace_known_left" (formula "1") (term "1,1,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                 (rule "wellFormedStoreObject" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                 (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet10012012111_13" (formula "1") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10012012111_14" (formula "1") (term "0,1,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "wellFormedStoreObject" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                 (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                                 (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                                 (rule "wellFormedCreate" (formula "1") (term "0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                 (rule "replaceKnownSelect_taclet10012012111_15" (formula "1") (term "0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10012012111_16" (formula "1") (term "0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "Contract_axiom_for_piInRangeLower_in_Tree" (formula "35") (term "0,0"))
                                 (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "25"))
                                 (rule "replace_known_left" (formula "1") (term "1,1,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "wellFormedStoreObject" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                 (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet10012012111_13" (formula "1") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10012012111_14" (formula "1") (term "0,1,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "wellFormedStoreObject" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                 (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                                 (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                                 (rule "wellFormedCreate" (formula "1") (term "0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                 (rule "replaceKnownSelect_taclet10012012111_15" (formula "1") (term "0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10012012111_16" (formula "1") (term "0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_geqRight" (formula "36"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                 (rule "mul_literals" (formula "25") (term "1"))
                                 (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "31") (term "1,0,2,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "31") (term "0,1,1,1,0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "31") (term "1,0,0,1,0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "31") (term "1,1,1,0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "31") (term "0,1,1,1,0,2,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "1,0,1,1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,1,0,1,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "1,1,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm1" (formula "31") (term "1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "0,1,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,0,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm1" (formula "31") (term "1,0,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,1,0,2,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,2,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,2,0,1,0"))
                                 (rule "div_axiom" (formula "30") (term "0,1,1,2,1,0,0") (inst "quotient=quotient_0"))
                                 (rule "equal_literals" (formula "30") (term "0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "qeq_literals" (formula "30") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "mul_literals" (formula "30") (term "1,1,1"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "polySimp_addComm1" (formula "32") (term "1"))
                                 (rule "add_literals" (formula "32") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "32"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0"))
                                 (rule "applyEq" (formula "33") (term "0,1,1,2,1,0,0") (ifseqformula "30"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,2,1,0,0"))
                                 (rule "applyEq" (formula "33") (term "0,0,0,1,0,0") (ifseqformula "30"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "33") (term "0,1,1,1,1,1,0,0") (ifseqformula "30"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1"))
                                 (rule "mul_literals" (formula "32") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "0,1,0,0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                 (rule "leq_literals" (formula "33") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "mod_axiom" (formula "33") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,1"))
                                 (rule "newSym_eq" (formula "33") (inst "l=l_0") (inst "newSymDef=add(mul(pow(Z(2(#)), log_buckets), Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                log_buckets)),
        Z(0(#))))"))
                                 (rule "times_zero_1" (formula "33") (term "0,1,1"))
                                 (rule "times_zero_1" (formula "33") (term "1,1,1"))
                                 (rule "add_literals" (formula "33") (term "1,1"))
                                 (rule "add_zero_right" (formula "33") (term "1"))
                                 (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,1"))
                                 (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "polyDiv_pullOut" (formula "33") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "33") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_pullOutFactor1" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0"))
                                 (rule "polySimp_invertEq" (formula "33"))
                                 (rule "mul_literals" (formula "33") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "15"))
                                 (rule "polySimp_mulAssoc" (formula "31") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                 (rule "leq_literals" (formula "31") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "neg_literal" (formula "31") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0"))
                                 (rule "qeq_literals" (formula "31") (term "0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "33"))
                                 (rule "mul_literals" (formula "14") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "14") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "32"))
                                 (rule "applyEqRigid" (formula "35") (term "0,1,1") (ifseqformula "14"))
                                 (rule "times_zero_2" (formula "35") (term "1,1"))
                                 (rule "add_literals" (formula "35") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "14"))
                                 (rule "mul_literals" (formula "33") (term "1"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "applyEq" (formula "31") (term "1") (ifseqformula "14"))
                                 (rule "applyEqRigid" (formula "35") (term "0,0,1,0") (ifseqformula "14"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "35") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "35"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0"))
                                 (rule "add_zero_right" (formula "35") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "16"))
                                 (rule "leq_literals" (formula "33") (term "0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "32") (term "0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "elimGcdEq" (formula "33") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                 (rule "add_literals" (formula "33") (term "1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "mul_literals" (formula "33") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "33") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "add_literals" (formula "33") (term "0,0"))
                                 (rule "qeq_literals" (formula "33") (term "0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "commute_or" (formula "34") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "21") (term "0,0"))
                                 (rule "Contract_axiom_for_piLemmaUpperBound_in_Tree" (formula "3") (term "0"))
                                 (rule "wellFormedAnonEQ" (formula "3") (term "1,0") (ifseqformula "30"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "6")) (ifInst ""  (formula "29")))
                                 (rule "true_left" (formula "3"))
                                 (rule "Definition_axiom_for_piLemmaUpperBound_in_de_wiesler_Tree" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "Contract_axiom_for_piInRangeUpper_in_Tree" (formula "4") (term "0"))
                                 (rule "wellFormedAnonEQ" (formula "4") (term "1,0") (ifseqformula "30"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "29")))
                                 (rule "true_left" (formula "4"))
                                 (rule "Definition_axiom_for_piInRangeUpper_in_de_wiesler_Tree" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_literals" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "closeTrue" (formula "35"))
                           )
                        )
                        (branch "Precondition"
                           (rule "andRight" (formula "34"))
                           (branch "Case 1"
                              (rule "andRight" (formula "34"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "7")))
                                 (rule "closeTrue" (formula "34"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "wellFormedAnonEQ" (formula "34") (ifseqformula "23"))
                                 (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "polySimp_homoEq" (formula "28"))
                                 (rule "polySimp_homoEq" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,1,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,3,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,1,3,0,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,1,3,0,0,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,1,3,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                 (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                 (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                                 (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                                 (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                 (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "23") (term "1,2,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "34") (term "0,1,1,1,1,0,1,3,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,1,1,0,1,3,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,1,0,1,3,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,1,1,0,1,3,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,1,1,0,1,3,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,1,1,0,1,3,0,0,0,0"))
                                 (rule "mod_axiom" (formula "34") (term "1,2,1,0,1,3,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,2,1,0,1,3,0,0,0,0"))
                                 (rule "mod_axiom" (formula "28") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "28") (term "1,2,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "25") (term "1,2,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,2,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                                 (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                                 (rule "mod_axiom" (formula "34") (term "1,0,0,1,0,1,3,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,1,3,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,1,3,0,0,0,0"))
                                 (rule "mod_axiom" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                                 (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                 (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                                 (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "28"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "0,0"))
                                 (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "28"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0"))
                                 (rule "applyEq" (formula "15") (term "1,3,0") (ifseqformula "28"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "3,0"))
                                 (rule "add_literals" (formula "15") (term "0,3,0"))
                                 (rule "applyEq" (formula "34") (term "1,3,0,0,0,0") (ifseqformula "28"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "3,0,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,3,0,0,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "3,0,0,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "28"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0"))
                                 (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "28"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0"))
                                 (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "28"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0"))
                                 (rule "applyEq" (formula "23") (term "1,3,0,0,0,0,0") (ifseqformula "28"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "3,0,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,3,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "3,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0,0,0") (ifseqformula "25"))
                                 (rule "hideAuxiliaryEq" (formula "25"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "wellFormedStoreObject" (formula "28"))
                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "26")))
                                 (rule "wellFormedStorePrimitive" (formula "28") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "0,1"))
                                 (rule "wellFormedStoreObject" (formula "28") (term "0"))
                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                 (rule "wellFormedStorePrimitive" (formula "28") (term "0,0"))
                                 (rule "wellFormedStorePrimitive" (formula "28") (term "0,0"))
                                 (rule "wellFormedCreate" (formula "28") (term "0,0"))
                                 (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                                 (rule "pullOutSelect" (formula "28") (term "0,1") (inst "selectSK=java_lang_Object_created__1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                 (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "12"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "30") (ifseqformula "4"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "34"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "34"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "30")))
                                    (rule "closeTrue" (formula "34"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "23"))
                                    (rule "orRight" (formula "34"))
                                    (rule "polySimp_homoEq" (formula "28"))
                                    (rule "polySimp_homoEq" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "34") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "34") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "34") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "34") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "34") (term "0"))
                                    (rule "replaceKnownSelect_taclet2012111_7" (formula "34") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet2012111_9" (formula "34") (term "0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "closeTrue" (formula "34"))
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")))
                                 (rule "closeTrue" (formula "34"))
                              )
                           )
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "29"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1") (ifseqformula "23"))
                           (rule "replaceKnownSelect_taclet2012111_3" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "expand_inInt" (formula "29") (term "1,0,0,1,0"))
                           (rule "replace_int_MIN" (formula "29") (term "0,1,1,0,0,1,0"))
                           (rule "replace_int_MAX" (formula "29") (term "1,0,1,0,0,1,0"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "29"))
                           (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,1,0,0"))
                           (rule "commute_and" (formula "30") (term "0,0,0"))
                           (rule "commute_and" (formula "30") (term "1,0,0"))
                           (rule "shift_paren_and" (formula "30") (term "0,0"))
                           (rule "commute_and_2" (formula "30") (term "0,0,0"))
                           (rule "elim_double_block_2" (formula "36") (term "1"))
                           (rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_3"))
                           (rule "inequality_comparison_simple" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "replace_known_left" (formula "36") (term "0,0,1,0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "ifSplit" (formula "36"))
                           (branch "if x_3 true"
                               (builtin "One Step Simplification" (formula "37"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_3 false"
                               (builtin "One Step Simplification" (formula "37"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "blockEmpty" (formula "36") (term "1"))
                              (rule "emptyStatement" (formula "36") (term "1"))
                              (rule "methodCallEmpty" (formula "36") (term "1"))
                              (rule "blockEmpty" (formula "36") (term "1"))
                              (rule "assignment_write_attribute" (formula "36"))
                              (branch "Normal Execution (self_207 != null)"
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "tryEmpty" (formula "36") (term "1"))
                                 (rule "emptyModality" (formula "36") (term "1"))
                                 (rule "andRight" (formula "36"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "36"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "36"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "polySimp_homoEq" (formula "28"))
                                          (rule "polySimp_homoEq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                          (rule "replaceKnownSelect_taclet2012111_2" (formula "36") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2012111_10" (formula "36") (term "0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "closeTrue" (formula "36"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "36"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polySimp_homoEq" (formula "25"))
                                             (rule "polySimp_homoEq" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                             (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                             (rule "replaceKnownSelect_taclet2012111_4" (formula "36") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2012111_11" (formula "36") (term "0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "36"))
                                             (branch "Case 1"
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "polySimp_homoEq" (formula "25"))
                                                (rule "polySimp_homoEq" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,1,1"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,3,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "14"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "21"))
                                                (rule "mul_literals" (formula "21") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                (rule "mod_axiom" (formula "23") (term "1,2,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                                                (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                                                (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                                (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                                                (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                                (rule "mod_axiom" (formula "25") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,2,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "28") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "28") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                                                (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                                                (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                                                (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                                (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                                                (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "25"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0"))
                                                (rule "applyEq" (formula "23") (term "1,3,0,0,0,0,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "3,0,0,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,3,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "23") (term "3,0,0,0,0,0"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "25"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0"))
                                                (rule "applyEq" (formula "15") (term "1,3,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "3,0"))
                                                (rule "add_literals" (formula "15") (term "0,3,0"))
                                                (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "25"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0"))
                                                (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1"))
                                                (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0,0,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "23") (term "3,0,0,0,0,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "15") (term "1,3,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "28"))
                                                (rule "hideAuxiliaryEq" (formula "28"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                (rule "mul_literals" (formula "21") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "11") (term "0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=de_wiesler_Tree_sorted_splitters_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                (rule "eqSymm" (formula "31"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_7" (formula "1") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_9" (formula "1") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "31") (ifseqformula "1"))
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "polySimp_homoEq" (formula "25"))
                                                (rule "polySimp_homoEq" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,1,1"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,3,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "21"))
                                                (rule "mul_literals" (formula "21") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "14"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                                (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                                                (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                                                (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                                (rule "mod_axiom" (formula "23") (term "1,2,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                                                (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                                (rule "mod_axiom" (formula "25") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,2,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "28") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "28") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                                                (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                                                (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0"))
                                                (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                                                (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                                                (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                                (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                                (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "applyEq" (formula "15") (term "1,3,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "3,0"))
                                                (rule "add_literals" (formula "15") (term "0,3,0"))
                                                (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "25"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0"))
                                                (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "25"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0"))
                                                (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0"))
                                                (rule "applyEq" (formula "23") (term "1,3,0,0,0,0,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "3,0,0,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,3,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "23") (term "3,0,0,0,0,0"))
                                                (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "25"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1"))
                                                (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0,0,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "30") (term "1,1,0,0,0,0,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "15") (term "1,3,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "23") (term "3,0,0,0,0,0") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "28"))
                                                (rule "hideAuxiliaryEq" (formula "28"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                (rule "mul_literals" (formula "21") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "11") (term "0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "12"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "9"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                (rule "inEqSimp_and_subsumption3" (formula "22") (term "0,0,0"))
                                                (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_and_subsumption3" (formula "25") (term "0,0,0"))
                                                (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "31") (inst "i=i") (inst "i_0=i_0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "expand_inInt" (formula "31") (term "1,0,0,1"))
                                                (rule "expand_inInt" (formula "31") (term "1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "31") (term "1,0,1,0,0,1"))
                                                (rule "replace_int_MIN" (formula "31") (term "0,1,1,0,0,1"))
                                                (rule "replace_int_MAX" (formula "31") (term "1,0,1,0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "31") (term "0,1,1,0,0,1,0"))
                                                (rule "eqSymm" (formula "31") (term "1,0,1"))
                                                (rule "translateJavaSubInt" (formula "31") (term "3,0,1,0,0"))
                                                (rule "translateJavaShiftLeftInt" (formula "31") (term "1,1,0,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "31") (term "0,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "31") (term "3,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "1,3,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "31") (term "0,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "31") (term "1,0,2,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "31") (term "3,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,0,1,1,0,1,0"))
                                                (rule "replaceKnownSelect_taclet2012111_2" (formula "31") (term "1,0,1,1,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_10" (formula "31") (term "1,0,1,1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,1,1,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_3" (formula "31") (term "0,1,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110001212012111_12" (formula "31") (term "0,1,1,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,1,0,0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet2012111_3" (formula "31") (term "1,1,0,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110001212012111_12" (formula "31") (term "1,1,0,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,1,0,1,0,1,0"))
                                                (rule "replaceKnownSelect_taclet2012111_2" (formula "31") (term "1,1,0,1,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_10" (formula "31") (term "1,1,0,1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_4" (formula "31") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_11" (formula "31") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "replace_known_right" (formula "31") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,1,0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet2012111_3" (formula "31") (term "1,1,0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110001212012111_12" (formula "31") (term "1,1,0,0,0,1"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,1,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_3" (formula "31") (term "0,1,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110001212012111_12" (formula "31") (term "0,1,0,0,0,0,0"))
                                                (rule "eqSymm" (formula "31") (term "1,0,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,1,1,1,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_4" (formula "31") (term "0,1,1,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_11" (formula "31") (term "0,1,1,1,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,1,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_2" (formula "31") (term "0,1,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_10" (formula "31") (term "0,1,1,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "31") (term "1,1,0,0,0,0,0,0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_2" (formula "31") (term "1,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_10" (formula "31") (term "1,1,0,0,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,1,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_3" (formula "31") (term "0,1,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110001212012111_12" (formula "31") (term "0,1,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_2" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_10" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,0,1,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_3" (formula "31") (term "1,0,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110001212012111_12" (formula "31") (term "1,0,1,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,1,1,0,1"))
                                                (rule "replaceKnownSelect_taclet2012111_4" (formula "31") (term "1,1,1,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_11" (formula "31") (term "1,1,1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,1,1,0,1,0"))
                                                (rule "replaceKnownSelect_taclet2012111_3" (formula "31") (term "1,1,1,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110001212012111_12" (formula "31") (term "1,1,1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,3,0,1,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_3" (formula "31") (term "1,3,0,1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110001212012111_12" (formula "31") (term "1,3,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,1,1,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,1,0,2,0,1,0,1"))
                                                (rule "replaceKnownSelect_taclet2012111_2" (formula "31") (term "1,1,0,2,0,1,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_10" (formula "31") (term "1,1,0,2,0,1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0,0,0"))
                                                (rule "replace_known_left" (formula "31") (term "1,1,0,0,0,0") (ifseqformula "15"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0,0,0"))
                                                (rule "replace_known_left" (formula "31") (term "1,0,0,0,0") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,1"))
                                                (rule "javaShiftLeftIntDef" (formula "31") (term "0,1,0,0,0,0"))
                                                (rule "mod_axiom" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "shiftLeftDef" (formula "31") (term "0,0,1,0,0,0,0"))
                                                (rule "polySimp_elimNeg" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0,0,1,0,0,0,0"))
                                                (rule "shiftLeftPositiveShiftDef" (formula "31") (term "2,0,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOneLeft0" (formula "31") (term "2,0,0,1,0,0,0,0"))
                                                (rule "shiftRightPositiveShiftDef" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "pullOutSelect" (formula "31") (term "0,0,1,0,0,0") (inst "selectSK=de_wiesler_Tree_sorted_splitters_0"))
                                                (rule "applyEq" (formula "32") (term "1,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "1,0,1,0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "replaceKnownSelect_taclet2012111_7" (formula "1") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2012111_9" (formula "1") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "32") (term "1,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "32") (term "1,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "32") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "32") (term "0,0,1,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "31") (term "1,0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                                                (rule "nnf_imp2or" (formula "22") (term "0"))
                                                (rule "nnf_imp2or" (formula "25") (term "0"))
                                                (rule "expand_moduloInteger" (formula "31") (term "0,0,0,0"))
                                                (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,0,0,0,0"))
                                                (rule "replace_int_RANGE" (formula "31") (term "1,1,0,0,0,0"))
                                                (rule "replace_int_MIN" (formula "31") (term "0,0,0,0,0"))
                                                (rule "polySimp_homoEq" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,1,0,0,0,0") (ifseqformula "21"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "31") (term "1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "11") (term "0") (inst "i=i") (inst "j=j"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "expand_inInt" (formula "11") (term "1,0,0"))
                                                (rule "expand_inInt" (formula "11") (term "1,0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0"))
                                                (rule "replace_int_MAX" (formula "11") (term "1,0,1,0,0"))
                                                (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1,0"))
                                                (rule "replace_int_MAX" (formula "11") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "31") (term "0,1"))
                                                (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "11") (term "0"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0,1"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "11") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "31") (term "1,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "31") (term "0,1,0,0,1"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,0,0,1"))
                                                (rule "mul_literals" (formula "31") (term "1,0,1,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "31") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,1,1,0,0,1"))
                                                (rule "add_literals" (formula "31") (term "0,0,1,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "31") (term "1,1,1,0,0,1"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,0,1"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "31") (term "1,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "31") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "31") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,1,1,0,0,1,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "1,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,1,1,0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,1,0,0,1,0"))
                                                (rule "div_axiom" (formula "21") (term "0,1,1,2,1,0,0") (inst "quotient=quotient_0"))
                                                (rule "equal_literals" (formula "21") (term "0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "mul_literals" (formula "21") (term "1,1,1,1"))
                                                (rule "qeq_literals" (formula "21") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "polySimp_addComm1" (formula "23") (term "1"))
                                                (rule "add_literals" (formula "23") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "applyEq" (formula "24") (term "0,1,1,2,1,0,0") (ifseqformula "21"))
                                                (rule "polySimp_addComm0" (formula "24") (term "1,2,1,0,0"))
                                                (rule "applyEq" (formula "24") (term "0,0,0,1,0,0") (ifseqformula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "24") (term "0,1,1,1,1,1,0,0") (ifseqformula "21"))
                                                (rule "polySimp_addComm0" (formula "24") (term "1,1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                (rule "mul_literals" (formula "23") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "0,1,0,0") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "mod_axiom" (formula "24") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "0,1"))
                                                (rule "newSym_eq" (formula "24") (inst "l=l_0") (inst "newSymDef=add(mul(pow(Z(2(#)), log_buckets), Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                log_buckets)),
        Z(0(#))))"))
                                                (rule "times_zero_1" (formula "24") (term "0,1,1"))
                                                (rule "times_zero_1" (formula "24") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "24") (term "1,1"))
                                                (rule "add_zero_right" (formula "24") (term "1"))
                                                (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "24"))
                                                (rule "polySimp_homoEq" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                                (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=l_0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,2,0"))
                                                (rule "equal_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "polySimp_homoEq" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0"))
                                                (rule "polySimp_invertEq" (formula "24"))
                                                (rule "mul_literals" (formula "24") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "23"))
                                                (rule "mul_literals" (formula "6") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "6") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "8"))
                                                (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "23") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "23") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "qeq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "23"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "6"))
                                                (rule "mul_literals" (formula "23") (term "1"))
                                                (rule "applyEqRigid" (formula "24") (term "0,1,1") (ifseqformula "6"))
                                                (rule "mul_literals" (formula "24") (term "1,1"))
                                                (rule "add_literals" (formula "24") (term "1"))
                                                (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "6"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "26") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "26"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0"))
                                                (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "6"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "elimGcdEq" (formula "24") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,1,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "qeq_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "25") (term "1,0,2,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "25") (term "0,1,1,1,0,2,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "25") (term "1,0,0,1,0,2,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "25") (term "0,1,1,1,0,2,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,1,1,1,0,2,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "25") (term "1,1,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,1,0,1,0,2,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "1,1,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "25") (term "1,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0,2,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,1,0,2,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0,0,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "25") (term "1,0,1,0,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1,0,2,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,2,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,2,0,1,0"))
                                                (rule "Definition_axiom_for_piInRangeLower_in_de_wiesler_Tree" (formula "28") (term "0,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_commuteLeq" (formula "28") (term "0,1,0"))
                                                (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "34") (term "0,0,0") (inst "i=i") (inst "j=j"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "expand_inInt" (formula "34") (term "1,0,0,1,0,0,0"))
                                                (rule "expand_inInt" (formula "34") (term "1,0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,1,0,0,0"))
                                                (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,1,0,0,0"))
                                                (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "34") (term "0,1,0,1,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "34") (term "1,1,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "12") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "34") (term "0,0,0"))
                                                (rule "nnf_notAnd" (formula "34") (term "0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "34") (term "0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "34") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "34") (term "0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "34") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "34") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "34") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "34") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "34") (term "0,1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "34") (term "1,1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,0,1,1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,1,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,1,0,0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "34") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,1,0,0,0"))
                                                (rule "Definition_axiom_for_piInRangeUpper_in_de_wiesler_Tree" (formula "28") (term "0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,1,1,0"))
                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "34") (term "0,1,1,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "34") (term "0,1,1,0,1,1,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,0,0,0,1,1,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,0,1,1,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "0,1,1,0,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,1,1,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,0,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,0,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,1,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,1,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "34") (term "1,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0,1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "34") (term "1,0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,1,1,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "34") (term "1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,0,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,1,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,1,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0,1,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,0,0,1,1,1,0,1,0"))
                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "34") (term "1,0,2,0,1,0,1"))
                                                (rule "translateJavaSubInt" (formula "34") (term "0,1,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,0,0,1,0,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "34") (term "0,1,1,1,0,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "34") (term "1,0,1,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,2,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,0,2,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulComm1" (formula "34") (term "1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,0,2,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0,0,1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulComm1" (formula "34") (term "1,0,1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0,2,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,2,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,2,0,1,0,1"))
                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "34") (term "0,0,1,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "34") (term "0,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,0,0,0,0,1,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "0,1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "34") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0,0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "34") (term "1,0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,1,0,1,0"))
                                                (rule "commute_or_2" (formula "25") (term "0,0"))
                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "28") (term "0,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "28") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "0,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,1,0"))
                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "28") (term "0,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "28") (term "0,1,1,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "0,1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,1,1,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "1,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm1" (formula "28") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,0,1,1,1,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                (rule "div_axiom" (formula "23") (term "0") (inst "quotient=quotient_1"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,1,1"))
                                                (rule "equal_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "qeq_literals" (formula "23") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                                                (rule "add_literals" (formula "25") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "25") (term "1"))
                                                (rule "add_literals" (formula "25") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "23"))
                                                (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "26"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0"))
                                                (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "26"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                (rule "mul_literals" (formula "24") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                (rule "mul_literals" (formula "25") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "commute_or" (formula "29") (term "0,0,0"))
                                                (rule "commute_or" (formula "12") (term "0,0,0,1,0"))
                                                (rule "andRight" (formula "35"))
                                                (branch "Case 1"
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "29") (term "0,0"))
                                                   (rule "cnf_rightDist" (formula "29") (term "0"))
                                                   (rule "distr_forallAnd" (formula "29"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "commute_or" (formula "30") (term "0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "12") (term "0,0,0,0"))
                                                   (rule "inEqSimp_or_subsumption0" (formula "12") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "andRight" (formula "36"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "36") (inst "sk=i_0"))
                                                      (rule "orRight" (formula "36"))
                                                      (rule "cutUpperBound" (formula "36") (ifseqformula "12"))
                                                      (branch "Case 1"
                                                         (rule "crossInst" (formula "13") (inst "sk=i_1") (ifseqformula "37"))
                                                         (rule "orRight" (formula "38"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "orRight" (formula "40"))
                                                         (rule "orRight" (formula "39"))
                                                         (rule "allRight" (formula "43") (inst "sk=j_0"))
                                                         (rule "orRight" (formula "43"))
                                                         (rule "orRight" (formula "43"))
                                                         (rule "orRight" (formula "44"))
                                                         (rule "orRight" (formula "43"))
                                                         (rule "polySimp_homoEq" (formula "1"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "41"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "42"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "41"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "42"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "47"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "47"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                         (rule "applyEqRigid" (formula "23") (term "0,2,1,1,0,1") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "23") (term "0,0,0,0") (ifseqformula "22"))
                                                         (rule "applyEqRigid" (formula "23") (term "1,1,1,0,0,1") (ifseqformula "22"))
                                                         (rule "applyEqRigid" (formula "23") (term "0,1,0,0,1,0") (ifseqformula "22"))
                                                         (rule "polySimp_sepPosMonomial" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                         (rule "mul_literals" (formula "10") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                         (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "10"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "applyEq" (formula "24") (term "1,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "24") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "24") (term "1,1,0,0,0,1,0"))
                                                         (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "10"))
                                                         (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "10"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                         (rule "add_literals" (formula "35") (term "0,0,0"))
                                                         (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "10"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "23") (term "0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor2" (formula "23") (term "0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "1,0,1,0"))
                                                         (rule "times_zero_1" (formula "23") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "23") (term "1,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "applyEq" (formula "27") (term "1") (ifseqformula "10"))
                                                         (rule "applyEq" (formula "21") (term "1") (ifseqformula "10"))
                                                         (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "10"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                         (rule "add_zero_left" (formula "23") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "29") (term "0") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "29"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                         (rule "add_literals" (formula "29") (term "0,0"))
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq0" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "0,0"))
                                                         (rule "applyEq" (formula "31") (term "3,0,0,0,0,0") (ifseqformula "10"))
                                                         (rule "applyEq" (formula "37") (term "1,1,0,0") (ifseqformula "10"))
                                                         (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "10"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0"))
                                                         (rule "add_literals" (formula "6") (term "0"))
                                                         (rule "leq_literals" (formula "6"))
                                                         (rule "closeFalse" (formula "6"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "crossInst" (formula "13") (inst "sk=i_1") (ifseqformula "37"))
                                                         (rule "orRight" (formula "38"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "orRight" (formula "40"))
                                                         (rule "orRight" (formula "39"))
                                                         (rule "allRight" (formula "43") (inst "sk=j_0"))
                                                         (rule "orRight" (formula "43"))
                                                         (rule "orRight" (formula "43"))
                                                         (rule "orRight" (formula "44"))
                                                         (rule "orRight" (formula "43"))
                                                         (rule "polySimp_homoEq" (formula "33"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "42"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "42"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "41"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "42"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "46"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "47"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "47"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                                         (rule "applyEq" (formula "22") (term "0,0,0,0") (ifseqformula "21"))
                                                         (rule "applyEqRigid" (formula "22") (term "1,1,1,0,0,1") (ifseqformula "21"))
                                                         (rule "applyEqRigid" (formula "22") (term "0,2,1,1,0,1") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "22") (term "0,1,0,0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "21"))
                                                         (rule "polySimp_sepPosMonomial" (formula "42"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                         (rule "mul_literals" (formula "42") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                         (rule "mul_literals" (formula "9") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                         (rule "mul_literals" (formula "4") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "6"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0"))
                                                         (rule "leq_literals" (formula "42") (term "0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "false_right" (formula "42"))
                                                         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
                                                         (rule "leq_literals" (formula "9") (term "0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "21") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "21") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_0"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "31"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                                                         (rule "eqSymm" (formula "5") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "ifthenelse_negated" (formula "5") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                         (rule "mul_literals" (formula "6") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "26"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "7"))
                                                         (rule "leq_literals" (formula "10") (term "0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfCreate" (formula "5"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")))
                                                         (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "pullOutSelect" (formula "5") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                                         (rule "simplifySelectOfCreate" (formula "5"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")))
                                                         (rule "castDel" (formula "5") (term "1,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "5") (term "0,0"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")))
                                                         (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_2"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "31"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                                                         (rule "eqSymm" (formula "5") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                         (rule "replaceKnownSelect_taclet1001110001212012111_19" (formula "5") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1001110001212012111_20" (formula "5") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "simplifySelectOfCreate" (formula "5"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "43")))
                                                         (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "7"))
                                                         (rule "leq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "25"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "2"))
                                                         (rule "leq_literals" (formula "5") (term "0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "commute_or" (formula "22") (term "0,0,0,0,1,0"))
                                                         (rule "commute_or_2" (formula "21") (term "0,0"))
                                                         (rule "commute_or" (formula "21") (term "0,0,0,0"))
                                                         (rule "all_pull_out3" (formula "22") (term "0"))
                                                         (rule "shift_paren_or" (formula "22") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "allLeft" (formula "21") (inst "t=j_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "21") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "21") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "3"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0"))
                                                         (rule "add_literals" (formula "21") (term "0"))
                                                         (rule "leq_literals" (formula "21"))
                                                         (rule "closeFalse" (formula "21"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "36") (inst "sk=i_0_0"))
                                                      (rule "orRight" (formula "36"))
                                                      (rule "orRight" (formula "36"))
                                                      (rule "orRight" (formula "36"))
                                                      (rule "orRight" (formula "38"))
                                                      (rule "inEqSimp_geqRight" (formula "37"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "37"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "39"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "39"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "commute_or" (formula "15") (term "0,0,0,0,1,0"))
                                                      (rule "all_pull_out3" (formula "15") (term "0"))
                                                      (rule "shift_paren_or" (formula "15") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                      (rule "shift_paren_or" (formula "15") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "andRight" (formula "39"))
                                                      (branch "Case 1"
                                                         (rule "inEqSimp_leqRight" (formula "39"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                                         (rule "allLeft" (formula "33") (inst "t=i_0_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "33") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "inEqSimp_contradInEq4" (formula "33") (term "1") (ifseqformula "1"))
                                                         (rule "greater_literals" (formula "33") (term "0,1,0,1"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "greater_literals" (formula "33") (term "0,0,1"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,0,0,1"))
                                                         (rule "mul_literals" (formula "33") (term "0,0,0,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,1"))
                                                         (rule "mul_literals" (formula "33") (term "0,0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,1"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,1"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "33") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "33") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "33") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0"))
                                                         (rule "add_literals" (formula "33") (term "0"))
                                                         (rule "leq_literals" (formula "33"))
                                                         (rule "closeFalse" (formula "33"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "inEqSimp_geqRight" (formula "39"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                         (rule "allLeft" (formula "34") (inst "t=i_0_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq2" (formula "34") (term "1") (ifseqformula "1"))
                                                         (rule "greater_literals" (formula "34") (term "0,0,1"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "greater_literals" (formula "34") (term "0,0,1"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "34") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "34") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0"))
                                                         (rule "add_literals" (formula "34") (term "0"))
                                                         (rule "leq_literals" (formula "34"))
                                                         (rule "closeFalse" (formula "34"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "35") (inst "sk=i_0"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "inEqSimp_leqRight" (formula "38"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "38"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "37"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "38"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "mul_literals" (formula "4") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                                   (rule "leq_literals" (formula "4") (term "0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_0"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                                   (rule "eqSymm" (formula "39"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                   (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "2"))
                                                   (rule "leq_literals" (formula "5") (term "0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                   (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "commute_or_2" (formula "15") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "32") (term "0,0"))
                                                   (rule "commute_or_2" (formula "15") (term "0,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "32") (term "0"))
                                                   (rule "distr_forallAnd" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "commute_or" (formula "33") (term "0"))
                                                   (rule "commute_or" (formula "15") (term "0,0,0,0"))
                                                   (rule "inEqSimp_or_subsumption0" (formula "15") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "commute_or" (formula "15") (term "0,0,0,0,1,0"))
                                                   (rule "all_pull_out3" (formula "15") (term "0"))
                                                   (rule "shift_paren_or" (formula "15") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                   (rule "shift_paren_or" (formula "15") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "15") (term "0,0,0,0,0"))
                                                   (rule "allLeft" (formula "29") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet11110001212012111_17" (formula "29") (term "1,1"))
                                                   (rule "replaceKnownSelect_taclet11110001212012111_16" (formula "29") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet11110001212012111_18" (formula "29") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet11110001212012111_23" (formula "29") (term "0,1"))
                                                   (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "29") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "29") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "29"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "28") (term "0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "closeFalse" (formula "28"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "closeTrue" (formula "36"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "allRight" (formula "36") (inst "sk=f_0"))
                                    (rule "allRight" (formula "36") (inst "sk=o_0"))
                                    (rule "orRight" (formula "36"))
                                    (rule "orRight" (formula "36"))
                                    (rule "eqSymm" (formula "38"))
                                    (rule "polySimp_homoEq" (formula "25"))
                                    (rule "polySimp_homoEq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,3,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,1,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,3,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                    (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                    (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                                    (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                                    (rule "mod_axiom" (formula "23") (term "1,2,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "25") (term "1,2,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,2,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "28") (term "1,2,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "28") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                                    (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                                    (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                                    (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                                    (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                    (rule "applyEq" (formula "15") (term "1,3,0") (ifseqformula "25"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "3,0"))
                                    (rule "add_literals" (formula "15") (term "0,3,0"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "25"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0"))
                                    (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "25"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0"))
                                    (rule "applyEq" (formula "23") (term "1,3,0,0,0,0,0") (ifseqformula "25"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "3,0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,3,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "3,0,0,0,0,0"))
                                    (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "25"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "25"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0"))
                                    (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "25"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "15") (term "1,3,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "30") (term "1,1,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "23") (term "3,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_and_subsumption3" (formula "31") (term "0,0,0"))
                                    (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                    (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "nnf_imp2or" (formula "31") (term "0"))
                                    (rule "nnf_imp2or" (formula "34") (term "0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0"))
                                    (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "21") (term "0") (inst "i=i") (inst "j=j"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "expand_inInt" (formula "21") (term "1,0,0"))
                                    (rule "expand_inInt" (formula "21") (term "1,0,0,1,0"))
                                    (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0"))
                                    (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "21") (term "0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                    (rule "nnf_imp2or" (formula "21") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,1,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,1,1,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,1,0"))
                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "31") (term "1,0,2,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "31") (term "0,1,1,1,0,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "1,0,0,1,0,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "0,1,1,1,0,2,0,1,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,1,1,1,0,2,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "1,1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,1,0,1,0,2,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "1,1,0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm1" (formula "31") (term "1,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0,2,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "0,1,0,2,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0,0,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm1" (formula "31") (term "1,0,1,0,2,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,1,0,2,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,2,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,2,0,1,0"))
                                    (rule "Definition_axiom_for_piInRangeLower_in_de_wiesler_Tree" (formula "34") (term "0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0"))
                                    (rule "commute_and" (formula "9") (term "0,0"))
                                    (rule "cut_direct" (formula "41") (term "0,0"))
                                    (branch "CUT: o_0 = null TRUE"
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "false_right" (formula "42"))
                                       (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "4") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "5") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "5") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "3") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "4") (term "0,0"))
                                       (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "3") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_0 = null FALSE"
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "notRight" (formula "42"))
                                       (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "ifthenelse_negated" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "commute_and" (formula "7") (term "0,0"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "commute_and" (formula "5") (term "0,0"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "div_axiom" (formula "29") (term "0,1,1,2,1,0,0") (inst "quotient=quotient_0"))
                                       (rule "mul_literals" (formula "29") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "29") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "equal_literals" (formula "29") (term "0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "andLeft" (formula "29"))
                                       (rule "andLeft" (formula "29"))
                                       (rule "polySimp_addComm1" (formula "31") (term "1"))
                                       (rule "add_literals" (formula "31") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "applyEq" (formula "32") (term "0,1,1,2,1,0,0") (ifseqformula "29"))
                                       (rule "polySimp_addComm0" (formula "32") (term "1,2,1,0,0"))
                                       (rule "applyEq" (formula "32") (term "0,1,1,1,1,1,0,0") (ifseqformula "29"))
                                       (rule "polySimp_addComm0" (formula "32") (term "1,1,1,1,0,0"))
                                       (rule "applyEq" (formula "32") (term "0,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1"))
                                       (rule "mul_literals" (formula "31") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (term "0,1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0"))
                                       (rule "leq_literals" (formula "32") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "mod_axiom" (formula "32") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                                       (rule "newSym_eq" (formula "32") (inst "l=l_0") (inst "newSymDef=add(mul(pow(Z(2(#)), log_buckets), Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                log_buckets)),
        Z(0(#))))"))
                                       (rule "times_zero_1" (formula "32") (term "1,1,1"))
                                       (rule "times_zero_1" (formula "32") (term "0,1,1"))
                                       (rule "add_zero_left" (formula "32") (term "1,1"))
                                       (rule "add_zero_right" (formula "32") (term "1"))
                                       (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                       (rule "polySimp_homoEq" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                                       (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "33"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                       (rule "polyDiv_pullOut" (formula "32") (term "0") (inst "polyDivCoeff=l_0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "32") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "polySimp_homoEq" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                       (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                                       (rule "add_literals" (formula "32") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0"))
                                       (rule "polySimp_invertEq" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "mul_literals" (formula "32") (term "1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "31"))
                                       (rule "mul_literals" (formula "14") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "16"))
                                       (rule "polySimp_mulAssoc" (formula "31") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "31") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "31") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0"))
                                       (rule "qeq_literals" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "31"))
                                       (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "33") (term "1"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "33") (term "1,1"))
                                       (rule "add_literals" (formula "33") (term "1"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "applyEqRigid" (formula "30") (term "1") (ifseqformula "14"))
                                       (rule "applyEqRigid" (formula "34") (term "0,0,1,0") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "34") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "34"))
                                       (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                       (rule "add_literals" (formula "34") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0"))
                                       (rule "add_zero_right" (formula "34") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "elimGcdEq" (formula "32") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "32") (term "0,1,0"))
                                       (rule "add_literals" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "leq_literals" (formula "32") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "times_zero_1" (formula "32") (term "0,0"))
                                       (rule "qeq_literals" (formula "32") (term "0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "commute_or" (formula "33") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "21") (term "0,0"))
                                       (rule "Definition_axiom_for_piInRangeUpper_in_de_wiesler_Tree" (formula "36") (term "0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1,0"))
                                       (rule "commute_or_2" (formula "21") (term "0,0,1,0"))
                                       (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "36") (term "0,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "36") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "0,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm1" (formula "36") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm1" (formula "36") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,1,0"))
                                       (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "36") (term "0,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "36") (term "0,1,1,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "0,1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,1,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "1,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm1" (formula "36") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm1" (formula "36") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,0,0,1,1,1,0"))
                                       (rule "commute_or_2" (formula "33") (term "0,0"))
                                       (rule "commute_or" (formula "36") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = java.lang.Object::<created> & o_0 = t_1 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "34") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = java.lang.Object::<created> & o_0 = t_1 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_or" (formula "20") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "20") (term "0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0"))
                                          (rule "div_axiom" (formula "30") (term "0") (inst "quotient=quotient_1"))
                                          (rule "mul_literals" (formula "30") (term "1,1,1,1,1"))
                                          (rule "equal_literals" (formula "30") (term "0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "qeq_literals" (formula "30") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                          (rule "add_literals" (formula "32") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "32") (term "1"))
                                          (rule "add_literals" (formula "32") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "31"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "32"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "33"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "30"))
                                          (rule "times_zero_2" (formula "32") (term "1,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0"))
                                          (rule "applyEq" (formula "31") (term "0,1,0,0") (ifseqformula "30"))
                                          (rule "times_zero_2" (formula "31") (term "1,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                          (rule "mul_literals" (formula "32") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                          (rule "mul_literals" (formula "31") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "25"))
                                          (rule "leq_literals" (formula "31") (term "0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "18"))
                                          (rule "leq_literals" (formula "31") (term "0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "cnf_rightDist" (formula "36") (term "0"))
                                          (rule "distr_forallAnd" (formula "36"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "commute_or" (formula "37") (term "0"))
                                          (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "20") (term "0,0,0,0"))
                                          (rule "inEqSimp_or_subsumption0" (formula "20") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "20") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "commute_or" (formula "20") (term "0,0,0,0,1,0"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = t_1 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "8"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "38") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = t_1 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "all_pull_out3" (formula "18") (term "0"))
                                             (rule "shift_paren_or" (formula "18") (term "0,0"))
                                             (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                             (rule "cut_direct" (formula "37") (term "1"))
                                             (branch "CUT: o_0 = t_1 TRUE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                             (branch "CUT: o_0 = t_1 FALSE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Null Reference (self_207 = null)"
                                 (rule "false_right" (formula "37"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Exceptional Post (build)"
                   (builtin "One Step Simplification" (formula "23"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "expand_inInt" (formula "23") (term "1,0,0,0,1,1"))
                  (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,0,0,1,1"))
                  (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,0,0,1,1"))
                  (rule "andLeft" (formula "23"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1,0") (ifseqformula "23"))
                  (rule "andLeft" (formula "24"))
                  (rule "andLeft" (formula "24"))
                  (rule "andLeft" (formula "26"))
                  (rule "notLeft" (formula "24"))
                  (rule "close" (formula "27") (ifseqformula "26"))
               )
               (branch "Pre (build)"
                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (userinteraction))
                  (rule "andRight" (formula "27"))
                  (branch "Case 1"
                     (rule "andRight" (formula "27"))
                     (branch "Case 1"
                        (rule "notRight" (formula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,3,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,1"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,1"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,3,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,1,3,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,3,0"))
                        (rule "inEqSimp_homoInEq0" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "22"))
                        (rule "mul_literals" (formula "22") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "add_literals" (formula "22") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                        (rule "mod_axiom" (formula "11") (term "1,2,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,2,1,0,1,0"))
                        (rule "mod_axiom" (formula "1") (term "1,2,1,0,1,3,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                        (rule "mod_axiom" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,0,1,3,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "11") (term "0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0,1,0"))
                        (rule "mod_axiom" (formula "16") (term "1,2,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,2,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                        (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,3,0,0,0,0,0"))
                        (rule "mod_axiom" (formula "11") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                        (rule "mod_axiom" (formula "16") (term "1,0,0,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,3,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "20") (term "1,2,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,2,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "22") (term "1,2,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,1,0"))
                        (rule "mod_axiom" (formula "22") (term "0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,1,0,1,0"))
                        (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                        (rule "mod_axiom" (formula "15") (term "1,2,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,1,3,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,1,3,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,3,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                        (rule "mul_literals" (formula "22") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "10"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "20"))
                        (rule "leq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                        (rule "leq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "22") (ifseqformula "2"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "27"))
                        (branch "Case 1"
                           (rule "disjointDefinition" (formula "27"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "notRight" (formula "27"))
                           (rule "eqSymm" (formula "1"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,1"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,1"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,3,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,1,3,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,3,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,3,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "22"))
                           (rule "mul_literals" (formula "22") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                           (rule "mod_axiom" (formula "11") (term "0,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0,1,0"))
                           (rule "mod_axiom" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,1,0,1,3,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,0,1,3,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,1,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,1,0,1,3,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                           (rule "mod_axiom" (formula "16") (term "1,2,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,2,1,0,1,3,0"))
                           (rule "mod_axiom" (formula "11") (term "1,2,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,2,1,0,1,0"))
                           (rule "mod_axiom" (formula "1") (term "1,2,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                           (rule "mod_axiom" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                           (rule "mod_axiom" (formula "11") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                           (rule "mod_axiom" (formula "16") (term "1,0,0,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,3,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,3,0"))
                           (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "mod_axiom" (formula "22") (term "1,2,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,1,0"))
                           (rule "mod_axiom" (formula "22") (term "0,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1,1,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,1,0,1,0"))
                           (rule "mod_axiom" (formula "20") (term "1,2,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,2,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "15") (term "1,2,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,3,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,3,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,1,3,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,1,3,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "mul_literals" (formula "22") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                           (rule "leq_literals" (formula "7") (term "0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "9"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                           (rule "leq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "21") (ifseqformula "2"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "27"))
                           (branch "Case 1"
                              (rule "dismissNonSelectedField" (formula "27") (term "0"))
                              (rule "dismissNonSelectedField" (formula "27") (term "0"))
                              (rule "dismissNonSelectedField" (formula "27") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,1"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,1"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,3,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,1,3,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,3,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,3,0,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,1,3,0,1,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,1,3,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "mul_literals" (formula "22") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                              (rule "mod_axiom" (formula "11") (term "0,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0,1,0"))
                              (rule "mod_axiom" (formula "11") (term "1,2,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,2,1,0,1,0"))
                              (rule "mod_axiom" (formula "16") (term "1,2,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,2,1,0,1,3,0"))
                              (rule "mod_axiom" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,0,1,3,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,1,0,1,3,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                              (rule "mod_axiom" (formula "1") (term "1,2,1,0,1,3,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,0,1,3,0,1,0"))
                              (rule "mod_axiom" (formula "1") (term "0,1,1,1,1,0,1,3,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,1,0,1,3,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0,1,3,0,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0,1,3,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,1,3,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0,1,3,0,1,0"))
                              (rule "mod_axiom" (formula "16") (term "1,0,0,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,3,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,3,0"))
                              (rule "mod_axiom" (formula "11") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                              (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,3,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,3,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,3,0,1,0"))
                              (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                              (rule "mod_axiom" (formula "22") (term "0,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,1,0,1,0"))
                              (rule "mod_axiom" (formula "22") (term "1,2,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,1,0"))
                              (rule "mod_axiom" (formula "20") (term "1,2,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,2,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "15") (term "1,2,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,3,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,3,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,1,3,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,1,3,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "mul_literals" (formula "22") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                              (rule "leq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "21"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "10"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "polySimp_homoEq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0"))
                              (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
                              (rule "add_literals" (formula "13") (term "0,3,0"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1"))
                              (rule "polySimp_elimOne" (formula "12") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                              (rule "polySimp_elimOne" (formula "16") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "2"))
                              (rule "andLeft" (formula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "1,1,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0"))
                              (rule "add_zero_right" (formula "12") (term "0"))
                              (rule "leq_literals" (formula "12"))
                              (rule "closeFalse" (formula "12"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "27"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "27"))
                                 (branch "Case 1"
                                    (rule "dismissNonSelectedField" (formula "27") (term "1"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,3,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,1,3,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,3,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,3,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                    (rule "mod_axiom" (formula "11") (term "1,2,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,2,1,0,1,0"))
                                    (rule "mod_axiom" (formula "11") (term "0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0,1,0"))
                                    (rule "mod_axiom" (formula "16") (term "1,2,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,2,1,0,1,3,0"))
                                    (rule "mod_axiom" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                                    (rule "mod_axiom" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,2,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "16") (term "1,0,0,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,3,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,3,0"))
                                    (rule "mod_axiom" (formula "11") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,3,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                                    (rule "mod_axiom" (formula "22") (term "0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,1,0,1,0"))
                                    (rule "mod_axiom" (formula "22") (term "1,2,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,1,0"))
                                    (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "15") (term "1,2,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,2,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,2,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,3,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "1"))
                                    (rule "times_zero_2" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,1,3,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,1,3,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,3,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,1,3,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,3,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,3,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,1,3,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,1,3,0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                    (rule "mod_axiom" (formula "11") (term "1,2,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,2,1,0,1,0"))
                                    (rule "mod_axiom" (formula "16") (term "1,2,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,2,1,0,1,3,0"))
                                    (rule "mod_axiom" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,1,0,1,3,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                                    (rule "mod_axiom" (formula "11") (term "0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0,1,0"))
                                    (rule "mod_axiom" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,1,0,1,3,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,1,3,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,1,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,2,1,0,1,3,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,0,1,3,0,0,0,1,0"))
                                    (rule "mod_axiom" (formula "11") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                                    (rule "mod_axiom" (formula "16") (term "1,0,0,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,3,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,3,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,3,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,3,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,3,0,0,0,1,0"))
                                    (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                                    (rule "mod_axiom" (formula "22") (term "1,2,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,1,0"))
                                    (rule "mod_axiom" (formula "22") (term "0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,1,0,1,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,2,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,2,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "15") (term "1,2,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,3,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,3,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,1,3,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,1,3,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "27"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "27"))
                                    (branch "Case 1"
                                       (rule "dismissNonSelectedField" (formula "27") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "1"))
                                       (rule "inEqSimp_leqRight" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,3,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,1,3,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,3,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,3,0,0,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,1,3,0,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,1,3,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                       (rule "mod_axiom" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "16") (term "1,2,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,2,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "11") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,2,1,0,1,0"))
                                       (rule "mod_axiom" (formula "11") (term "0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0,1,0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,1,0,1,3,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0,1,3,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0,1,3,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,1,3,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,1,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,2,1,0,1,3,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,0,1,3,0,0,1,0"))
                                       (rule "mod_axiom" (formula "11") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "16") (term "1,0,0,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,3,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,3,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,3,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,3,0,0,1,0"))
                                       (rule "mod_axiom" (formula "22") (term "0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,1,0,1,0"))
                                       (rule "mod_axiom" (formula "22") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,1,0"))
                                       (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "20") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,2,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,3,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,1,3,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,1,3,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "polySimp_homoEq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
                                       (rule "add_literals" (formula "13") (term "0,3,0"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "closeFalse" (formula "18"))
                                    )
                                    (branch "Case 2"
                                       (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,1"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,3,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,1,3,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,3,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,3,0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,1,3,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,3,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "mod_axiom" (formula "11") (term "0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0,1,0"))
                                       (rule "mod_axiom" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "11") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,2,1,0,1,0"))
                                       (rule "mod_axiom" (formula "16") (term "1,2,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,2,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,1,1,1,0,1,3,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1,1,0,1,3,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,0,1,3,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1,0,1,3,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,1,3,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,0,1,3,0,1,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,2,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,2,1,0,1,3,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,0,1,3,0,1,0,0"))
                                       (rule "mod_axiom" (formula "11") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "16") (term "1,0,0,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,3,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,3,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,3,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,3,0,1,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,3,0,0,0,0,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "20") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,2,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "22") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,1,0"))
                                       (rule "mod_axiom" (formula "22") (term "0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,1,0,1,0"))
                                       (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,3,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,1,3,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,1,3,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,1,3,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "polySimp_homoEq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
                                       (rule "add_literals" (formula "13") (term "0,3,0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0,0"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "applyEq" (formula "2") (term "1,3,0,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "3,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,3,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "3,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0"))
                                       (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "16"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "27"))
                                    (branch "Case 1"
                                       (rule "translateJavaShiftLeftInt" (formula "27") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "1,0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,3,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,1,3,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,1,3,0,0,0,1,0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,3,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,1,3,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,1,3,0,0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "inEqSimp_homoInEq0" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                       (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "27") (term "1,2,1,0,1,3,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,2,1,0,1,3,0,1"))
                                       (rule "mod_axiom" (formula "27") (term "1,0,0,1,0,1,3,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,3,0,0,0,1,0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,3,0,0,0,1,1"))
                                       (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                                       (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                       (rule "mod_axiom" (formula "27") (term "1,0,0,1,0,1,3,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,3,0,0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,3,0,1"))
                                       (rule "mod_axiom" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1,1,0,1,3,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,1,0,1,3,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,1,0"))
                                       (rule "mod_axiom" (formula "27") (term "0,1,1,1,1,0,1,3,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1,1,0,1,3,0,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,1,0,1,3,0,1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,1,1,0,1,3,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,1,0,1,3,0,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,1,1,0,1,3,0,1"))
                                       (rule "mod_axiom" (formula "27") (term "1,2,1,0,1,3,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,2,1,0,1,3,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,1,3,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,1,3,0,0,0,1,0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,1,3,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,1,3,0,0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "javaShiftLeftIntDef" (formula "22") (term "0"))
                                       (rule "shiftLeftDef" (formula "22") (term "0,0"))
                                       (rule "polySimp_elimNeg" (formula "22") (term "1,1,0,0"))
                                       (rule "shiftLeftPositiveShiftDef" (formula "22") (term "2,0,0"))
                                       (rule "polySimp_elimOneLeft0" (formula "22") (term "2,0,0"))
                                       (rule "shiftRightPositiveShiftDef" (formula "22") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                       (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "polySimp_homoEq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0,0"))
                                       (rule "applyEq" (formula "23") (term "1,3,0,0,0,0,1,2,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "3,0,0,0,0,1,2,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,3,0,0,0,0,1,2,0,0"))
                                       (rule "add_zero_left" (formula "23") (term "3,0,0,0,0,1,2,0,0"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "applyEq" (formula "23") (term "1,3,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "3,0,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,3,0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "23") (term "3,0,0,0,0,0,0,0,0"))
                                       (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                       (rule "add_literals" (formula "12") (term "0,3,0"))
                                       (rule "applyEq" (formula "23") (term "1,3,0,0,0,0,0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "3,0,0,0,0,0,1,1,1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,3,0,0,0,0,0,1,1,1,0,0"))
                                       (rule "add_zero_left" (formula "23") (term "3,0,0,0,0,0,1,1,1,0,0"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0"))
                                       (rule "mod_axiom" (formula "23") (term "1,2,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,2,0,0"))
                                       (rule "mod_axiom" (formula "23") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "23") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                       (rule "pullOutSelect" (formula "23") (term "0,1,2,0,0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                                       (rule "applyEq" (formula "24") (term "0,0,1,1,2,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "1,1,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "0,0,1,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "0,0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "24") (term "0,1,2,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0,1,1,2,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "24") (term "1,1,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0,1,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "13"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "expand_moduloInteger" (formula "24") (term "0"))
                                       (rule "replace_int_RANGE" (formula "24") (term "1,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "24") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                       (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                       (rule "add_literals" (formula "24") (term "1,0"))
                                       (rule "times_zero_1" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "closeTrue" (formula "24"))
                                    )
                                    (branch "Case 2"
                                       (rule "translateJavaShiftLeftInt" (formula "27") (term "0,3,0"))
                                       (rule "translateJavaSubInt" (formula "27") (term "3,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "3,0"))
                                       (rule "mul_literals" (formula "27") (term "1,3,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "3,0"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "1,1,3,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,3,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,1,3,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,1,3,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                       (rule "mod_axiom" (formula "27") (term "1,2,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,2,1,0,1,3,0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                                       (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                                       (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "27") (term "1,2,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,2,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "mod_axiom" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "27") (term "1,0,0,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,3,0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                                       (rule "mod_axiom" (formula "27") (term "1,0,0,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                                       (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                                       (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,1,3,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,1,3,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,1,3,0,0,0,1,1,3,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "javaShiftLeftIntDef" (formula "22") (term "1,3,0"))
                                       (rule "shiftLeftDef" (formula "22") (term "0,1,3,0"))
                                       (rule "polySimp_elimNeg" (formula "22") (term "1,1,0,1,3,0"))
                                       (rule "shiftLeftPositiveShiftDef" (formula "22") (term "2,0,1,3,0"))
                                       (rule "polySimp_elimOneLeft0" (formula "22") (term "2,0,1,3,0"))
                                       (rule "shiftRightPositiveShiftDef" (formula "22") (term "1,0,1,3,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,3,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,1,3,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,3,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,1,3,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,1,3,0"))
                                       (rule "pullOutSelect" (formula "22") (term "0,1,2,0,1,3,0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                                       (rule "applyEq" (formula "23") (term "0,0,0,0,1,3,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "23") (term "0,0,1,1,1,0,1,3,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "23") (term "0,1,2,0,1,3,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0,0,0,1,3,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0,1,1,1,0,1,3,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "mod_axiom" (formula "22") (term "1,2,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,0,1,3,0"))
                                       (rule "mod_axiom" (formula "22") (term "0,0,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,3,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,3,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,1,3,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,3,0"))
                                       (rule "mod_axiom" (formula "22") (term "0,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,1,3,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,0,1,3,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,1,3,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,3,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,3,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,3,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,3,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,3,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "10"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "expand_moduloInteger" (formula "22") (term "1,3,0"))
                                       (rule "replace_int_RANGE" (formula "22") (term "1,1,1,3,0"))
                                       (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,1,3,0"))
                                       (rule "replace_int_MIN" (formula "22") (term "0,1,3,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "3,0"))
                                       (rule "add_literals" (formula "22") (term "0,3,0"))
                                       (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "10") (term "0") (inst "i=i") (inst "j=j"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "expand_inInt" (formula "10") (term "1,0,0"))
                                       (rule "expand_inInt" (formula "10") (term "1,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                                       (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "10") (term "0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "10") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "10") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0,1,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "10") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                       (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "22") (term "0") (inst "i=i") (inst "j=j"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "expand_inInt" (formula "22") (term "1,0,0"))
                                       (rule "expand_inInt" (formula "22") (term "1,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "22") (term "0,1,1,0,0"))
                                       (rule "replace_int_MAX" (formula "22") (term "1,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "22") (term "0,1,1,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "22") (term "1,0,1,0,0,1,0"))
                                       (rule "allRight" (formula "22") (inst "sk=i_0"))
                                       (rule "impRight" (formula "22"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "allRight" (formula "26") (inst "sk=j_0"))
                                       (rule "impRight" (formula "26"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "6"))
                                       (rule "inEqSimp_commuteLeq" (formula "9"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_commuteLeq" (formula "5"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_0"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "22"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1"))
                                       (rule "mul_literals" (formula "10") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "23"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "23"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                       (rule "expand_inShort" (formula "20"))
                                       (rule "replace_short_MAX" (formula "20") (term "1,0"))
                                       (rule "replace_short_MIN" (formula "20") (term "0,1"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_commuteLeq" (formula "20"))
                                       (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "28"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "28"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                       (rule "expand_inShort" (formula "23"))
                                       (rule "replace_short_MAX" (formula "23") (term "1,0"))
                                       (rule "replace_short_MIN" (formula "23") (term "0,1"))
                                       (rule "andLeft" (formula "23"))
                                       (rule "inEqSimp_commuteLeq" (formula "23"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "27"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "27"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "ifthenelse_split" (formula "24") (term "1,0,0"))
                                       (branch "log_buckets / 32 * 32 >= 1 + log_buckets TRUE"
                                          (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_left" (formula "22") (term "0,1,0,1,1,1,0,0,0,1,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")))
                                          (rule "replace_known_left" (formula "6") (term "0,1,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "12") (term "0,1,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_homoInEq0" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "21"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1"))
                                          (rule "mul_literals" (formula "21") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "20"))
                                          (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "add_literals" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "add_literals" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                          (rule "inEqSimp_or_subsumption0" (formula "23") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,0,1,0"))
                                          (rule "div_axiom" (formula "25") (term "0,0") (inst "quotient=quotient_0"))
                                          (rule "qeq_literals" (formula "25") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "mul_literals" (formula "25") (term "1,1,1,1"))
                                          (rule "equal_literals" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "27") (term "1"))
                                          (rule "add_literals" (formula "27") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "applyEq" (formula "33") (term "0,1,1,1,1,0,0") (ifseqformula "25"))
                                          (rule "polySimp_addComm0" (formula "33") (term "1,1,1,0,0"))
                                          (rule "applyEq" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "25"))
                                          (rule "polySimp_addComm0" (formula "6") (term "1,1,1,0,0"))
                                          (rule "applyEq" (formula "23") (term "0,1,1,1,1,0,1,1,1,0,0") (ifseqformula "25"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,1,0,1,1,1,0,0"))
                                          (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,1,1") (ifseqformula "25"))
                                          (rule "polySimp_addComm0" (formula "29") (term "1,1,1,0,1,1"))
                                          (rule "applyEq" (formula "23") (term "0,1,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "25"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,1,0,1,1,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "applyEq" (formula "22") (term "0,1,1,1,1,0,1,1") (ifseqformula "25"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,1,0,1,1"))
                                          (rule "applyEq" (formula "21") (term "0,1,1,1,1,0,0") (ifseqformula "25"))
                                          (rule "polySimp_addComm0" (formula "21") (term "1,1,1,0,0"))
                                          (rule "applyEq" (formula "12") (term "0,1,1,1,1,0,0") (ifseqformula "25"))
                                          (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "26"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                       (branch "log_buckets / 32 * 32 >= 1 + log_buckets FALSE"
                                          (rule "replace_known_right" (formula "22") (term "0,1,0,1,1,1,0,0") (ifseqformula "29"))
                                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "29")))
                                          (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "29"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "28") (term "0,1,0,0") (ifseqformula "29"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "replace_known_right" (formula "21") (term "0,1,0,0") (ifseqformula "29"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "12") (term "0,1,0,0") (ifseqformula "29"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_geqRight" (formula "29"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "22"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "add_literals" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                          (rule "inEqSimp_or_subsumption0" (formula "23") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,0,1,0"))
                                          (rule "div_axiom" (formula "7") (term "0,1,1,1,0,0") (inst "quotient=quotient_0"))
                                          (rule "equal_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1,1,1,1"))
                                          (rule "qeq_literals" (formula "7") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "polySimp_addComm1" (formula "9") (term "1"))
                                          (rule "add_literals" (formula "9") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "applyEq" (formula "26") (term "0,1,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addComm0" (formula "26") (term "1,1,0,1,1,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "26") (term "0,1,1,1,0,1,1,1,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addComm0" (formula "26") (term "1,1,0,1,1,1,0,0"))
                                          (rule "applyEq" (formula "29") (term "0,1,1,1,0,1,1") (ifseqformula "7"))
                                          (rule "polySimp_addComm0" (formula "29") (term "1,1,0,1,1"))
                                          (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "10") (term "0,1,1,1,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "6"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "24") (term "0,1,1,1,0,1,1") (ifseqformula "6"))
                                          (rule "polySimp_addComm0" (formula "24") (term "1,1,0,1,1"))
                                          (rule "mod_axiom" (formula "25") (term "1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,1,1,0,0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,1,1,0,0,0,1,0"))
                                          (rule "mod_axiom" (formula "25") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,1,1,0,0"))
                                          (rule "mod_axiom" (formula "28") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                                          (rule "add_literals" (formula "28") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "28") (term "0,1"))
                                          (rule "mod_axiom" (formula "32") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "9") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                          (rule "mod_axiom" (formula "27") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "15") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                          (rule "mod_axiom" (formula "24") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                          (rule "add_literals" (formula "24") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "24") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                          (rule "mul_literals" (formula "9") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1"))
                                          (rule "mul_literals" (formula "27") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                          (rule "mul_literals" (formula "15") (term "0,0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "23"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1"))
                                          (rule "mul_literals" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                          (rule "inEqSimp_exactShadow0" (formula "27") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "greater_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "27") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0"))
                                          (rule "greater_literals" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "22"))
                                          (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                          (rule "leq_literals" (formula "7") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_exactShadow0" (formula "28") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "greater_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "28") (ifseqformula "13"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "greater_literals" (formula "28") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "9"))
                                          (rule "mul_literals" (formula "22") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "22") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "28"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1"))
                                          (rule "mul_literals" (formula "30") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                          (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "22"))
                                          (rule "leq_literals" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "8") (term "1,1"))
                                          (rule "add_zero_right" (formula "8") (term "1"))
                                          (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "applyEqRigid" (formula "26") (term "0,0,1,1,0,0,1,1,1,0,0") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,1,1,0,0"))
                                          (rule "add_zero_left" (formula "26") (term "1,1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0"))
                                          (rule "applyEqRigid" (formula "33") (term "0,0,1,1,1") (ifseqformula "21"))
                                          (rule "times_zero_2" (formula "33") (term "0,1,1,1"))
                                          (rule "add_zero_left" (formula "33") (term "1,1,1"))
                                          (rule "applyEqRigid" (formula "28") (term "0,0,1,1,1") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,1"))
                                          (rule "add_zero_left" (formula "28") (term "1,1,1"))
                                          (rule "applyEq" (formula "29") (term "0,0,1,1,0,0,1,1") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "29") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "29") (term "1"))
                                          (rule "applyEqRigid" (formula "26") (term "0,0,1,1,0,0,1,1,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,1,1,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "1,1,0,0,1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "21"))
                                          (rule "applyEqRigid" (formula "25") (term "0,0,1,1,0,0,1,1") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "25") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "25") (term "1"))
                                          (rule "applyEqRigid" (formula "9") (term "0,0,1,1,0,0,0") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "applyEq" (formula "33") (term "0,0,1,1,0,0,0") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                          (rule "add_zero_left" (formula "33") (term "1,1,0,0,0"))
                                          (rule "applyEq" (formula "15") (term "0,0,1,1,1") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,1"))
                                          (rule "add_zero_left" (formula "15") (term "1,1,1"))
                                          (rule "applyEqRigid" (formula "28") (term "0,0,1,1,0,0,0") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "1,1,0,0,0"))
                                          (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,0") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "1,1,0,0,0"))
                                          (rule "applyEq" (formula "25") (term "0,0,1,1,1") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,1"))
                                          (rule "add_zero_left" (formula "25") (term "1,1,1"))
                                          (rule "polySimp_addComm0" (formula "25") (term "1"))
                                          (rule "applyEqRigid" (formula "26") (term "0,0,1,1,1,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "times_zero_2" (formula "26") (term "0,1,1,1,1,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "1,1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "9") (term "0,0,1,1,0") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0"))
                                          (rule "add_zero_left" (formula "9") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "applyEq" (formula "26") (term "0,0,1,1,1,1,0,0") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,1,1,0,0"))
                                          (rule "add_zero_left" (formula "26") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0"))
                                          (rule "applyEqRigid" (formula "29") (term "0,0,1,1,1") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1,1"))
                                          (rule "add_zero_left" (formula "29") (term "1,1,1"))
                                          (rule "polySimp_addComm0" (formula "29") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "23"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_exactShadow0" (formula "26") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "greater_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "26") (ifseqformula "10"))
                                          (rule "greater_literals" (formula "26") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "mul_literals" (formula "26") (term "0,0"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                          (rule "inEqSimp_exactShadow0" (formula "26") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "greater_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "26") (ifseqformula "3"))
                                          (rule "greater_literals" (formula "26") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "mul_literals" (formula "26") (term "0,0"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                          (rule "div_axiom" (formula "31") (term "0,0") (inst "quotient=quotient_1"))
                                          (rule "equal_literals" (formula "31") (term "0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "mul_literals" (formula "31") (term "1,1,1,1"))
                                          (rule "qeq_literals" (formula "31") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                          (rule "add_literals" (formula "33") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "33") (term "1"))
                                          (rule "add_literals" (formula "33") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "32"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "33"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0"))
                                          (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq0" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                          (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq0" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                          (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq0" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0"))
                                          (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "31"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "31"))
                                          (rule "polySimp_addComm1" (formula "24") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "24") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "31"))
                                          (rule "polySimp_addComm1" (formula "24") (term "1,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "31"))
                                          (rule "polySimp_addComm0" (formula "27") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                          (rule "mul_literals" (formula "33") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                                          (rule "mul_literals" (formula "7") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1"))
                                          (rule "mul_literals" (formula "34") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1"))
                                          (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0"))
                                          (rule "qeq_literals" (formula "32") (term "0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "26"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0"))
                                          (rule "qeq_literals" (formula "32") (term "0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "26"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "26"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "all_pull_out3" (formula "24") (term "0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "24") (inst "t=i_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,1,1,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0,0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,1,0,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0,0,0,0,0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "commute_or_2" (formula "24") (term "0,0"))
                                          (rule "allLeft" (formula "24") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0,0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "24") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "24") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "24"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "27"))
                     (branch "Case 1"
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,3,0,0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,1,3,0,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,1,3,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,1"))
                        (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                        (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "add_literals" (formula "21") (term "0,0"))
                        (rule "mod_axiom" (formula "27") (term "1,2,1,0,1,3,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,2,1,0,1,3,0,0,0,0"))
                        (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                        (rule "mod_axiom" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1,1,0,1,3,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,1,1,0,1,3,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,1,0,1,3,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,1,1,0,1,3,0,0,0,0"))
                        (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                        (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                        (rule "mod_axiom" (formula "27") (term "1,0,0,1,0,1,3,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,3,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,3,0,0,0,0"))
                        (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                        (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                        (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,1,3,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,1,3,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                        (rule "leq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                        (rule "leq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                        (rule "leq_literals" (formula "11") (term "0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
                        (rule "leq_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "wellFormedStoreObject" (formula "22"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
                        (rule "wellFormedStorePrimitive" (formula "22") (term "0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,1"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,1"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,1"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,1"))
                        (rule "wellFormedStoreObject" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")))
                        (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                        (rule "wellFormedCreate" (formula "22") (term "0,0"))
                        (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                        (rule "pullOutSelect" (formula "22") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "applyEqReverse" (formula "23") (term "0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "14"))
                        (rule "mul_literals" (formula "16") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "16"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "10"))
                        (rule "mul_literals" (formula "16") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "16"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "23") (ifseqformula "4"))
                     )
                     (branch "Case 2"
                        (rule "dismissNonSelectedField" (formula "27") (term "0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,1"))
                        (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,3,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,3,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,3,0"))
                        (rule "inEqSimp_homoInEq0" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                        (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "add_literals" (formula "21") (term "0,0"))
                        (rule "mod_axiom" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,0,1,3,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,0,1,3,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "10") (term "1,2,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,2,1,0,1,0"))
                        (rule "mod_axiom" (formula "15") (term "1,2,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "10") (term "0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0,1,0"))
                        (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
                        (rule "mod_axiom" (formula "15") (term "1,0,0,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,3,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0"))
                        (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,0"))
                        (rule "mod_axiom" (formula "21") (term "1,2,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,1,0"))
                        (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,1,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,3,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,3,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                        (rule "leq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                        (rule "leq_literals" (formula "11") (term "0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
                        (rule "leq_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "23") (ifseqformula "4"))
                     )
                  )
               )
            )
         )
      )
   )
)
)
}
