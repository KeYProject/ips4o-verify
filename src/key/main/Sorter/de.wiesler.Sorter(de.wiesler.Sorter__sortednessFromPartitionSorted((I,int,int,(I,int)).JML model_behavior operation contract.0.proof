\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Apr 15 22:23:58 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../../java/main";

\proofObligation "#Proof Obligation Settings
#Fri Apr 15 22:23:58 CEST 2022
contract=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:sortednessFromPartitionSorted([I,int,int,[I,int)].JML model_behavior operation contract.0
name=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:sortednessFromPartitionSorted([I,int,int,[I,int)].JML model_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "2928")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre_0,heapBefore,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "notLeft" (formula "16"))
 (builtin "One Step Simplification" (formula "6"))
 (builtin "One Step Simplification" (formula "4"))
 (builtin "One Step Simplification" (formula "3"))
 (builtin "One Step Simplification" (formula "16"))
(rule "true_left" (formula "4") (userinteraction))
(rule "Definition_axiom_for_allBucketsInRangeSorted_in_de_wiesler_Sorter" (formula "11") (term "0") (inst "b=b") (userinteraction))
 (builtin "One Step Simplification" (formula "11") (userinteraction))
(rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "15") (term "0") (inst "i=i") (userinteraction))
 (builtin "One Step Simplification" (formula "15") (userinteraction))
(rule "allRight" (formula "15") (inst "sk=i_0") (userinteraction))
(rule "impRight" (formula "15") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "Definition_axiom_for_bucketIndexFromOffset_in_de_wiesler_Sorter" (formula "14") (term "0") (inst "i=i") (inst "b=b") (userinteraction))
 (builtin "One Step Simplification" (formula "14") (userinteraction))
(rule "allLeft" (formula "14") (inst "t=sub(i_0, begin)") (userinteraction))
(rule "impLeft" (formula "14") (userinteraction))
(branch "Case 1"
   (rule "translateJavaSubInt" (formula "11") (term "1"))
   (rule "translateJavaAddInt" (formula "13") (term "2,0,1,0"))
   (rule "translateJavaSubInt" (formula "15") (term "1,1"))
   (rule "translateJavaAddInt" (formula "13") (term "3,0,1,0"))
   (rule "translateJavaAddInt" (formula "18") (term "0,2,1"))
   (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
   (rule "translateJavaSubInt" (formula "2") (term "1"))
   (rule "translateJavaAddInt" (formula "14") (term "0,2,1,1,1,0,1,0"))
   (rule "translateJavaAddInt" (formula "13") (term "0,2,1,3,0,1,0"))
   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "16"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "polySimp_elimSub" (formula "15") (term "1,0"))
   (rule "polySimp_elimSub" (formula "15") (term "0,1"))
   (rule "polySimp_elimSub" (formula "11") (term "1"))
   (rule "polySimp_elimSub" (formula "15") (term "1,1"))
   (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_elimSub" (formula "2") (term "1"))
   (rule "mul_literals" (formula "2") (term "1,1"))
   (rule "polySimp_addComm0" (formula "18") (term "0,2,1"))
   (rule "polySimp_addComm0" (formula "14") (term "0,2,1,1,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "13") (term "0,2,1,3,0,1,0"))
   (rule "polySimp_addComm0" (formula "15") (term "1,0"))
   (rule "polySimp_addComm0" (formula "15") (term "0,1"))
   (rule "polySimp_addComm0" (formula "11") (term "1"))
   (rule "polySimp_addComm0" (formula "15") (term "1,1"))
   (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "2") (term "1"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_leqRight" (formula "18"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
   (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,1"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
   (rule "polySimp_addComm1" (formula "16") (term "0,0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,1"))
   (rule "add_literals" (formula "16") (term "1,1,0,0,0,1"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0,1"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "3"))
   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
   (rule "add_literals" (formula "3") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "10"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "9"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
   (rule "times_zero_2" (formula "16") (term "1,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,1,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1"))
   (rule "mul_literals" (formula "16") (term "0,1,1"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "0,1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1"))
   (rule "polySimp_rightDist" (formula "3") (term "1"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
   (rule "mul_literals" (formula "3") (term "0,1"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,0"))
   (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "2"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "inEqSimp_leqRight" (formula "16"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
   (rule "polySimp_elimOne" (formula "1") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
   (rule "andLeft" (formula "4"))
   (rule "inEqSimp_homoInEq1" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
   (rule "mul_literals" (formula "4") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "0"))
   (rule "polySimp_addComm0" (formula "4") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
   (rule "add_literals" (formula "4") (term "1,1,0"))
   (rule "times_zero_1" (formula "4") (term "1,0"))
   (rule "add_zero_right" (formula "4") (term "0"))
   (rule "leq_literals" (formula "4"))
   (rule "closeFalse" (formula "4"))
)
(branch "Case 2"
   (rule "exLeft" (formula "14") (inst "sk=b_0") (userinteraction))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "16"))
   (rule "cut" (inst "cutFormula=lt(sub(javaAddInt(i_0, Z(1(#))), begin),
   int::select(heap,
               bucket_starts,
               arr(add(b_0, Z(1(#))))))<<origin(\"User_Interaction @ node 1710 (cut)\",\"[]\")>>") (userinteraction))
   (branch "CUT: javaAddInt(i_0, 1) - begin < bucket_starts[b_0 + 1] TRUE"
      (rule "allLeftHide" (formula "14") (inst "t=b_0") (userinteraction))
      (rule "impLeft" (formula "14") (userinteraction))
      (branch "Case 1"
         (rule "translateJavaSubInt" (formula "12") (term "1"))
         (rule "translateJavaAddInt" (formula "1") (term "0,0"))
         (rule "translateJavaSubInt" (formula "3") (term "1"))
         (rule "translateJavaAddInt" (formula "17") (term "0,2,1"))
         (rule "translateJavaAddInt" (formula "22") (term "0,2,1"))
         (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
         (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,1,0,1,0"))
         (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "15"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
         (rule "closeTrue" (formula "19"))
      )
      (branch "Case 2"
         (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "14") (term "0") (inst "i=i") (userinteraction))
          (builtin "One Step Simplification" (formula "14") (userinteraction))
         (rule "instAll" (formula "22") (term "0,2,0") (ifseqformula "14") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "translateJavaAddInt" (formula "23") (term "0,2,1"))
            (rule "translateJavaSubInt" (formula "12") (term "1"))
            (rule "translateJavaAddInt" (formula "1") (term "0,0"))
            (rule "translateJavaAddInt" (formula "20") (term "0,0"))
            (rule "translateJavaSubInt" (formula "20") (term "1,1"))
            (rule "translateJavaSubInt" (formula "3") (term "1"))
            (rule "translateJavaAddInt" (formula "18") (term "0,2,1"))
            (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
            (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,1,0,1,0"))
            (rule "translateJavaAddInt" (formula "14") (term "0,0,0,0"))
            (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
            (rule "translateJavaAddInt" (formula "14") (term "0,2,1,1,0"))
            (rule "translateJavaAddInt" (formula "20") (term "0,1,1"))
            (rule "translateJavaAddInt" (formula "14") (term "0,1,1,0,0"))
            (rule "translateJavaAddInt" (formula "20") (term "0,2,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "14") (term "0,2,1,0,1,1,0,0"))
            (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_elimSub" (formula "18") (term "0"))
            (rule "polySimp_elimSub" (formula "17") (term "1"))
            (rule "polySimp_elimSub" (formula "12") (term "1"))
            (rule "polySimp_elimSub" (formula "1") (term "0"))
            (rule "polySimp_elimSub" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "1,1"))
            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_elimSub" (formula "20") (term "1,1"))
            (rule "mul_literals" (formula "20") (term "1,1,1"))
            (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
            (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "23") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "18") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "19") (term "0,2,1,1,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,2,1,1,0"))
            (rule "polySimp_addComm0" (formula "18") (term "0"))
            (rule "polySimp_addComm0" (formula "17") (term "1"))
            (rule "polySimp_addComm0" (formula "12") (term "1"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "1"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,2,1,0,1,1"))
            (rule "polySimp_addComm0" (formula "14") (term "0,2,1,0,1,1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "20") (term "1,1"))
            (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,1,1"))
            (rule "polySimp_addComm0" (formula "14") (term "0,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "16"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "4"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
            (rule "add_literals" (formula "4") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,1"))
            (rule "mul_literals" (formula "21") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1"))
            (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0"))
            (rule "inEqSimp_leqRight" (formula "21"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
            (rule "polySimp_elimOne" (formula "18") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,1,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1"))
            (rule "polySimp_rightDist" (formula "5") (term "1"))
            (rule "mul_literals" (formula "5") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "0,1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "0,1,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
            (rule "mul_literals" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0"))
            (rule "qeq_literals" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Case 2"
            (rule "close" (formula "23") (ifseqformula "1"))
         )
      )
   )
   (branch "CUT: javaAddInt(i_0, 1) - begin < bucket_starts[b_0 + 1] FALSE"
      (rule "Definition_axiom_for_allBucketsPartitioned_in_de_wiesler_Sorter" (formula "12") (term "0") (inst "b=b") (userinteraction))
       (builtin "One Step Simplification" (formula "12") (userinteraction))
      (rule "instAll" (formula "19") (term "0,0,2,1") (ifseqformula "12") (userinteraction))
      (rule "impLeft" (formula "1") (userinteraction))
      (branch "Case 1"
         (rule "translateJavaAddInt" (formula "20") (term "0,0"))
         (rule "translateJavaSubInt" (formula "2") (term "1"))
         (rule "translateJavaAddInt" (formula "23") (term "0,2,1"))
         (rule "translateJavaSubInt" (formula "11") (term "1"))
         (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
         (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,1,0,1,0"))
         (rule "translateJavaAddInt" (formula "17") (term "0,2,1"))
         (rule "translateJavaAddInt" (formula "13") (term "2,0,1,0"))
         (rule "translateJavaAddInt" (formula "13") (term "3,0,1,0"))
         (rule "translateJavaAddInt" (formula "12") (term "0,2,5,0,1,0"))
         (rule "translateJavaAddInt" (formula "13") (term "0,2,1,3,0,1,0"))
         (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "21"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "15")))
         (rule "closeTrue" (formula "19"))
      )
      (branch "Case 2"
         (rule "Definition_axiom_for_isBucketPartitioned_in_de_wiesler_Sorter" (formula "1") (term "0") (inst "i=i") (inst "j=j") (userinteraction))
          (builtin "One Step Simplification" (formula "1") (userinteraction))
         (rule "allLeftHide" (formula "1") (inst "t=i_0") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "translateJavaAddInt" (formula "20") (term "0,0"))
            (rule "translateJavaAddInt" (formula "19") (term "0,0"))
            (rule "translateJavaAddInt" (formula "23") (term "0,2,1"))
            (rule "translateJavaAddInt" (formula "19") (term "1,1"))
            (rule "translateJavaSubInt" (formula "2") (term "1"))
            (rule "translateJavaSubInt" (formula "11") (term "1"))
            (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
            (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,1,0,1,0"))
            (rule "translateJavaAddInt" (formula "17") (term "0,2,1"))
            (rule "translateJavaAddInt" (formula "13") (term "2,0,1,0"))
            (rule "translateJavaAddInt" (formula "13") (term "3,0,1,0"))
            (rule "translateJavaAddInt" (formula "12") (term "0,2,5,0,1,0"))
            (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,1"))
            (rule "translateJavaAddInt" (formula "13") (term "0,2,1,3,0,1,0"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_elimSub" (formula "17") (term "0"))
            (rule "polySimp_elimSub" (formula "16") (term "1"))
            (rule "polySimp_elimSub" (formula "20") (term "0"))
            (rule "polySimp_elimSub" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "1,1"))
            (rule "polySimp_elimSub" (formula "11") (term "1"))
            (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "23") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "18") (term "0,2,1,1,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "17") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "12") (term "0,2,5,0,1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "0,2,1,1,1"))
            (rule "polySimp_addComm0" (formula "13") (term "0,2,1,3,0,1,0"))
            (rule "polySimp_addComm0" (formula "17") (term "0"))
            (rule "polySimp_addComm0" (formula "16") (term "1"))
            (rule "polySimp_addComm0" (formula "20") (term "0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "1"))
            (rule "polySimp_addComm0" (formula "11") (term "1"))
            (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,1,0"))
            (rule "inEqSimp_ltRight" (formula "21"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
            (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_ltToLeq" (formula "4"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "16"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
            (rule "add_literals" (formula "4") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
            (rule "inEqSimp_leqRight" (formula "21"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
            (rule "polySimp_elimOne" (formula "18") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,1,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1"))
            (rule "polySimp_rightDist" (formula "5") (term "1"))
            (rule "mul_literals" (formula "5") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "0,1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
            (rule "mul_literals" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Case 2"
            (rule "allLeftHide" (formula "1") (inst "t=add(i_0, Z(1(#)))") (userinteraction))
            (rule "translateJavaSubInt" (formula "12") (term "1"))
            (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
            (rule "translateJavaAddInt" (formula "23") (term "0,2,1"))
            (rule "translateJavaSubInt" (formula "3") (term "1"))
            (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,1,0,1,0"))
            (rule "translateJavaAddInt" (formula "20") (term "0,0"))
            (rule "translateJavaAddInt" (formula "18") (term "0,2,1"))
            (rule "translateJavaAddInt" (formula "14") (term "2,0,1,0"))
            (rule "translateJavaAddInt" (formula "14") (term "3,0,1,0"))
            (rule "translateJavaAddInt" (formula "13") (term "0,2,5,0,1,0"))
            (rule "translateJavaAddInt" (formula "1") (term "0,0,0"))
            (rule "translateJavaAddInt" (formula "14") (term "0,2,1,3,0,1,0"))
            (rule "translateJavaAddInt" (formula "1") (term "0,2,1,0,0,0"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_elimSub" (formula "17") (term "1"))
            (rule "polySimp_elimSub" (formula "18") (term "0"))
            (rule "polySimp_elimSub" (formula "12") (term "1"))
            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_elimSub" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "1,1"))
            (rule "polySimp_elimSub" (formula "20") (term "0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,2,1,1"))
            (rule "polySimp_addComm0" (formula "23") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "19") (term "0,2,1,1,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "18") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "13") (term "0,2,5,0,1,0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,2,1,3,0,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "17") (term "1"))
            (rule "polySimp_addComm0" (formula "18") (term "0"))
            (rule "polySimp_addComm0" (formula "12") (term "1"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "1"))
            (rule "polySimp_addComm0" (formula "20") (term "0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
            (rule "polySimp_addComm1" (formula "2") (term "0,1"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1,0,1,0"))
            (rule "inEqSimp_ltRight" (formula "21"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "5"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "4"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "17"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0"))
            (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
            (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
            (rule "polySimp_elimOne" (formula "18") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "0,1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1"))
            (rule "polySimp_rightDist" (formula "5") (term "1"))
            (rule "mul_literals" (formula "5") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
            (rule "andLeft" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
   )
)
)
}
