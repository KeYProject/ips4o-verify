\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Apr 06 12:01:44 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../../java/main";

\proofObligation "#Proof Obligation Settings
#Wed Apr 06 12:01:44 CEST 2022
contract=de.wiesler.Functions[de.wiesler.Functions\\:\\:copy_nonoverlapping([I,int,[I,int,int)].JML normal_behavior operation contract.0
name=de.wiesler.Functions[de.wiesler.Functions\\:\\:copy_nonoverlapping([I,int,[I,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "802059dea3"))

(autoModeTime "15219")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre_0,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "2,2,0,0,0,0,1,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "3,0,0,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "3,1,0,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,0,1,0,0,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,0,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,1,0,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,1,0,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "2,0,0,1,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,0,0,0,1,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,0,0,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,0,1,1,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "eqSymm" (formula "13") (term "1,0,0,0,0,0,1"))
(rule "eqSymm" (formula "13") (term "0,1,0,0,0,1"))
(rule "eqSymm" (formula "13") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "11"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "13") (term "2,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "13") (term "1,2,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "2,0"))
(rule "mul_literals" (formula "10") (term "1,2,0"))
(rule "polySimp_elimSub" (formula "10") (term "2,1"))
(rule "mul_literals" (formula "10") (term "1,2,1"))
(rule "polySimp_addComm0" (formula "7") (term "0"))
(rule "polySimp_addComm0" (formula "13") (term "3,0,0,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "13") (term "2,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "0,2,0"))
(rule "polySimp_addComm1" (formula "10") (term "2,1"))
(rule "polySimp_addComm0" (formula "13") (term "0,2,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm1" (formula "10") (term "2,0"))
(rule "polySimp_addComm0" (formula "10") (term "0,2,1"))
(rule "polySimp_addComm0" (formula "10") (term "0,2,0"))
(rule "disjointDefinition" (formula "10"))
(rule "disjointArrayRanges" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,1,1"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "elementOfArrayRange" (formula "13") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "commute_and_2" (formula "10") (term "0"))
(rule "commute_and" (formula "10") (term "0,1"))
(rule "cnf_rightDist" (formula "10") (term "1"))
(rule "commute_or" (formula "10") (term "0,1"))
(rule "cnf_rightDist" (formula "10") (term "1,1"))
(rule "commute_or" (formula "10") (term "0,1,1"))
(rule "cnf_rightDist" (formula "10") (term "0,1"))
(rule "commute_or" (formula "10") (term "0,0,1"))
(rule "shift_paren_and" (formula "10") (term "1"))
(rule "shift_paren_and" (formula "10"))
(rule "shift_paren_and" (formula "10") (term "0"))
(rule "shift_paren_and" (formula "10") (term "0,0"))
(rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_copy_nonoverlapping,savedHeapBefore_copy_nonoverlapping,_destBefore_copy_nonoverlapping,_destPosBefore_copy_nonoverlapping,_lengthBefore_copy_nonoverlapping,_srcBefore_copy_nonoverlapping,_srcPosBefore_copy_nonoverlapping"))
 (builtin "One Step Simplification" (formula "13"))
(rule "for_to_while" (formula "13") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "i"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "commute_and_2" (formula "10") (term "0"))
(rule "loopScopeInvDia" (formula "13") (term "1") (newnames "i_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
(branch "Invariant Initially Valid"
   (rule "andRight" (formula "13"))
   (branch "Case 1"
      (rule "andRight" (formula "13"))
      (branch "Case 1"
          (builtin "One Step Simplification" (formula "13"))
         (rule "leq_literals" (formula "13"))
         (rule "closeTrue" (formula "13"))
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_leqRight" (formula "13"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,1,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,0,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0"))
         (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0,0,0,0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "11") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "false_right" (formula "11"))
         (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
         (rule "qeq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "closeFalse" (formula "6"))
      )
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "13"))
      (rule "translateJavaAddInt" (formula "13") (term "0,2,0,1,0"))
      (rule "translateJavaAddInt" (formula "13") (term "0,2,1,1,0"))
      (rule "allRight" (formula "13") (inst "sk=j_0"))
      (rule "impRight" (formula "13"))
      (rule "andLeft" (formula "1"))
      (rule "eqSymm" (formula "15"))
      (rule "polySimp_addComm0" (formula "15") (term "0,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "2"))
      (rule "times_zero_1" (formula "2") (term "1,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "1"))
      (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0,0,0,0,0"))
      (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,0,0,0,0"))
      (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
      (rule "mul_literals" (formula "2") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,0,1,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,0,1,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,1,0,0,0"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Invariant Preserved and Used"
    (builtin "One Step Simplification" (formula "14"))
   (rule "translateJavaAddInt" (formula "14") (term "0,2,1,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "14") (term "0,1,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0,1,0"))
   (rule "translateJavaAddInt" (formula "14") (term "0,2,0,1,0,1,0"))
   (rule "translateJavaAddInt" (formula "14") (term "0,2,1,0,0,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "14") (term "0,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,0,1,0,1"))
   (rule "translateJavaSubInt" (formula "14") (term "2,2,0,0,0,0,1,0,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "14") (term "0,2,0,1,0,1,0,0,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "14") (term "0,2,1,1,0,1,0,0,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "14") (term "0,2,1,0,1,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,1,0,1,0"))
   (rule "translateJavaAddInt" (formula "14") (term "0,2,1,0,1,0,1,0,1"))
   (rule "translateJavaAddInt" (formula "14") (term "0,2,2,0,0,0,0,1,0,1,1,0,1,1"))
   (rule "impRight" (formula "14"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "eqSymm" (formula "17") (term "1,0,1,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "17") (term "1,0,0,1,0,1,1,0,1"))
   (rule "eqSymm" (formula "3") (term "1,0"))
   (rule "polySimp_elimSub" (formula "17") (term "0,1,1,0"))
   (rule "polySimp_elimSub" (formula "17") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "17") (term "1,2,2,0,0,0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "17") (term "0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "17") (term "2,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "17") (term "1,2,1,0,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "3") (term "2,1,0,1,1,0"))
   (rule "mul_literals" (formula "3") (term "1,2,1,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0,1,0"))
   (rule "mul_literals" (formula "3") (term "1,2,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "17") (term "0,1,1,0"))
   (rule "polySimp_addComm1" (formula "17") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "2,1,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "3") (term "2,1,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "3") (term "2,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "17") (term "0,2,2,0,0,0,0,1,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "17") (term "0,2,1,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "3") (term "0,2,1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "3") (term "0,2,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_1"))
   (rule "elementOfArrayRange" (formula "17") (term "0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "commute_and" (formula "3") (term "0,0"))
   (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x_2"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
   (rule "less_than_comparison_simple" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "arrayLengthIsAShort" (formula "14") (term "0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "arrayLengthNotNegative" (formula "11") (term "0"))
   (rule "arrayLengthIsAShort" (formula "12") (term "0"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "ifElseSplit" (formula "19"))
   (branch "if x_2 true"
       (builtin "One Step Simplification" (formula "20"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "eval_order_array_access2" (formula "20") (term "1") (inst "#v0=x_2") (inst "#ar1=x_arr"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr"))
      (rule "assignment" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_3"))
      (rule "assignmentAdditionInt" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
      (rule "eval_order_array_access3" (formula "20") (term "1") (inst "#v1=x_5") (inst "#v2=x_4") (inst "#v0=x_arr_1"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_1"))
      (rule "assignment" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_4"))
      (rule "assignment" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_5"))
      (rule "eval_order_array_access5" (formula "20") (term "1") (inst "#v1=x_6") (inst "#ar1=x_arr_2"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_2"))
      (rule "assignment" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_6"))
      (rule "assignmentAdditionInt" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
      (rule "assignment_array2" (formula "20"))
      (branch "Normal Execution (x_arr_2 != null)"
          (builtin "One Step Simplification" (formula "20"))
         (rule "pullOutSelect" (formula "20") (term "0,1,0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "8")))
         (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
         (rule "assignment_to_primitive_array_component" (formula "21"))
         (branch "Normal Execution (x_arr_1 != null)"
             (builtin "One Step Simplification" (formula "21"))
            (rule "blockEmpty" (formula "21") (term "1"))
            (rule "preincrement" (formula "21") (term "1"))
            (rule "compound_int_cast_expression" (formula "21") (term "1") (inst "#v=x_2"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_7"))
            (rule "remove_parentheses_right" (formula "21") (term "1"))
            (rule "assignmentAdditionInt" (formula "21") (term "1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "21") (term "1"))
            (rule "assignment" (formula "21") (term "1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "blockEmpty" (formula "21") (term "1"))
            (rule "lsContinue" (formula "21") (term "1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "andRight" (formula "21"))
            (branch "Case 1"
               (rule "andRight" (formula "21"))
               (branch "Case 1"
                  (rule "andRight" (formula "21"))
                  (branch
                     (rule "andRight" (formula "21"))
                     (branch
                        (rule "inEqSimp_geqRight" (formula "21"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch
                        (rule "inEqSimp_leqRight" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "21") (inst "sk=j_0") (userinteraction))
                     (rule "instAll" (formula "21") (term "0,0,0") (ifseqformula "5") (userinteraction))
                     (rule "impRight" (formula "22"))
                     (rule "andLeft" (formula "1"))
                     (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,2,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0"))
                     (rule "add_zero_left" (formula "2") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "4") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,1,0,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "pullOutSelect" (formula "23") (term "1") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "4") (term "1,1") (inst "selectSK=arr_2"))
                     (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "4"))
                     (rule "simplifySelectOfAnon" (formula "4"))
                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")) (ifInst ""  (formula "13")))
                     (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "4") (term "1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "4") (term "0,0,0,0,0"))
                     (rule "add_zero_left" (formula "4") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                     (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "polySimp_homoEq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "pullOutSelect" (formula "6") (term "0,1") (inst "selectSK=arr_4"))
                     (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "6"))
                     (rule "simplifySelectOfAnon" (formula "6"))
                      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "26")) (ifInst ""  (formula "14")))
                     (rule "elementOfArrayRangeConcrete" (formula "6") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "6") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0,1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "3") (term "0,0"))
                     (rule "add_zero_left" (formula "3") (term "0"))
                     (rule "inEqSimp_or_tautInEq0" (formula "24") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "24") (term "1,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,1,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0,1,1,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,1,1,0"))
                     (rule "add_zero_right" (formula "24") (term "0,1,1,0"))
                     (rule "leq_literals" (formula "24") (term "1,1,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                     (rule "commute_or" (formula "24") (term "1,0"))
                     (rule "commute_or" (formula "11") (term "0,0"))
                     (rule "commute_or" (formula "24") (term "1,0,0"))
                     (rule "ifthenelse_split" (formula "8") (term "0"))
                     (branch " src = dest & srcPos >= destPos + i_0 * -1 & srcPos <= -1 + destPos + i_0 * -1 + length TRUE"
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "8"))
                        (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "13") (term "1,0,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "8"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "11"))
                        (rule "times_zero_1" (formula "19") (term "0,0"))
                        (rule "add_zero_left" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                        (rule "mul_literals" (formula "19") (term "0,0,1"))
                        (rule "cut_direct" (formula "7") (term "0"))
                        (branch "CUT: j_0 <= -1 + i_0 TRUE"
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "8"))
                           (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "2") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "eqSymm" (formula "26"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "2"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch "length >= 1 + j_0 TRUE"
                              (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "5"))
                              (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                              (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "commute_and_2" (formula "23"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch " srcPos >= destPos + j_0 * -1 & srcPos <= -1 + destPos + j_0 * -1 + length TRUE"
                                 (rule "andLeft" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "21") (term "0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                                 (rule "mul_literals" (formula "21") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "7"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1"))
                                 (rule "allLeft" (formula "16") (inst "t=j_0"))
                                 (rule "replaceKnownSelect_taclet1000001_2" (formula "16") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet001000001_6" (formula "16") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0001000001_8" (formula "16") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "16") (term "0,2,0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "16") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnon" (formula "16"))
                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "31")) (ifInst ""  (formula "21")))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "17"))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "eqSymm" (formula "16") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                 (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                 (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "srcPos = destPos + i_0 + j_0 * -1 TRUE"
                                    (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,1,1"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0"))
                                    (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "28") (term "1,0,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "28") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,1,0"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor3b" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "28") (term "0,0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "28") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,1,0,0"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "24") (term "1"))
                                    (rule "applyEq" (formula "28") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "28") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "8") (term "1,0,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,2,0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0,2,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,2,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,2,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,2,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,2,0"))
                                    (rule "eqSymm" (formula "8"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                    (rule "applyEq" (formula "30") (term "1,0,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,2,0"))
                                    (rule "polySimp_pullOutFactor3b" (formula "30") (term "0,0,2,0"))
                                    (rule "applyEq" (formula "16") (term "0,0,2,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "30") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,1,1"))
                                    (rule "replace_known_left" (formula "28") (term "1,1") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_invertInEq0" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,1,1,1"))
                                    (rule "mul_literals" (formula "27") (term "0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,1"))
                                    (rule "replace_known_left" (formula "27") (term "1,1") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "13") (term "0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0"))
                                    (rule "leq_literals" (formula "13"))
                                    (rule "closeFalse" (formula "13"))
                                 )
                                 (branch "srcPos = destPos + i_0 + j_0 * -1 FALSE"
                                    (rule "close" (formula "31") (ifseqformula "1"))
                                 )
                              )
                              (branch " srcPos >= destPos + j_0 * -1 & srcPos <= -1 + destPos + j_0 * -1 + length FALSE"
                                 (rule "eqSymm" (formula "5"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "5"))
                                 (rule "allLeft" (formula "12") (inst "t=j_0"))
                                 (rule "replaceKnownSelect_taclet1000001_2" (formula "12") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet001000001_6" (formula "12") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0001000001_8" (formula "12") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,2,0,1"))
                                 (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "5"))
                                 (rule "inEqSimp_contradInEq0" (formula "12") (term "1,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "12") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnon" (formula "12"))
                                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "27")) (ifInst ""  (formula "17")))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "applyEqReverse" (formula "12") (term "1") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "hideAuxiliaryEq" (formula "13"))
                                 (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
                                 (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "srcPos = destPos + i_0 + j_0 * -1 TRUE"
                                    (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,0"))
                                    (rule "applyEq" (formula "24") (term "0,0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,1,1"))
                                    (rule "applyEq" (formula "24") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "26") (term "1,0,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,2,0"))
                                    (rule "polySimp_pullOutFactor3b" (formula "26") (term "0,0,2,0"))
                                    (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0"))
                                    (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "24") (term "1,0,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0,1,0"))
                                    (rule "applyEq" (formula "24") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "12") (term "0,0,2,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "1,0,2,1") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,2,1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,2,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,2,1"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,2,1"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,2,1"))
                                    (rule "add_zero_right" (formula "5") (term "0,2,1"))
                                    (rule "applyEq" (formula "26") (term "1,0,2,1") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,2,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,2,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,2,1"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,2,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,2,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,2,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_leqRight" (formula "23"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,1,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "24") (term "0,1,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,1,0"))
                                    (rule "leq_literals" (formula "24") (term "0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch "srcPos = destPos + i_0 + j_0 * -1 FALSE"
                                    (rule "close" (formula "27") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch "length >= 1 + j_0 FALSE"
                              (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_geqRight" (formula "22"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "mul_literals" (formula "11") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "11"))
                              (rule "andLeft" (formula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "1,1,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0"))
                              (rule "add_zero_right" (formula "6") (term "0"))
                              (rule "leq_literals" (formula "6"))
                              (rule "closeFalse" (formula "6"))
                           )
                        )
                        (branch "CUT: j_0 <= -1 + i_0 FALSE"
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_leqRight" (formula "24"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "5"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "27"))
                           (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "1"))
                           (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,0"))
                           (rule "times_zero_1" (formula "4") (term "0"))
                           (rule "qeq_literals" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,0"))
                           (rule "times_zero_1" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,1,0,0,0") (ifseqformula "1"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqRigid" (formula "2") (term "0,1,1,0,0") (ifseqformula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "1,0,0"))
                           (rule "applyEq" (formula "3") (term "0,0,2,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0,0,2,2,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0,1,0,1,0,0") (ifseqformula "1"))
                           (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch " src = dest & srcPos >= destPos + i_0 * -1 & srcPos <= -1 + destPos + i_0 * -1 + length FALSE"
                        (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "8"))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "cut_direct" (formula "7") (term "0"))
                        (branch "CUT: j_0 <= -1 + i_0 TRUE"
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "8"))
                           (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "2") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "eqSymm" (formula "26"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "2"))
                           (rule "leq_literals" (formula "8") (term "0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "commute_and_2" (formula "22"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch "length >= 1 + j_0 TRUE"
                              (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "5"))
                              (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "5"))
                              (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch " src = dest & srcPos >= destPos + j_0 * -1 & srcPos <= -1 + destPos + j_0 * -1 + length TRUE"
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "7"))
                                 (rule "times_zero_1" (formula "17") (term "0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "srcPos = destPos + i_0 + j_0 * -1 TRUE"
                                    (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,0"))
                                    (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "24") (term "1,0,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0,1,0"))
                                    (rule "applyEq" (formula "24") (term "0,0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,1,1"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0"))
                                    (rule "add_zero_right" (formula "7") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "24") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "9") (term "1,0,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,2,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "0,0,2,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,2,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,2,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,2,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,2,0"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,1"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0"))
                                    (rule "applyEq" (formula "24") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "12") (term "0,0,2,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "1,0,2,1") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,2,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,2,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,2,1"))
                                    (rule "polySimp_pullOutFactor3b" (formula "26") (term "0,0,2,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,1"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "inEqSimp_invertInEq0" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,1,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (term "0,1,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_subsumption0" (formula "22") (term "0,0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                    (rule "mul_literals" (formula "3") (term "0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "commute_or" (formula "23") (term "1"))
                                    (rule "allLeft" (formula "11") (inst "t=j_0"))
                                    (rule "replaceKnownSelect_taclet1000001_2" (formula "11") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000001_6" (formula "11") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0011000001_8" (formula "11") (term "1,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,2,0,1"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,2,0,1"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,2,0,1"))
                                    (rule "add_zero_right" (formula "11") (term "0,2,0,1"))
                                    (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "8"))
                                    (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_contradInEq0" (formula "11") (term "0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "leq_literals" (formula "11") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_5"))
                                    (rule "simplifySelectOfAnon" (formula "11"))
                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "26")) (ifInst ""  (formula "16")))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "eqSymm" (formula "11") (term "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0"))
                                    (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "11") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "cut_direct" (formula "22") (term "0"))
                                    (branch "CUT: j_0 <= i_0 * 2 TRUE"
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_geqRight" (formula "23"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "12"))
                                       (rule "greater_literals" (formula "7") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "6") (term "0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0"))
                                       (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "6") (term "1,1,0"))
                                       (rule "greater_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "9") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,1"))
                                       (rule "greater_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
                                       (rule "mul_literals" (formula "6") (term "0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "3"))
                                       (rule "greater_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1,0"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "cut_direct" (formula "26") (term "0"))
                                       (branch "CUT: length >= 1 + i_0 + j_0 * -1 TRUE"
                                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "27"))
                                       )
                                       (branch "CUT: length >= 1 + i_0 + j_0 * -1 FALSE"
                                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")))
                                          (rule "false_right" (formula "27"))
                                          (rule "inEqSimp_geqRight" (formula "26"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "11") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "closeFalse" (formula "15"))
                                       )
                                    )
                                    (branch "CUT: j_0 <= i_0 * 2 FALSE"
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "false_right" (formula "23"))
                                       (rule "inEqSimp_leqRight" (formula "22"))
                                       (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "srcPos = destPos + i_0 + j_0 * -1 FALSE"
                                    (rule "close" (formula "27") (ifseqformula "1"))
                                 )
                              )
                              (branch " src = dest & srcPos >= destPos + j_0 * -1 & srcPos <= -1 + destPos + j_0 * -1 + length FALSE"
                                 (rule "eqSymm" (formula "5"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "5"))
                                 (rule "allLeft" (formula "8") (inst "t=j_0"))
                                 (rule "replaceKnownSelect_taclet1000001_2" (formula "8") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet011000001_6" (formula "8") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0011000001_8" (formula "8") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1"))
                                 (rule "replaceKnownSelect_taclet1000001_4" (formula "8") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0011000001_8" (formula "8") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "src = dest & srcPos = destPos + i_0 + j_0 * -1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "24") (term "1,0,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0,1,0"))
                                    (rule "applyEq" (formula "24") (term "0,1,1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,1"))
                                    (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "0,1,1,0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,1,0,0"))
                                    (rule "applyEq" (formula "26") (term "1,0,2,0") (ifseqformula "2"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,2,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,2,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,2,1"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,2,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,2,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,2,1"))
                                    (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "0,0,1,0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0"))
                                    (rule "applyEq" (formula "23") (term "0,0,1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,0"))
                                    (rule "applyEq" (formula "9") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,0"))
                                    (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1"))
                                    (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,0,1"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "9") (term "0,0,2,0,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "6") (term "1,0,2,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,2,1"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,2,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,2,1"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,2,1"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,2,1"))
                                    (rule "add_zero_right" (formula "6") (term "0,2,1"))
                                    (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "24") (term "1,0,2,0") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,2,0"))
                                    (rule "polySimp_pullOutFactor3b" (formula "24") (term "0,0,2,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,1,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,1,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0,1"))
                                    (rule "inEqSimp_invertInEq0" (formula "20") (term "0"))
                                    (rule "mul_literals" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                                    (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_geqRight" (formula "20"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (term "0,1,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,1,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "src = dest & srcPos = destPos + i_0 + j_0 * -1 FALSE"
                                    (rule "close" (formula "27") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch "length >= 1 + j_0 FALSE"
                              (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_geqRight" (formula "20"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "7"))
                              (rule "andLeft" (formula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "1,1,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0"))
                              (rule "add_zero_right" (formula "6") (term "0"))
                              (rule "leq_literals" (formula "6"))
                              (rule "closeFalse" (formula "6"))
                           )
                        )
                        (branch "CUT: j_0 <= -1 + i_0 FALSE"
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_leqRight" (formula "22"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "5"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "27"))
                           (rule "applyEqRigid" (formula "6") (term "1,0,2,2,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,0"))
                           (rule "times_zero_1" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEqRigid" (formula "4") (term "1,1,0,0") (ifseqformula "1"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "4") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,0"))
                           (rule "times_zero_1" (formula "3") (term "0"))
                           (rule "qeq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "3") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "19"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "2") (term "0,1,1,1,0,0") (ifseqformula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "1,1,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,1,1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "1,1,0,0"))
                           (rule "applyEqRigid" (formula "2") (term "0,0,2,2,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch
                  (rule "allRight" (formula "21") (inst "sk=f_0"))
                  (rule "allRight" (formula "21") (inst "sk=o_0"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "21"))
                  (rule "eqSymm" (formula "23"))
                  (rule "eqSymm" (formula "21") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,1,0,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,0,1,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "23"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_or_tautInEq0" (formula "18") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "18") (term "1,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,1,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,1,1,0"))
                  (rule "add_zero_right" (formula "18") (term "0,1,1,0"))
                  (rule "leq_literals" (formula "18") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "nnf_imp2or" (formula "5") (term "0"))
                  (rule "nnf_notAnd" (formula "5") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                  (rule "commute_or" (formula "18") (term "1,0"))
                  (rule "commute_or" (formula "5") (term "0,0"))
                  (rule "commute_or" (formula "18") (term "1,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "commute_and_2" (formula "18"))
                  (rule "cut_direct" (formula "22") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "false_right" (formula "23"))
                     (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "22") (term "0"))
                     (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "false_right" (formula "22"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_0 = null FALSE"
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "notRight" (formula "23"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " src = dest & srcPos >= destPos + i_0 * -1 & srcPos <= -1 + destPos + i_0 * -1 + length TRUE"
                        (rule "andLeft" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "8") (term "1,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "4"))
                        (rule "leq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "14") (term "0,0"))
                        (rule "add_zero_left" (formula "14") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                        (rule "mul_literals" (formula "14") (term "0,0,1"))
                        (rule "cut_direct" (formula "22") (term "0"))
                        (branch "CUT: o_0 = dest TRUE"
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                           (rule "nnf_ex2all" (formula "22"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_0 = arr(destPos + i_0) TRUE"
                              (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectArrayType" (formula "23") (term "0") (ifseqformula "12") (ifseqformula "22"))
                              (rule "eqSymm" (formula "23"))
                              (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,1"))
                              (rule "add_literals" (formula "1") (term "1,0,0,0,1"))
                              (rule "times_zero_1" (formula "1") (term "0,0,0,1"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                              (rule "andLeft" (formula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "1,1,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0"))
                              (rule "add_zero_right" (formula "8") (term "0"))
                              (rule "leq_literals" (formula "8"))
                              (rule "closeFalse" (formula "8"))
                           )
                           (branch "f_0 = arr(destPos + i_0) FALSE"
                              (rule "close" (formula "24") (ifseqformula "3"))
                           )
                        )
                        (branch "CUT: o_0 = dest FALSE"
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "false_right" (formula "23"))
                           (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch " src = dest & srcPos >= destPos + i_0 * -1 & srcPos <= -1 + destPos + i_0 * -1 + length FALSE"
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "cut_direct" (formula "22") (term "0"))
                        (branch "CUT: o_0 = dest TRUE"
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "nnf_ex2all" (formula "22"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_0 = arr(destPos + i_0) TRUE"
                              (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectArrayType" (formula "23") (term "0") (ifseqformula "8") (ifseqformula "21"))
                              (rule "eqSymm" (formula "23"))
                              (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,1"))
                              (rule "add_literals" (formula "1") (term "1,0,0,0,1"))
                              (rule "times_zero_1" (formula "1") (term "0,0,0,1"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "leq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                           (branch "f_0 = arr(destPos + i_0) FALSE"
                              (rule "close" (formula "24") (ifseqformula "3"))
                           )
                        )
                        (branch "CUT: o_0 = dest FALSE"
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "false_right" (formula "23"))
                           (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
            )
            (branch
               (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "21") (term "0"))
               (rule "precOfInt" (formula "21"))
               (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
               (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
               (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
               (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,1"))
               (rule "add_literals" (formula "21") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "21") (term "1,0,1"))
               (rule "add_zero_right" (formula "21") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
               (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
               (rule "add_literals" (formula "21") (term "0,0,0,1"))
               (rule "add_zero_left" (formula "21") (term "0,0,1"))
               (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
               (rule "add_literals" (formula "21") (term "1,0,1"))
               (rule "times_zero_1" (formula "21") (term "0,1"))
               (rule "leq_literals" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_leqRight" (formula "21"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0,0"))
               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "qeq_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (x_arr_1 = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (x_arr_1 != null, but x_4 Out of Bounds!)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
             (builtin "One Step Simplification" (formula "22"))
            (rule "false_right" (formula "22"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0,0"))
            (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "19") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0"))
            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
            (rule "add_literals" (formula "5") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0"))
            (rule "qeq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "inEqSimp_or_tautInEq0" (formula "18") (term "1,0"))
            (rule "inEqSimp_homoInEq1" (formula "18") (term "1,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,1,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,1,1,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,1,1,0"))
            (rule "add_zero_right" (formula "18") (term "0,1,1,0"))
            (rule "leq_literals" (formula "18") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "nnf_imp2or" (formula "5") (term "0"))
            (rule "nnf_notAnd" (formula "5") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
            (rule "mul_literals" (formula "5") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
            (rule "commute_or" (formula "1"))
            (rule "commute_or" (formula "18") (term "1,0"))
            (rule "commute_or" (formula "5") (term "0,0"))
            (rule "commute_or" (formula "18") (term "1,0,0"))
            (rule "commute_and_2" (formula "18"))
            (rule "ifthenelse_split" (formula "2") (term "0"))
            (branch " src = dest & srcPos >= destPos + i_0 * -1 & srcPos <= -1 + destPos + i_0 * -1 + length TRUE"
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "replace_known_left" (formula "20") (term "0,0,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "22") (term "0") (ifseqformula "2"))
               (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "7") (term "1,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "2"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
               (rule "times_zero_1" (formula "13") (term "0,0"))
               (rule "add_zero_left" (formula "13") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1"))
               (rule "polySimp_rightDist" (formula "13") (term "1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1"))
               (rule "polySimp_rightDist" (formula "13") (term "0,1"))
               (rule "mul_literals" (formula "13") (term "0,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "3"))
               (rule "leq_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "andRight" (formula "19"))
               (branch "Case 1"
                  (rule "andRight" (formula "19"))
                  (branch "Case 1"
                     (rule "orRight" (formula "19"))
                     (rule "inEqSimp_geqRight" (formula "20"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_geqRight" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                     (rule "polySimp_pullOutFactor2" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "6") (term "0,0,0"))
                     (rule "add_zero_left" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "9"))
                     (rule "andLeft" (formula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "1,1,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0"))
                     (rule "add_zero_right" (formula "6") (term "0"))
                     (rule "leq_literals" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
                  (branch "Case 2"
                     (rule "orRight" (formula "19"))
                     (rule "inEqSimp_leqRight" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "20"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "closeFalse" (formula "10"))
                  )
               )
               (branch "Case 2"
                  (rule "orRight" (formula "19"))
                  (rule "inEqSimp_geqRight" (formula "20"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_leqRight" (formula "20"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "6") (term "0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "9"))
                  (rule "andLeft" (formula "6"))
                  (rule "inEqSimp_homoInEq1" (formula "6"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "1,1,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0"))
                  (rule "add_zero_right" (formula "6") (term "0"))
                  (rule "leq_literals" (formula "6"))
                  (rule "closeFalse" (formula "6"))
               )
            )
            (branch " src = dest & srcPos >= destPos + i_0 * -1 & srcPos <= -1 + destPos + i_0 * -1 + length FALSE"
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "cut_direct" (formula "1") (term "1"))
               (branch "CUT: dest.length <= destPos + i_0 TRUE"
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "16") (term "0,0,0"))
                  (rule "add_literals" (formula "16") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "16"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "CUT: dest.length <= destPos + i_0 FALSE"
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_leqRight" (formula "17"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "4") (term "0,0"))
                  (rule "add_zero_left" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "16"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
            )
         )
      )
      (branch "Null Reference (x_arr_2 = null)"
         (rule "false_right" (formula "21"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (x_arr_2 != null, but x_6 Out of Bounds!)"
         (rule "false_right" (formula "21"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
         (rule "inEqSimp_ltToLeq" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
         (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_homoInEq0" (formula "18") (term "0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "18") (term "0,1,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1"))
         (rule "mul_literals" (formula "1") (term "0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "0,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,1,0,0,0"))
         (rule "mul_literals" (formula "18") (term "0,0,1,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,1,0,0"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
         (rule "add_literals" (formula "4") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "4") (term "1,0,0"))
         (rule "add_zero_right" (formula "4") (term "0,0"))
         (rule "qeq_literals" (formula "4") (term "0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_or_tautInEq0" (formula "17") (term "1,0"))
         (rule "inEqSimp_homoInEq1" (formula "17") (term "1,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,1,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,1,1,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,1,1,0"))
         (rule "add_zero_right" (formula "17") (term "0,1,1,0"))
         (rule "leq_literals" (formula "17") (term "1,1,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "nnf_imp2or" (formula "4") (term "0"))
         (rule "nnf_notAnd" (formula "4") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "4") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "4") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0"))
         (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "4") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
         (rule "mul_literals" (formula "4") (term "1,1,0,0"))
         (rule "commute_or" (formula "1"))
         (rule "commute_or" (formula "17") (term "1,0"))
         (rule "commute_or" (formula "4") (term "0,0"))
         (rule "commute_or" (formula "17") (term "1,0,0"))
         (rule "commute_and_2" (formula "17"))
         (rule "cut_direct" (formula "1") (term "1"))
         (branch "CUT: src.length <= i_0 + srcPos TRUE"
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
            (rule "times_zero_1" (formula "12") (term "0,0"))
            (rule "add_zero_left" (formula "12") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
            (rule "add_literals" (formula "14") (term "1,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0"))
            (rule "add_zero_right" (formula "14") (term "0"))
            (rule "polySimp_addComm0" (formula "14") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "14"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0"))
            (rule "add_literals" (formula "2") (term "0"))
            (rule "leq_literals" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "CUT: src.length <= i_0 + srcPos FALSE"
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_leqRight" (formula "17"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
            (rule "mul_literals" (formula "1") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
            (rule "times_zero_1" (formula "12") (term "0,0"))
            (rule "add_zero_left" (formula "12") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "4"))
            (rule "qeq_literals" (formula "12") (term "0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "closeFalse" (formula "12"))
         )
      )
   )
   (branch "if x_2 false"
       (builtin "One Step Simplification" (formula "20"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "elim_double_block_2" (formula "20") (term "1"))
      (rule "blockBreak" (formula "20") (term "1"))
      (rule "lsBreak" (formula "20") (term "1"))
      (rule "assignment" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "methodCallEmpty" (formula "20") (term "1"))
      (rule "tryEmpty" (formula "20") (term "1"))
      (rule "emptyModality" (formula "20") (term "1"))
      (rule "andRight" (formula "20"))
      (branch "Case 1"
         (rule "impRight" (formula "20"))
         (rule "andRight" (formula "21"))
         (branch "Case 1"
            (rule "andRight" (formula "21"))
            (branch "Case 1"
               (rule "andRight" (formula "21"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "1"))
                  (rule "allRight" (formula "20") (inst "sk=i_1"))
                  (rule "impRight" (formula "20"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,2,0"))
                  (rule "inEqSimp_ltRight" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0,0"))
                  (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "11")))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "10")))
                  (rule "eqSymm" (formula "23"))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
                  (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "6"))
                  (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "6"))
                  (rule "polySimp_addComm1" (formula "1") (term "1,1,0,0"))
                  (rule "applyEq" (formula "21") (term "0,1,1,0,1,0,0,0") (ifseqformula "6"))
                  (rule "applyEq" (formula "21") (term "1,1,1,1") (ifseqformula "6"))
                  (rule "applyEq" (formula "21") (term "0,1,1,0,1,0,0") (ifseqformula "6"))
                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "21") (term "1,1,1,1,0,0") (ifseqformula "6"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "times_zero_1" (formula "2") (term "0"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "20") (term "0,1,0,0,0,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "7") (term "1,2,1,0,0,1,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "5"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "6"))
                  (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "1,0"))
                  (rule "times_zero_1" (formula "6") (term "0"))
                  (rule "leq_literals" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "5"))
                  (rule "applyEq" (formula "6") (term "1,2,1,0,1,1,0") (ifseqformula "5"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "replace_known_left" (formula "19") (term "1,0,0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                  (rule "leq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_or_tautInEq0" (formula "18") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "18") (term "1,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,1,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,1,1,0"))
                  (rule "add_zero_right" (formula "18") (term "0,1,1,0"))
                  (rule "leq_literals" (formula "18") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "nnf_imp2or" (formula "6") (term "0"))
                  (rule "nnf_notAnd" (formula "6") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                  (rule "commute_or" (formula "18") (term "1,0"))
                  (rule "commute_or" (formula "6") (term "0,0"))
                  (rule "commute_or" (formula "18") (term "1,0,0"))
                  (rule "commute_and_2" (formula "18"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch " src = dest & srcPos >= destPos + i_1 * -1 & srcPos <= -1 + destPos + i_0 + i_1 * -1 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "23"))
                     (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "8") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "13") (term "0,0"))
                     (rule "add_zero_left" (formula "13") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "13"))
                     (rule "times_zero_1" (formula "5") (term "0,0"))
                     (rule "add_zero_left" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "allLeft" (formula "9") (inst "t=i_1"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,2,0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "9") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfAnon" (formula "9"))
                      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "23")) (ifInst ""  (formula "14")))
                     (rule "eqSymm" (formula "10"))
                     (rule "simplifySelectOfAnon" (formula "10"))
                      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "23")) (ifInst ""  (formula "14")))
                     (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "elementOfArrayRangeConcrete" (formula "10") (term "0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "10") (term "0,0,0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                     (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                     (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "applyEqReverse" (formula "9") (term "1") (ifseqformula "10"))
                     (rule "hideAuxiliaryEq" (formula "10"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                     (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "23")))
                     (rule "closeFalse" (formula "9"))
                  )
                  (branch " src = dest & srcPos >= destPos + i_1 * -1 & srcPos <= -1 + destPos + i_0 + i_1 * -1 FALSE"
                     (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "allLeft" (formula "5") (inst "t=i_1"))
                     (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1"))
                     (rule "inEqSimp_contradInEq0" (formula "5") (term "1,0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "5") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "5") (term "0,0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfAnon" (formula "5"))
                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "10")))
                     (rule "eqSymm" (formula "6"))
                     (rule "simplifySelectOfAnon" (formula "6"))
                      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "21")) (ifInst ""  (formula "11")))
                     (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "6") (term "0,0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "6") (term "1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "6") (term "0,0,0,0,0"))
                     (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "5") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,1,1,0,0,0"))
                     (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                     (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")))
                     (rule "closeFalse" (formula "5"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "21") (userinteraction))
                  (rule "allRight" (formula "21") (inst "sk=element_0") (userinteraction))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "21") (term "0") (inst "i=i_1") (userinteraction))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "21") (term "1") (inst "i=i_1") (userinteraction))
                  (rule "equal_bsum5" (formula "21") (userinteraction))
                  (branch "Equal length"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "polySimp_elimSub" (formula "20") (term "0"))
                     (rule "eqSymm" (formula "20"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "1"))
                     (rule "add_literals" (formula "20") (term "1,1,1"))
                     (rule "times_zero_1" (formula "20") (term "1,1"))
                     (rule "add_zero_right" (formula "20") (term "1"))
                     (rule "polySimp_elimSub" (formula "20") (term "0"))
                     (rule "polySimp_homoEq" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "1,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "20") (term "0,1,1,0"))
                     (rule "add_literals" (formula "20") (term "1,0,1,1,0"))
                     (rule "times_zero_1" (formula "20") (term "0,1,1,0"))
                     (rule "add_zero_left" (formula "20") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                     (rule "add_literals" (formula "20") (term "1,0"))
                     (rule "times_zero_1" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "closeTrue" (formula "20"))
                  )
                  (branch "Equal elements"
                     (rule "allRight" (formula "21") (inst "sk=i_1_0") (userinteraction))
                     (rule "allLeft" (formula "4") (inst "t=sub(i_1_0, srcPos)") (userinteraction))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "impRight" (formula "21"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_elimSub" (formula "5") (term "0,0,0"))
                     (rule "polySimp_elimSub" (formula "5") (term "1,0,2,0,1"))
                     (rule "polySimp_elimSub" (formula "5") (term "1,0,2,1,1"))
                     (rule "polySimp_elimSub" (formula "5") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "23") (term "0,2,0,0,1"))
                     (rule "polySimp_addComm0" (formula "23") (term "0,0,2,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,2,0,1"))
                     (rule "polySimp_addComm0" (formula "5") (term "0,0,2,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,2,0,1"))
                     (rule "add_literals" (formula "5") (term "1,1,0,2,0,1"))
                     (rule "times_zero_1" (formula "5") (term "1,0,2,0,1"))
                     (rule "add_zero_right" (formula "5") (term "0,2,0,1"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,2,1,1"))
                     (rule "inEqSimp_ltRight" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,1,0,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                     (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                     (rule "pullOutSelect" (formula "23") (term "0,0,0") (inst "selectSK=arr_0"))
                     (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "11")))
                     (rule "eqSymm" (formula "24"))
                     (rule "eqSymm" (formula "7") (term "1"))
                     (rule "eqSymm" (formula "24") (term "0,1"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
                     (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,0"))
                     (rule "times_zero_1" (formula "2") (term "0"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "21") (term "1,1,1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "21") (term "0,1,1,0,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,2,0") (ifseqformula "5"))
                     (rule "eqSymm" (formula "25"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "5"))
                     (rule "applyEq" (formula "20") (term "0,1,1,0,1,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "20") (term "1,1,1,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "5"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "simplifySelectOfAnon" (formula "7"))
                      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                     (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "7") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "1,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "7") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "1,0"))
                     (rule "times_zero_1" (formula "6") (term "0"))
                     (rule "leq_literals" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "applyEq" (formula "7") (term "1,2,1,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "23") (term "1,2,1,0,0,0,2,0") (ifseqformula "5"))
                     (rule "eqSymm" (formula "23"))
                     (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "6") (term "1,0,0,1,0,0") (ifseqformula "5"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "7") (term "1,2,1,0,1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "5"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                     (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "22") (term "1,0,1") (ifseqformula "6"))
                     (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "eqSymm" (formula "21") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "12") (term "0,0"))
                     (rule "add_zero_left" (formula "12") (term "0"))
                     (rule "pullOutSelect" (formula "22") (term "0,0,0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "11")))
                     (rule "eqSymm" (formula "23"))
                     (rule "eqSymm" (formula "23") (term "0,1"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "23") (term "1,0,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "eqSymm" (formula "22") (term "0,1"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "closeTrue" (formula "22"))
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "closeTrue" (formula "21"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "1"))
            (rule "allRight" (formula "20") (inst "sk=f_0"))
            (rule "allRight" (formula "20") (inst "sk=o_0"))
            (rule "orRight" (formula "20"))
            (rule "orRight" (formula "20"))
            (rule "eqSymm" (formula "22"))
            (rule "eqSymm" (formula "20") (term "0,0,0,1"))
            (rule "inEqSimp_ltRight" (formula "16"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,0,0,0,0"))
            (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "17") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_homoInEq0" (formula "17") (term "0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "0,1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,1,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,1,0,0,0"))
            (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
            (rule "eqSymm" (formula "23"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
            (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Case 2"
         (rule "impRight" (formula "20"))
         (rule "andRight" (formula "21"))
         (branch "Case 1"
            (rule "andRight" (formula "21"))
            (branch "Case 1"
               (rule "andRight" (formula "21"))
               (branch "Case 1"
                  (rule "andRight" (formula "21"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
)
}
