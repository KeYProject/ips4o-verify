\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jan 10 17:55:37 CET 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Mon Jan 10 17:55:37 CET 2022
contract=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:isBucketPartitioned([I,int,int,int,int)].JML accessible clause.0
name=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:isBucketPartitioned([I,int,int,int,int)].JML accessible clause.0
class=de.uka.ilkd.key.proof.init.DependencyContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "a684beee49"))

(autoModeTime "1398")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "values_0,begin,end,bucket_begin,bucket_end,anon_heap"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,0,1,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "2,1,1,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,0,1,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "eqSymm" (formula "10"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "3"))
(rule "polySimp_elimSub" (formula "10") (term "2,1,1,0,0"))
(rule "mul_literals" (formula "10") (term "1,2,1,1,0,0"))
(rule "polySimp_addComm0" (formula "10") (term "2,1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "5") (term "0"))
 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "9")))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "9") (term "0"))
 (builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_homoInEq0" (formula "9"))
(rule "polySimp_addComm1" (formula "9") (term "0"))
(rule "polySimp_pullOutFactor1" (formula "9") (term "0,0"))
(rule "add_literals" (formula "9") (term "1,0,0"))
(rule "times_zero_1" (formula "9") (term "0,0"))
(rule "add_zero_left" (formula "9") (term "0"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "11") (term "0"))
 (builtin "One Step Simplification" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "inEqSimp_homoInEq0" (formula "11"))
(rule "polySimp_addComm1" (formula "11") (term "0"))
(rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
(rule "add_literals" (formula "11") (term "1,0,0"))
(rule "times_zero_1" (formula "11") (term "0,0"))
(rule "add_zero_left" (formula "11") (term "0"))
(rule "Definition_axiom_for_isBucketPartitioned_in_de_wiesler_Sorter" (formula "14") (term "1") (inst "i=i") (inst "j_0=j_0") (inst "j=j"))
 (builtin "One Step Simplification" (formula "14"))
(rule "translateJavaAddInt" (formula "14") (term "0,0,0,0,1,1,0,0,1"))
(rule "translateJavaAddInt" (formula "14") (term "1,1,0,0,0,1"))
(rule "translateJavaAddInt" (formula "14") (term "1,1,0,0,0,1,0,0,1"))
(rule "translateJavaAddInt" (formula "14") (term "0,0,0,0,0,1"))
(rule "eqSymm" (formula "14"))
(rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,0,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0,0,0"))
(rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,1,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,0,0,0,1,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,0,1,1,0,0,0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,0,1,1,0,0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "0,1,1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,0,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,0,1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,0,1,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,1,0,0,0"))
(rule "nnf_imp2or" (formula "14") (term "0,0,0"))
(rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,0,0,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,0,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,0,0"))
(rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,0,0"))
(rule "add_zero_left" (formula "14") (term "0,0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0"))
(rule "polySimp_mulAssoc" (formula "14") (term "0,1,1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,0,1,1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "0,1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "0,1,1,0,0,0,0"))
(rule "nnf_imp2or" (formula "14") (term "0,0,1,0,0,0"))
(rule "nnf_imp2or" (formula "14") (term "0,1,1,0,0,0"))
(rule "nnf_notAnd" (formula "14") (term "0,0,0,1,0,0,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,0,0,0,1,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,0,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,0,1,0,0,0"))
(rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "14") (term "0,0,0,1,0,0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0,0,0"))
(rule "polySimp_mulAssoc" (formula "14") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,0,1,1,0,0,0,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,1,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,1,0,0,0"))
(rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,1,0,0,0"))
(rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,1,0,0,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,0,0,1,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,1,1,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,0,1,1,0,0,0"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "5") (term "0"))
 (builtin "One Step Simplification" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "Definition_axiom_for_isBucketPartitioned_in_de_wiesler_Sorter" (formula "16") (term "1") (inst "i=i") (inst "j_0=j_0") (inst "j=j"))
 (builtin "One Step Simplification" (formula "16"))
(rule "translateJavaAddInt" (formula "16") (term "0,0,0,0,0,1"))
(rule "translateJavaAddInt" (formula "16") (term "1,1,0,0,0,1"))
(rule "translateJavaAddInt" (formula "16") (term "0,0,0,0,1,1,0,0,1"))
(rule "translateJavaAddInt" (formula "16") (term "1,1,0,0,0,1,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1,0,0,1"))
(rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,1,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,1,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,1,0,0,0,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,1,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,1,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,1,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "0,1,1,0,0,0,1,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,0,1,1,0,0,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,0,0,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,0,1,1,0,0,0,1,0,0,1"))
(rule "nnf_imp2or" (formula "16") (term "0,0,1"))
(rule "nnf_notAnd" (formula "16") (term "0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1"))
(rule "polySimp_mulAssoc" (formula "16") (term "0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "0,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "16") (term "0,0,1,0,0,1"))
(rule "nnf_imp2or" (formula "16") (term "0,1,1,0,0,1"))
(rule "nnf_notAnd" (formula "16") (term "0,0,0,1,0,0,1"))
(rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,1,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,1,0,0,1"))
(rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0,0,1,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,0,1,0,0,1,0,0,0,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,0,0,1,0,0,1"))
(rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,0,1,0,0,1"))
(rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0,0,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0,0,1"))
(rule "polySimp_mulAssoc" (formula "16") (term "0,1,1,0,0,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "0,0,1,1,0,0,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "0,1,1,0,0,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "0,1,1,0,0,0,1,0,0,1"))
(rule "nnf_notAnd" (formula "16") (term "0,0,1,1,0,0,1"))
(rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,1,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,1,0,0,1"))
(rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,1,0,0,1"))
(rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,1"))
(rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,1,1,0,0,1"))
(rule "eqSymm" (formula "16"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,0,0,0,1,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0,1,1,0,0,0"))
(rule "mul_literals" (formula "16") (term "0,0,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,0,1,1,0,0,0"))
(rule "arrayLengthNotNegative" (formula "6") (term "0"))
(rule "arrayLengthIsAShort" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "true_left" (formula "7"))
(rule "ifthenelse_split" (formula "17") (term "1"))
(branch "forall int i; ( i <= -1 + begin + bucket_begin | i >= begin + bucket_end | forall int j; ( j <= -1 + begin | j >= begin + bucket_begin | values_0[j] <= -1 + values_0[i]) & forall int j_0; ( j_0 <= -1 + begin + bucket_end | j_0 >= end | values_0[j_0] >= 1 + values_0[i])) TRUE"
    (builtin "One Step Simplification" (formula "18"))
   (rule "allRight" (formula "18") (inst "sk=i_0"))
   (rule "orRight" (formula "18"))
   (rule "orRight" (formula "18"))
   (rule "inEqSimp_geqRight" (formula "19"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "inEqSimp_leqRight" (formula "19"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
   (rule "polySimp_mulComm0" (formula "2") (term "1"))
   (rule "polySimp_rightDist" (formula "2") (term "1"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
   (rule "polySimp_rightDist" (formula "2") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
   (rule "mul_literals" (formula "2") (term "0,0,1"))
   (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
   (rule "polySimp_elimOne" (formula "1") (term "0,1"))
   (rule "pullOutSelect" (formula "20") (term "1,1,1,0,0") (inst "selectSK=arr_0"))
   (rule "applyEq" (formula "21") (term "1,1,1,0,1") (ifseqformula "1"))
   (rule "simplifySelectOfAnon" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
   (rule "elementOfSetMinus" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "ifthenelse_negated" (formula "1") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
   (rule "polySimp_addAssoc" (formula "2") (term "0"))
   (rule "polySimp_addComm1" (formula "2") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
   (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,0"))
   (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "2") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
   (rule "polySimp_mulComm0" (formula "2") (term "1"))
   (rule "polySimp_rightDist" (formula "2") (term "1"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
   (rule "mul_literals" (formula "2") (term "0,1"))
   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
   (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
   (rule "add_literals" (formula "16") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0"))
   (rule "qeq_literals" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "andRight" (formula "21"))
   (branch "Case 1"
      (rule "allRight" (formula "21") (inst "sk=j_0"))
      (rule "orRight" (formula "21"))
      (rule "orRight" (formula "21"))
      (rule "inEqSimp_leqRight" (formula "23"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_geqRight" (formula "23"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "inEqSimp_leqRight" (formula "23"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1"))
      (rule "polySimp_elimOne" (formula "3") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "polySimp_rightDist" (formula "2") (term "0,1"))
      (rule "mul_literals" (formula "2") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfAnon" (formula "3"))
       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")) (ifInst ""  (formula "12")))
      (rule "elementOfSetMinus" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "ifthenelse_negated" (formula "3") (term "0"))
      (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
      (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
      (rule "leq_literals" (formula "21") (term "0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "all_pull_out4" (formula "10") (term "1,0"))
      (rule "ifthenelse_split" (formula "6") (term "0"))
      (branch "i_0 >= begin & i_0 <= -1 + end TRUE"
         (rule "andLeft" (formula "6"))
         (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "8"))
         (rule "hideAuxiliaryEq" (formula "8"))
         (rule "inEqSimp_commuteGeq" (formula "5"))
         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "7"))
         (rule "polySimp_rightDist" (formula "9") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1"))
         (rule "polySimp_rightDist" (formula "9") (term "1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1"))
         (rule "polySimp_rightDist" (formula "9") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
         (rule "mul_literals" (formula "9") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "9"))
         (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
         (rule "add_literals" (formula "23") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
         (rule "add_literals" (formula "23") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0"))
         (rule "qeq_literals" (formula "23") (term "0"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
         (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1"))
         (rule "polySimp_rightDist" (formula "6") (term "1"))
         (rule "mul_literals" (formula "6") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "6"))
         (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
         (rule "add_literals" (formula "23") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0"))
         (rule "qeq_literals" (formula "23") (term "0"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "12"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
         (rule "mul_literals" (formula "7") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "7"))
         (rule "leq_literals" (formula "24") (term "0"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "all_pull_out3" (formula "14") (term "0"))
         (rule "cnf_rightDist" (formula "14") (term "0,0"))
         (rule "distr_forallAnd" (formula "14") (term "0"))
         (rule "distr_forallAnd" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "commute_or_2" (formula "15") (term "0,0"))
         (rule "shift_paren_or" (formula "14") (term "0,0"))
         (rule "commute_or_2" (formula "15") (term "0,0,0"))
         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
         (rule "commute_or" (formula "15") (term "0,0,0,0"))
         (rule "ifthenelse_split" (formula "4") (term "0"))
         (branch "j_0 <= -1 + end TRUE"
            (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
            (rule "hideAuxiliaryEq" (formula "5"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "allLeft" (formula "14") (inst "t=i_0"))
            (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0,0") (ifseqformula "12"))
            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "leq_literals" (formula "14") (term "0,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_contradInEq0" (formula "14") (term "0,0,0,0") (ifseqformula "13"))
            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0"))
            (rule "leq_literals" (formula "14") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "allLeft" (formula "14") (inst "t=j_0"))
            (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
            (rule "leq_literals" (formula "14") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0"))
            (rule "leq_literals" (formula "14") (term "0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "5"))
            (rule "andLeft" (formula "14"))
            (rule "inEqSimp_homoInEq1" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
            (rule "add_literals" (formula "14") (term "1,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0"))
            (rule "add_zero_right" (formula "14") (term "0"))
            (rule "leq_literals" (formula "14"))
            (rule "closeFalse" (formula "14"))
         )
         (branch "j_0 <= -1 + end FALSE"
            (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "inEqSimp_leqRight" (formula "25"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
            (rule "mul_literals" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "i_0 >= begin & i_0 <= -1 + end FALSE"
         (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
         (rule "hideAuxiliaryEq" (formula "6"))
         (rule "inEqSimp_commuteGeq" (formula "5"))
         (rule "all_pull_out3" (formula "9") (term "0"))
         (rule "cnf_rightDist" (formula "9") (term "0,0"))
         (rule "distr_forallAnd" (formula "9") (term "0"))
         (rule "distr_forallAnd" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "commute_or_2" (formula "10") (term "0,0"))
         (rule "shift_paren_or" (formula "9") (term "0,0"))
         (rule "commute_or_2" (formula "10") (term "0,0,0"))
         (rule "shift_paren_or" (formula "9") (term "0,0,0"))
         (rule "commute_or" (formula "10") (term "0,0,0,0"))
         (rule "ifthenelse_split" (formula "4") (term "0"))
         (branch "j_0 <= -1 + end TRUE"
            (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
            (rule "hideAuxiliaryEq" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
            (rule "add_literals" (formula "21") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0"))
            (rule "qeq_literals" (formula "21") (term "0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "allLeft" (formula "10") (inst "t=i_0"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0,0,0") (ifseqformula "8"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "leq_literals" (formula "10") (term "0,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq0" (formula "10") (term "0,0,0,0") (ifseqformula "9"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0"))
            (rule "leq_literals" (formula "10") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "allLeft" (formula "10") (inst "t=j_0"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
            (rule "leq_literals" (formula "10") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq0" (formula "10") (term "0") (ifseqformula "4"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0"))
            (rule "leq_literals" (formula "10") (term "0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "cut_direct" (formula "26") (term "0"))
            (branch "CUT: i_0 >= begin TRUE"
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_leqRight" (formula "27"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "1"))
               (rule "andLeft" (formula "28"))
               (rule "inEqSimp_homoInEq1" (formula "28"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
               (rule "add_literals" (formula "28") (term "1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0"))
               (rule "add_zero_right" (formula "28") (term "0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0"))
               (rule "polySimp_addComm0" (formula "28") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
               (rule "add_literals" (formula "28") (term "1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0"))
               (rule "add_zero_right" (formula "28") (term "0"))
               (rule "leq_literals" (formula "28"))
               (rule "closeFalse" (formula "28"))
            )
            (branch "CUT: i_0 >= begin FALSE"
                (builtin "One Step Simplification" (formula "27"))
               (rule "false_right" (formula "27"))
               (rule "inEqSimp_geqRight" (formula "26"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "9"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
         (branch "j_0 <= -1 + end FALSE"
            (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
            (rule "andLeft" (formula "22"))
            (rule "inEqSimp_homoInEq1" (formula "22"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
            (rule "add_literals" (formula "22") (term "1,1,0"))
            (rule "times_zero_1" (formula "22") (term "1,0"))
            (rule "add_zero_right" (formula "22") (term "0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0"))
            (rule "polySimp_addComm0" (formula "22") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
            (rule "add_literals" (formula "22") (term "1,1,0"))
            (rule "times_zero_1" (formula "22") (term "1,0"))
            (rule "add_zero_right" (formula "22") (term "0"))
            (rule "leq_literals" (formula "22"))
            (rule "closeFalse" (formula "22"))
         )
      )
   )
   (branch "Case 2"
      (rule "allRight" (formula "21") (inst "sk=j_0_0"))
      (rule "orRight" (formula "21"))
      (rule "orRight" (formula "21"))
      (rule "inEqSimp_geqRight" (formula "23"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_geqRight" (formula "23"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_leqRight" (formula "23"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1"))
      (rule "polySimp_elimOne" (formula "3") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "0,1"))
      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfAnon" (formula "3"))
       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")) (ifInst ""  (formula "12")))
      (rule "elementOfSetMinus" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "ifthenelse_negated" (formula "3") (term "0"))
      (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1"))
      (rule "mul_literals" (formula "1") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
      (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
      (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
      (rule "add_literals" (formula "24") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
      (rule "add_literals" (formula "24") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0"))
      (rule "qeq_literals" (formula "24") (term "0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "true_left" (formula "24"))
      (rule "all_pull_out4" (formula "10") (term "1,0"))
      (rule "ifthenelse_split" (formula "6") (term "0"))
      (branch "i_0 >= begin & i_0 <= -1 + end TRUE"
         (rule "andLeft" (formula "6"))
         (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "8"))
         (rule "hideAuxiliaryEq" (formula "8"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
         (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1"))
         (rule "polySimp_rightDist" (formula "6") (term "1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
         (rule "mul_literals" (formula "6") (term "0,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "6"))
         (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
         (rule "add_literals" (formula "22") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0"))
         (rule "qeq_literals" (formula "22") (term "0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "8"))
         (rule "polySimp_rightDist" (formula "10") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,0"))
         (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
         (rule "polySimp_mulComm0" (formula "10") (term "1"))
         (rule "polySimp_rightDist" (formula "10") (term "1"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1"))
         (rule "polySimp_rightDist" (formula "10") (term "0,1"))
         (rule "mul_literals" (formula "10") (term "0,0,1"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
         (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "10"))
         (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
         (rule "add_literals" (formula "24") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
         (rule "add_literals" (formula "24") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0"))
         (rule "qeq_literals" (formula "24") (term "0"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "12"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
         (rule "mul_literals" (formula "7") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "7"))
         (rule "leq_literals" (formula "25") (term "0"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "true_left" (formula "25"))
         (rule "all_pull_out3" (formula "14") (term "0"))
         (rule "cnf_rightDist" (formula "14") (term "0,0"))
         (rule "distr_forallAnd" (formula "14") (term "0"))
         (rule "distr_forallAnd" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "commute_or_2" (formula "15") (term "0,0"))
         (rule "shift_paren_or" (formula "14") (term "0,0"))
         (rule "commute_or_2" (formula "15") (term "0,0,0"))
         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
         (rule "commute_or" (formula "15") (term "0,0,0,0"))
         (rule "ifthenelse_split" (formula "4") (term "0"))
         (branch "j_0_0 >= begin TRUE"
            (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
            (rule "hideAuxiliaryEq" (formula "5"))
            (rule "inEqSimp_commuteGeq" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "allLeft" (formula "15") (inst "t=i_0"))
            (rule "inEqSimp_contradInEq0" (formula "15") (term "1,0,0,0,0") (ifseqformula "13"))
            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,0,1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0,0"))
            (rule "leq_literals" (formula "15") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0,0") (ifseqformula "12"))
            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0"))
            (rule "leq_literals" (formula "15") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "allLeft" (formula "15") (inst "t=j_0_0"))
            (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
            (rule "leq_literals" (formula "15") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0"))
            (rule "leq_literals" (formula "15") (term "0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "5"))
            (rule "andLeft" (formula "15"))
            (rule "inEqSimp_homoInEq1" (formula "15"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "1,1,0"))
            (rule "times_zero_1" (formula "15") (term "1,0"))
            (rule "add_zero_right" (formula "15") (term "0"))
            (rule "leq_literals" (formula "15"))
            (rule "closeFalse" (formula "15"))
         )
         (branch "j_0_0 >= begin FALSE"
            (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "inEqSimp_geqRight" (formula "25"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_commuteGeq" (formula "5"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "8"))
            (rule "qeq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
      (branch "i_0 >= begin & i_0 <= -1 + end FALSE"
         (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
         (rule "hideAuxiliaryEq" (formula "6"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "all_pull_out3" (formula "9") (term "0"))
         (rule "cnf_rightDist" (formula "9") (term "0,0"))
         (rule "distr_forallAnd" (formula "9") (term "0"))
         (rule "distr_forallAnd" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "commute_or_2" (formula "10") (term "0,0"))
         (rule "shift_paren_or" (formula "9") (term "0,0"))
         (rule "commute_or_2" (formula "10") (term "0,0,0"))
         (rule "shift_paren_or" (formula "9") (term "0,0,0"))
         (rule "commute_or" (formula "10") (term "0,0,0,0"))
         (rule "ifthenelse_split" (formula "4") (term "0"))
         (branch "j_0_0 >= begin TRUE"
            (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
            (rule "hideAuxiliaryEq" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "4"))
            (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
            (rule "add_literals" (formula "21") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0"))
            (rule "qeq_literals" (formula "21") (term "0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "allLeft" (formula "11") (inst "t=i_0"))
            (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0,0,0") (ifseqformula "8"))
            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "leq_literals" (formula "11") (term "0,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_contradInEq0" (formula "11") (term "0,0,0,0") (ifseqformula "9"))
            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0"))
            (rule "leq_literals" (formula "11") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "allLeft" (formula "11") (inst "t=j_0_0"))
            (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
            (rule "leq_literals" (formula "11") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0"))
            (rule "leq_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "cut_direct" (formula "26") (term "0"))
            (branch "CUT: i_0 >= begin TRUE"
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_leqRight" (formula "27"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: i_0 >= begin FALSE"
                (builtin "One Step Simplification" (formula "27"))
               (rule "false_right" (formula "27"))
               (rule "inEqSimp_geqRight" (formula "26"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "25"))
               (rule "qeq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "closeFalse" (formula "9"))
            )
         )
         (branch "j_0_0 >= begin FALSE"
            (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "inEqSimp_geqRight" (formula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_commuteGeq" (formula "5"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "3"))
            (rule "qeq_literals" (formula "24") (term "0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "closeFalse" (formula "24"))
         )
      )
   )
)
(branch "forall int i; ( i <= -1 + begin + bucket_begin | i >= begin + bucket_end | forall int j; ( j <= -1 + begin | j >= begin + bucket_begin | values_0[j] <= -1 + values_0[i]) & forall int j_0; ( j_0 <= -1 + begin + bucket_end | j_0 >= end | values_0[j_0] >= 1 + values_0[i])) FALSE"
    (builtin "One Step Simplification" (formula "18"))
   (rule "notRight" (formula "18"))
   (rule "allRight" (formula "18") (inst "sk=i_0"))
   (rule "orRight" (formula "18"))
   (rule "orRight" (formula "18"))
   (rule "inEqSimp_geqRight" (formula "19"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "inEqSimp_leqRight" (formula "19"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
   (rule "polySimp_mulComm0" (formula "2") (term "1"))
   (rule "polySimp_rightDist" (formula "2") (term "1"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
   (rule "polySimp_rightDist" (formula "2") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
   (rule "mul_literals" (formula "2") (term "0,0,1"))
   (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
   (rule "polySimp_elimOne" (formula "1") (term "0,1"))
   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
   (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "mul_literals" (formula "1") (term "0,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
   (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
   (rule "add_literals" (formula "15") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0"))
   (rule "qeq_literals" (formula "15") (term "0"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "andRight" (formula "20"))
   (branch "Case 1"
      (rule "allRight" (formula "20") (inst "sk=j_0"))
      (rule "orRight" (formula "20"))
      (rule "orRight" (formula "20"))
      (rule "inEqSimp_leqRight" (formula "22"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_geqRight" (formula "22"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "inEqSimp_leqRight" (formula "22"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1"))
      (rule "polySimp_elimOne" (formula "3") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "polySimp_rightDist" (formula "2") (term "0,1"))
      (rule "mul_literals" (formula "2") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
      (rule "leq_literals" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "all_pull_out4" (formula "8") (term "1,0"))
      (rule "all_pull_out3" (formula "8") (term "0"))
      (rule "cnf_rightDist" (formula "8") (term "0,0"))
      (rule "distr_forallAnd" (formula "8") (term "0"))
      (rule "distr_forallAnd" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "commute_or_2" (formula "9") (term "0,0"))
      (rule "shift_paren_or" (formula "8") (term "0,0"))
      (rule "commute_or_2" (formula "9") (term "0,0,0"))
      (rule "shift_paren_or" (formula "8") (term "0,0,0"))
      (rule "commute_or" (formula "9") (term "0,0,0,0"))
      (rule "allLeft" (formula "8") (inst "t=i_0"))
      (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0,0,0,0") (ifseqformula "7"))
      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "8") (term "0,0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,0"))
      (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0"))
      (rule "leq_literals" (formula "8") (term "0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "pullOutSelect" (formula "8") (term "1,1,1,0") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfAnon" (formula "8"))
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "25")) (ifInst ""  (formula "14")))
      (rule "elementOfSetMinus" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "ifthenelse_negated" (formula "8") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
      (rule "allLeft" (formula "9") (inst "t=j_0"))
      (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
      (rule "leq_literals" (formula "9") (term "0,1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfAnon" (formula "9"))
       (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")) (ifInst ""  (formula "16")))
      (rule "elementOfSetMinus" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "ifthenelse_negated" (formula "9") (term "0"))
      (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
      (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "ifthenelse_split" (formula "8") (term "0"))
      (branch "i_0 >= begin & i_0 <= -1 + end TRUE"
         (rule "andLeft" (formula "8"))
         (rule "applyEqReverse" (formula "12") (term "1,1") (ifseqformula "10"))
         (rule "applyEqReverse" (formula "13") (term "1,1,1,0") (ifseqformula "10"))
         (rule "hideAuxiliaryEq" (formula "10"))
         (rule "inEqSimp_homoInEq0" (formula "11"))
         (rule "polySimp_addComm1" (formula "11") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "polySimp_mulComm0" (formula "11") (term "1"))
         (rule "polySimp_rightDist" (formula "11") (term "1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
         (rule "mul_literals" (formula "11") (term "0,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
         (rule "polySimp_rightDist" (formula "6") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1"))
         (rule "polySimp_rightDist" (formula "6") (term "1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
         (rule "polySimp_rightDist" (formula "6") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
         (rule "mul_literals" (formula "6") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
         (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "6"))
         (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
         (rule "add_literals" (formula "26") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "26") (term "1,0,0"))
         (rule "add_zero_right" (formula "26") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
         (rule "add_literals" (formula "26") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "26") (term "1,0,0"))
         (rule "add_zero_right" (formula "26") (term "0,0"))
         (rule "qeq_literals" (formula "26") (term "0"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "true_left" (formula "26"))
         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1"))
         (rule "polySimp_rightDist" (formula "9") (term "1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
         (rule "mul_literals" (formula "9") (term "0,1"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "9"))
         (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
         (rule "add_literals" (formula "26") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "26") (term "1,0,0"))
         (rule "add_zero_right" (formula "26") (term "0,0"))
         (rule "qeq_literals" (formula "26") (term "0"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "true_left" (formula "26"))
         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "8"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
         (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
         (rule "add_literals" (formula "10") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "10"))
         (rule "leq_literals" (formula "27") (term "0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "ifthenelse_split" (formula "13") (term "0"))
         (branch "j_0 <= -1 + end TRUE"
            (rule "applyEqReverse" (formula "15") (term "1,1") (ifseqformula "14"))
            (rule "hideAuxiliaryEq" (formula "14"))
            (rule "inEqSimp_homoInEq1" (formula "14"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
            (rule "mul_literals" (formula "14") (term "0,1"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "4"))
            (rule "andLeft" (formula "14"))
            (rule "inEqSimp_homoInEq1" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
            (rule "add_literals" (formula "14") (term "1,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0"))
            (rule "add_zero_right" (formula "14") (term "0"))
            (rule "leq_literals" (formula "14"))
            (rule "closeFalse" (formula "14"))
         )
         (branch "j_0 <= -1 + end FALSE"
            (rule "applyEqReverse" (formula "14") (term "1,1") (ifseqformula "13"))
            (rule "hideAuxiliaryEq" (formula "13"))
            (rule "inEqSimp_leqRight" (formula "27"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "14"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
            (rule "mul_literals" (formula "14") (term "0,1"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
            (rule "mul_literals" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "i_0 >= begin & i_0 <= -1 + end FALSE"
         (rule "applyEqReverse" (formula "11") (term "1,1,1,0") (ifseqformula "8"))
         (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "8"))
         (rule "hideAuxiliaryEq" (formula "8"))
         (rule "inEqSimp_homoInEq0" (formula "9"))
         (rule "polySimp_addComm1" (formula "9") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1"))
         (rule "polySimp_rightDist" (formula "9") (term "1"))
         (rule "mul_literals" (formula "9") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1"))
         (rule "allLeft" (formula "10") (inst "t=j_0"))
         (rule "replaceKnownSelect_taclet01_1" (formula "10") (term "0,1"))
         (rule "inEqSimp_homoInEq0" (formula "10") (term "1"))
         (rule "polySimp_addComm1" (formula "10") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1"))
         (rule "mul_literals" (formula "10") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1"))
         (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "ifthenelse_split" (formula "8") (term "0"))
         (branch "j_0 <= -1 + end TRUE"
            (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "9"))
            (rule "hideAuxiliaryEq" (formula "9"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0"))
            (rule "qeq_literals" (formula "23") (term "0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "cut_direct" (formula "26") (term "0"))
            (branch "CUT: i_0 >= begin TRUE"
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_leqRight" (formula "27"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "2"))
               (rule "leq_literals" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "28"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: i_0 >= begin FALSE"
                (builtin "One Step Simplification" (formula "27"))
               (rule "false_right" (formula "27"))
               (rule "inEqSimp_geqRight" (formula "26"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "8") (term "1,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "2"))
               (rule "qeq_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "closeFalse" (formula "8"))
            )
         )
         (branch "j_0 <= -1 + end FALSE"
            (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "8"))
            (rule "hideAuxiliaryEq" (formula "8"))
            (rule "inEqSimp_leqRight" (formula "25"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "9"))
            (rule "polySimp_addComm1" (formula "9") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9"))
            (rule "polySimp_mulComm0" (formula "9") (term "1"))
            (rule "polySimp_rightDist" (formula "9") (term "1"))
            (rule "mul_literals" (formula "9") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
            (rule "mul_literals" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Case 2"
      (rule "allRight" (formula "20") (inst "sk=j_0_0"))
      (rule "orRight" (formula "20"))
      (rule "orRight" (formula "20"))
      (rule "inEqSimp_geqRight" (formula "22"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_geqRight" (formula "22"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_leqRight" (formula "22"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1"))
      (rule "polySimp_elimOne" (formula "3") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "0,1"))
      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
      (rule "mul_literals" (formula "1") (term "0,0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
      (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0"))
      (rule "qeq_literals" (formula "22") (term "0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "all_pull_out4" (formula "8") (term "1,0"))
      (rule "all_pull_out3" (formula "8") (term "0"))
      (rule "cnf_rightDist" (formula "8") (term "0,0"))
      (rule "distr_forallAnd" (formula "8") (term "0"))
      (rule "distr_forallAnd" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "commute_or_2" (formula "9") (term "0,0"))
      (rule "shift_paren_or" (formula "8") (term "0,0"))
      (rule "commute_or_2" (formula "9") (term "0,0,0"))
      (rule "shift_paren_or" (formula "8") (term "0,0,0"))
      (rule "commute_or" (formula "9") (term "0,0,0,0"))
      (rule "allLeft" (formula "9") (inst "t=i_0"))
      (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0,0,0") (ifseqformula "6"))
      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_contradInEq0" (formula "9") (term "0,0,0,0") (ifseqformula "7"))
      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "pullOutSelect" (formula "9") (term "1,1,1,0") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfAnon" (formula "9"))
       (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "25")) (ifInst ""  (formula "14")))
      (rule "elementOfSetMinus" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "ifthenelse_negated" (formula "9") (term "0"))
      (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
      (rule "allLeft" (formula "10") (inst "t=j_0_0"))
      (rule "inEqSimp_contradInEq0" (formula "10") (term "1,0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
      (rule "leq_literals" (formula "10") (term "0,1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0"))
      (rule "leq_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfAnon" (formula "10"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "27")) (ifInst ""  (formula "16")))
      (rule "elementOfSetMinus" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfArrayRangeConcrete" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
      (rule "ifthenelse_negated" (formula "10") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0"))
      (rule "ifthenelse_split" (formula "9") (term "0"))
      (branch "i_0 >= begin & i_0 <= -1 + end TRUE"
         (rule "andLeft" (formula "9"))
         (rule "applyEqReverse" (formula "14") (term "1,1,1,0") (ifseqformula "11"))
         (rule "applyEqReverse" (formula "13") (term "1,1") (ifseqformula "11"))
         (rule "hideAuxiliaryEq" (formula "11"))
         (rule "inEqSimp_homoInEq1" (formula "12"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1"))
         (rule "polySimp_rightDist" (formula "12") (term "1"))
         (rule "mul_literals" (formula "12") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "10"))
         (rule "polySimp_rightDist" (formula "6") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1"))
         (rule "polySimp_rightDist" (formula "6") (term "1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
         (rule "polySimp_rightDist" (formula "6") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
         (rule "mul_literals" (formula "6") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
         (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "6"))
         (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0"))
         (rule "qeq_literals" (formula "27") (term "0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "8"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
         (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
         (rule "add_literals" (formula "10") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "10"))
         (rule "leq_literals" (formula "28") (term "0"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "true_left" (formula "28"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "polySimp_addComm0" (formula "11") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "polySimp_mulComm0" (formula "11") (term "1"))
         (rule "polySimp_rightDist" (formula "11") (term "1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
         (rule "mul_literals" (formula "11") (term "0,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "11"))
         (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0"))
         (rule "qeq_literals" (formula "27") (term "0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "ifthenelse_split" (formula "14") (term "0"))
         (branch "j_0_0 >= begin TRUE"
            (rule "applyEqReverse" (formula "16") (term "1,1") (ifseqformula "15"))
            (rule "hideAuxiliaryEq" (formula "15"))
            (rule "inEqSimp_homoInEq0" (formula "15"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1"))
            (rule "polySimp_rightDist" (formula "15") (term "1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
            (rule "mul_literals" (formula "15") (term "0,1"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "15"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "times_zero_1" (formula "4") (term "1,0"))
            (rule "add_zero_right" (formula "4") (term "0"))
            (rule "leq_literals" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
         (branch "j_0_0 >= begin FALSE"
            (rule "applyEqReverse" (formula "15") (term "1,1") (ifseqformula "14"))
            (rule "hideAuxiliaryEq" (formula "14"))
            (rule "inEqSimp_geqRight" (formula "27"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "15"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1"))
            (rule "polySimp_rightDist" (formula "15") (term "1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
            (rule "mul_literals" (formula "15") (term "0,1"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "12"))
            (rule "qeq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
      (branch "i_0 >= begin & i_0 <= -1 + end FALSE"
         (rule "applyEqReverse" (formula "11") (term "1,1") (ifseqformula "9"))
         (rule "applyEqReverse" (formula "12") (term "1,1,1,0") (ifseqformula "9"))
         (rule "hideAuxiliaryEq" (formula "9"))
         (rule "inEqSimp_homoInEq1" (formula "10"))
         (rule "polySimp_addComm1" (formula "10") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10"))
         (rule "polySimp_mulComm0" (formula "10") (term "1"))
         (rule "polySimp_rightDist" (formula "10") (term "1"))
         (rule "mul_literals" (formula "10") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1"))
         (rule "allLeft" (formula "11") (inst "t=j_0_0"))
         (rule "replaceKnownSelect_taclet11_1" (formula "11") (term "0,1"))
         (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
         (rule "polySimp_addComm1" (formula "11") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1"))
         (rule "mul_literals" (formula "11") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1"))
         (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "ifthenelse_split" (formula "9") (term "0"))
         (branch "j_0_0 >= begin TRUE"
            (rule "applyEqReverse" (formula "11") (term "1,1") (ifseqformula "10"))
            (rule "hideAuxiliaryEq" (formula "10"))
            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
            (rule "polySimp_mulComm0" (formula "9") (term "1"))
            (rule "polySimp_rightDist" (formula "9") (term "1"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
            (rule "mul_literals" (formula "9") (term "0,1"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "9"))
            (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0"))
            (rule "qeq_literals" (formula "23") (term "0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "cut_direct" (formula "26") (term "0"))
            (branch "CUT: i_0 >= begin TRUE"
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_leqRight" (formula "27"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "2"))
               (rule "leq_literals" (formula "28") (term "0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
               (rule "andLeft" (formula "5"))
               (rule "inEqSimp_homoInEq1" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
               (rule "mul_literals" (formula "5") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,0"))
               (rule "add_zero_right" (formula "5") (term "0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,0"))
               (rule "add_zero_right" (formula "5") (term "0"))
               (rule "leq_literals" (formula "5"))
               (rule "closeFalse" (formula "5"))
            )
            (branch "CUT: i_0 >= begin FALSE"
                (builtin "One Step Simplification" (formula "27"))
               (rule "false_right" (formula "27"))
               (rule "inEqSimp_geqRight" (formula "26"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "25"))
               (rule "qeq_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "closeFalse" (formula "7"))
            )
         )
         (branch "j_0_0 >= begin FALSE"
            (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "9"))
            (rule "hideAuxiliaryEq" (formula "9"))
            (rule "inEqSimp_geqRight" (formula "25"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "10"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
            (rule "polySimp_mulComm0" (formula "10") (term "1"))
            (rule "polySimp_rightDist" (formula "10") (term "1"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
            (rule "mul_literals" (formula "10") (term "0,1"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "3"))
            (rule "qeq_literals" (formula "26") (term "0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "closeFalse" (formula "26"))
         )
      )
   )
)
)
}
