\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Apr 06 12:12:29 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Wed Apr 06 12:12:29 CEST 2022
contract=de.wiesler.Functions[de.wiesler.Functions\\:\\:copy_unique([I,int,int,int,int,[I)].JML normal_behavior operation contract.0
name=de.wiesler.Functions[de.wiesler.Functions\\:\\:copy_unique([I,int,int,int,int,[I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "802059dea3"))

(autoModeTime "82045")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "0,0,1,1,1,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,1,1,0,0,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,1,0,0,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "2,2,0,0,0,0,1,0,1,1"))
(rule "translateJavaMulInt" (formula "1") (term "1,0,0,0,1,1,1,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,0,0,1,1,1,1,1,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "12"))
(rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "14") (term "2,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "14") (term "1,2,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "14") (term "1,0,1,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "1,1,0,1,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "11") (term "0"))
(rule "mul_literals" (formula "11") (term "1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
(rule "polySimp_addComm0" (formula "14") (term "0,2,1,1,1,1,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "14") (term "2,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "14") (term "1,0,1,1,0,0,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "11") (term "0"))
(rule "polySimp_addComm0" (formula "11") (term "0,0"))
(rule "disjointDefinition" (formula "7"))
 (builtin "One Step Simplification" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "eqSymm" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,0,0,0,1"))
(rule "assignment" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "elementOfArrayRange" (formula "14") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_copy_unique,savedHeapBefore_copy_unique,_beginBefore_copy_unique,_countBefore_copy_unique,_endBefore_copy_unique,_stepBefore_copy_unique,_targetBefore_copy_unique,_valuesBefore_copy_unique"))
 (builtin "One Step Simplification" (formula "14"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "offset"))
(rule "compound_subtraction_1" (formula "14") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "x"))
(rule "assignmentAdditionInt" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "translateJavaAddInt" (formula "14") (term "0,1,0"))
(rule "assignmentSubtractionInt" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
 (builtin "Block Contract (Internal)" (formula "14") (newnames "result_461,exc_545,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "4")) (ifInst ""  (formula "1")))
    (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "11"))
   (rule "translateJavaSubInt" (formula "14") (term "0,1,0,0"))
   (rule "eqSymm" (formula "14") (term "0,0,1,0,1"))
   (rule "polySimp_elimSub" (formula "14") (term "0,1,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
   (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "exc_545_1"))
   (rule "assignment" (formula "14") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "emptyStatement" (formula "14") (term "1"))
   (rule "emptyStatement" (formula "14") (term "1"))
   (rule "tryEmpty" (formula "14") (term "1"))
   (rule "blockEmptyLabel" (formula "14") (term "1"))
   (rule "blockEmpty" (formula "14") (term "1"))
   (rule "methodCallEmpty" (formula "14") (term "1"))
   (rule "emptyModality" (formula "14") (term "1"))
   (rule "andRight" (formula "14"))
   (branch "Case 1"
      (rule "andRight" (formula "14"))
      (branch
          (builtin "One Step Simplification" (formula "14"))
         (rule "closeTrue" (formula "14"))
      )
      (branch "Case 2"
          (builtin "SMTRule")
      )
   )
   (branch
       (builtin "One Step Simplification" (formula "14"))
      (rule "closeTrue" (formula "14"))
   )
)
(branch "Precondition"
   (rule "andRight" (formula "14"))
   (branch
       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "4")))
      (rule "closeTrue" (formula "14"))
   )
   (branch
       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "14"))
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "11"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "translateJavaSubInt" (formula "11") (term "0,1,0"))
   (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "polySimp_elimSub" (formula "16") (term "0,1,0"))
   (rule "mul_literals" (formula "16") (term "1,0,1,0"))
   (rule "polySimp_elimSub" (formula "12") (term "0"))
   (rule "mul_literals" (formula "12") (term "1,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
   (rule "polySimp_addComm1" (formula "12") (term "0"))
   (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0"))
   (rule "polySimp_addComm0" (formula "12") (term "0,0"))
   (rule "elim_double_block_2" (formula "16") (term "1"))
   (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_1"))
   (rule "inequality_comparison_simple" (formula "16") (term "1"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "replace_known_left" (formula "16") (term "0,0,1,0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "arrayLengthIsAShort" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "arrayLengthNotNegative" (formula "7") (term "0"))
   (rule "ifSplit" (formula "17"))
   (branch "if x_1 true"
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x_1 false"
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "eval_order_array_access3" (formula "17") (term "1") (inst "#v0=x_arr") (inst "#v2=x") (inst "#v1=x_1"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_arr"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3"))
      (rule "assignment_array2" (formula "17"))
      (branch "Normal Execution (_values != null)"
          (builtin "One Step Simplification" (formula "17"))
         (rule "assignment_to_primitive_array_component" (formula "17"))
         (branch "Normal Execution (x_arr != null)"
             (builtin "One Step Simplification" (formula "17"))
            (rule "variableDeclarationAssign" (formula "17") (term "1"))
            (rule "variableDeclaration" (formula "17") (term "1") (newnames "target_offset"))
            (rule "assignment" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "compound_assignment_op_plus" (formula "17") (term "1"))
            (rule "compound_int_cast_expression" (formula "17") (term "1") (inst "#v=x"))
            (rule "variableDeclarationAssign" (formula "17") (term "1"))
            (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_4"))
            (rule "remove_parentheses_right" (formula "17") (term "1"))
            (rule "compound_addition_2" (formula "17") (term "1") (inst "#v0=x_5") (inst "#v1=x_6"))
            (rule "variableDeclarationAssign" (formula "17") (term "1"))
            (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_5"))
            (rule "assignment" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "variableDeclarationAssign" (formula "17") (term "1"))
            (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_6"))
            (rule "remove_parentheses_right" (formula "17") (term "1"))
            (rule "assignment" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "assignmentAdditionInt" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "translateJavaAddInt" (formula "17") (term "0,1,0"))
            (rule "polySimp_pullOutFactor3b" (formula "17") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "17") (term "1"))
            (rule "assignment" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "for_to_while" (formula "17") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
            (rule "variableDeclarationAssign" (formula "17") (term "1"))
            (rule "variableDeclaration" (formula "17") (term "1") (newnames "i"))
            (rule "assignment" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "elim_double_block_3" (formula "17") (term "1"))
            (rule "loopScopeInvDia" (formula "17") (term "1") (newnames "i_0,offset_0,target_offset_0,o,f") (inst "anon_heap_LOOP=anon_heap_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "#heapBefore_LOOP=h") (inst "#savedHeapBefore_LOOP=h_1") (inst "#permissionsBefore_LOOP=h_2") (inst "#variant=x") (inst "#x=x_1"))
            (branch "Invariant Initially Valid"
               (rule "andRight" (formula "17"))
               (branch "Case 1"
                  (rule "andRight" (formula "17"))
                  (branch "Case 1"
                     (rule "andRight" (formula "17"))
                     (branch
                        (rule "andRight" (formula "17"))
                        (branch
                           (rule "andRight" (formula "17"))
                           (branch
                              (rule "andRight" (formula "17"))
                              (branch
                                 (rule "andRight" (formula "17"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "leq_literals" (formula "17"))
                                    (rule "closeTrue" (formula "17"))
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_leqRight" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "10"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "11"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "1"))
                                    (rule "times_zero_2" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "17"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "leq_literals" (formula "17"))
                                    (rule "closeTrue" (formula "17"))
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "leq_literals" (formula "17"))
                                    (rule "closeTrue" (formula "17"))
                                 )
                              )
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_leqRight" (formula "17"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "10"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "11"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0"))
                              (rule "inEqSimp_invertInEq1" (formula "1"))
                              (rule "times_zero_2" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "11"))
                              (rule "mul_literals" (formula "1") (term "1,1,0"))
                              (rule "greater_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "translateJavaAddInt" (formula "17") (term "0,1"))
                           (rule "translateJavaMulInt" (formula "17") (term "1,0,1"))
                           (rule "translateJavaAddInt" (formula "17") (term "1,1,0,1"))
                           (rule "translateJavaSubInt" (formula "17") (term "1"))
                           (rule "add_literals" (formula "17") (term "1,1,0,1"))
                           (rule "eqSymm" (formula "17"))
                           (rule "polySimp_elimSub" (formula "17") (term "0"))
                           (rule "mul_literals" (formula "17") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0"))
                           (rule "add_zero_right" (formula "17") (term "0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,0"))
                           (rule "times_zero_1" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "closeTrue" (formula "17"))
                        )
                     )
                     (branch "Case 2"
                        (rule "impRight" (formula "17"))
                         (builtin "SMTRule")
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "allRight" (formula "17") (inst "sk=j_0"))
                     (rule "impRight" (formula "17"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_ltToLeq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "11"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "12"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "add_zero_left" (formula "2") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                     (rule "mul_literals" (formula "12") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "19") (term "1,1,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                     (rule "leq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "14"))
                     (rule "mul_literals" (formula "11") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "mul_literals" (formula "11") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                     (rule "nnf_ex2all" (formula "19"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "8") (term "0"))
                     (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "20")) (ifInst ""  (formula "9")))
                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "9") (term "0") (inst "i=i_1"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "translateJavaAddInt" (formula "9") (term "0,2,1,1,0"))
                     (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "9") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,2,1,1,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "9") (term "0"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                      (builtin "SMTRule")
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "translateJavaAddInt" (formula "17") (term "0,2,1,1,0"))
                  (rule "translateJavaSubInt" (formula "17") (term "1,1,0,0"))
                  (rule "sub_literals" (formula "17") (term "1,1,0,0"))
                  (rule "allRight" (formula "17") (inst "sk=j_0"))
                  (rule "impRight" (formula "17"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,2,1"))
                  (rule "inEqSimp_ltRight" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "12"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "13"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch "Invariant Preserved and Used"
                (builtin "One Step Simplification" (formula "18"))
               (rule "translateJavaSubInt" (formula "18") (term "2,1,0,0,1,0,1,0,1,0,0"))
               (rule "translateJavaSubInt" (formula "18") (term "0,1,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "18") (term "2,2,0,0,0,0,1,0,1,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,0,1,0,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "18") (term "0,1,1,0,1"))
               (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,0,1,0"))
               (rule "translateJavaAddInt" (formula "18") (term "0,1,1,0,0,0,0"))
               (rule "translateJavaSubInt" (formula "18") (term "2,1,0,1,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0,1,0,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0,0,0,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "18") (term "2,1,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "18") (term "2,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0,1,0"))
               (rule "translateJavaSubInt" (formula "18") (term "2,1,0,1,1,0,1,0,1,0,0"))
               (rule "translateJavaAddInt" (formula "18") (term "1,1,0,1,1,0,0,0,0"))
               (rule "translateJavaMulInt" (formula "18") (term "1,0,1,1,0,0,0,0,0,1,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "18") (term "1,0,1,1,0,0,0,0"))
               (rule "translateJavaAddInt" (formula "18") (term "0,1,1,0,0,0,0,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0,0,0"))
               (rule "translateJavaAddInt" (formula "18") (term "1,1,0,1,1,0,0,0,0,0,1,1,0,1,1"))
               (rule "impRight" (formula "18"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "3"))
               (rule "eqSymm" (formula "27") (term "1,0,0,0,0,0,1,1,0,1"))
               (rule "eqSymm" (formula "27") (term "1,0,0,1,0,1,1,0,1"))
               (rule "eqSymm" (formula "6"))
               (rule "polySimp_elimSub" (formula "27") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
               (rule "mul_literals" (formula "27") (term "1,2,2,0,0,0,0,1,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "27") (term "1,2,1,0,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "27") (term "0,1,1,0"))
               (rule "polySimp_elimSub" (formula "27") (term "0,1,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "27") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "9") (term "1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "9") (term "2,1,0,0,1,0"))
               (rule "mul_literals" (formula "9") (term "1,2,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "9") (term "2,1,0,1,1,0"))
               (rule "mul_literals" (formula "9") (term "1,2,1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "8") (term "2,1,0,1,1,0,1,0"))
               (rule "mul_literals" (formula "8") (term "1,2,1,0,1,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "8") (term "2,1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "8") (term "1,2,1,0,0,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "27") (term "0,1,0,0,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "27") (term "1,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "6") (term "0"))
               (rule "mul_literals" (formula "6") (term "1,0"))
               (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0,1,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "9") (term "0,2,1,1,0"))
               (rule "polySimp_addComm0" (formula "27") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "2,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "9") (term "2,1,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "8") (term "2,1,0,1,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "8") (term "2,1,0,0,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,0,0,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "5"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "inEqSimp_commuteLeq" (formula "3"))
               (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_7"))
               (rule "elementOfArrayRange" (formula "27") (term "0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0,1,0,0,0,0,1,0,1,1,0,1"))
               (rule "commute_and" (formula "9") (term "0,0"))
               (rule "commute_and" (formula "8") (term "0,0"))
               (rule "commute_and" (formula "8") (term "0,0,1,0"))
               (rule "ifElseUnfold" (formula "27") (term "1") (inst "#boolv=x_8"))
               (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_8"))
               (rule "less_than_comparison_simple" (formula "27") (term "1"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "ifElseSplit" (formula "27"))
               (branch "if x_8 true"
                   (builtin "Block Contract (Internal)" (formula "28") (newnames "result_462,exc_546,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
                  (branch "Validity"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "15")))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "translateJavaAddInt" (formula "29") (term "0,0,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "29") (term "0,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "29") (term "1,1,1,0,0,1"))
                     (rule "translateJavaAddInt" (formula "29") (term "0,0,1,1,0,0,1"))
                     (rule "eqSymm" (formula "29") (term "0,0,1,0,1"))
                     (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "29") (term "1,0,1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "29") (term "0,1,1,0,0,1"))
                     (rule "variableDeclarationAssign" (formula "29") (term "1"))
                     (rule "variableDeclaration" (formula "29") (term "1") (newnames "exc_546_1"))
                     (rule "assignment" (formula "29") (term "1"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "emptyStatement" (formula "29") (term "1"))
                     (rule "emptyStatement" (formula "29") (term "1"))
                     (rule "tryEmpty" (formula "29") (term "1"))
                     (rule "blockEmptyLabel" (formula "29") (term "1"))
                     (rule "blockEmpty" (formula "29") (term "1"))
                     (rule "methodCallEmpty" (formula "29") (term "1"))
                     (rule "emptyModality" (formula "29") (term "1"))
                     (rule "andRight" (formula "29"))
                     (branch "Case 1"
                        (rule "andRight" (formula "29"))
                        (branch
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "closeTrue" (formula "29"))
                        )
                        (branch "Case 2"
                           (rule "impRight" (formula "29"))
                            (builtin "One Step Simplification" (formula "30") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "cut" (inst "cutFormula=leq(add(i_0, Z(2(#))),
    count<<origin(\"User_Interaction @ node 15055 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 15055 (cut)\",\"[]\")>>") (userinteraction))
                           (branch "CUT: i_0 + 2 <= count TRUE"
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0") (userinteraction))
                              (rule "polySimp_pullOutFactor0" (formula "31") (term "0") (userinteraction))
                              (rule "mul_comm" (formula "31") (term "0") (userinteraction))
                              (rule "mul_comm" (formula "31") (term "1") (userinteraction))
                              (rule "inEqSimp_homoInEq0" (formula "31") (userinteraction))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0") (userinteraction))
                              (rule "polySimp_mulAssoc" (formula "31") (term "1,0") (userinteraction))
                              (rule "multiply_inEq0" (formula "1") (inst "multFac=step<<origin(\"User_Interaction @ node 42245 (multiply_inEq0)\",\"[]\")>>") (userinteraction))
                              (rule "polySimp_homoEq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,2"))
                              (rule "polySimp_mulComm1" (formula "32") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "1,0,1"))
                              (rule "polySimp_addComm0" (formula "1") (term "1,0,2"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "31") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,2"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0"))
                              (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "23"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "22"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "31"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "27") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "2") (term "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,2"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,2"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,2"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,2"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,2"))
                              (rule "polySimp_sepNegMonomial" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "applyEq" (formula "2") (term "0,1,0,2") (ifseqformula "10"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,2"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,2"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0,2"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,0,2"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,2"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,1,0,2"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,0,1,0,2"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,2"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,2"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,0,2"))
                              (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,2"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,2"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "10"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                              (rule "applyEq" (formula "2") (term "0,1,0,1") (ifseqformula "10"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                              (rule "mul_literals" (formula "24") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                              (rule "mul_literals" (formula "23") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "mul_literals" (formula "11") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1"))
                              (rule "polySimp_rightDist" (formula "27") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,2"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,2"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,2"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,1,2"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,1,2"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,1,2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,1,1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (term "0") (ifseqformula "24"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: i_0 + 2 <= count FALSE"
                              (rule "polySimp_homoEq" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "27") (term "0"))
                              (rule "close" (formula "27") (ifseqformula "1"))
                           )
                        )
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "closeTrue" (formula "29"))
                     )
                  )
                  (branch "Precondition"
                     (rule "andRight" (formula "28"))
                     (branch
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "15")))
                        (rule "closeTrue" (formula "28"))
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "wellFormedAnon" (formula "28"))
                        (rule "wellFormedStorePrimitiveArray" (formula "28") (term "0"))
                        (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "12")))
                        (rule "closeTrue" (formula "28"))
                     )
                  )
                  (branch "Usage"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "25"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "translateJavaAddInt" (formula "25") (term "0,0,1,0"))
                     (rule "translateJavaMulInt" (formula "25") (term "0,1,1,0"))
                     (rule "translateJavaMulInt" (formula "25") (term "1,1,1,0"))
                     (rule "translateJavaAddInt" (formula "25") (term "0,0,1,1,0"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "26") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                     (rule "elim_double_block_2" (formula "30") (term "1"))
                     (rule "ifUnfold" (formula "30") (term "1") (inst "#boolv=x_8"))
                     (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_9"))
                     (rule "inequality_comparison_simple" (formula "30") (term "1"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "replace_known_left" (formula "30") (term "0,0,1,0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "ifSplit" (formula "30"))
                     (branch "if x_9 true"
                         (builtin "One Step Simplification" (formula "31"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_9 false"
                         (builtin "One Step Simplification" (formula "31"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "blockEmpty" (formula "30") (term "1"))
                        (rule "ifUnfold" (formula "30") (term "1") (inst "#boolv=x_8"))
                        (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_10"))
                        (rule "methodCallWithAssignmentUnfoldArguments" (formula "30") (term "1"))
                        (rule "variableDeclarationAssign" (formula "30") (term "1"))
                        (rule "variableDeclaration" (formula "30") (term "1") (newnames "var"))
                        (rule "eval_order_array_access5" (formula "30") (term "1") (inst "#ar1=x_arr") (inst "#v1=x_11"))
                        (rule "variableDeclarationAssign" (formula "30") (term "1"))
                        (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_arr_1"))
                        (rule "assignment" (formula "30") (term "1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "variableDeclarationAssign" (formula "30") (term "1"))
                        (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_11"))
                        (rule "assignmentSubtractionInt" (formula "30") (term "1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "translateJavaSubInt" (formula "30") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "30") (term "0,1,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "30") (term "0,1,0"))
                        (rule "assignment_array2" (formula "30"))
                        (branch "Normal Execution (x_arr_1 != null)"
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "pullOutSelect" (formula "30") (term "0,1,0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "variableDeclarationAssign" (formula "31") (term "1"))
                           (rule "variableDeclaration" (formula "31") (term "1") (newnames "var_1"))
                           (rule "assignment_array2" (formula "31"))
                           (branch "Normal Execution (_values != null)"
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0,1,0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "32") (term "1") (inst "#v0=x_11"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_12"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "a"))
                              (rule "assignment" (formula "32") (term "1"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "b"))
                              (rule "assignment" (formula "32") (term "1"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_cmp,savedHeapBefore_cmp"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "returnUnfold" (formula "32") (term "1") (inst "#v0=x_13"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_13"))
                              (rule "less_than_comparison_simple" (formula "32") (term "1"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "methodCallReturn" (formula "32") (term "1"))
                              (rule "assignment" (formula "32") (term "1"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "methodCallEmpty" (formula "32") (term "1"))
                              (rule "blockEmpty" (formula "32") (term "1"))
                              (rule "assignment" (formula "32") (term "1"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "blockEmpty" (formula "32") (term "1"))
                              (rule "ifSplit" (formula "32"))
                              (branch "if x_10 true"
                                  (builtin "One Step Simplification" (formula "33"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "eval_order_array_access3" (formula "33") (term "1") (inst "#v0=x_arr") (inst "#v2=x_8") (inst "#v1=x_9"))
                                 (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                 (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_arr_2"))
                                 (rule "assignment" (formula "33") (term "1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                 (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_14"))
                                 (rule "assignment" (formula "33") (term "1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                 (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_15"))
                                 (rule "assignment_array2" (formula "33"))
                                 (branch "Normal Execution (_values != null)"
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "replaceKnownSelect_taclet0012010012_1" (formula "33") (term "0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "33") (term "0,1,0"))
                                    (rule "assignment_to_primitive_array_component" (formula "33"))
                                    (branch "Normal Execution (x_arr_2 != null)"
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "compound_assignment_op_plus" (formula "33") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "33") (term "1") (inst "#v=x_8"))
                                       (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_16"))
                                       (rule "remove_parentheses_right" (formula "33") (term "1"))
                                       (rule "compound_addition_2" (formula "33") (term "1") (inst "#v0=x_17") (inst "#v1=x_18"))
                                       (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_17"))
                                       (rule "assignment" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_18"))
                                       (rule "remove_parentheses_right" (formula "33") (term "1"))
                                       (rule "assignment" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "assignmentAdditionInt" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "translateJavaAddInt" (formula "33") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "33") (term "1"))
                                       (rule "assignment" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "blockEmpty" (formula "33") (term "1"))
                                       (rule "compound_assignment_op_plus" (formula "33") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "33") (term "1") (inst "#v=x_8"))
                                       (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_19"))
                                       (rule "remove_parentheses_right" (formula "33") (term "1"))
                                       (rule "compound_addition_2" (formula "33") (term "1") (inst "#v0=x_20") (inst "#v1=x_21"))
                                       (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_20"))
                                       (rule "assignment" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_21"))
                                       (rule "remove_parentheses_right" (formula "33") (term "1"))
                                       (rule "assignment" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "assignmentAdditionInt" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "translateJavaAddInt" (formula "33") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "33") (term "1"))
                                       (rule "assignment" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "blockEmpty" (formula "33") (term "1"))
                                       (rule "preincrement" (formula "33") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "33") (term "1") (inst "#v=x_8"))
                                       (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_22"))
                                       (rule "remove_parentheses_right" (formula "33") (term "1"))
                                       (rule "assignmentAdditionInt" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "translateJavaAddInt" (formula "33") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "33") (term "1"))
                                       (rule "assignment" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "blockEmpty" (formula "33") (term "1"))
                                       (rule "lsContinue" (formula "33") (term "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "andRight" (formula "33"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "33"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "33"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "33"))
                                                (branch
                                                   (rule "andRight" (formula "33"))
                                                   (branch
                                                      (rule "andRight" (formula "33"))
                                                      (branch
                                                         (rule "andRight" (formula "33"))
                                                         (branch
                                                            (rule "andRight" (formula "33"))
                                                            (branch
                                                               (rule "andRight" (formula "33"))
                                                               (branch
                                                                  (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                                  (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "33"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "24"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "25"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                  (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                  (rule "mul_literals" (formula "24") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "1") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch
                                                                  (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                                  (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                  (rule "inEqSimp_leqRight" (formula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "25"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "24"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                  (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                  (rule "mul_literals" (formula "24") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
                                                                  (rule "andLeft" (formula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                  (rule "add_literals" (formula "5") (term "0"))
                                                                  (rule "leq_literals" (formula "5"))
                                                                  (rule "closeFalse" (formula "5"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "andRight" (formula "33"))
                                                               (branch
                                                                  (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                                  (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "33"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "24"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "25"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                  (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                  (rule "mul_literals" (formula "24") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                                                  (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "1"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "closeFalse" (formula "7"))
                                                               )
                                                               (branch
                                                                  (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                                  (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                  (rule "inEqSimp_leqRight" (formula "33"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "25"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "24"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                  (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                  (rule "mul_literals" (formula "24") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0"))
                                                                  (rule "add_literals" (formula "9") (term "0"))
                                                                  (rule "leq_literals" (formula "9"))
                                                                  (rule "closeFalse" (formula "9"))
                                                               )
                                                            )
                                                         )
                                                         (branch
                                                            (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                            (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                            (rule "inEqSimp_geqRight" (formula "33"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "25"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "24"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "11"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                            (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                            (rule "mul_literals" (formula "12") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                            (rule "mul_literals" (formula "25") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                            (rule "mul_literals" (formula "24") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                            (rule "mul_literals" (formula "5") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0"))
                                                            (rule "qeq_literals" (formula "7") (term "0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "6"))
                                                            (rule "leq_literals" (formula "24") (term "0"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "true_left" (formula "24"))
                                                            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "24") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "10"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_literals" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "polySimp_homoEq" (formula "33"))
                                                         (rule "polySimp_homoEq" (formula "10"))
                                                         (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                         (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor3b" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                                         (rule "close" (formula "33") (ifseqformula "10"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "impRight" (formula "33"))
                                                      (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_homoEq" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "26"))
                                                      (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "25"))
                                                      (rule "mul_literals" (formula "25") (term "1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                                                      (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "31") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "4") (term "0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "applyEq" (formula "31") (term "0,1,0,1") (ifseqformula "12"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "31") (term "0,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0,1"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                      (rule "mul_literals" (formula "26") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                      (rule "mul_literals" (formula "25") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "0,0"))
                                                      (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "0,0,1"))
                                                      (rule "mul_literals" (formula "31") (term "0,0,0,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "11"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "28"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "26"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "30"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_literals" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "33") (inst "sk=j_0") (userinteraction))
                                                   (rule "instAll" (formula "33") (term "0,0,0") (ifseqformula "12") (userinteraction))
                                                   (rule "impLeft" (formula "1") (userinteraction))
                                                   (branch "Case 1"
                                                      (rule "impRight" (formula "34") (userinteraction))
                                                      (rule "eqTermCut" (formula "31") (term "1,0") (inst "s=j_0") (userinteraction))
                                                      (branch "Assume target_offset_0 = j_0"
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "polySimp_homoEq" (formula "5") (term "0,0"))
                                                         (rule "times_zero_2" (formula "5") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_homoEq" (formula "13"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "35"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "30"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "29"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "33") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24"))
                                                         (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "35") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                                         (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "35") (term "0,0,1"))
                                                         (rule "applyEqRigid" (formula "7") (term "1,0,0,0,0") (ifseqformula "2"))
                                                         (rule "applyEqRigid" (formula "6") (term "1,0,2,2,0") (ifseqformula "2"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,1,0,1,0,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEqRigid" (formula "6") (term "1,0,2,1,0") (ifseqformula "2"))
                                                         (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "0"))
                                                         (rule "qeq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "applyEq" (formula "4") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "37") (term "0,2,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "15") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "37") (term "0,2,0,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "14") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "applyEq" (formula "33") (term "0,1,0,1") (ifseqformula "12"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "33") (term "0,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0,1"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                         (rule "polySimp_sepPosMonomial" (formula "4") (term "0,0"))
                                                         (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                         (rule "mul_literals" (formula "28") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                         (rule "mul_literals" (formula "6") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                         (rule "mul_literals" (formula "27") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                         (rule "mul_literals" (formula "13") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,0,1,1"))
                                                         (rule "mul_literals" (formula "33") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "qeq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "pullOutSelect" (formula "35") (term "1,1,0") (inst "selectSK=arr_3"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "11"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                         (rule "mul_literals" (formula "9") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                                         (rule "mul_literals" (formula "6") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                         (rule "add_literals" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "mul_literals" (formula "6") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "29"))
                                                         (rule "mul_literals" (formula "26") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                         (rule "mul_literals" (formula "26") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                         (rule "nnf_ex2all" (formula "35"))
                                                         (rule "nnf_imp2or" (formula "16") (term "0"))
                                                         (rule "nnf_imp2or" (formula "15") (term "0"))
                                                         (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "24") (term "0"))
                                                         (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "25"))
                                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "36")) (ifInst ""  (formula "18")))
                                                         (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "25") (term "0") (inst "i=i_1"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "translateJavaSubInt" (formula "25") (term "1,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "1,1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,2,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0"))
                                                         (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                         (rule "nnf_imp2or" (formula "25") (term "0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "24") (term "0") (inst "i=i_1") (inst "j=j"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "24") (term "0"))
                                                         (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
                                                         (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                                                         (rule "commute_or" (formula "16") (term "0,0"))
                                                         (rule "commute_or" (formula "15") (term "0,0"))
                                                         (rule "commute_and" (formula "15") (term "0,0,1,0"))
                                                         (rule "ifthenelse_split" (formula "4") (term "0"))
                                                         (branch "j_0 = 1 TRUE"
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "applyEq" (formula "9") (term "0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0"))
                                                            (rule "applyEqRigid" (formula "15") (term "1,1,1,0,0") (ifseqformula "4"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                            (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "1") (term "0,2,0,0,0,1,0") (ifseqformula "4"))
                                                            (rule "applyEqRigid" (formula "5") (term "1,0,2,1,0") (ifseqformula "4"))
                                                            (rule "add_literals" (formula "5") (term "0,2,1,0"))
                                                            (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_commuteLeq" (formula "8"))
                                                            (rule "applyEq" (formula "2") (term "1") (ifseqformula "4"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_or_tautInEq0" (formula "13") (term "0,0"))
                                                            (rule "add_zero_right" (formula "13") (term "1,1,0,0"))
                                                            (rule "qeq_literals" (formula "13") (term "1,0,0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "inEqSimp_or_antiSymm0" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,0,1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                                            (rule "commute_or" (formula "21") (term "0,0,1,0"))
                                                            (rule "cut_direct" (formula "30") (term "0"))
                                                            (branch "CUT: i_0 <= -2 + count TRUE"
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "30"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "5") (term "0,0"))
                                                               (rule "qeq_literals" (formula "5") (term "0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "25"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "29"))
                                                               (rule "mul_literals" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                                               (rule "leq_literals" (formula "5") (term "0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "30"))
                                                               (rule "mul_literals" (formula "24") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "24"))
                                                               (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "10") (term "0,0"))
                                                               (rule "qeq_literals" (formula "10") (term "0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "23"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                               (rule "mul_literals" (formula "8") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0"))
                                                               (rule "qeq_literals" (formula "7") (term "0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "ex_pull_out3" (formula "10") (term "0"))
                                                               (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                                               (rule "commute_or" (formula "10") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                               (rule "commute_or" (formula "10") (term "1,0,0,0"))
                                                               (rule "all_pull_out3" (formula "19") (term "0"))
                                                               (rule "shift_paren_or" (formula "19") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                               (rule "commute_and_2" (formula "10") (term "0,0"))
                                                               (rule "allLeft" (formula "20") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "24"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "20") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "allLeft" (formula "1") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "25"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_4"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "closeTrue" (formula "34"))
                                                            )
                                                            (branch "CUT: i_0 <= -2 + count FALSE"
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "inEqSimp_leqRight" (formula "30"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "6"))
                                                               (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "0"))
                                                               (rule "qeq_literals" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0"))
                                                               (rule "polySimp_homoEq" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "10") (term "0,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                               (rule "applyEq" (formula "26") (term "0") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq0" (formula "26"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0,0"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                               (rule "ex_pull_out3" (formula "11") (term "0"))
                                                               (rule "cnf_rightDist" (formula "11") (term "0,0"))
                                                               (rule "commute_or" (formula "11") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                               (rule "commute_or" (formula "11") (term "1,0,0,0"))
                                                               (rule "all_pull_out3" (formula "20") (term "0"))
                                                               (rule "shift_paren_or" (formula "20") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                               (rule "commute_and_2" (formula "11") (term "0,0"))
                                                               (rule "allLeft" (formula "2") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "9"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (term "0") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_4"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "closeTrue" (formula "29"))
                                                            )
                                                         )
                                                         (branch "j_0 = 1 FALSE"
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "33"))
                                                            (rule "add_literals" (formula "8") (term "1"))
                                                            (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "8"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "8"))
                                                            (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "false_right" (formula "33"))
                                                            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                            (rule "mul_literals" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "mul_literals" (formula "8") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                                            (rule "leq_literals" (formula "7") (term "0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "7") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                            (rule "add_literals" (formula "7") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                            (rule "mul_literals" (formula "7") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                                            (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                                            (rule "cut_direct" (formula "33") (term "0"))
                                                            (branch "CUT: i_0 <= -2 + count TRUE"
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "33"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "5") (term "0,0"))
                                                               (rule "qeq_literals" (formula "5") (term "0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "28"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "33") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "32"))
                                                               (rule "mul_literals" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                                               (rule "leq_literals" (formula "5") (term "0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "33"))
                                                               (rule "mul_literals" (formula "27") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "27"))
                                                               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "12") (term "0,0"))
                                                               (rule "qeq_literals" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                               (rule "mul_literals" (formula "10") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "9") (term "0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "ex_pull_out3" (formula "12") (term "0"))
                                                               (rule "cnf_rightDist" (formula "12") (term "0,0"))
                                                               (rule "commute_or" (formula "12") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                               (rule "commute_or" (formula "12") (term "1,0,0,0"))
                                                               (rule "all_pull_out3" (formula "22") (term "0"))
                                                               (rule "shift_paren_or" (formula "22") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                               (rule "ifthenelse_split" (formula "4") (term "0"))
                                                               (branch "j_0 <= count TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                  (rule "mul_literals" (formula "7") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
                                                                  (rule "leq_literals" (formula "7") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "commute_and_2" (formula "12") (term "0,0"))
                                                                  (rule "allLeft" (formula "23") (inst "t=offset_0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "27"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "allLeft" (formula "1") (inst "t=offset_0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "28"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_4"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "closeTrue" (formula "37"))
                                                               )
                                                               (branch "j_0 <= count FALSE"
                                                                  (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "inEqSimp_leqRight" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "33"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                  (rule "add_literals" (formula "1") (term "0"))
                                                                  (rule "leq_literals" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch "CUT: i_0 <= -2 + count FALSE"
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "inEqSimp_leqRight" (formula "33"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                               (rule "add_literals" (formula "9") (term "0,0"))
                                                               (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "0"))
                                                               (rule "polySimp_homoEq" (formula "14"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0"))
                                                               (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "14") (term "0,0"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "6"))
                                                               (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "0"))
                                                               (rule "qeq_literals" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "applyEq" (formula "9") (term "1") (ifseqformula "1"))
                                                               (rule "polySimp_sepNegMonomial" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                               (rule "applyEq" (formula "29") (term "0") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq0" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0,0"))
                                                               (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "5") (term "0,0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "ex_pull_out3" (formula "12") (term "0"))
                                                               (rule "cnf_rightDist" (formula "12") (term "0,0"))
                                                               (rule "commute_or" (formula "12") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                               (rule "commute_or" (formula "12") (term "1,0,0,0"))
                                                               (rule "all_pull_out3" (formula "22") (term "0"))
                                                               (rule "shift_paren_or" (formula "22") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                               (rule "commute_and_2" (formula "12") (term "0,0"))
                                                               (rule "allLeft" (formula "2") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_4"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "closeTrue" (formula "31"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Assume target_offset_0 != j_0"
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "polySimp_homoEq" (formula "12"))
                                                         (rule "polySimp_homoEq" (formula "4") (term "0,0"))
                                                         (rule "times_zero_2" (formula "4") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "35"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "28"))
                                                         (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "29"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24"))
                                                         (rule "inEqSimp_commuteLeq" (formula "22"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                                                         (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "5") (term "0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "13"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                         (rule "applyEq" (formula "34") (term "0,1,0,1") (ifseqformula "13"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                         (rule "mul_literals" (formula "28") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                         (rule "mul_literals" (formula "14") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                         (rule "mul_literals" (formula "29") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,0,1,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "35"))
                                                         (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0"))
                                                         (rule "qeq_literals" (formula "35") (term "0"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "false_right" (formula "35"))
                                                         (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0"))
                                                         (rule "qeq_literals" (formula "9") (term "0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "impRight" (formula "35"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "exLeft" (formula "3") (inst "sk=k_0"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "polySimp_homoEq" (formula "7") (term "0,0"))
                                                      (rule "times_zero_2" (formula "7") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_homoEq" (formula "15"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "31"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "30"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24"))
                                                      (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "36") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "36") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
                                                      (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "36") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "7") (term "0,0"))
                                                      (rule "mul_literals" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "15"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                      (rule "applyEq" (formula "36") (term "0,1,0,1") (ifseqformula "15"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "36") (term "0,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "36") (term "0,0,1"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                      (rule "mul_literals" (formula "16") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                      (rule "mul_literals" (formula "31") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                      (rule "mul_literals" (formula "30") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,0,1,1"))
                                                      (rule "mul_literals" (formula "36") (term "0,0,0,1,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0"))
                                                      (rule "qeq_literals" (formula "11") (term "0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "pullOutSelect" (formula "39") (term "1,1,0") (inst "selectSK=arr_3"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=arr_4"))
                                                      (rule "simplifySelectOfAnon" (formula "6"))
                                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "40")))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "7"))
                                                      (rule "simplifySelectOfAnon" (formula "7"))
                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "39")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "6") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "6") (term "0,0,0,0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "7") (term "0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "7") (term "0,1,0,0") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "dismissNonSelectedField" (formula "6") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "simplifySelectOfStore" (formula "6"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "castDel" (formula "6") (term "1,0"))
                                                      (rule "eqSymm" (formula "6") (term "0,0,0"))
                                                      (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                      (rule "mul_literals" (formula "12") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "mul_literals" (formula "12") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                      (rule "mul_literals" (formula "14") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "14"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0"))
                                                      (rule "qeq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfStore" (formula "6"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "castDel" (formula "6") (term "1,0"))
                                                      (rule "eqSymm" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "35"))
                                                      (rule "mul_literals" (formula "32") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                      (rule "mul_literals" (formula "32") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "15"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "nnf_imp2or" (formula "22") (term "0"))
                                                      (rule "nnf_ex2all" (formula "42"))
                                                      (rule "nnf_imp2or" (formula "22") (term "0"))
                                                      (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "31") (term "0"))
                                                      (rule "replace_known_left" (formula "31") (term "1,0") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "43")) (ifInst ""  (formula "32")))
                                                      (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "32") (term "0") (inst "i=i_1"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "translateJavaAddInt" (formula "32") (term "0,2,1,1,0"))
                                                      (rule "translateJavaSubInt" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,2,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                                      (rule "nnf_imp2or" (formula "32") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "31") (term "0") (inst "i=i_1") (inst "j=j"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                                      (rule "nnf_imp2or" (formula "31") (term "0"))
                                                      (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                                      (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                                      (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                      (rule "arrayLengthIsAShort" (formula "34") (term "0"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "ifthenelse_split" (formula "11") (term "0"))
                                                      (branch "target_offset_0 = 1 TRUE"
                                                         (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                                         (rule "hideAuxiliaryEq" (formula "12"))
                                                         (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "11"))
                                                         (rule "eqSymm" (formula "2") (term "0,0"))
                                                         (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "11"))
                                                         (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "11"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16"))
                                                         (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "11"))
                                                         (rule "applyEqRigid" (formula "21") (term "1,1,0,0,0") (ifseqformula "11"))
                                                         (rule "add_literals" (formula "21") (term "1,0,0,0"))
                                                         (rule "applyEqRigid" (formula "12") (term "1,0,2,1,0") (ifseqformula "11"))
                                                         (rule "add_literals" (formula "12") (term "0,2,1,0"))
                                                         (rule "applyEqRigid" (formula "1") (term "0,2,0,0,0,1,0") (ifseqformula "11"))
                                                         (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "11"))
                                                         (rule "inEqSimp_commuteGeq" (formula "5"))
                                                         (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "12"))
                                                         (rule "hideAuxiliaryEq" (formula "12"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                         (rule "mul_literals" (formula "10") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                         (rule "inEqSimp_or_tautInEq2" (formula "20") (term "0,0"))
                                                         (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                                         (rule "qeq_literals" (formula "20") (term "1,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                                                         (rule "arrayLengthIsAShort" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "commute_and" (formula "19") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "19") (term "0,0"))
                                                         (rule "inEqSimp_or_antiSymm0" (formula "19") (term "0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "add_literals" (formula "19") (term "1,0,0,0"))
                                                         (rule "cut_direct" (formula "37") (term "0"))
                                                         (branch "CUT: i_0 <= -2 + count TRUE"
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "37"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0"))
                                                            (rule "qeq_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "32"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "36"))
                                                            (rule "mul_literals" (formula "13") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                            (rule "add_literals" (formula "13") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                            (rule "mul_literals" (formula "13") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "37"))
                                                            (rule "mul_literals" (formula "31") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "31"))
                                                            (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                            (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "17") (term "0,0"))
                                                            (rule "qeq_literals" (formula "17") (term "0"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "30"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                            (rule "mul_literals" (formula "15") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0"))
                                                            (rule "qeq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "commute_or" (formula "26") (term "0,0,1,0"))
                                                            (rule "ifthenelse_split" (formula "8") (term "0"))
                                                            (branch "j_0 = 0 TRUE"
                                                               (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "8"))
                                                               (rule "inEqSimp_commuteLeq" (formula "4"))
                                                               (rule "applyEqRigid" (formula "9") (term "0,0,0,0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                                               (rule "leq_literals" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                                               (rule "equal_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,0,1,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "applyEq" (formula "1") (term "3,0,0,0,0,0,1,0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "14") (term "3,0,0,0,1,0,1,0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "14") (term "3,0,0,1,1,0,1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "mul_literals" (formula "7") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "all_pull_out3" (formula "22") (term "0"))
                                                               (rule "shift_paren_or" (formula "22") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                               (rule "ex_pull_out3" (formula "13") (term "0"))
                                                               (rule "cnf_rightDist" (formula "13") (term "0,0"))
                                                               (rule "commute_or" (formula "13") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                               (rule "commute_or" (formula "13") (term "1,0,0,0"))
                                                               (rule "commute_and_2" (formula "13") (term "0,0"))
                                                               (rule "allLeft" (formula "23") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "27"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "allLeft" (formula "1") (inst "t=k_0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_6"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "37"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "j_0 = 0 FALSE"
                                                               (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "38"))
                                                               (rule "add_zero_right" (formula "3") (term "1"))
                                                               (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "38") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "38") (term "0,0"))
                                                               (rule "leq_literals" (formula "38") (term "0"))
                                                                (builtin "One Step Simplification" (formula "38"))
                                                               (rule "false_right" (formula "38"))
                                                               (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "5"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,0,1,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                                               (rule "leq_literals" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_commuteLeq" (formula "3"))
                                                               (rule "applyEq" (formula "5") (term "0,2,2,0") (ifseqformula "2"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,2,1,0") (ifseqformula "2"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                                               (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0"))
                                                               (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "5") (term "0,0") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "ex_pull_out3" (formula "13") (term "0"))
                                                               (rule "cnf_rightDist" (formula "13") (term "0,0"))
                                                               (rule "commute_or" (formula "13") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                               (rule "commute_or" (formula "13") (term "1,0,0,0"))
                                                               (rule "all_pull_out3" (formula "22") (term "0"))
                                                               (rule "shift_paren_or" (formula "22") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                               (rule "commute_and_2" (formula "13") (term "0,0"))
                                                               (rule "allLeft" (formula "23") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "27"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "allLeft" (formula "1") (inst "t=add(add(Z(neglit(1(#))), begin), step)"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "29"))
                                                               (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "32"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_6"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "37"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "eqSymm" (formula "36"))
                                                               (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "6"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                               (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0"))
                                                               (rule "qeq_literals" (formula "36") (term "0"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "false_right" (formula "36"))
                                                               (rule "allLeft" (formula "1") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "28"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_7"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "closeTrue" (formula "37"))
                                                            )
                                                         )
                                                         (branch "CUT: i_0 <= -2 + count FALSE"
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "true_left" (formula "37"))
                                                            (rule "inEqSimp_leqRight" (formula "37"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0"))
                                                            (rule "polySimp_homoEq" (formula "19"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                                                            (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "19") (term "0,0"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "applyEq" (formula "5") (term "1") (ifseqformula "1"))
                                                            (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "13"))
                                                            (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                            (rule "add_literals" (formula "13") (term "1,0"))
                                                            (rule "times_zero_1" (formula "13") (term "0"))
                                                            (rule "qeq_literals" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "add_literals" (formula "14") (term "0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "17"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                            (rule "applyEq" (formula "33") (term "0") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq0" (formula "33"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "4") (term "0,0"))
                                                            (rule "add_zero_left" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "4") (term "0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "commute_or" (formula "27") (term "0,0,1,0"))
                                                            (rule "ifthenelse_split" (formula "9") (term "0"))
                                                            (branch "j_0 = 0 TRUE"
                                                               (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                                               (rule "hideAuxiliaryEq" (formula "10"))
                                                               (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "10") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "9"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5"))
                                                               (rule "mul_literals" (formula "5") (term "1,0"))
                                                               (rule "add_zero_right" (formula "5") (term "0"))
                                                               (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "9"))
                                                               (rule "leq_literals" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                                               (rule "equal_literals" (formula "3") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "2") (term "1,0,1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "applyEq" (formula "2") (term "3,0,0,0,0,0,1,0") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "15") (term "3,0,0,0,1,0,1,0") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "applyEq" (formula "15") (term "3,0,0,1,1,0,1,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                               (rule "mul_literals" (formula "8") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "all_pull_out3" (formula "23") (term "0"))
                                                               (rule "shift_paren_or" (formula "23") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                               (rule "ex_pull_out3" (formula "14") (term "0"))
                                                               (rule "cnf_rightDist" (formula "14") (term "0,0"))
                                                               (rule "commute_or" (formula "14") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                               (rule "commute_or" (formula "14") (term "1,0,0,0"))
                                                               (rule "commute_and_2" (formula "14") (term "0,0"))
                                                               (rule "allLeft" (formula "2") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_6"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "32"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "eqSymm" (formula "31"))
                                                               (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "7"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0"))
                                                               (rule "leq_literals" (formula "31") (term "0"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "false_right" (formula "31"))
                                                               (rule "allLeft" (formula "2") (inst "t=k_0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_7"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "32"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "j_0 = 0 FALSE"
                                                               (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "34"))
                                                               (rule "add_zero_right" (formula "4") (term "1"))
                                                               (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "4"))
                                                               (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0"))
                                                               (rule "leq_literals" (formula "34") (term "0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "false_right" (formula "34"))
                                                               (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "6"))
                                                               (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "2") (term "1,0,1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                               (rule "leq_literals" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "3"))
                                                               (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1"))
                                                               (rule "ex_pull_out3" (formula "14") (term "0"))
                                                               (rule "cnf_rightDist" (formula "14") (term "0,0"))
                                                               (rule "commute_or" (formula "14") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                               (rule "commute_or" (formula "14") (term "1,0,0,0"))
                                                               (rule "all_pull_out3" (formula "23") (term "0"))
                                                               (rule "shift_paren_or" (formula "23") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                               (rule "commute_and_2" (formula "14") (term "0,0"))
                                                               (rule "allLeft" (formula "2") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_6"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "closeTrue" (formula "32"))
                                                            )
                                                         )
                                                      )
                                                      (branch "target_offset_0 = 1 FALSE"
                                                         (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                                         (rule "hideAuxiliaryEq" (formula "11"))
                                                         (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "40"))
                                                         (rule "add_literals" (formula "15") (term "1"))
                                                         (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "15"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "15"))
                                                         (rule "mul_literals" (formula "40") (term "1,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0"))
                                                         (rule "leq_literals" (formula "40") (term "0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "false_right" (formula "40"))
                                                         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                         (rule "mul_literals" (formula "15") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                         (rule "mul_literals" (formula "15") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                                         (rule "leq_literals" (formula "14") (term "0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "12"))
                                                         (rule "mul_literals" (formula "14") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                         (rule "add_literals" (formula "14") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                         (rule "mul_literals" (formula "14") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "commute_or" (formula "22") (term "0,0"))
                                                         (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                                         (rule "arrayLengthIsAShort" (formula "30") (term "0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "commute_or" (formula "21") (term "0,0"))
                                                         (rule "commute_and" (formula "21") (term "0,0,1,0"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "target_offset_0 = j_0 TRUE"
                                                            (rule "applyEqReverse" (formula "1") (term "1,0,1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "applyEq" (formula "11") (term "1,0,2,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "11") (term "1,0,2,2,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5"))
                                                            (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "1,0"))
                                                            (rule "times_zero_1" (formula "5") (term "0"))
                                                            (rule "leq_literals" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "applyEqRigid" (formula "1") (term "0,2,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "10") (term "0,0,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "14"))
                                                            (rule "mul_literals" (formula "7") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "7") (term "0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                                            (rule "mul_literals" (formula "12") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1"))
                                                            (rule "cut_direct" (formula "36") (term "0"))
                                                            (branch "CUT: i_0 <= -2 + count TRUE"
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "36"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "35"))
                                                               (rule "mul_literals" (formula "10") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "mul_literals" (formula "10") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "9") (term "0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "31"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "36"))
                                                               (rule "mul_literals" (formula "30") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "30"))
                                                               (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                               (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0"))
                                                               (rule "qeq_literals" (formula "15") (term "0"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "29"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                               (rule "mul_literals" (formula "13") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "qeq_literals" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                                               (rule "ex_pull_out3" (formula "15") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or" (formula "15") (term "1,0,0,0"))
                                                               (rule "ifthenelse_split" (formula "8") (term "0"))
                                                               (branch "j_0 <= count TRUE"
                                                                  (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "9"))
                                                                  (rule "hideAuxiliaryEq" (formula "9"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                  (branch "j_0 <= -1 + count TRUE"
                                                                     (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "9") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "9") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
                                                                     (rule "mul_literals" (formula "11") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                     (rule "add_literals" (formula "11") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                     (rule "mul_literals" (formula "11") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                                                     (rule "leq_literals" (formula "11") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "true_left" (formula "11"))
                                                                     (rule "all_pull_out3" (formula "25") (term "0"))
                                                                     (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                                     (rule "commute_and_2" (formula "15") (term "0,0"))
                                                                     (rule "allLeft" (formula "26") (inst "t=offset_0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "30"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "13"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "26") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "allLeft" (formula "1") (inst "t=offset_0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "31"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "14"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_6"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "closeTrue" (formula "40"))
                                                                  )
                                                                  (branch "j_0 <= -1 + count FALSE"
                                                                     (rule "eqSymm" (formula "6"))
                                                                     (rule "inEqSimp_leqRight" (formula "38"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "9"))
                                                                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                                                     (rule "add_literals" (formula "10") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "10") (term "0"))
                                                                     (rule "qeq_literals" (formula "10"))
                                                                     (rule "true_left" (formula "10"))
                                                                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "5"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "0"))
                                                                     (rule "leq_literals" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "2") (term "0,2,0,0,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "15") (term "1,1,0,1,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "15") (term "1,1,0,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "8") (term "1,0,2,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "15") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "4"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0"))
                                                                     (rule "leq_literals" (formula "35"))
                                                                     (rule "closeFalse" (formula "35"))
                                                                  )
                                                               )
                                                               (branch "j_0 <= count FALSE"
                                                                  (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "inEqSimp_leqRight" (formula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "eqSymm" (formula "7"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "36"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                  (rule "add_literals" (formula "1") (term "0"))
                                                                  (rule "leq_literals" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch "CUT: i_0 <= -2 + count FALSE"
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "inEqSimp_leqRight" (formula "36"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "10"))
                                                               (rule "applyEq" (formula "5") (term "1") (ifseqformula "1"))
                                                               (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "0"))
                                                               (rule "polySimp_homoEq" (formula "17"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "17") (term "0,0"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "10"))
                                                               (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "1,0"))
                                                               (rule "times_zero_1" (formula "10") (term "0"))
                                                               (rule "qeq_literals" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "polySimp_sepNegMonomial" (formula "15"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                               (rule "applyEq" (formula "32") (term "0") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "32") (term "0,0,0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "9") (term "0,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "inEqSimp_homoInEq1" (formula "8"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                               (rule "mul_literals" (formula "8") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "4"))
                                                               (rule "mul_literals" (formula "10") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "mul_literals" (formula "10") (term "1"))
                                                               (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                                               (rule "ex_pull_out3" (formula "15") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "1,0,0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or" (formula "15") (term "1,0,0,0"))
                                                               (rule "all_pull_out3" (formula "25") (term "0"))
                                                               (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                               (rule "commute_and_2" (formula "15") (term "0,0"))
                                                               (rule "allLeft" (formula "16") (inst "t=Z(0(#))"))
                                                               (rule "add_zero_right" (formula "16") (term "0,2,0,1"))
                                                               (rule "leq_literals" (formula "16") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16") (term "0"))
                                                               (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "16") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0"))
                                                               (rule "mul_literals" (formula "16") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "16") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "pullOutSelect" (formula "16") (term "1,1") (inst "selectSK=arr_6"))
                                                               (rule "simplifySelectOfAnon" (formula "16"))
                                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "36")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "leq_literals" (formula "16") (term "0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0"))
                                                               (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "22"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "simplifySelectOfStore" (formula "16"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "castDel" (formula "16") (term "0"))
                                                               (rule "applyEqReverse" (formula "17") (term "1,1") (ifseqformula "16"))
                                                               (rule "hideAuxiliaryEq" (formula "16"))
                                                               (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_7"))
                                                               (rule "simplifySelectOfAnon" (formula "16"))
                                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "36")))
                                                               (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,0,0"))
                                                               (rule "replace_known_left" (formula "16") (term "0,1,0,0") (ifseqformula "22"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_homoInEq1" (formula "17"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                               (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                               (rule "mul_literals" (formula "17") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                                                               (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "9"))
                                                               (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "applyEqReverse" (formula "17") (term "1,1") (ifseqformula "16"))
                                                               (rule "hideAuxiliaryEq" (formula "16"))
                                                               (rule "inEqSimp_homoInEq0" (formula "16"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                               (rule "mul_literals" (formula "16") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                               (rule "allLeft" (formula "2") (inst "t=offset_0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (term "0") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_8"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "closeTrue" (formula "35"))
                                                            )
                                                         )
                                                         (branch "target_offset_0 = j_0 FALSE"
                                                            (rule "applyEqReverse" (formula "1") (term "1,0,1,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "40"))
                                                            (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0"))
                                                            (rule "leq_literals" (formula "40") (term "0"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "false_right" (formula "40"))
                                                            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "15"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                            (rule "mul_literals" (formula "2") (term "0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "cut_direct" (formula "39") (term "0"))
                                                            (branch "CUT: i_0 <= -2 + count TRUE"
                                                                (builtin "One Step Simplification" (formula "40"))
                                                               (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "39"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "34"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "39") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "38"))
                                                               (rule "mul_literals" (formula "12") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "39"))
                                                               (rule "mul_literals" (formula "33") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                               (rule "add_literals" (formula "33") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "33"))
                                                               (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "18") (term "0,0"))
                                                               (rule "qeq_literals" (formula "18") (term "0"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "true_left" (formula "18"))
                                                               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "32"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                               (rule "mul_literals" (formula "16") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                                               (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                               (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "15") (term "0,0"))
                                                               (rule "qeq_literals" (formula "15") (term "0"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "commute_or" (formula "28") (term "0,0,1,0"))
                                                               (rule "ifthenelse_split" (formula "7") (term "0"))
                                                               (branch "j_0 = 0 TRUE"
                                                                  (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "applyEqRigid" (formula "8") (term "0,0,0,0") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "7"))
                                                                  (rule "add_zero_right" (formula "4") (term "1"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "applyEq" (formula "17") (term "3,0,0,0,1,0,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "18") (term "3,0,0,1,1,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "1") (term "3,0,0,0,0,0,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "18") (term "3,0,0,0,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "17") (term "3,0,0,1,1,0,1,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                  (branch "target_offset_0 <= count TRUE"
                                                                     (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                     (rule "mul_literals" (formula "6") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                     (rule "mul_literals" (formula "10") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                                                                     (rule "leq_literals" (formula "10") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "true_left" (formula "10"))
                                                                     (rule "ex_pull_out3" (formula "15") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "15") (term "0,0"))
                                                                     (rule "commute_or" (formula "15") (term "1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                                     (rule "commute_or" (formula "15") (term "1,0,0,0"))
                                                                     (rule "all_pull_out3" (formula "25") (term "0"))
                                                                     (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                                     (rule "allLeft" (formula "26") (inst "t=offset_0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "30"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "13"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "26") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "commute_and_2" (formula "15") (term "0,0"))
                                                                     (rule "allLeft" (formula "16") (inst "t=Z(0(#))"))
                                                                     (rule "add_zero_right" (formula "16") (term "0,2,0,1"))
                                                                     (rule "leq_literals" (formula "16") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "16") (term "0"))
                                                                     (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0"))
                                                                     (rule "mul_literals" (formula "16") (term "1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "10"))
                                                                     (rule "qeq_literals" (formula "16") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "pullOutSelect" (formula "16") (term "1,1") (inst "selectSK=arr_6"))
                                                                     (rule "simplifySelectOfAnon" (formula "16"))
                                                                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "42")))
                                                                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,0,0"))
                                                                     (rule "replace_known_left" (formula "16") (term "0,1,0,0") (ifseqformula "22"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "simplifySelectOfStore" (formula "16"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "castDel" (formula "16") (term "0"))
                                                                     (rule "applyEqReverse" (formula "17") (term "1,1") (ifseqformula "16"))
                                                                     (rule "hideAuxiliaryEq" (formula "16"))
                                                                     (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_7"))
                                                                     (rule "simplifySelectOfAnon" (formula "16"))
                                                                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "42")))
                                                                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,0,0"))
                                                                     (rule "replace_known_left" (formula "16") (term "0,1,0,0") (ifseqformula "22"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                     (rule "mul_literals" (formula "17") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "8"))
                                                                     (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "applyEqReverse" (formula "17") (term "1,1") (ifseqformula "16"))
                                                                     (rule "hideAuxiliaryEq" (formula "16"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                     (rule "mul_literals" (formula "16") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                                     (rule "allLeft" (formula "1") (inst "t=add(add(Z(neglit(1(#))), begin), step)"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                                                     (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                                                                     (rule "times_zero_2" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "36"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "33"))
                                                                     (rule "qeq_literals" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_8"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "41"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "42"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "21"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "eqSymm" (formula "40"))
                                                                     (rule "close" (formula "40") (ifseqformula "5"))
                                                                  )
                                                                  (branch "target_offset_0 <= count FALSE"
                                                                     (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "7"))
                                                                     (rule "hideAuxiliaryEq" (formula "7"))
                                                                     (rule "inEqSimp_leqRight" (formula "37"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                     (rule "mul_literals" (formula "7") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "1"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0"))
                                                                     (rule "add_literals" (formula "36") (term "0"))
                                                                     (rule "leq_literals" (formula "36"))
                                                                     (rule "closeFalse" (formula "36"))
                                                                  )
                                                               )
                                                               (branch "j_0 = 0 FALSE"
                                                                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "40"))
                                                                  (rule "add_zero_right" (formula "2") (term "1"))
                                                                  (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "2"))
                                                                  (rule "mul_literals" (formula "40") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "40") (term "0,0"))
                                                                  (rule "leq_literals" (formula "40") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "false_right" (formula "40"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "ex_pull_out3" (formula "17") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "9") (term "0"))
                                                                  (branch "target_offset_0 <= count TRUE"
                                                                     (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                     (rule "mul_literals" (formula "8") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "9"))
                                                                     (rule "mul_literals" (formula "12") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                     (rule "mul_literals" (formula "12") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                                                     (rule "leq_literals" (formula "12") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "true_left" (formula "12"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "9"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "4"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "mul_literals" (formula "2") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                                                                     (rule "leq_literals" (formula "2") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "cnf_rightDist" (formula "18") (term "0,0"))
                                                                     (rule "commute_or" (formula "18") (term "1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                                     (rule "commute_or" (formula "18") (term "1,0,0,0"))
                                                                     (rule "all_pull_out3" (formula "28") (term "0"))
                                                                     (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                                     (rule "allLeft" (formula "29") (inst "t=offset_0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "16"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "33"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "29") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                                                     (rule "add_zero_right" (formula "19") (term "0,2,0,1"))
                                                                     (rule "leq_literals" (formula "19") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0"))
                                                                     (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0"))
                                                                     (rule "mul_literals" (formula "19") (term "1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "13"))
                                                                     (rule "qeq_literals" (formula "19") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_6"))
                                                                     (rule "simplifySelectOfAnon" (formula "19"))
                                                                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "45")))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "leq_literals" (formula "19") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,0"))
                                                                     (rule "replace_known_left" (formula "19") (term "0,1,0,0") (ifseqformula "25"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "20"))
                                                                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                                                     (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                     (rule "mul_literals" (formula "20") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0"))
                                                                     (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "19") (term "0,0") (ifseqformula "11"))
                                                                     (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "19"))
                                                                     (rule "hideAuxiliaryEq" (formula "19"))
                                                                     (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_7"))
                                                                     (rule "simplifySelectOfAnon" (formula "19"))
                                                                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "45")))
                                                                     (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,0"))
                                                                     (rule "replace_known_left" (formula "19") (term "0,1,0,0") (ifseqformula "25"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "simplifySelectOfStore" (formula "19"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "castDel" (formula "19") (term "0"))
                                                                     (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                                                     (rule "hideAuxiliaryEq" (formula "19"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "19"))
                                                                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                     (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                     (rule "mul_literals" (formula "19") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                                     (rule "commute_and_2" (formula "18") (term "0,0"))
                                                                     (rule "allLeft" (formula "1") (inst "t=offset_0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "35"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "17"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_8"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "allLeft" (formula "1") (inst "t=k_0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_9"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replaceKnownSelect_taclet110000000012010012_6" (formula "1") (term "2,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet110000000012010012_9" (formula "1") (term "2,0"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "44"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "target_offset_0 <= count FALSE"
                                                                     (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "inEqSimp_leqRight" (formula "39"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                     (rule "mul_literals" (formula "9") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "38"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                     (rule "add_literals" (formula "1") (term "0"))
                                                                     (rule "leq_literals" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: i_0 <= -2 + count FALSE"
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "inEqSimp_leqRight" (formula "39"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "12"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                               (rule "add_literals" (formula "4") (term "0,1"))
                                                               (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "12"))
                                                               (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "1,0"))
                                                               (rule "times_zero_1" (formula "12") (term "0"))
                                                               (rule "qeq_literals" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "applyEq" (formula "15") (term "1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "0"))
                                                               (rule "polySimp_homoEq" (formula "18"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "18") (term "0,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "18"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "18"))
                                                               (rule "inEqSimp_homoInEq0" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "35") (term "0,0,0"))
                                                               (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "11") (term "0,0") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "11"))
                                                               (rule "hideAuxiliaryEq" (formula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "10"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                               (rule "mul_literals" (formula "10") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                                               (rule "mul_literals" (formula "3") (term "0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "12"))
                                                               (rule "leq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "13"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "12") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1"))
                                                               (rule "commute_or" (formula "28") (term "0,0,1,0"))
                                                               (rule "ifthenelse_split" (formula "8") (term "0"))
                                                               (branch "j_0 = 0 TRUE"
                                                                  (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                                  (rule "hideAuxiliaryEq" (formula "9"))
                                                                  (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                                  (rule "qeq_literals" (formula "9") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "8"))
                                                                  (rule "qeq_literals" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "7"))
                                                                  (rule "add_zero_right" (formula "4") (term "1"))
                                                                  (rule "applyEq" (formula "18") (term "3,0,0,1,1,1,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "2") (term "3,0,0,0,0,0,1,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "17") (term "3,0,0,0,1,0,1,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "18") (term "3,0,0,0,1,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "17") (term "3,0,0,1,1,0,1,0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                                                                  (rule "leq_literals" (formula "3") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                                                                  (rule "leq_literals" (formula "3") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "ex_pull_out3" (formula "15") (term "0"))
                                                                  (rule "cnf_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "commute_or" (formula "15") (term "1,0,0"))
                                                                  (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                                  (rule "commute_or" (formula "15") (term "1,0,0,0"))
                                                                  (rule "all_pull_out3" (formula "25") (term "0"))
                                                                  (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                                  (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                                  (rule "commute_and_2" (formula "15") (term "0,0"))
                                                                  (rule "allLeft" (formula "2") (inst "t=k_0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "2") (term "0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_6"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "34"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "j_0 = 0 FALSE"
                                                                  (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "35"))
                                                                  (rule "add_zero_right" (formula "3") (term "1"))
                                                                  (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "3"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "35") (term "0,0"))
                                                                  (rule "leq_literals" (formula "35") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "false_right" (formula "35"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "ex_pull_out3" (formula "17") (term "0"))
                                                                  (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                                  (rule "commute_or" (formula "17") (term "1,0,0"))
                                                                  (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                                                                  (rule "commute_or" (formula "17") (term "1,0,0,0"))
                                                                  (rule "all_pull_out3" (formula "27") (term "0"))
                                                                  (rule "shift_paren_or" (formula "27") (term "0,0"))
                                                                  (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                                                  (rule "commute_and_2" (formula "17") (term "0,0"))
                                                                  (rule "allLeft" (formula "2") (inst "t=offset_0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "2") (term "0") (ifseqformula "17"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_6"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "2,0"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                                                  (rule "add_literals" (formula "18") (term "0,2,0,1"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "18") (term "0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "18") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_7"))
                                                                  (rule "simplifySelectOfAnon" (formula "18"))
                                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")))
                                                                  (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0"))
                                                                  (rule "replace_known_left" (formula "18") (term "0,1,0,0") (ifseqformula "24"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "19"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "10"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "applyEqReverse" (formula "19") (term "1,1") (ifseqformula "18"))
                                                                  (rule "hideAuxiliaryEq" (formula "18"))
                                                                  (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_8"))
                                                                  (rule "simplifySelectOfAnon" (formula "18"))
                                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "ifthenelse_negated" (formula "18") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "18") (term "0,0,0"))
                                                                  (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "24"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "simplifySelectOfStore" (formula "18"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "castDel" (formula "18") (term "0"))
                                                                  (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                                                  (rule "hideAuxiliaryEq" (formula "18"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                                  (rule "allLeft" (formula "2") (inst "t=k_0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0,1,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_9"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replaceKnownSelect_taclet110000000012010012_6" (formula "1") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet110000000012010012_9" (formula "1") (term "2,0"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "37"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "39"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "33") (inst "sk=j_0") (userinteraction))
                                                (rule "instAll" (formula "33") (term "0,0,0") (ifseqformula "13") (userinteraction))
                                                (rule "impRight" (formula "34"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "polySimp_homoEq" (formula "13"))
                                                (rule "polySimp_homoEq" (formula "5") (term "0,0"))
                                                (rule "times_zero_2" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                (rule "add_literals" (formula "2") (term "0,1"))
                                                (rule "add_zero_left" (formula "2") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "36"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "27"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "28"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                                (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "6") (term "0,0"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                (rule "applyEq" (formula "33") (term "0,1,0,1") (ifseqformula "14"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "33") (term "0,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0,1"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                (rule "mul_literals" (formula "27") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                (rule "mul_literals" (formula "15") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                (rule "mul_literals" (formula "8") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                (rule "mul_literals" (formula "28") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,0,1,1"))
                                                (rule "mul_literals" (formula "33") (term "0,0,0,1,1"))
                                                (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0"))
                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq" (formula "5") (term "1,1,1") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                                (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfStore" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "pullOutSelect" (formula "6") (term "0,1") (inst "selectSK=arr_5"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "6"))
                                                (rule "simplifySelectOfAnon" (formula "6"))
                                                 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "37")))
                                                (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                                (rule "replace_known_left" (formula "6") (term "0,1,0,0") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfArrayRangeConcrete" (formula "6") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                (rule "mul_literals" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
                                                (rule "mul_literals" (formula "12") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "12"))
                                                (rule "leq_literals" (formula "30") (term "0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                (rule "mul_literals" (formula "16") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "35"))
                                                (rule "mul_literals" (formula "32") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                (rule "mul_literals" (formula "32") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_7"))
                                                (rule "simplifySelectOfStore" (formula "7"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "castDel" (formula "7") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "7") (term "0,0"))
                                                (rule "times_zero_2" (formula "7") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "7") (term "0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0"))
                                                (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "5"))
                                                (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                                (rule "times_zero_1" (formula "5") (term "0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "nnf_imp2or" (formula "22") (term "0"))
                                                (rule "nnf_imp2or" (formula "23") (term "0"))
                                                 (builtin "SMTRule")
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "33") (inst "sk=f_0"))
                                             (rule "allRight" (formula "33") (inst "sk=o_0"))
                                             (rule "orRight" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "eqSymm" (formula "35"))
                                             (rule "eqSymm" (formula "33") (term "0,0,0,1"))
                                             (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                             (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_homoEq" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "34") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "23"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "24"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                             (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                                             (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "applyEq" (formula "29") (term "0,1,0,1") (ifseqformula "10"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0,1"))
                                             (rule "mul_literals" (formula "29") (term "0,0,0,1,0,1"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,0,0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0,1"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                             (rule "mul_literals" (formula "24") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,0,1,1"))
                                             (rule "mul_literals" (formula "29") (term "0,0,0,1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "pullOutSelect" (formula "34") (term "1") (inst "selectSK=f_0_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_0_1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                             (rule "mul_literals" (formula "7") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "13"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1"))
                                             (rule "mul_literals" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                             (rule "mul_literals" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet100000012010012_5" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "29"))
                                             (rule "mul_literals" (formula "26") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                             (rule "mul_literals" (formula "26") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                             (rule "nnf_imp2or" (formula "15") (term "0"))
                                             (rule "nnf_imp2or" (formula "16") (term "0"))
                                              (builtin "SMTRule")
                                          )
                                       )
                                       (branch
                                          (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                          (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_homoEq" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                          (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                          (rule "precOfInt" (formula "33"))
                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "24"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "23"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,1"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "33") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0,0,1"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor2" (formula "33") (term "0,1"))
                                          (rule "add_literals" (formula "33") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "0,1"))
                                          (rule "leq_literals" (formula "33") (term "1"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_leqRight" (formula "33"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                          (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                          (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                          (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                          (rule "mul_literals" (formula "25") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                          (rule "mul_literals" (formula "24") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                          (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                          (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0"))
                                          (rule "add_literals" (formula "5") (term "0"))
                                          (rule "leq_literals" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                    )
                                    (branch "Null Reference (x_arr_2 = null)"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (x_arr_2 != null, but x_14 Out of Bounds!)"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                       (rule "times_zero_2" (formula "3") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_homoEq" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "24"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "25"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                       (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                       (rule "mul_literals" (formula "24") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                       (rule "mul_literals" (formula "12") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                       (rule "mul_literals" (formula "25") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "27"))
                                       (rule "mul_literals" (formula "24") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "6") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "25") (term "0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "12"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                       (rule "mul_literals" (formula "10") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "9"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "23"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0"))
                                       (rule "add_literals" (formula "5") (term "0"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                                 (branch "Null Reference (_values = null)"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (_values != null, but offset Out of Bounds!)"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "false_right" (formula "34"))
                                    (rule "polySimp_homoEq" (formula "11"))
                                    (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "24"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "25"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "mul_literals" (formula "24") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "mul_literals" (formula "25") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                    (rule "mul_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "27"))
                                    (rule "mul_literals" (formula "24") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "mul_literals" (formula "24") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                    (rule "mul_literals" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "inEqSimp_commuteLeq" (formula "22"))
                                    (rule "inEqSimp_commuteLeq" (formula "20"))
                                    (rule "inEqSimp_commuteLeq" (formula "21"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "22") (term "0") (inst "i=i_1"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                    (rule "commute_or" (formula "1"))
                                    (rule "commute_or" (formula "13") (term "0,0"))
                                    (rule "commute_or" (formula "14") (term "0,0"))
                                    (rule "commute_and" (formula "13") (term "0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "13") (term "0"))
                                    (rule "cnf_rightDist" (formula "13") (term "0,0"))
                                    (rule "commute_or" (formula "13") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                    (rule "commute_or" (formula "13") (term "1,0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "target_offset_0 = 1 TRUE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_commuteLeq" (formula "9"))
                                       (rule "applyEqRigid" (formula "12") (term "1,1,0,1,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "4") (term "1,0,2,1,0") (ifseqformula "3"))
                                       (rule "add_literals" (formula "4") (term "0,2,1,0"))
                                       (rule "applyEq" (formula "12") (term "1,1,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "12") (term "1,1,0,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "13") (term "1,1,1,0,0") (ifseqformula "3"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_or_antiSymm0" (formula "10") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "1,0,1,0,1,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "11") (term "0,0"))
                                       (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "11") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "inEqSimp_or_antiSymm0" (formula "10") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "add_literals" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_or_antiSymm0" (formula "10") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "add_literals" (formula "10") (term "1,0,0,0,0,0,0"))
                                       (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "cut_direct" (formula "27") (term "0"))
                                       (branch "CUT: i_0 <= -2 + count TRUE"
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "27"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "26"))
                                          (rule "mul_literals" (formula "5") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "27"))
                                          (rule "mul_literals" (formula "21") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "21"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "20"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0"))
                                          (rule "qeq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                          (rule "commute_and_2" (formula "9") (term "0,0"))
                                          (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                          (rule "cut_direct" (formula "1") (term "1"))
                                          (branch "CUT: values.length <= offset_0 TRUE"
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "16") (term "0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "23"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "inEqSimp_homoInEq1" (formula "18"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0"))
                                             (rule "add_literals" (formula "18") (term "0"))
                                             (rule "leq_literals" (formula "18"))
                                             (rule "closeFalse" (formula "18"))
                                          )
                                          (branch "CUT: values.length <= offset_0 FALSE"
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_leqRight" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "17"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                       )
                                       (branch "CUT: i_0 <= -2 + count FALSE"
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_leqRight" (formula "27"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "0"))
                                          (rule "polySimp_homoEq" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,0"))
                                          (rule "times_zero_1" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "polySimp_sepNegMonomial" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                          (rule "commute_and_2" (formula "9") (term "0,0"))
                                          (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                          (rule "cut_direct" (formula "2") (term "1"))
                                          (branch "CUT: values.length <= offset_0 TRUE"
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "8"))
                                             (rule "andLeft" (formula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "17"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0"))
                                             (rule "add_literals" (formula "17") (term "0"))
                                             (rule "leq_literals" (formula "17"))
                                             (rule "closeFalse" (formula "17"))
                                          )
                                          (branch "CUT: values.length <= offset_0 FALSE"
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_leqRight" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "17"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                       )
                                    )
                                    (branch "target_offset_0 = 1 FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "31"))
                                       (rule "add_literals" (formula "7") (term "1"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "31") (term "1,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "6") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "commute_and_2" (formula "12") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "target_offset_0 <= count TRUE"
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "cut_direct" (formula "30") (term "0"))
                                          (branch "CUT: i_0 <= -2 + count TRUE"
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "30"))
                                             (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "29"))
                                             (rule "mul_literals" (formula "5") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "25"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "30"))
                                             (rule "mul_literals" (formula "24") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0"))
                                             (rule "qeq_literals" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "23"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0"))
                                             (rule "qeq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                             (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "add_zero_right" (formula "12") (term "0,2,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "12") (term "0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0"))
                                             (rule "mul_literals" (formula "12") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=arr_3"))
                                             (rule "simplifySelectOfAnon" (formula "12"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "36")))
                                             (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "leq_literals" (formula "12") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "12") (term "0,1,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (term "0,0") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "12") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "1,1") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=arr_4"))
                                             (rule "simplifySelectOfAnon" (formula "12"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "36")))
                                             (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "leq_literals" (formula "12") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "simplifySelectOfStore" (formula "12"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "castDel" (formula "12") (term "0"))
                                             (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "12"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                             (rule "commute_and" (formula "11") (term "0,0,0"))
                                             (rule "cut_direct" (formula "1") (term "1"))
                                             (branch "CUT: values.length <= offset_0 TRUE"
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "20") (term "0,0"))
                                                (rule "add_zero_left" (formula "20") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "27"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0"))
                                                (rule "add_literals" (formula "22") (term "0"))
                                                (rule "leq_literals" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                             (branch "CUT: values.length <= offset_0 FALSE"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "34"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "21"))
                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "closeFalse" (formula "10"))
                                             )
                                          )
                                          (branch "CUT: i_0 <= -2 + count FALSE"
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_leqRight" (formula "30"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "0,0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,0"))
                                             (rule "times_zero_1" (formula "6") (term "0"))
                                             (rule "qeq_literals" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "applyEq" (formula "9") (term "1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0"))
                                             (rule "polySimp_homoEq" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "polySimp_sepNegMonomial" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                             (rule "mul_literals" (formula "5") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                             (rule "allLeft" (formula "11") (inst "t=Z(0(#))"))
                                             (rule "add_zero_right" (formula "11") (term "0,2,0,1"))
                                             (rule "leq_literals" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "11") (term "0"))
                                             (rule "times_zero_2" (formula "11") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
                                             (rule "mul_literals" (formula "11") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_3"))
                                             (rule "simplifySelectOfAnon" (formula "11"))
                                              (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "31")))
                                             (rule "elementOfArrayRangeConcrete" (formula "11") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "leq_literals" (formula "11") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "12"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (term "0,0") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "11") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "12") (term "1,1") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_4"))
                                             (rule "simplifySelectOfAnon" (formula "11"))
                                              (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "31")))
                                             (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "elementOfArrayRangeConcrete" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "leq_literals" (formula "11") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "simplifySelectOfStore" (formula "11"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "castDel" (formula "11") (term "0"))
                                             (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "11"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                             (rule "allLeft" (formula "10") (inst "t=Z(0(#))"))
                                             (rule "replaceKnownSelect_taclet101200012010012_9" (formula "10") (term "1,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101200012010012_11" (formula "10") (term "1,1,1,0,0"))
                                             (rule "leq_literals" (formula "10") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "leq_literals" (formula "10") (term "0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "leq_literals" (formula "10") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "exLeft" (formula "10") (inst "sk=k_0"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_commuteGeq" (formula "12") (term "0"))
                                             (rule "inEqSimp_commuteGeq" (formula "11") (term "0"))
                                             (rule "inEqSimp_commuteGeq" (formula "10") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "10") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_5"))
                                             (rule "simplifySelectOfAnon" (formula "11"))
                                              (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "35")))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "elementOfArrayRangeConcrete" (formula "11") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "11") (term "0,0,0,0,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "ifthenelse_negated" (formula "11") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "11") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "12"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                             (rule "mul_literals" (formula "10") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                             (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_6"))
                                             (rule "simplifySelectOfStore" (formula "11"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "castDel" (formula "11") (term "1,0"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "eqSymm" (formula "11") (term "1"))
                                             (rule "eqSymm" (formula "11") (term "0,0"))
                                             (rule "eqSymm" (formula "11") (term "1,0"))
                                             (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEq" (formula "15") (term "3,0,0,1,1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "13") (term "3,0,0,0,1,1,0,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "15") (term "3,0,0,0,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "13") (term "3,0,0,1,1,1,0,0,0") (ifseqformula "11"))
                                             (rule "cut_direct" (formula "2") (term "1"))
                                             (branch "CUT: values.length <= offset_0 TRUE"
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "22") (term "0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "24"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0"))
                                                (rule "leq_literals" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                             (branch "CUT: values.length <= offset_0 FALSE"
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_leqRight" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "closeFalse" (formula "23"))
                                             )
                                          )
                                       )
                                       (branch "target_offset_0 <= count FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "inEqSimp_leqRight" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0"))
                                          (rule "add_literals" (formula "5") (term "0"))
                                          (rule "leq_literals" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                    )
                                 )
                              )
                              (branch "if x_10 false"
                                  (builtin "One Step Simplification" (formula "1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "compound_assignment_op_plus" (formula "33") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "33") (term "1") (inst "#v=x_8"))
                                 (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                 (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_14"))
                                 (rule "remove_parentheses_right" (formula "33") (term "1"))
                                 (rule "compound_addition_2" (formula "33") (term "1") (inst "#v0=x_15") (inst "#v1=x_16"))
                                 (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                 (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_15"))
                                 (rule "assignment" (formula "33") (term "1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                 (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_16"))
                                 (rule "remove_parentheses_right" (formula "33") (term "1"))
                                 (rule "assignment" (formula "33") (term "1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "assignmentAdditionInt" (formula "33") (term "1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "translateJavaAddInt" (formula "33") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "33") (term "1"))
                                 (rule "assignment" (formula "33") (term "1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "blockEmpty" (formula "33") (term "1"))
                                 (rule "preincrement" (formula "33") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "33") (term "1") (inst "#v=x_8"))
                                 (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                 (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_17"))
                                 (rule "remove_parentheses_right" (formula "33") (term "1"))
                                 (rule "assignmentAdditionInt" (formula "33") (term "1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "translateJavaAddInt" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "33") (term "1"))
                                 (rule "assignment" (formula "33") (term "1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "blockEmpty" (formula "33") (term "1"))
                                 (rule "lsContinue" (formula "33") (term "1"))
                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "6")))
                                 (rule "andRight" (formula "33"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "33"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "33"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "33"))
                                          (branch
                                             (rule "andRight" (formula "33"))
                                             (branch
                                                (rule "andRight" (formula "33"))
                                                (branch
                                                   (rule "andRight" (formula "33"))
                                                   (branch
                                                      (rule "andRight" (formula "33"))
                                                      (branch
                                                         (rule "andRight" (formula "33"))
                                                         (branch
                                                            (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                            (rule "inEqSimp_geqRight" (formula "33"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "30"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "24"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "25"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "11"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                            (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                            (rule "mul_literals" (formula "12") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                            (rule "mul_literals" (formula "24") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                            (rule "mul_literals" (formula "25") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                            (rule "mul_literals" (formula "5") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                         (branch
                                                            (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                            (rule "times_zero_2" (formula "1") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "33"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "30"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "24"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "25"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "11"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                            (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                            (rule "mul_literals" (formula "5") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                            (rule "mul_literals" (formula "24") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                            (rule "mul_literals" (formula "12") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                            (rule "mul_literals" (formula "25") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0"))
                                                            (rule "qeq_literals" (formula "7") (term "0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "29") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "true_left" (formula "29"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0"))
                                                            (rule "add_literals" (formula "5") (term "0"))
                                                            (rule "leq_literals" (formula "5"))
                                                            (rule "closeFalse" (formula "5"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_homoEq" (formula "9"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "33"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "30"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "24"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "25"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                         (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                         (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "11"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                         (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                         (rule "mul_literals" (formula "24") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                         (rule "mul_literals" (formula "25") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                         (rule "mul_literals" (formula "12") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                                         (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0"))
                                                         (rule "add_literals" (formula "9") (term "0"))
                                                         (rule "leq_literals" (formula "9"))
                                                         (rule "closeFalse" (formula "9"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_homoEq" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "30"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "24"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "25"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                      (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "11"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                      (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                      (rule "mul_literals" (formula "12") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                      (rule "mul_literals" (formula "24") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                      (rule "mul_literals" (formula "25") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                                      (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                      (rule "mul_literals" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "27"))
                                                      (rule "mul_literals" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "11"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                      (rule "mul_literals" (formula "25") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "25"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0"))
                                                      (rule "add_literals" (formula "9") (term "0"))
                                                      (rule "leq_literals" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                )
                                                (branch
                                                   (rule "polySimp_homoEq" (formula "33"))
                                                   (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_homoEq" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "33") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "24"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "23"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "27"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                                   (rule "close" (formula "33") (ifseqformula "10"))
                                                )
                                             )
                                             (branch
                                                (rule "impRight" (formula "33"))
                                                (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_homoEq" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "34"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "25"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "26"))
                                                (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                                                (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "4") (term "0,0"))
                                                (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "applyEq" (formula "31") (term "0,1,0,1") (ifseqformula "12"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,0,1,0,1"))
                                                (rule "mul_literals" (formula "31") (term "0,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0,1"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                (rule "mul_literals" (formula "25") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                (rule "mul_literals" (formula "26") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                (rule "mul_literals" (formula "13") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                (rule "mul_literals" (formula "6") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0,0"))
                                                (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,0,1"))
                                                (rule "mul_literals" (formula "31") (term "0,0,0,1"))
                                                (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0"))
                                                (rule "qeq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "27"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "25"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "33") (inst "sk=j_0") (userinteraction))
                                             (rule "instAll" (formula "33") (term "0,0,0") (ifseqformula "11") (userinteraction))
                                             (rule "impRight" (formula "34"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                             (rule "exLeft" (formula "3") (inst "sk=k_0"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "polySimp_homoEq" (formula "6") (term "0,0"))
                                             (rule "times_zero_2" (formula "6") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_homoEq" (formula "14"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "28"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "29"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                                             (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "34") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "34") (term "0,0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "7") (term "0,0"))
                                             (rule "mul_literals" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "applyEq" (formula "34") (term "0,1,0,1") (ifseqformula "15"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "0,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,1"))
                                             (rule "mul_literals" (formula "34") (term "0,0,0,1,0,1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,0,0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "34") (term "0,0,1"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1"))
                                             (rule "mul_literals" (formula "9") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                             (rule "mul_literals" (formula "28") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                             (rule "mul_literals" (formula "29") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1"))
                                             (rule "mul_literals" (formula "16") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "0,0,1,1"))
                                             (rule "mul_literals" (formula "34") (term "0,0,0,1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0"))
                                             (rule "qeq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "pullOutSelect" (formula "37") (term "1,1,0") (inst "selectSK=arr_3"))
                                             (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                             (rule "simplifySelectOfAnon" (formula "7"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "37")))
                                             (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "ifthenelse_negated" (formula "7") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "7") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "simplifySelectOfStore" (formula "7"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "castDel" (formula "7") (term "1,0"))
                                             (rule "eqSymm" (formula "7") (term "1,0,0"))
                                             (rule "eqSymm" (formula "7") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "7"))
                                             (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "9"))
                                             (rule "mul_literals" (formula "10") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                             (rule "mul_literals" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                             (rule "mul_literals" (formula "12") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                             (rule "mul_literals" (formula "14") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "34"))
                                             (rule "mul_literals" (formula "31") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1"))
                                             (rule "mul_literals" (formula "31") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "nnf_imp2or" (formula "20") (term "0"))
                                             (rule "nnf_imp2or" (formula "21") (term "0"))
                                             (rule "nnf_ex2all" (formula "40"))
                                             (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "29") (term "0"))
                                             (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "41")) (ifInst ""  (formula "24")))
                                             (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "30") (term "0") (inst "i=i_1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "translateJavaAddInt" (formula "30") (term "0,2,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "0,2,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "inEqSimp_commuteLeq" (formula "30"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "inEqSimp_commuteLeq" (formula "28"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0"))
                                             (rule "qeq_literals" (formula "29") (term "0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "nnf_imp2or" (formula "31") (term "0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                             (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                             (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                             (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "30") (term "0"))
                                             (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "24")) (ifInst ""  (formula "31")))
                                             (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "31") (term "0") (inst "i=i_1") (inst "j=j"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "31") (term "0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "commute_or" (formula "22") (term "0,0"))
                                             (rule "commute_or" (formula "21") (term "0,0"))
                                             (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "30") (term "0") (inst "i=i_1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "translateJavaAddInt" (formula "30") (term "0,2,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "0,2,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "30") (term "0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                             (rule "commute_and" (formula "21") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "30") (term "0,0,1,0"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "j_0 = 0 TRUE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                (rule "times_zero_2" (formula "3") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "times_zero_2" (formula "5") (term "1,0"))
                                                (rule "add_zero_right" (formula "5") (term "0"))
                                                (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "2"))
                                                (rule "add_zero_right" (formula "6") (term "1"))
                                                (rule "applyEq" (formula "1") (term "3,0,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "20") (term "3,0,0,1,1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "19") (term "3,0,0,0,1,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "20") (term "3,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "19") (term "3,0,0,1,1,0,1,0") (ifseqformula "3"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                                (rule "cut_direct" (formula "36") (term "0"))
                                                (branch "CUT: i_0 <= -2 + count TRUE"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "36"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0"))
                                                   (rule "qeq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "31"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "0,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "35"))
                                                   (rule "mul_literals" (formula "10") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "add_literals" (formula "10") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "36"))
                                                   (rule "mul_literals" (formula "30") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0"))
                                                   (rule "qeq_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "29"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                   (rule "mul_literals" (formula "14") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0"))
                                                   (rule "qeq_literals" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "arrayLengthIsAShort" (formula "27") (term "0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                                   (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "all_pull_out3" (formula "26") (term "0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                   (rule "ex_pull_out3" (formula "16") (term "0"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                                   (rule "commute_or" (formula "16") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0,0,0"))
                                                   (rule "commute_or" (formula "16") (term "1,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "7") (term "0"))
                                                   (branch "target_offset_0 = 1 TRUE"
                                                      (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12"))
                                                      (rule "applyEq" (formula "8") (term "0,0,0,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0,0,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "13") (term "1,1,0,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "7"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "13") (term "1,1,0,1,0,0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_or_antiSymm0" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "14") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_or_antiSymm0" (formula "13") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "add_literals" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_or_antiSymm0" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "add_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                                                      (rule "allLeft" (formula "23") (inst "t=offset_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "23") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "allLeft" (formula "1") (inst "t=k_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                      (rule "eqSymm" (formula "37"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "target_offset_0 = 1 FALSE"
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "38"))
                                                      (rule "add_literals" (formula "10") (term "1"))
                                                      (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "38") (term "1,0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0"))
                                                      (rule "leq_literals" (formula "38") (term "0"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "false_right" (formula "38"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                      (rule "mul_literals" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "35"))
                                                      (rule "mul_literals" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "commute_and_2" (formula "15") (term "0,0"))
                                                      (rule "allLeft" (formula "26") (inst "t=offset_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "allLeft" (formula "1") (inst "t=k_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                      (rule "eqSymm" (formula "40"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "CUT: i_0 <= -2 + count FALSE"
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "inEqSimp_leqRight" (formula "36"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "14") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "0,0"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "10"))
                                                   (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                                   (rule "add_literals" (formula "10") (term "1,0"))
                                                   (rule "times_zero_1" (formula "10") (term "0"))
                                                   (rule "qeq_literals" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "16"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "16"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                   (rule "applyEq" (formula "32") (term "0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq0" (formula "32"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "32") (term "0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "9") (term "1,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                   (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                   (rule "mul_literals" (formula "11") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1"))
                                                   (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                                   (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "all_pull_out3" (formula "27") (term "0"))
                                                   (rule "shift_paren_or" (formula "27") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                                   (rule "ex_pull_out3" (formula "17") (term "0"))
                                                   (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                   (rule "commute_or" (formula "17") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                                                   (rule "commute_or" (formula "17") (term "1,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "8") (term "0"))
                                                   (branch "target_offset_0 = 1 TRUE"
                                                      (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "9") (term "1,0,2,1,0") (ifseqformula "8"))
                                                      (rule "add_literals" (formula "9") (term "0,2,1,0"))
                                                      (rule "applyEq" (formula "17") (term "1,1,0,1,0,0,0") (ifseqformula "8"))
                                                      (rule "applyEqRigid" (formula "18") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "applyEqRigid" (formula "17") (term "1,1,0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "12"))
                                                      (rule "mul_literals" (formula "12") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "0,0"))
                                                      (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "9") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_or_antiSymm0" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "add_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "15") (term "0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "15") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "inEqSimp_or_antiSymm0" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "add_literals" (formula "14") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_or_antiSymm0" (formula "14") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "add_literals" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "allLeft" (formula "2") (inst "t=offset_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (term "0") (ifseqformula "14"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                      (rule "eqSymm" (formula "32"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "31"))
                                                      (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "31"))
                                                      (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "5"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0"))
                                                      (rule "qeq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "false_right" (formula "31"))
                                                      (rule "allLeft" (formula "2") (inst "t=add(add(Z(neglit(1(#))), begin), step)"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0") (ifseqformula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "28"))
                                                      (rule "qeq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_6"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                      (rule "eqSymm" (formula "32"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "31"))
                                                      (rule "close" (formula "31") (ifseqformula "4"))
                                                   )
                                                   (branch "target_offset_0 = 1 FALSE"
                                                      (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "34"))
                                                      (rule "add_literals" (formula "10") (term "1"))
                                                      (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "inEqSimp_commuteLeq" (formula "5"))
                                                      (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "9"))
                                                      (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0"))
                                                      (rule "leq_literals" (formula "33") (term "0"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "false_right" (formula "33"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "commute_and_2" (formula "15") (term "0,0"))
                                                      (rule "allLeft" (formula "2") (inst "t=offset_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (term "0") (ifseqformula "15"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                      (rule "eqSymm" (formula "34"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "33"))
                                                      (rule "allLeft" (formula "2") (inst "t=add(add(Z(neglit(1(#))), begin), step)"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "30"))
                                                      (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (term "0") (ifseqformula "32"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_6"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                                      (rule "eqSymm" (formula "34"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "33"))
                                                      (rule "close" (formula "33") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                             (branch "j_0 = 0 FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "39"))
                                                (rule "add_zero_right" (formula "4") (term "1"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "4"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0"))
                                                (rule "leq_literals" (formula "39") (term "0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "4") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "mul_literals" (formula "4") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                                (rule "mul_literals" (formula "4") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "mul_literals" (formula "4") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "ifthenelse_split" (formula "11") (term "0"))
                                                (branch "target_offset_0 = 1 TRUE"
                                                   (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                                   (rule "hideAuxiliaryEq" (formula "12"))
                                                   (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "12"))
                                                   (rule "hideAuxiliaryEq" (formula "12"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3"))
                                                   (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "0,0"))
                                                   (rule "add_zero_left" (formula "8") (term "0"))
                                                   (rule "applyEqRigid" (formula "19") (term "1,1,1,0,0") (ifseqformula "11"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                   (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "11"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13"))
                                                   (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "11"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "5"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "6") (term "0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "closeFalse" (formula "6"))
                                                )
                                                (branch "target_offset_0 = 1 FALSE"
                                                   (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                                   (rule "hideAuxiliaryEq" (formula "11"))
                                                   (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "38"))
                                                   (rule "add_literals" (formula "13") (term "1"))
                                                   (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "13"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0"))
                                                   (rule "leq_literals" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                   (rule "mul_literals" (formula "13") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                   (rule "mul_literals" (formula "13") (term "1"))
                                                   (rule "arrayLengthIsAShort" (formula "31") (term "0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                                                   (rule "cut_direct" (formula "37") (term "0"))
                                                   (branch "CUT: i_0 <= -2 + count TRUE"
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "37"))
                                                      (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0,0"))
                                                      (rule "qeq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "36"))
                                                      (rule "mul_literals" (formula "5") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "4") (term "0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "32"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "37"))
                                                      (rule "mul_literals" (formula "31") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "31"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0"))
                                                      (rule "qeq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "30"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                      (rule "mul_literals" (formula "15") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                                      (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0"))
                                                      (rule "qeq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                                      (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "ex_pull_out3" (formula "17") (term "0"))
                                                      (rule "all_pull_out3" (formula "27") (term "0"))
                                                      (rule "shift_paren_or" (formula "27") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "commute_or" (formula "17") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                                                      (rule "commute_or" (formula "17") (term "1,0,0,0"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "j_0 <= -1 + count TRUE"
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "7") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "allLeft" (formula "1") (inst "t=offset_0"))
                                                         (rule "replaceKnownSelect_taclet0012010012_1" (formula "1") (term "0,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "1") (term "0,0,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "33"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "allLeft" (formula "1") (inst "t=k_0"))
                                                         (rule "replaceKnownSelect_taclet100010012010012_6" (formula "1") (term "0,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet100010012010012_8" (formula "1") (term "0,0,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "1") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "j_0 <= -1 + count FALSE"
                                                         (rule "eqSymm" (formula "2"))
                                                         (rule "inEqSimp_leqRight" (formula "40"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "39"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_literals" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "CUT: i_0 <= -2 + count FALSE"
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "inEqSimp_leqRight" (formula "37"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "1"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                                      (rule "add_literals" (formula "8") (term "0,1"))
                                                      (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13"))
                                                      (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                      (rule "add_literals" (formula "13") (term "1,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0"))
                                                      (rule "qeq_literals" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "applyEq" (formula "14") (term "1") (ifseqformula "1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                      (rule "applyEq" (formula "33") (term "0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq0" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "3") (term "0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_subsumption0" (formula "11") (term "0,0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "11"))
                                                      (rule "hideAuxiliaryEq" (formula "11"))
                                                      (rule "inEqSimp_commuteLeq" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                      (rule "mul_literals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "12"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                                      (rule "mul_literals" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                                      (rule "ex_pull_out3" (formula "17") (term "0"))
                                                      (rule "all_pull_out3" (formula "27") (term "0"))
                                                      (rule "shift_paren_or" (formula "27") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "commute_or" (formula "17") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                                                      (rule "commute_or" (formula "17") (term "1,0,0,0"))
                                                      (rule "allLeft" (formula "2") (inst "t=offset_0"))
                                                      (rule "replaceKnownSelect_taclet0012010012_1" (formula "2") (term "0,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0012010012_3" (formula "2") (term "0,0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "15"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (term "0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "allLeft" (formula "2") (inst "t=k_0"))
                                                      (rule "replaceKnownSelect_taclet100010012010012_6" (formula "2") (term "0,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100010012010012_8" (formula "2") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (term "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "2") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "11"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "33") (inst "sk=j_0") (userinteraction))
                                          (rule "instAll" (formula "33") (term "0,0,0") (ifseqformula "12") (userinteraction))
                                          (rule "impRight" (formula "34"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "36")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch
                                       (rule "allRight" (formula "33") (inst "sk=f_0"))
                                       (rule "allRight" (formula "33") (inst "sk=o_0"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "eqSymm" (formula "33") (term "0,0,0,1"))
                                       (rule "polySimp_homoEq" (formula "9"))
                                       (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "34") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "23"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "24"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                       (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "applyEq" (formula "29") (term "0,1,0,1") (ifseqformula "10"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0,1"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                       (rule "mul_literals" (formula "23") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                       (rule "mul_literals" (formula "24") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                       (rule "mul_literals" (formula "11") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0,1,1"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "pullOutSelect" (formula "34") (term "1") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_0_1"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet1010012010012_5" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "closeTrue" (formula "36"))
                                    )
                                 )
                                 (branch
                                    (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_homoEq" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "precOfInt" (formula "33"))
                                    (rule "inEqSimp_gtToGeq" (formula "24"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "23"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "33") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor2" (formula "33") (term "0,1"))
                                    (rule "add_literals" (formula "33") (term "1,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "0,1"))
                                    (rule "leq_literals" (formula "33") (term "1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_leqRight" (formula "33"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "11"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "mul_literals" (formula "25") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "mul_literals" (formula "24") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                    (rule "mul_literals" (formula "12") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0,1,1"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (_values = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (_values != null, but offset Out of Bounds!)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "false_right" (formula "32"))
                              (rule "polySimp_homoEq" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "23"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "22"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "24") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "26") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "applyEq" (formula "28") (term "0,1,0,1") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "28") (term "0,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "mul_literals" (formula "10") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                              (rule "mul_literals" (formula "23") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "mul_literals" (formula "22") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1"))
                              (rule "polySimp_rightDist" (formula "26") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,0,1,1"))
                              (rule "mul_literals" (formula "28") (term "0,0,0,1,1"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfStore" (formula "2"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                              (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "mul_literals" (formula "8") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                              (rule "mul_literals" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "5"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                              (rule "mul_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "27"))
                              (rule "mul_literals" (formula "24") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "mul_literals" (formula "24") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_imp2or" (formula "13") (term "0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "inEqSimp_commuteLeq" (formula "22"))
                              (rule "inEqSimp_commuteLeq" (formula "21"))
                              (rule "inEqSimp_commuteLeq" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "22") (term "0") (inst "i=i_1"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0"))
                              (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "22") (term "0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                              (rule "commute_or" (formula "1"))
                              (rule "commute_or" (formula "14") (term "0,0"))
                              (rule "commute_or" (formula "13") (term "0,0"))
                              (rule "commute_and" (formula "13") (term "0,0,1,0"))
                              (rule "ex_pull_out3" (formula "13") (term "0"))
                              (rule "cnf_rightDist" (formula "13") (term "0,0"))
                              (rule "commute_or" (formula "13") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                              (rule "commute_or" (formula "13") (term "1,0,0,0"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "target_offset_0 = 1 TRUE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "13") (term "1,1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_commuteLeq" (formula "6"))
                                 (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "2"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "applyEqRigid" (formula "10") (term "1,1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_or_antiSymm0" (formula "10") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "10") (term "1,0,1,0,1,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "inEqSimp_or_tautInEq0" (formula "11") (term "0,0"))
                                 (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                 (rule "qeq_literals" (formula "11") (term "1,0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_or_antiSymm0" (formula "10") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "add_literals" (formula "10") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_or_antiSymm0" (formula "10") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "add_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                                 (rule "commute_and_2" (formula "10") (term "0,0"))
                                 (rule "cut_direct" (formula "26") (term "0"))
                                 (branch "CUT: i_0 <= -2 + count TRUE"
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "21"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "25"))
                                    (rule "mul_literals" (formula "4") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "26"))
                                    (rule "mul_literals" (formula "20") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "19"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "commute_and" (formula "8") (term "0,0,0"))
                                    (rule "cut_direct" (formula "1") (term "1"))
                                    (branch "CUT: values.length <= offset_0 TRUE"
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "21"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0"))
                                       (rule "add_literals" (formula "16") (term "0"))
                                       (rule "leq_literals" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                    (branch "CUT: values.length <= offset_0 FALSE"
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                 )
                                 (branch "CUT: i_0 <= -2 + count FALSE"
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0"))
                                    (rule "polySimp_homoEq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,0"))
                                    (rule "times_zero_1" (formula "5") (term "0"))
                                    (rule "qeq_literals" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "polySimp_sepNegMonomial" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq0" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "commute_and" (formula "9") (term "0,0,0"))
                                    (rule "cut_direct" (formula "2") (term "1"))
                                    (branch "CUT: values.length <= offset_0 TRUE"
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "8"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0"))
                                       (rule "add_literals" (formula "18") (term "0"))
                                       (rule "leq_literals" (formula "18"))
                                       (rule "closeFalse" (formula "18"))
                                    )
                                    (branch "CUT: values.length <= offset_0 FALSE"
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_leqRight" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                 )
                              )
                              (branch "target_offset_0 = 1 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "30"))
                                 (rule "add_literals" (formula "6") (term "1"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "6"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0"))
                                 (rule "leq_literals" (formula "30") (term "0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "false_right" (formula "30"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "5") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "commute_and_2" (formula "12") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "target_offset_0 <= count TRUE"
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                    (rule "cut_direct" (formula "29") (term "0"))
                                    (branch "CUT: i_0 <= -2 + count TRUE"
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "28"))
                                       (rule "mul_literals" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "29"))
                                       (rule "mul_literals" (formula "23") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "23"))
                                       (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0"))
                                       (rule "qeq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "22"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                       (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1"))
                                       (rule "mul_literals" (formula "8") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "commute_and" (formula "10") (term "0,0,0"))
                                       (rule "allLeft" (formula "11") (inst "t=Z(0(#))"))
                                       (rule "add_zero_right" (formula "11") (term "0,2,0,1"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "11") (term "0"))
                                       (rule "times_zero_2" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
                                       (rule "mul_literals" (formula "11") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "pullOutSelect" (formula "11") (term "1,1") (inst "selectSK=arr_2"))
                                       (rule "simplifySelectOfAnon" (formula "11"))
                                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "35")))
                                       (rule "elementOfArrayRangeConcrete" (formula "11") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "leq_literals" (formula "11") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "ifthenelse_negated" (formula "11") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "11") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "simplifySelectOfStore" (formula "11"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "castDel" (formula "11") (term "0"))
                                       (rule "applyEqReverse" (formula "12") (term "1,1") (ifseqformula "11"))
                                       (rule "hideAuxiliaryEq" (formula "11"))
                                       (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_3"))
                                       (rule "simplifySelectOfAnon" (formula "11"))
                                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "35")))
                                       (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "elementOfArrayRangeConcrete" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "leq_literals" (formula "11") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                       (rule "mul_literals" (formula "12") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (term "0,0") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "11") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "applyEqReverse" (formula "12") (term "1,1") (ifseqformula "11"))
                                       (rule "hideAuxiliaryEq" (formula "11"))
                                       (rule "inEqSimp_homoInEq0" (formula "11"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1"))
                                       (rule "mul_literals" (formula "11") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                       (rule "cut_direct" (formula "1") (term "1"))
                                       (branch "CUT: values.length <= offset_0 TRUE"
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "20"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0"))
                                          (rule "add_literals" (formula "25") (term "0"))
                                          (rule "leq_literals" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch "CUT: values.length <= offset_0 FALSE"
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_leqRight" (formula "33"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "closeFalse" (formula "20"))
                                       )
                                    )
                                    (branch "CUT: i_0 <= -2 + count FALSE"
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "8") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "10") (term "0"))
                                       (rule "polySimp_homoEq" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "commute_and" (formula "10") (term "0,0,0"))
                                       (rule "allLeft" (formula "11") (inst "t=Z(0(#))"))
                                       (rule "add_zero_right" (formula "11") (term "0,2,0,1"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "11") (term "0"))
                                       (rule "times_zero_2" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
                                       (rule "mul_literals" (formula "11") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "pullOutSelect" (formula "11") (term "1,1") (inst "selectSK=arr_2"))
                                       (rule "simplifySelectOfAnon" (formula "11"))
                                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "30")))
                                       (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "elementOfArrayRangeConcrete" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "leq_literals" (formula "11") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "simplifySelectOfStore" (formula "11"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "castDel" (formula "11") (term "0"))
                                       (rule "applyEqReverse" (formula "12") (term "1,1") (ifseqformula "11"))
                                       (rule "hideAuxiliaryEq" (formula "11"))
                                       (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_3"))
                                       (rule "simplifySelectOfAnon" (formula "11"))
                                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "30")))
                                       (rule "elementOfArrayRangeConcrete" (formula "11") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "leq_literals" (formula "11") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1"))
                                       (rule "mul_literals" (formula "12") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (term "0,0") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "11") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "applyEqReverse" (formula "12") (term "1,1") (ifseqformula "11"))
                                       (rule "hideAuxiliaryEq" (formula "11"))
                                       (rule "inEqSimp_homoInEq0" (formula "11"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1"))
                                       (rule "mul_literals" (formula "11") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                       (rule "cut_direct" (formula "2") (term "1"))
                                       (branch "CUT: values.length <= offset_0 TRUE"
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "20"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_literals" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "closeFalse" (formula "9"))
                                       )
                                       (branch "CUT: values.length <= offset_0 FALSE"
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_leqRight" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "closeFalse" (formula "20"))
                                       )
                                    )
                                 )
                                 (branch "target_offset_0 <= count FALSE"
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "inEqSimp_leqRight" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Null Reference (x_arr_1 = null)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_1 != null, but x_11 Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                           (rule "false_right" (formula "31"))
                           (rule "polySimp_homoEq" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "21"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "22"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "add_zero_left" (formula "1") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                           (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0,1"))
                           (rule "polySimp_sepNegMonomial" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                           (rule "applyEq" (formula "27") (term "0,1,0,1") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "27") (term "0,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,0,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,1"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                           (rule "mul_literals" (formula "21") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "mul_literals" (formula "22") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "mul_literals" (formula "9") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0,1,1"))
                           (rule "mul_literals" (formula "27") (term "0,0,0,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                           (rule "mul_literals" (formula "4") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                           (rule "mul_literals" (formula "20") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "26"))
                           (rule "mul_literals" (formula "23") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "mul_literals" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "3"))
                           (rule "leq_literals" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "20") (term "0,0"))
                           (rule "add_zero_left" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                           (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                           (rule "mul_literals" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "21"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_literals" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch "if x_8 false"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "notLeft" (formula "1"))
                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "blockBreak" (formula "27") (term "1"))
                  (rule "lsBreak" (formula "27") (term "1"))
                  (rule "assignment" (formula "27") (term "1"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "methodCallReturn" (formula "27") (term "1"))
                  (rule "assignment" (formula "27") (term "1"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "methodCallEmpty" (formula "27") (term "1"))
                  (rule "tryEmpty" (formula "27") (term "1"))
                  (rule "emptyModality" (formula "27") (term "1"))
                  (rule "andRight" (formula "27"))
                  (branch "Case 1"
                     (rule "impRight" (formula "27"))
                     (rule "andRight" (formula "28"))
                     (branch "Case 1"
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "andRight" (formula "28"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "1"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "1"))
                              (rule "allRight" (formula "27") (inst "sk=i_1"))
                              (rule "impRight" (formula "27"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_homoEq" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                              (rule "inEqSimp_ltRight" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "22"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "21"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "mul_literals" (formula "22") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,1"))
                              (rule "pullOutSelect" (formula "29") (term "1,1,0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "6"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "7"))
                              (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,0"))
                              (rule "times_zero_1" (formula "7") (term "0"))
                              (rule "qeq_literals" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "applyEq" (formula "8") (term "1") (ifseqformula "2"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,0"))
                              (rule "times_zero_1" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,1"))
                              (rule "mul_literals" (formula "22") (term "0,0,1"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "25"))
                              (rule "mul_literals" (formula "22") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                              (rule "mul_literals" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "27"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor3b" (formula "25") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                              (rule "times_zero_1" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "mul_literals" (formula "9") (term "0,1"))
                              (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "24"))
                              (rule "greater_literals" (formula "9") (term "0,0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "nnf_ex2all" (formula "32"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "nnf_imp2or" (formula "13") (term "0"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "andLeft" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "inEqSimp_commuteLeq" (formula "21"))
                              (rule "inEqSimp_commuteLeq" (formula "19"))
                              (rule "inEqSimp_commuteLeq" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0"))
                              (rule "qeq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "21") (term "0") (inst "i=i_1"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0"))
                              (rule "translateJavaAddInt" (formula "21") (term "0,2,1,1,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "21") (term "0"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                              (rule "commute_or" (formula "12") (term "0,0"))
                              (rule "commute_or" (formula "13") (term "0,0"))
                              (rule "commute_and" (formula "12") (term "0,0,1,0"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "i_1 = 0 TRUE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "2"))
                                 (rule "add_zero_right" (formula "6") (term "1"))
                                 (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "times_zero_2" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "1") (term "1,0,1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "ex_pull_out3" (formula "8") (term "0"))
                                 (rule "cnf_rightDist" (formula "8") (term "0,0"))
                                 (rule "commute_or" (formula "8") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                 (rule "commute_or" (formula "8") (term "1,0,0,0"))
                                 (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                 (rule "commute_and_2" (formula "8") (term "0,0"))
                                 (rule "commute_and" (formula "8") (term "0,0,0"))
                                 (rule "allLeft" (formula "8") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "8") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "leq_literals" (formula "8") (term "0,0,1,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "leq_literals" (formula "8") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "exLeft" (formula "8") (inst "sk=k_0"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "inEqSimp_commuteGeq" (formula "10") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "9") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "8") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "10") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "8") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "9") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "pullOutSelect" (formula "8") (term "1") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnon" (formula "8"))
                                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "33")))
                                 (rule "simplifySelectOfAnon" (formula "9"))
                                  (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "34")))
                                 (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "leq_literals" (formula "8") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "9") (term "0,0,0,0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "dismissNonSelectedField" (formula "8") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "simplifySelectOfStore" (formula "8"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "castDel" (formula "8") (term "0"))
                                 (rule "applyEqReverse" (formula "9") (term "1") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "dismissNonSelectedField" (formula "8") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfStore" (formula "8"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "castDel" (formula "8") (term "1,0"))
                                 (rule "eqSymm" (formula "9"))
                                 (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "eqSymm" (formula "8") (term "1,0"))
                                 (rule "eqSymm" (formula "8") (term "0,0"))
                                 (rule "eqSymm" (formula "8") (term "1"))
                                 (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "applyEq" (formula "12") (term "3,0,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "1") (term "3,0,0,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "11") (term "3,0,0,0,1,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "12") (term "3,0,0,1,1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "11") (term "3,0,0,1,1,0,0,0,0") (ifseqformula "8"))
                                 (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1"))
                                 (rule "mul_literals" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                 (rule "allLeft" (formula "1") (inst "t=k_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "1") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_4"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                 (rule "eqSymm" (formula "32"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "i_1 = 0 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "30"))
                                 (rule "add_zero_right" (formula "4") (term "1"))
                                 (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "1,0,1,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "3"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                 (rule "mul_literals" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "ex_pull_out3" (formula "11") (term "0"))
                                 (rule "cnf_rightDist" (formula "11") (term "0,0"))
                                 (rule "commute_or" (formula "11") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                 (rule "commute_or" (formula "11") (term "1,0,0,0"))
                                 (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                 (rule "commute_and_2" (formula "11") (term "0,0"))
                                 (rule "commute_and" (formula "11") (term "0,0,0"))
                                 (rule "allLeft" (formula "11") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "11") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "leq_literals" (formula "11") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "leq_literals" (formula "11") (term "0,0,1,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "exLeft" (formula "11") (inst "sk=k_0"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "inEqSimp_commuteGeq" (formula "13") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "11") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "11") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "12") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnon" (formula "11"))
                                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "36")))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "simplifySelectOfAnon" (formula "12"))
                                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "35")))
                                 (rule "elementOfArrayRangeConcrete" (formula "11") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "11") (term "0,0,0,0,0") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "12") (term "0,1,0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "ifthenelse_negated" (formula "11") (term "0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "leq_literals" (formula "12") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "simplifySelectOfStore" (formula "12"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "castDel" (formula "12") (term "0"))
                                 (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
                                 (rule "hideAuxiliaryEq" (formula "12"))
                                 (rule "dismissNonSelectedField" (formula "11") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfStore" (formula "11"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "castDel" (formula "11") (term "1,0"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "hideAuxiliaryEq" (formula "12"))
                                 (rule "eqSymm" (formula "11") (term "1"))
                                 (rule "eqSymm" (formula "11") (term "0,0"))
                                 (rule "eqSymm" (formula "11") (term "1,0"))
                                 (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEq" (formula "15") (term "3,0,0,0,1,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "1") (term "3,0,0,0,0,1,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "15") (term "3,0,0,1,1,1,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "14") (term "3,0,0,0,1,0,0,0,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "14") (term "3,0,0,1,1,0,0,0,0") (ifseqformula "11"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1"))
                                 (rule "mul_literals" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                 (rule "allLeft" (formula "14") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "14") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "leq_literals" (formula "14") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "leq_literals" (formula "14") (term "0,0,1,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "exLeft" (formula "14") (inst "sk=k_1"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "inEqSimp_commuteGeq" (formula "16") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "14") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "15") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "16") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "14") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "pullOutSelect" (formula "14") (term "1") (inst "selectSK=arr_4"))
                                 (rule "simplifySelectOfAnon" (formula "15"))
                                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "39")))
                                 (rule "simplifySelectOfAnon" (formula "14"))
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "38")))
                                 (rule "elementOfArrayRangeConcrete" (formula "15") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "15") (term "0,0,0,0,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "elementOfArrayRangeConcrete" (formula "14") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "leq_literals" (formula "14") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "simplifySelectOfStore" (formula "15"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "castDel" (formula "15") (term "1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0,0"))
                                 (rule "eqSymm" (formula "15") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "15"))
                                 (rule "hideAuxiliaryEq" (formula "15"))
                                 (rule "ifthenelse_negated" (formula "14") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "14") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1"))
                                 (rule "mul_literals" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                 (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfStore" (formula "14"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "castDel" (formula "14") (term "0"))
                                 (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                 (rule "hideAuxiliaryEq" (formula "14"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "allLeft" (formula "17") (inst "t=i_1"))
                                 (rule "exLeft" (formula "17") (inst "sk=k_2"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "18") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "19") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "19") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_6"))
                                 (rule "simplifySelectOfAnon" (formula "17"))
                                  (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "42")))
                                 (rule "eqSymm" (formula "18"))
                                 (rule "simplifySelectOfAnon" (formula "18"))
                                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "41")))
                                 (rule "elementOfArrayRangeConcrete" (formula "17") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "17") (term "0,0,0,0,0") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "5")))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "simplifySelectOfStore" (formula "17"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "castDel" (formula "17") (term "1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0,0"))
                                 (rule "eqSymm" (formula "17") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "17"))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "17") (term "0,1,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
                                 (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                 (rule "allLeft" (formula "30") (inst "t=begin"))
                                 (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0"))
                                 (rule "allLeft" (formula "31") (inst "t=mul(end<<origin(\"requires @ file Functions.java @ line 172\",\"[]\")>>,
    Z(neglit(1(#))))"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0"))
                                 (rule "polySimp_pullOutFactor3b" (formula "31") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                 (rule "mul_literals" (formula "31") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                 (rule "elimGcdLeq" (formula "31") (term "1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=end") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "31") (term "0,0,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,0,0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,1,0,1,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,1,0,1,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,1,0,1,0"))
                                 (rule "add_literals" (formula "31") (term "0,1,0,1,0"))
                                 (rule "qeq_literals" (formula "31") (term "1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "31") (term "1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "31") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "31") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "commute_or" (formula "31") (term "0"))
                                 (rule "allLeft" (formula "32") (inst "t=mul(begin, Z(neglit(1(#))))"))
                                 (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor3b" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "32") (term "0,0") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=begin") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0,0,0,0"))
                                 (rule "sub_literals" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,0,0,0,1,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,1,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,1,0,0,0"))
                                 (rule "leq_literals" (formula "32") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "allLeft" (formula "33") (inst "t=Z(0(#))"))
                                 (rule "add_literals" (formula "33") (term "0,2,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "1,1,0"))
                                 (rule "allLeft" (formula "34") (inst "t=i_1"))
                                 (rule "allLeft" (formula "21") (inst "t=begin"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "28"))
                                 (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "pullOutSelect" (formula "21") (term "0,1") (inst "selectSK=arr_7"))
                                 (rule "simplifySelectOfAnon" (formula "21"))
                                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "47")))
                                 (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                 (rule "pullOutSelect" (formula "21") (term "2,0") (inst "selectSK=arr_8"))
                                 (rule "simplifySelectOfStore" (formula "21"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "castDel" (formula "21") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0"))
                                 (rule "inEqSimp_contradEq7" (formula "21") (term "0,0") (ifseqformula "30"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "applyEqReverse" (formula "22") (term "2,0") (ifseqformula "21"))
                                 (rule "hideAuxiliaryEq" (formula "21"))
                                 (rule "pullOutSelect" (formula "22") (term "0,1") (inst "selectSK=arr_9"))
                                 (rule "simplifySelectOfAnon" (formula "22"))
                                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "48")))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "22") (term "0,1,0,0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "elementOfArrayRangeConcrete" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "22") (term "2,0") (inst "selectSK=arr_10"))
                                 (rule "simplifySelectOfStore" (formula "22"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "castDel" (formula "22") (term "1,0"))
                                 (rule "eqSymm" (formula "22") (term "0,0"))
                                 (rule "commute_or" (formula "24"))
                                 (rule "allLeft" (formula "25") (inst "t=i_1"))
                                 (rule "replaceKnownSelect_taclet10000110012_17" (formula "25") (term "1,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000110012_19" (formula "25") (term "1,1,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "pullOutSelect" (formula "25") (term "0,1") (inst "selectSK=arr_11"))
                                 (rule "simplifySelectOfAnon" (formula "25"))
                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                                 (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "25") (term "0,1,0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,0") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "25") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "pullOutSelect" (formula "25") (term "2,0") (inst "selectSK=arr_12"))
                                 (rule "simplifySelectOfStore" (formula "25"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "castDel" (formula "25") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "25") (term "0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "25") (term "0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0"))
                                 (rule "inEqSimp_contradEq7" (formula "25") (term "0,0") (ifseqformula "4"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "25"))
                                 (rule "hideAuxiliaryEq" (formula "25"))
                                 (rule "allLeft" (formula "41") (inst "t=k_0"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "41") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "allLeft" (formula "27") (inst "t=Z(0(#))"))
                                 (rule "replaceKnownSelect_taclet10000110012_11" (formula "27") (term "1,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000110012_13" (formula "27") (term "1,1,1"))
                                 (rule "add_literals" (formula "27") (term "0,2,0,1"))
                                 (rule "leq_literals" (formula "27") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0"))
                                 (rule "applyEq" (formula "27") (term "1,1,1") (ifseqformula "14"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0"))
                                 (rule "mul_literals" (formula "27") (term "1,0"))
                                 (rule "pullOutSelect" (formula "27") (term "0,1") (inst "selectSK=arr_13"))
                                 (rule "simplifySelectOfAnon" (formula "27"))
                                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "54")))
                                 (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "leq_literals" (formula "27") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "27") (term "0,1,0,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "applyEqReverse" (formula "28") (term "1,1,1") (ifseqformula "27"))
                                 (rule "hideAuxiliaryEq" (formula "27"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                 (rule "mul_literals" (formula "27") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                 (rule "allLeft" (formula "43") (inst "t=add(add(Z(neglit(1(#))), begin), step)"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,2,0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,2,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,2,0,1"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,2,0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "43") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "43") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0"))
                                 (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "11"))
                                 (rule "inEqSimp_commuteLeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "43") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "48"))
                                 (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "allLeft" (formula "28") (inst "t=mul(begin, Z(neglit(1(#))))"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                 (rule "pullOutSelect" (formula "28") (term "0,1") (inst "selectSK=arr_14"))
                                 (rule "simplifySelectOfAnon" (formula "28"))
                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "56")))
                                 (rule "elementOfArrayRangeConcrete" (formula "28") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "28") (term "0,1,0,0") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "28") (term "0,0,0"))
                                 (rule "times_zero_2" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "28") (term "2,0") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfStore" (formula "28"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "castDel" (formula "28") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "28") (term "0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "28") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "30") (term "0,1") (inst "selectSK=arr_16"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "58")))
                                 (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "elementOfArrayRangeConcrete" (formula "30") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0") (ifseqformula "38"))
                                 (rule "qeq_literals" (formula "30") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "simplifySelectOfStore" (formula "30"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "castDel" (formula "30") (term "1,0"))
                                 (rule "eqSymm" (formula "30") (term "0,0"))
                                 (rule "polySimp_invertEq" (formula "30") (term "0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
                                 (rule "allLeft" (formula "32") (inst "t=k_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                 (rule "pullOutSelect" (formula "32") (term "1,1,1") (inst "selectSK=arr_17"))
                                 (rule "simplifySelectOfAnon" (formula "32"))
                                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "60")))
                                 (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "32") (term "0,1,0,0") (ifseqformula "38"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "elementOfArrayRangeConcrete" (formula "32") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "33") (term "0,1") (inst "selectSK=arr_18"))
                                 (rule "simplifySelectOfAnon" (formula "33"))
                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "61")))
                                 (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "33") (term "0,1,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "elementOfArrayRangeConcrete" (formula "33") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0"))
                                 (rule "pullOutSelect" (formula "32") (term "2,0") (inst "selectSK=arr_19"))
                                 (rule "simplifySelectOfStore" (formula "32"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "castDel" (formula "32") (term "1,0"))
                                 (rule "eqSymm" (formula "32") (term "0,0"))
                                 (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=arr_20"))
                                 (rule "simplifySelectOfStore" (formula "34"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "castDel" (formula "34") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "34") (term "0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "34") (term "0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0"))
                                 (rule "allLeft" (formula "37") (inst "t=add(add(Z(neglit(1(#))), begin), step)"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,2,0,1"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,2,0,1"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,2,0,1"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,2,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "37") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1"))
                                 (rule "pullOutSelect" (formula "37") (term "0,1") (inst "selectSK=arr_21"))
                                 (rule "simplifySelectOfAnon" (formula "37"))
                                  (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "65")))
                                 (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "dismissNonSelectedField" (formula "37") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "37") (term "0,1,0,0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_homoInEq0" (formula "38") (term "1"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "0,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0"))
                                 (rule "pullOutSelect" (formula "37") (term "2,0") (inst "selectSK=arr_22"))
                                 (rule "simplifySelectOfStore" (formula "37"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "castDel" (formula "37") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "37") (term "0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "37") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                 (rule "pullOutSelect" (formula "39") (term "0,1") (inst "selectSK=arr_23"))
                                 (rule "simplifySelectOfAnon" (formula "39"))
                                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "67")))
                                 (rule "elementOfArrayRangeConcrete" (formula "39") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "dismissNonSelectedField" (formula "39") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "39") (term "0,1,0,0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0"))
                                 (rule "pullOutSelect" (formula "39") (term "2,0") (inst "selectSK=arr_24"))
                                 (rule "simplifySelectOfStore" (formula "39"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "castDel" (formula "39") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "39") (term "0,0"))
                                 (rule "times_zero_2" (formula "39") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "39") (term "0,0"))
                                 (rule "allLeft" (formula "42") (inst "t=mul(end<<origin(\"requires @ file Functions.java @ line 172\",\"[]\")>>,
    Z(neglit(1(#))))"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0"))
                                 (rule "pullOutSelect" (formula "42") (term "0,1") (inst "selectSK=arr_25"))
                                 (rule "simplifySelectOfAnon" (formula "42"))
                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "70")))
                                 (rule "dismissNonSelectedField" (formula "42") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "42") (term "0,1,0,0") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "elementOfArrayRangeConcrete" (formula "42") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "42") (term "2,0") (inst "selectSK=arr_26"))
                                 (rule "simplifySelectOfStore" (formula "42"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "castDel" (formula "42") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "42") (term "0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "42") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "44") (term "0,1") (inst "selectSK=arr_27"))
                                 (rule "simplifySelectOfAnon" (formula "44"))
                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "72")))
                                 (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "dismissNonSelectedField" (formula "44") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "44") (term "0,1,0,0") (ifseqformula "50"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                 (rule "pullOutSelect" (formula "44") (term "2,0") (inst "selectSK=arr_28"))
                                 (rule "simplifySelectOfStore" (formula "44"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "castDel" (formula "44") (term "1,0"))
                                 (rule "eqSymm" (formula "44") (term "0,0"))
                                 (rule "polySimp_invertEq" (formula "44") (term "0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "0,0,0"))
                                 (rule "allLeft" (formula "20") (inst "t=k_0"))
                                 (rule "replaceKnownSelect_taclet10000110012_34" (formula "20") (term "1,1,0,0,0"))
                                 (rule "exLeft" (formula "20") (inst "sk=k_3"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                 (rule "pullOutSelect" (formula "20") (term "0,1") (inst "selectSK=arr_29"))
                                 (rule "simplifySelectOfAnon" (formula "20"))
                                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "78")))
                                 (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "20") (term "0,0,0,0,0") (ifseqformula "76"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "dismissNonSelectedField" (formula "20") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "simplifySelectOfStore" (formula "20"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "castDel" (formula "20") (term "1,0"))
                                 (rule "eqSymm" (formula "20") (term "1,0,0"))
                                 (rule "eqSymm" (formula "20") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "76"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "applyEqReverse" (formula "21") (term "0,1") (ifseqformula "20"))
                                 (rule "hideAuxiliaryEq" (formula "20"))
                                 (rule "allLeft" (formula "23") (inst "t=add(add(Z(neglit(1(#))), begin), step)"))
                                 (rule "replaceKnownSelect_taclet10000110012_38" (formula "23") (term "1,1,0,0,0"))
                                 (rule "exLeft" (formula "23") (inst "sk=k_4"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "23") (term "0,1") (inst "selectSK=arr_30"))
                                 (rule "simplifySelectOfAnon" (formula "23"))
                                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "81")))
                                 (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,0,0,0") (ifseqformula "79"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "ifthenelse_negated" (formula "23") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "23") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "simplifySelectOfStore" (formula "23"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "castDel" (formula "23") (term "1,0"))
                                 (rule "eqSymm" (formula "23") (term "1,0,0"))
                                 (rule "eqSymm" (formula "23") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "79"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEqReverse" (formula "24") (term "0,1") (ifseqformula "23"))
                                 (rule "hideAuxiliaryEq" (formula "23"))
                                 (rule "allLeft" (formula "1") (inst "t=begin<<origin(\"requires @ file Functions.java @ line 165\",\"[]\")>>"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "73"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=arr_31"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                 (rule "eqSymm" (formula "79"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "80"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "80"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "1") (inst "t=k_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "14"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "1") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=arr_32"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                 (rule "eqSymm" (formula "79"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "1") (inst "t=k_2"))
                                 (rule "replaceKnownSelect_taclet10000110012_16" (formula "1") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000110012_19" (formula "1") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_literals" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "28"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "1"))
                                  (builtin "One Step Simplification" (formula "28"))
                                  (builtin "SMTRule")
                              )
                              (branch
                                 (rule "andRight" (formula "28"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "1"))
                                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "4")))
                                    (rule "closeTrue" (formula "28"))
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "1"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "1"))
                                    (rule "polySimp_homoEq" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "20"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "21"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,1"))
                                    (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "4"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "4"))
                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,0"))
                                    (rule "times_zero_1" (formula "4") (term "0"))
                                    (rule "qeq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,0"))
                                    (rule "times_zero_1" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                                    (rule "mul_literals" (formula "20") (term "0,0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "closeTrue" (formula "28"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "1"))
                        (rule "allRight" (formula "27") (inst "sk=f_0"))
                        (rule "allRight" (formula "27") (inst "sk=o_0"))
                        (rule "orRight" (formula "27"))
                        (rule "orRight" (formula "27"))
                        (rule "eqSymm" (formula "29"))
                        (rule "eqSymm" (formula "27") (term "0,0,0,1"))
                        (rule "polySimp_homoEq" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_ltRight" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "19"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "21") (term "0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "mul_literals" (formula "19") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,1"))
                        (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "30"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "4"))
                        (rule "applyEq" (formula "7") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,0"))
                        (rule "times_zero_1" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "3"))
                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,0"))
                        (rule "times_zero_1" (formula "3") (term "0"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq0" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1"))
                        (rule "polySimp_rightDist" (formula "20") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                        (rule "mul_literals" (formula "20") (term "0,0,1"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "23"))
                        (rule "mul_literals" (formula "20") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1"))
                        (rule "polySimp_rightDist" (formula "20") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                        (rule "mul_literals" (formula "20") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                        (rule "mul_literals" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "24"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor3b" (formula "22") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "22"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor3b" (formula "6") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "21"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "nnf_imp2or" (formula "8") (term "0"))
                        (rule "nnf_imp2or" (formula "9") (term "0"))
                        (rule "nnf_notAnd" (formula "8") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "9") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "15"))
                        (rule "inEqSimp_commuteLeq" (formula "17"))
                        (rule "inEqSimp_commuteLeq" (formula "15"))
                        (rule "inEqSimp_commuteLeq" (formula "16"))
                        (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "22"))
                        (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0"))
                        (rule "qeq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "17") (term "0") (inst "i=i_1"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "translateJavaAddInt" (formula "17") (term "0,2,1,1,0"))
                        (rule "translateJavaSubInt" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "17") (term "0,2,1,1,0"))
                        (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "commute_or" (formula "9") (term "0,0"))
                        (rule "commute_or" (formula "8") (term "0,0"))
                        (rule "commute_and" (formula "1") (term "0,0"))
                        (rule "commute_and" (formula "8") (term "0,0,1,0"))
                        (rule "ex_pull_out3" (formula "8") (term "0"))
                        (rule "cnf_rightDist" (formula "8") (term "0,0"))
                        (rule "commute_or" (formula "8") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                        (rule "commute_or" (formula "8") (term "1,0,0,0"))
                        (rule "commute_and_2" (formula "8") (term "0,0"))
                        (rule "commute_and" (formula "8") (term "0,0,0"))
                        (rule "allLeft" (formula "8") (inst "t=Z(0(#))"))
                        (rule "leq_literals" (formula "8") (term "0,0,1,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "leq_literals" (formula "8") (term "0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "leq_literals" (formula "8") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "exLeft" (formula "8") (inst "sk=k_0"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "inEqSimp_commuteGeq" (formula "10") (term "0"))
                        (rule "inEqSimp_commuteGeq" (formula "9") (term "0"))
                        (rule "inEqSimp_commuteGeq" (formula "8") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "10") (term "0,0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "8") (term "0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "9") (term "0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnon" (formula "8"))
                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "33")))
                        (rule "eqSymm" (formula "9"))
                        (rule "simplifySelectOfAnon" (formula "9"))
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "32")))
                        (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0,0"))
                        (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "dismissNonSelectedField" (formula "9") (term "0,0,1,0,0"))
                        (rule "replace_known_left" (formula "9") (term "0,1,0,0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "dismissNonSelectedField" (formula "8") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "simplifySelectOfStore" (formula "8"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "castDel" (formula "8") (term "1,0"))
                        (rule "eqSymm" (formula "8") (term "0,0,0"))
                        (rule "eqSymm" (formula "8") (term "1,0,0"))
                        (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEqReverse" (formula "9") (term "1") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "leq_literals" (formula "8") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfStore" (formula "8"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "castDel" (formula "8") (term "0"))
                        (rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "12") (term "3,0,0,0,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "12") (term "3,0,0,1,1,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "11") (term "3,0,0,0,1,0,0,0,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "11") (term "3,0,0,1,1,0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                        (rule "mul_literals" (formula "9") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                        (rule "cut_direct" (formula "33") (term "0"))
                        (branch "CUT: o_0 = target TRUE"
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "notRight" (formula "35"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                           (rule "nnf_ex2all" (formula "34"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                           (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                           (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_0 = arr(0) TRUE"
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectArrayType" (formula "36") (term "0") (ifseqformula "16") (ifseqformula "34"))
                              (rule "eqSymm" (formula "36"))
                              (rule "applyEq" (formula "4") (term "1,0,0,0,0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqRigid" (formula "4") (term "2,1,0") (ifseqformula "3"))
                              (rule "narrowSelectArrayType" (formula "4") (term "1,0") (ifseqformula "15") (ifseqformula "34"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "leq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_commuteGeq" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "f_0 = arr(0) FALSE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "12") (term "0,0,1,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "leq_literals" (formula "12") (term "0,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "leq_literals" (formula "12") (term "0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "exLeft" (formula "12") (inst "sk=k_1"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "inEqSimp_commuteGeq" (formula "14") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "12") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "13") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "12") (term "0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "14") (term "0,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "13") (term "0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "pullOutSelect" (formula "12") (term "1") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfAnon" (formula "12"))
                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "38")))
                              (rule "simplifySelectOfAnon" (formula "13"))
                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "39")))
                              (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "leq_literals" (formula "12") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "elementOfArrayRangeConcrete" (formula "13") (term "0,0,0"))
                              (rule "replace_known_right" (formula "13") (term "0,0,0,0,0") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "ifthenelse_negated" (formula "12") (term "0"))
                              (rule "ifthenelse_negated" (formula "13") (term "0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,0,0"))
                              (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "simplifySelectOfStore" (formula "12"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "castDel" (formula "12") (term "0"))
                              (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                              (rule "hideAuxiliaryEq" (formula "12"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,0,0"))
                              (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfStore" (formula "12"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "castDel" (formula "12") (term "1,0"))
                              (rule "eqSymm" (formula "13"))
                              (rule "applyEqReverse" (formula "12") (term "1") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "hideAuxiliaryEq" (formula "13"))
                              (rule "eqSymm" (formula "12") (term "1,0"))
                              (rule "eqSymm" (formula "12") (term "0,0"))
                              (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "36"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                              (rule "allLeft" (formula "1") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "1") (term "1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "36"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 & iv <= -1 + count) & !f_0 = java.lang.Object::<created> TRUE"
                                 (rule "andLeft" (formula "3"))
                                 (rule "notLeft" (formula "4"))
                                 (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "applyEq" (formula "42") (term "2,0") (ifseqformula "3"))
                                 (rule "narrowSelectArrayType" (formula "42") (term "0") (ifseqformula "19") (ifseqformula "40"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "false_right" (formula "37"))
                                 (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqRigid" (formula "41") (term "2,0") (ifseqformula "3"))
                                 (rule "narrowSelectArrayType" (formula "41") (term "0") (ifseqformula "20") (ifseqformula "39"))
                                 (rule "eqSymm" (formula "41"))
                                 (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "4"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0"))
                                 (rule "leq_literals" (formula "37") (term "0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "false_right" (formula "37"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "4") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "31") (term "0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "6"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 & iv <= -1 + count) & !f_0 = java.lang.Object::<created> FALSE"
                                 (rule "close" (formula "40") (ifseqformula "3"))
                              )
                           )
                        )
                        (branch "CUT: o_0 = target FALSE"
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "false_right" (formula "34"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch
                     (rule "impRight" (formula "27"))
                     (rule "andRight" (formula "28"))
                     (branch
                        (rule "andRight" (formula "28"))
                        (branch
                           (rule "andRight" (formula "28"))
                           (branch
                              (rule "andRight" (formula "28"))
                              (branch
                                 (rule "andRight" (formula "28"))
                                 (branch
                                    (rule "andRight" (formula "28"))
                                    (branch
                                       (rule "andRight" (formula "28"))
                                       (branch
                                          (rule "andRight" (formula "28"))
                                          (branch
                                             (rule "andRight" (formula "28"))
                                             (branch
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "andRight" (formula "28"))
                                             (branch
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch
                                    (rule "impRight" (formula "28"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
            )
         )
         (branch "Null Reference (x_arr = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (x_arr != null, but x_2 Out of Bounds!)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "false_right" (formula "18"))
            (rule "less_literals" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_ltToLeq" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "10"))
            (rule "times_zero_1" (formula "10") (term "1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "11"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "14") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1"))
            (rule "polySimp_rightDist" (formula "12") (term "1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
            (rule "mul_literals" (formula "10") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
            (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
            (rule "qeq_literals" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
            (rule "inEqSimp_commuteGeq" (formula "9"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
            (rule "leq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "9"))
            (rule "qeq_literals" (formula "8") (term "0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "closeFalse" (formula "8"))
         )
      )
      (branch "Null Reference (_values = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_values != null, but offset Out of Bounds!)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
         (rule "false_right" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "11"))
         (rule "times_zero_1" (formula "11") (term "1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0"))
         (rule "inEqSimp_gtToGeq" (formula "10"))
         (rule "times_zero_1" (formula "10") (term "1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_literals" (formula "1") (term "0,0,1"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
         (rule "add_literals" (formula "1") (term "0,0,0,1"))
         (rule "add_zero_left" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1"))
         (rule "polySimp_rightDist" (formula "12") (term "1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1"))
         (rule "polySimp_rightDist" (formula "14") (term "1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "14"))
         (rule "mul_literals" (formula "11") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "polySimp_mulComm0" (formula "11") (term "1"))
         (rule "polySimp_rightDist" (formula "11") (term "1"))
         (rule "mul_literals" (formula "11") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1"))
         (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "7") (term "0"))
         (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")) (ifInst ""  (formula "8")))
         (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "8") (term "0") (inst "i=i"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "translateJavaAddInt" (formula "8") (term "0,2,1,1,0"))
         (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_elimSub" (formula "8") (term "1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "1,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "8") (term "0,2,1,1,0"))
         (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "8") (term "0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "inEqSimp_commuteLeq" (formula "8"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "inEqSimp_commuteLeq" (formula "6"))
         (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "14"))
         (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "qeq_literals" (formula "7") (term "0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "8") (term "0") (inst "i=i") (inst "j=j"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
         (rule "nnf_imp2or" (formula "8") (term "0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
         (rule "nnf_imp2or" (formula "8") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0"))
         (rule "commute_or" (formula "1"))
         (rule "commute_or" (formula "8") (term "0,0,1,0"))
         (rule "all_pull_out3" (formula "8") (term "0"))
         (rule "shift_paren_or" (formula "8") (term "0,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
         (rule "arrayLengthIsAShort" (formula "10") (term "0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "arrayLengthNotNegative" (formula "11") (term "0"))
         (rule "arrayLengthNotNegative" (formula "7") (term "0"))
         (rule "arrayLengthIsAShort" (formula "8") (term "0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "cut_direct" (formula "1") (term "0"))
         (branch "CUT: step <= begin * -1 TRUE"
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
            (rule "mul_literals" (formula "15") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
            (rule "polySimp_elimOne" (formula "15") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "6"))
            (rule "qeq_literals" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "closeFalse" (formula "15"))
         )
         (branch "CUT: step <= begin * -1 FALSE"
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_leqRight" (formula "19"))
            (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
            (rule "times_zero_1" (formula "9") (term "0,0"))
            (rule "add_zero_left" (formula "9") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
            (rule "polySimp_mulComm0" (formula "9") (term "1"))
            (rule "polySimp_rightDist" (formula "9") (term "1"))
            (rule "mul_literals" (formula "9") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0"))
            (rule "polySimp_addComm0" (formula "10") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
            (rule "polySimp_mulComm0" (formula "10") (term "1"))
            (rule "polySimp_rightDist" (formula "10") (term "1"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1"))
            (rule "polySimp_rightDist" (formula "10") (term "0,1"))
            (rule "mul_literals" (formula "10") (term "0,0,1"))
            (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "10"))
            (rule "andLeft" (formula "21"))
            (rule "inEqSimp_homoInEq1" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0"))
            (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0,0"))
            (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
            (rule "add_literals" (formula "21") (term "1,1,0"))
            (rule "times_zero_1" (formula "21") (term "1,0"))
            (rule "add_literals" (formula "21") (term "0"))
            (rule "leq_literals" (formula "21"))
            (rule "closeFalse" (formula "21"))
         )
      )
   )
)
)
}
